Compiled method (c1)      73    1       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x00000200349a0010,0x00000200349a05d0] = 1472
 relocation     [0x00000200349a0188,0x00000200349a01c8] = 64
 main code      [0x00000200349a01e0,0x00000200349a0460] = 640
 stub code      [0x00000200349a0460,0x00000200349a04f8] = 152
 oops           [0x00000200349a04f8,0x00000200349a0500] = 8
 metadata       [0x00000200349a0500,0x00000200349a0518] = 24
 scopes data    [0x00000200349a0518,0x00000200349a0558] = 64
 scopes pcs     [0x00000200349a0558,0x00000200349a05c8] = 112
 dependencies   [0x00000200349a05c8,0x00000200349a05d0] = 8
Loaded disassembler from hsdis-amd64.dll
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x00000200349a01e0, 0x00000200349a04f8]  792 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x00000200349a01e0: mov    %eax,-0x7000(%rsp)
  0x00000200349a01e7: push   %rbp
  0x00000200349a01e8: sub    $0x70,%rsp
  0x00000200349a01ec: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a01f6: mov    0xfc(%rcx),%eax
  0x00000200349a01fc: add    $0x8,%eax
  0x00000200349a01ff: mov    %eax,0xfc(%rcx)
  0x00000200349a0205: and    $0x1ff8,%eax
  0x00000200349a020b: cmp    $0x0,%eax
  0x00000200349a020e: je     0x00000200349a03d0  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x00000200349a0214: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a021e: lea    0x170(%rcx),%rcx
  0x00000200349a0225: mov    %rdx,%rax
  0x00000200349a0228: test   %rax,%rax
  0x00000200349a022b: jne    0x00000200349a0237
  0x00000200349a022d: orq    $0x1,0x8(%rcx)
  0x00000200349a0235: jmp    0x00000200349a0280
  0x00000200349a0237: mov    0x8(%rax),%eax
  0x00000200349a023a: shl    $0x3,%rax
  0x00000200349a023e: xor    0x8(%rcx),%rax
  0x00000200349a0242: test   $0xfffffffffffffffc,%rax
  0x00000200349a0248: je     0x00000200349a0280
  0x00000200349a024a: test   $0x2,%rax
  0x00000200349a0250: jne    0x00000200349a0280
  0x00000200349a0252: cmpq   $0x0,0x8(%rcx)
  0x00000200349a025a: je     0x00000200349a027c
  0x00000200349a025c: cmpq   $0x1,0x8(%rcx)
  0x00000200349a0264: je     0x00000200349a027c
  0x00000200349a0266: xor    0x8(%rcx),%rax
  0x00000200349a026a: test   $0xfffffffffffffffc,%rax
  0x00000200349a0270: je     0x00000200349a0280
  0x00000200349a0272: orq    $0x2,0x8(%rcx)
  0x00000200349a027a: jmp    0x00000200349a0280
  0x00000200349a027c: mov    %rax,0x8(%rcx)
  0x00000200349a0280: movabs $0x6d1708638,%rcx  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x00000200349a028a: movabs $0x2004f36fd90,%rax  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a0294: addq   $0x1,0x138(%rax)
  0x00000200349a029c: movslq %r8d,%r8
  0x00000200349a029f: mov    $0x2,%ecx
  0x00000200349a02a4: shl    %cl,%r8
  0x00000200349a02a7: movabs $0x10,%r10
  0x00000200349a02b1: add    %r10,%r8
  0x00000200349a02b4: movabs $0x2004f3712d8,%rax  ;   {metadata(method data for {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a02be: mov    0xfc(%rax),%esi
  0x00000200349a02c4: add    $0x8,%esi
  0x00000200349a02c7: mov    %esi,0xfc(%rax)
  0x00000200349a02cd: and    $0x7ffff8,%esi
  0x00000200349a02d3: cmp    $0x0,%esi
  0x00000200349a02d6: je     0x00000200349a03f1
  0x00000200349a02dc: mov    (%rdx,%r8,1),%eax
  0x00000200349a02e0: shl    $0x3,%rax
  0x00000200349a02e4: cmp    $0x0,%rax
  0x00000200349a02e8: jne    0x00000200349a0303
  0x00000200349a02ea: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a02f4: orl    $0x100,0x180(%rdi)
  0x00000200349a02fe: jmpq   0x00000200349a03c3
  0x00000200349a0303: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a030d: mov    0x8(%rax),%esi
  0x00000200349a0310: shl    $0x3,%rsi
  0x00000200349a0314: cmp    %rsi,%rbx
  0x00000200349a0317: jne    0x00000200349a03a7
  0x00000200349a031d: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a0327: mov    0x8(%rax),%ebx
  0x00000200349a032a: shl    $0x3,%rbx
  0x00000200349a032e: cmp    0x198(%rdi),%rbx
  0x00000200349a0335: jne    0x00000200349a0344
  0x00000200349a0337: addq   $0x1,0x1a0(%rdi)
  0x00000200349a033f: jmpq   0x00000200349a03c3
  0x00000200349a0344: cmp    0x1a8(%rdi),%rbx
  0x00000200349a034b: jne    0x00000200349a035a
  0x00000200349a034d: addq   $0x1,0x1b0(%rdi)
  0x00000200349a0355: jmpq   0x00000200349a03c3
  0x00000200349a035a: cmpq   $0x0,0x198(%rdi)
  0x00000200349a0365: jne    0x00000200349a037e
  0x00000200349a0367: mov    %rbx,0x198(%rdi)
  0x00000200349a036e: movq   $0x1,0x1a0(%rdi)
  0x00000200349a0379: jmpq   0x00000200349a03c3
  0x00000200349a037e: cmpq   $0x0,0x1a8(%rdi)
  0x00000200349a0389: jne    0x00000200349a03a2
  0x00000200349a038b: mov    %rbx,0x1a8(%rdi)
  0x00000200349a0392: movq   $0x1,0x1b0(%rdi)
  0x00000200349a039d: jmpq   0x00000200349a03c3
  0x00000200349a03a2: jmpq   0x00000200349a03c3
  0x00000200349a03a7: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a03b1: subq   $0x1,0x188(%rdi)
  0x00000200349a03b9: jmpq   0x00000200349a0412
  0x00000200349a03be: jmpq   0x00000200349a03c3  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18

  0x00000200349a03c3: add    $0x70,%rsp
  0x00000200349a03c7: pop    %rbp
  0x00000200349a03c8: mov    0x70(%r15),%r10
  0x00000200349a03cc: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a03cf: retq   
  0x00000200349a03d0: movabs $0x2004f2a3250,%r10  ;   {metadata({method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a03da: mov    %r10,0x8(%rsp)
  0x00000200349a03df: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a03e7: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a03ec: jmpq   0x00000200349a0214
  0x00000200349a03f1: movabs $0x2004f22e6a0,%r10  ;   {metadata({method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a03fb: mov    %r10,0x8(%rsp)
  0x00000200349a0400: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a0408: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a040d: jmpq   0x00000200349a02dc
  0x00000200349a0412: mov    %rax,(%rsp)
  0x00000200349a0416: callq  0x00000200344feca0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a041b: nop
  0x00000200349a041c: nop
  0x00000200349a041d: mov    0x350(%r15),%rax
  0x00000200349a0424: movabs $0x0,%r10
  0x00000200349a042e: mov    %r10,0x350(%r15)
  0x00000200349a0435: movabs $0x0,%r10
  0x00000200349a043f: mov    %r10,0x358(%r15)
  0x00000200349a0446: add    $0x70,%rsp
  0x00000200349a044a: pop    %rbp
  0x00000200349a044b: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a0450: hlt    
  0x00000200349a0451: hlt    
  0x00000200349a0452: hlt    
  0x00000200349a0453: hlt    
  0x00000200349a0454: hlt    
  0x00000200349a0455: hlt    
  0x00000200349a0456: hlt    
  0x00000200349a0457: hlt    
  0x00000200349a0458: hlt    
  0x00000200349a0459: hlt    
  0x00000200349a045a: hlt    
  0x00000200349a045b: hlt    
  0x00000200349a045c: hlt    
  0x00000200349a045d: hlt    
  0x00000200349a045e: hlt    
  0x00000200349a045f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a0460: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a0465: mov    %rsp,-0x28(%rsp)
  0x00000200349a046a: sub    $0x80,%rsp
  0x00000200349a0471: mov    %rax,0x78(%rsp)
  0x00000200349a0476: mov    %rcx,0x70(%rsp)
  0x00000200349a047b: mov    %rdx,0x68(%rsp)
  0x00000200349a0480: mov    %rbx,0x60(%rsp)
  0x00000200349a0485: mov    %rbp,0x50(%rsp)
  0x00000200349a048a: mov    %rsi,0x48(%rsp)
  0x00000200349a048f: mov    %rdi,0x40(%rsp)
  0x00000200349a0494: mov    %r8,0x38(%rsp)
  0x00000200349a0499: mov    %r9,0x30(%rsp)
  0x00000200349a049e: mov    %r10,0x28(%rsp)
  0x00000200349a04a3: mov    %r11,0x20(%rsp)
  0x00000200349a04a8: mov    %r12,0x18(%rsp)
  0x00000200349a04ad: mov    %r13,0x10(%rsp)
  0x00000200349a04b2: mov    %r14,0x8(%rsp)
  0x00000200349a04b7: mov    %r15,(%rsp)
  0x00000200349a04bb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a04c5: movabs $0x200349a0465,%rdx  ;   {internal_word}
  0x00000200349a04cf: mov    %rsp,%r8
  0x00000200349a04d2: and    $0xfffffffffffffff0,%rsp
  0x00000200349a04d6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a04e0: callq  *%r10
  0x00000200349a04e3: hlt    
[Deopt Handler Code]
  0x00000200349a04e4: movabs $0x200349a04e4,%r10  ;   {section_word}
  0x00000200349a04ee: push   %r10
  0x00000200349a04f0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a04f5: hlt    
  0x00000200349a04f6: hlt    
  0x00000200349a04f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 524 557 
ImmutableOopMap{}pc offsets: 571 Compiled method (c1)      81    5       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x00000200349a0610,0x00000200349a0b28] = 1304
 relocation     [0x00000200349a0788,0x00000200349a07c0] = 56
 main code      [0x00000200349a07c0,0x00000200349a0940] = 384
 stub code      [0x00000200349a0940,0x00000200349a09d8] = 152
 metadata       [0x00000200349a09d8,0x00000200349a09e0] = 8
 scopes data    [0x00000200349a09e0,0x00000200349a0a40] = 96
 scopes pcs     [0x00000200349a0a40,0x00000200349a0b10] = 208
 dependencies   [0x00000200349a0b10,0x00000200349a0b18] = 8
 nul chk table  [0x00000200349a0b18,0x00000200349a0b28] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x00000200349a07c0, 0x00000200349a09d8]  536 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x00000200349a07c0: mov    %eax,-0x7000(%rsp)
  0x00000200349a07c7: push   %rbp
  0x00000200349a07c8: sub    $0x30,%rsp
  0x00000200349a07cc: movabs $0x2004f3b2c88,%rax  ;   {metadata(method data for {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a07d6: mov    0xfc(%rax),%esi
  0x00000200349a07dc: add    $0x8,%esi
  0x00000200349a07df: mov    %esi,0xfc(%rax)
  0x00000200349a07e5: and    $0x1ff8,%esi
  0x00000200349a07eb: cmp    $0x0,%esi
  0x00000200349a07ee: je     0x00000200349a08a9  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0

  0x00000200349a07f4: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; implicit exception: dispatches to 0x00000200349a08ca
  0x00000200349a07f7: mov    $0x0,%esi
  0x00000200349a07fc: mov    $0x0,%edi
  0x00000200349a0801: jmpq   0x00000200349a0861  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10

  0x00000200349a0806: xchg   %ax,%ax
  0x00000200349a0808: movslq %esi,%rbx
  0x00000200349a080b: movsbl 0x10(%rdx,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x00000200349a0810: mov    %rdi,%rcx
  0x00000200349a0813: shl    $0x5,%edi
  0x00000200349a0816: sub    %ecx,%edi
  0x00000200349a0818: and    $0xff,%ebx
  0x00000200349a081e: add    %ebx,%edi
  0x00000200349a0820: inc    %esi
  0x00000200349a0822: movabs $0x2004f3b2c88,%rbx  ;   {metadata(method data for {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a082c: mov    0x100(%rbx),%ecx
  0x00000200349a0832: add    $0x8,%ecx
  0x00000200349a0835: mov    %ecx,0x100(%rbx)
  0x00000200349a083b: and    $0xfff8,%ecx
  0x00000200349a0841: cmp    $0x0,%ecx
  0x00000200349a0844: je     0x00000200349a08cf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x00000200349a084a: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x00000200349a084e: test   %eax,(%r10)        ;   {poll}
  0x00000200349a0851: movabs $0x2004f3b2c88,%rbx  ;   {metadata(method data for {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a085b: incl   0x158(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x00000200349a0861: cmp    %eax,%esi
  0x00000200349a0863: movabs $0x2004f3b2c88,%rbx  ;   {metadata(method data for {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a086d: movabs $0x148,%rcx
  0x00000200349a0877: jl     0x00000200349a0887
  0x00000200349a087d: movabs $0x138,%rcx
  0x00000200349a0887: mov    (%rbx,%rcx,1),%r8
  0x00000200349a088b: lea    0x1(%r8),%r8
  0x00000200349a088f: mov    %r8,(%rbx,%rcx,1)
  0x00000200349a0893: jl     0x00000200349a0808  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x00000200349a0899: mov    %rdi,%rax
  0x00000200349a089c: add    $0x30,%rsp
  0x00000200349a08a0: pop    %rbp
  0x00000200349a08a1: mov    0x70(%r15),%r10
  0x00000200349a08a5: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a08a8: retq   
  0x00000200349a08a9: movabs $0x2004f2852d0,%r10  ;   {metadata({method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a08b3: mov    %r10,0x8(%rsp)
  0x00000200349a08b8: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a08c0: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a08c5: jmpq   0x00000200349a07f4
  0x00000200349a08ca: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a08cf: movabs $0x2004f2852d0,%r10  ;   {metadata({method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x00000200349a08d9: mov    %r10,0x8(%rsp)
  0x00000200349a08de: movq   $0x25,(%rsp)
  0x00000200349a08e6: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a08eb: jmpq   0x00000200349a084a
  0x00000200349a08f0: nop
  0x00000200349a08f1: nop
  0x00000200349a08f2: mov    0x350(%r15),%rax
  0x00000200349a08f9: movabs $0x0,%r10
  0x00000200349a0903: mov    %r10,0x350(%r15)
  0x00000200349a090a: movabs $0x0,%r10
  0x00000200349a0914: mov    %r10,0x358(%r15)
  0x00000200349a091b: add    $0x30,%rsp
  0x00000200349a091f: pop    %rbp
  0x00000200349a0920: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a0925: hlt    
  0x00000200349a0926: hlt    
  0x00000200349a0927: hlt    
  0x00000200349a0928: hlt    
  0x00000200349a0929: hlt    
  0x00000200349a092a: hlt    
  0x00000200349a092b: hlt    
  0x00000200349a092c: hlt    
  0x00000200349a092d: hlt    
  0x00000200349a092e: hlt    
  0x00000200349a092f: hlt    
  0x00000200349a0930: hlt    
  0x00000200349a0931: hlt    
  0x00000200349a0932: hlt    
  0x00000200349a0933: hlt    
  0x00000200349a0934: hlt    
  0x00000200349a0935: hlt    
  0x00000200349a0936: hlt    
  0x00000200349a0937: hlt    
  0x00000200349a0938: hlt    
  0x00000200349a0939: hlt    
  0x00000200349a093a: hlt    
  0x00000200349a093b: hlt    
  0x00000200349a093c: hlt    
  0x00000200349a093d: hlt    
  0x00000200349a093e: hlt    
  0x00000200349a093f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a0940: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a0945: mov    %rsp,-0x28(%rsp)
  0x00000200349a094a: sub    $0x80,%rsp
  0x00000200349a0951: mov    %rax,0x78(%rsp)
  0x00000200349a0956: mov    %rcx,0x70(%rsp)
  0x00000200349a095b: mov    %rdx,0x68(%rsp)
  0x00000200349a0960: mov    %rbx,0x60(%rsp)
  0x00000200349a0965: mov    %rbp,0x50(%rsp)
  0x00000200349a096a: mov    %rsi,0x48(%rsp)
  0x00000200349a096f: mov    %rdi,0x40(%rsp)
  0x00000200349a0974: mov    %r8,0x38(%rsp)
  0x00000200349a0979: mov    %r9,0x30(%rsp)
  0x00000200349a097e: mov    %r10,0x28(%rsp)
  0x00000200349a0983: mov    %r11,0x20(%rsp)
  0x00000200349a0988: mov    %r12,0x18(%rsp)
  0x00000200349a098d: mov    %r13,0x10(%rsp)
  0x00000200349a0992: mov    %r14,0x8(%rsp)
  0x00000200349a0997: mov    %r15,(%rsp)
  0x00000200349a099b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a09a5: movabs $0x200349a0945,%rdx  ;   {internal_word}
  0x00000200349a09af: mov    %rsp,%r8
  0x00000200349a09b2: and    $0xfffffffffffffff0,%rsp
  0x00000200349a09b6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a09c0: callq  *%r10
  0x00000200349a09c3: hlt    
[Deopt Handler Code]
  0x00000200349a09c4: movabs $0x200349a09c4,%r10  ;   {section_word}
  0x00000200349a09ce: push   %r10
  0x00000200349a09d0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a09d5: hlt    
  0x00000200349a09d6: hlt    
  0x00000200349a09d7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 142 261 271 299 Compiled method (c1)      85   11       3       java.util.ImmutableCollections$SetN::probe (60 bytes)
 total in heap  [0x00000200349a0b90,0x00000200349a1748] = 3000
 relocation     [0x00000200349a0d08,0x00000200349a0d88] = 128
 main code      [0x00000200349a0da0,0x00000200349a12e0] = 1344
 stub code      [0x00000200349a12e0,0x00000200349a13a0] = 192
 metadata       [0x00000200349a13a0,0x00000200349a13b8] = 24
 scopes data    [0x00000200349a13b8,0x00000200349a1500] = 328
 scopes pcs     [0x00000200349a1500,0x00000200349a1710] = 528
 dependencies   [0x00000200349a1710,0x00000200349a1718] = 8
 nul chk table  [0x00000200349a1718,0x00000200349a1748] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x00000200349a0da0, 0x00000200349a13a0]  1536 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN'
  # this:     rdx:rdx   = 'java/util/ImmutableCollections$SetN'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x80]  (sp of caller)
  0x00000200349a0da0: mov    0x8(%rdx),%r10d
  0x00000200349a0da4: shl    $0x3,%r10
  0x00000200349a0da8: cmp    %rax,%r10
  0x00000200349a0dab: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a0db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a0dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a0dc0: mov    %eax,-0x7000(%rsp)
  0x00000200349a0dc7: push   %rbp
  0x00000200349a0dc8: sub    $0x70,%rsp
  0x00000200349a0dcc: mov    %rdx,0x50(%rsp)
  0x00000200349a0dd1: mov    %r8,0x58(%rsp)
  0x00000200349a0dd6: movabs $0x2004f3beee8,%rsi  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a0de0: mov    0xfc(%rsi),%edi
  0x00000200349a0de6: add    $0x8,%edi
  0x00000200349a0de9: mov    %edi,0xfc(%rsi)
  0x00000200349a0def: and    $0x1ff8,%edi
  0x00000200349a0df5: cmp    $0x0,%edi
  0x00000200349a0df8: je     0x00000200349a11e9  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0

  0x00000200349a0dfe: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000200349a120a
  0x00000200349a0e01: mov    %r8,%rsi
  0x00000200349a0e04: movabs $0x2004f3beee8,%rdi  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a0e0e: mov    0x8(%rsi),%esi
  0x00000200349a0e11: shl    $0x3,%rsi
  0x00000200349a0e15: cmp    0x148(%rdi),%rsi
  0x00000200349a0e1c: jne    0x00000200349a0e2b
  0x00000200349a0e1e: addq   $0x1,0x150(%rdi)
  0x00000200349a0e26: jmpq   0x00000200349a0e91
  0x00000200349a0e2b: cmp    0x158(%rdi),%rsi
  0x00000200349a0e32: jne    0x00000200349a0e41
  0x00000200349a0e34: addq   $0x1,0x160(%rdi)
  0x00000200349a0e3c: jmpq   0x00000200349a0e91
  0x00000200349a0e41: cmpq   $0x0,0x148(%rdi)
  0x00000200349a0e4c: jne    0x00000200349a0e65
  0x00000200349a0e4e: mov    %rsi,0x148(%rdi)
  0x00000200349a0e55: movq   $0x1,0x150(%rdi)
  0x00000200349a0e60: jmpq   0x00000200349a0e91
  0x00000200349a0e65: cmpq   $0x0,0x158(%rdi)
  0x00000200349a0e70: jne    0x00000200349a0e89
  0x00000200349a0e72: mov    %rsi,0x158(%rdi)
  0x00000200349a0e79: movq   $0x1,0x160(%rdi)
  0x00000200349a0e84: jmpq   0x00000200349a0e91
  0x00000200349a0e89: addq   $0x1,0x138(%rdi)
  0x00000200349a0e91: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1

  0x00000200349a0e94: nop
  0x00000200349a0e95: movabs $0xffffffffffffffff,%rax
  0x00000200349a0e9f: callq  0x0000020034438ca0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {virtual_call}
  0x00000200349a0ea4: mov    %rax,%r8
  0x00000200349a0ea7: xor    $0x738012b3,%r8d
  0x00000200349a0eae: mov    0x50(%rsp),%rdx
  0x00000200349a0eb3: mov    0x10(%rdx),%eax
  0x00000200349a0eb6: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@9

  0x00000200349a0eba: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ; implicit exception: dispatches to 0x00000200349a120f
  0x00000200349a0ebd: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a0ec7: addq   $0x1,0x170(%rax)
  0x00000200349a0ecf: movabs $0x2004f3bebb8,%rax  ;   {metadata(method data for {method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a0ed9: mov    0xfc(%rax),%edi
  0x00000200349a0edf: add    $0x8,%edi
  0x00000200349a0ee2: mov    %edi,0xfc(%rax)
  0x00000200349a0ee8: and    $0x7ffff8,%edi
  0x00000200349a0eee: cmp    $0x0,%edi
  0x00000200349a0ef1: je     0x00000200349a1214
  0x00000200349a0ef7: movabs $0x2004f3bebb8,%rax  ;   {metadata(method data for {method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a0f01: addq   $0x1,0x138(%rax)
  0x00000200349a0f09: movabs $0x2004f3bed48,%rax  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a0f13: mov    0xfc(%rax),%edi
  0x00000200349a0f19: add    $0x8,%edi
  0x00000200349a0f1c: mov    %edi,0xfc(%rax)
  0x00000200349a0f22: and    $0x7ffff8,%edi
  0x00000200349a0f28: cmp    $0x0,%edi
  0x00000200349a0f2b: je     0x00000200349a1235
  0x00000200349a0f31: mov    %r8,%rax
  0x00000200349a0f34: mov    %rdx,%rdi
  0x00000200349a0f37: cmp    $0x80000000,%eax
  0x00000200349a0f3d: jne    0x00000200349a0f4e
  0x00000200349a0f43: xor    %edx,%edx
  0x00000200349a0f45: cmp    $0xffffffff,%esi
  0x00000200349a0f48: je     0x00000200349a0f51
  0x00000200349a0f4e: cltd   
  0x00000200349a0f4f: idiv   %esi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ; implicit exception: dispatches to 0x00000200349a1256
  0x00000200349a0f51: mov    %rsi,%rdx
  0x00000200349a0f54: xor    %r8,%rdx
  0x00000200349a0f57: cmp    $0x0,%edx
  0x00000200349a0f5a: movabs $0x2004f3bed48,%rdx  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a0f64: movabs $0x138,%rbx
  0x00000200349a0f6e: jge    0x00000200349a0f7e
  0x00000200349a0f74: movabs $0x148,%rbx
  0x00000200349a0f7e: mov    (%rdx,%rbx,1),%rcx
  0x00000200349a0f82: lea    0x1(%rcx),%rcx
  0x00000200349a0f86: mov    %rcx,(%rdx,%rbx,1)
  0x00000200349a0f8a: jge    0x00000200349a0fd1  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x00000200349a0f90: mov    %rax,%rdx
  0x00000200349a0f93: imul   %esi,%edx
  0x00000200349a0f96: cmp    %r8d,%edx
  0x00000200349a0f99: movabs $0x2004f3bed48,%rdx  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a0fa3: movabs $0x158,%rbx
  0x00000200349a0fad: je     0x00000200349a0fbd
  0x00000200349a0fb3: movabs $0x168,%rbx
  0x00000200349a0fbd: mov    (%rdx,%rbx,1),%rcx
  0x00000200349a0fc1: lea    0x1(%rcx),%rcx
  0x00000200349a0fc5: mov    %rcx,(%rdx,%rbx,1)
  0x00000200349a0fc9: je     0x00000200349a0fd1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x00000200349a0fcf: dec    %eax
  0x00000200349a0fd1: imul   %esi,%eax
  0x00000200349a0fd4: sub    %eax,%r8d
  0x00000200349a0fd7: mov    0x58(%rsp),%rsi
  0x00000200349a0fdc: nopl   0x0(%rax)
  0x00000200349a0fe0: mov    0x10(%rdi),%edx
  0x00000200349a0fe3: shl    $0x3,%rdx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18

  0x00000200349a0fe7: mov    0xc(%rdx),%ebx     ; implicit exception: dispatches to 0x00000200349a125b
  0x00000200349a0fea: movslq %r8d,%rax
  0x00000200349a0fed: cmp    %r8d,%ebx
  0x00000200349a0ff0: jbe    0x00000200349a1260
  0x00000200349a0ff6: mov    0x10(%rdx,%rax,4),%edx
  0x00000200349a0ffa: shl    $0x3,%rdx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22

  0x00000200349a0ffe: cmp    $0x0,%rdx
  0x00000200349a1002: movabs $0x2004f3beee8,%rbx  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a100c: movabs $0x190,%rax
  0x00000200349a1016: je     0x00000200349a1026
  0x00000200349a101c: movabs $0x180,%rax
  0x00000200349a1026: mov    (%rbx,%rax,1),%rcx
  0x00000200349a102a: lea    0x1(%rcx),%rcx
  0x00000200349a102e: mov    %rcx,(%rbx,%rax,1)
  0x00000200349a1032: je     0x00000200349a11d4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@25

  0x00000200349a1038: mov    %r8d,0x60(%rsp)
  0x00000200349a103d: mov    %rsi,%rbx
  0x00000200349a1040: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a104a: mov    0x8(%rbx),%ebx
  0x00000200349a104d: shl    $0x3,%rbx
  0x00000200349a1051: cmp    0x1b0(%rax),%rbx
  0x00000200349a1058: jne    0x00000200349a1067
  0x00000200349a105a: addq   $0x1,0x1b8(%rax)
  0x00000200349a1062: jmpq   0x00000200349a10cd
  0x00000200349a1067: cmp    0x1c0(%rax),%rbx
  0x00000200349a106e: jne    0x00000200349a107d
  0x00000200349a1070: addq   $0x1,0x1c8(%rax)
  0x00000200349a1078: jmpq   0x00000200349a10cd
  0x00000200349a107d: cmpq   $0x0,0x1b0(%rax)
  0x00000200349a1088: jne    0x00000200349a10a1
  0x00000200349a108a: mov    %rbx,0x1b0(%rax)
  0x00000200349a1091: movq   $0x1,0x1b8(%rax)
  0x00000200349a109c: jmpq   0x00000200349a10cd
  0x00000200349a10a1: cmpq   $0x0,0x1c0(%rax)
  0x00000200349a10ac: jne    0x00000200349a10c5
  0x00000200349a10ae: mov    %rbx,0x1c0(%rax)
  0x00000200349a10b5: movq   $0x1,0x1c8(%rax)
  0x00000200349a10c0: jmpq   0x00000200349a10cd
  0x00000200349a10c5: addq   $0x1,0x1a0(%rax)
  0x00000200349a10cd: mov    %rdx,%r8
  0x00000200349a10d0: mov    %rsi,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35

  0x00000200349a10d3: xchg   %ax,%ax
  0x00000200349a10d5: movabs $0xffffffffffffffff,%rax
  0x00000200349a10df: callq  0x0000020034438ce0  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35
                                                ;   {virtual_call}
  0x00000200349a10e4: cmp    $0x0,%eax
  0x00000200349a10e7: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a10f1: movabs $0x1e8,%rsi
  0x00000200349a10fb: jne    0x00000200349a110b
  0x00000200349a1101: movabs $0x1d8,%rsi
  0x00000200349a110b: mov    (%rax,%rsi,1),%rdi
  0x00000200349a110f: lea    0x1(%rdi),%rdi
  0x00000200349a1113: mov    %rdi,(%rax,%rsi,1)
  0x00000200349a1117: jne    0x00000200349a11bf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38

  0x00000200349a111d: mov    0x50(%rsp),%rdx
  0x00000200349a1122: mov    0x60(%rsp),%r8d
  0x00000200349a1127: inc    %r8d
  0x00000200349a112a: mov    0x10(%rdx),%eax
  0x00000200349a112d: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48

  0x00000200349a1131: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ; implicit exception: dispatches to 0x00000200349a1269
  0x00000200349a1134: cmp    %eax,%r8d
  0x00000200349a1137: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a1141: movabs $0x1f8,%rsi
  0x00000200349a114b: jne    0x00000200349a115b
  0x00000200349a1151: movabs $0x208,%rsi
  0x00000200349a115b: mov    (%rax,%rsi,1),%rdi
  0x00000200349a115f: lea    0x1(%rdi),%rdi
  0x00000200349a1163: mov    %rdi,(%rax,%rsi,1)
  0x00000200349a1167: jne    0x00000200349a1173  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@52

  0x00000200349a116d: mov    $0x0,%r8d
  0x00000200349a1173: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a117d: mov    0x100(%rax),%esi
  0x00000200349a1183: add    $0x8,%esi
  0x00000200349a1186: mov    %esi,0x100(%rax)
  0x00000200349a118c: and    $0xfff8,%esi
  0x00000200349a1192: cmp    $0x0,%esi
  0x00000200349a1195: je     0x00000200349a126e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x00000200349a119b: mov    0x70(%r15),%r10    ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x00000200349a119f: test   %eax,(%r10)        ;   {poll}
  0x00000200349a11a2: movabs $0x2004f3beee8,%rax  ;   {metadata(method data for {method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a11ac: incl   0x218(%rax)
  0x00000200349a11b2: mov    0x58(%rsp),%rsi
  0x00000200349a11b7: mov    %rdx,%rdi
  0x00000200349a11ba: jmpq   0x00000200349a0fe0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x00000200349a11bf: mov    0x60(%rsp),%r8d
  0x00000200349a11c4: mov    %r8,%rax
  0x00000200349a11c7: add    $0x70,%rsp
  0x00000200349a11cb: pop    %rbp
  0x00000200349a11cc: mov    0x70(%r15),%r10
  0x00000200349a11d0: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a11d3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@42

  0x00000200349a11d4: neg    %r8d
  0x00000200349a11d7: mov    %r8,%rax
  0x00000200349a11da: dec    %eax
  0x00000200349a11dc: add    $0x70,%rsp
  0x00000200349a11e0: pop    %rbp
  0x00000200349a11e1: mov    0x70(%r15),%r10
  0x00000200349a11e5: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a11e8: retq   
  0x00000200349a11e9: movabs $0x2004f3b15d0,%r10  ;   {metadata({method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a11f3: mov    %r10,0x8(%rsp)
  0x00000200349a11f8: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a1200: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a1205: jmpq   0x00000200349a0dfe
  0x00000200349a120a: callq  0x00000200344fcba0  ; ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a120f: callq  0x00000200344fcba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a1214: movabs $0x2004f2e2fb8,%r10  ;   {metadata({method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a121e: mov    %r10,0x8(%rsp)
  0x00000200349a1223: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a122b: callq  0x0000020034501a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a1230: jmpq   0x00000200349a0ef7
  0x00000200349a1235: movabs $0x2004f2e2dd0,%r10  ;   {metadata({method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a123f: mov    %r10,0x8(%rsp)
  0x00000200349a1244: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a124c: callq  0x0000020034501a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a1251: jmpq   0x00000200349a0f31
  0x00000200349a1256: callq  0x00000200344fc920  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00000200349a125b: callq  0x00000200344fcba0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a1260: mov    %r8,(%rsp)
  0x00000200349a1264: callq  0x000002003446eda0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a1269: callq  0x00000200344fcba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a126e: movabs $0x2004f3b15d0,%r10  ;   {metadata({method} {0x000002004f3b15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x00000200349a1278: mov    %r10,0x8(%rsp)
  0x00000200349a127d: movq   $0x39,(%rsp)
  0x00000200349a1285: callq  0x0000020034501a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a128a: jmpq   0x00000200349a119b
  0x00000200349a128f: nop
  0x00000200349a1290: nop
  0x00000200349a1291: mov    0x350(%r15),%rax
  0x00000200349a1298: movabs $0x0,%r10
  0x00000200349a12a2: mov    %r10,0x350(%r15)
  0x00000200349a12a9: movabs $0x0,%r10
  0x00000200349a12b3: mov    %r10,0x358(%r15)
  0x00000200349a12ba: add    $0x70,%rsp
  0x00000200349a12be: pop    %rbp
  0x00000200349a12bf: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a12c4: hlt    
  0x00000200349a12c5: hlt    
  0x00000200349a12c6: hlt    
  0x00000200349a12c7: hlt    
  0x00000200349a12c8: hlt    
  0x00000200349a12c9: hlt    
  0x00000200349a12ca: hlt    
  0x00000200349a12cb: hlt    
  0x00000200349a12cc: hlt    
  0x00000200349a12cd: hlt    
  0x00000200349a12ce: hlt    
  0x00000200349a12cf: hlt    
  0x00000200349a12d0: hlt    
  0x00000200349a12d1: hlt    
  0x00000200349a12d2: hlt    
  0x00000200349a12d3: hlt    
  0x00000200349a12d4: hlt    
  0x00000200349a12d5: hlt    
  0x00000200349a12d6: hlt    
  0x00000200349a12d7: hlt    
  0x00000200349a12d8: hlt    
  0x00000200349a12d9: hlt    
  0x00000200349a12da: hlt    
  0x00000200349a12db: hlt    
  0x00000200349a12dc: hlt    
  0x00000200349a12dd: hlt    
  0x00000200349a12de: hlt    
  0x00000200349a12df: hlt    
[Stub Code]
  0x00000200349a12e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349a12e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a12ef: jmpq   0x00000200349a12ef  ;   {runtime_call}
  0x00000200349a12f4: nop
  0x00000200349a12f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a12ff: jmpq   0x00000200349a12ff  ;   {runtime_call}
[Exception Handler]
  0x00000200349a1304: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349a1309: mov    %rsp,-0x28(%rsp)
  0x00000200349a130e: sub    $0x80,%rsp
  0x00000200349a1315: mov    %rax,0x78(%rsp)
  0x00000200349a131a: mov    %rcx,0x70(%rsp)
  0x00000200349a131f: mov    %rdx,0x68(%rsp)
  0x00000200349a1324: mov    %rbx,0x60(%rsp)
  0x00000200349a1329: mov    %rbp,0x50(%rsp)
  0x00000200349a132e: mov    %rsi,0x48(%rsp)
  0x00000200349a1333: mov    %rdi,0x40(%rsp)
  0x00000200349a1338: mov    %r8,0x38(%rsp)
  0x00000200349a133d: mov    %r9,0x30(%rsp)
  0x00000200349a1342: mov    %r10,0x28(%rsp)
  0x00000200349a1347: mov    %r11,0x20(%rsp)
  0x00000200349a134c: mov    %r12,0x18(%rsp)
  0x00000200349a1351: mov    %r13,0x10(%rsp)
  0x00000200349a1356: mov    %r14,0x8(%rsp)
  0x00000200349a135b: mov    %r15,(%rsp)
  0x00000200349a135f: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a1369: movabs $0x200349a1309,%rdx  ;   {internal_word}
  0x00000200349a1373: mov    %rsp,%r8
  0x00000200349a1376: and    $0xfffffffffffffff0,%rsp
  0x00000200349a137a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a1384: callq  *%r10
  0x00000200349a1387: hlt    
[Deopt Handler Code]
  0x00000200349a1388: movabs $0x200349a1388,%r10  ;   {section_word}
  0x00000200349a1392: push   %r10
  0x00000200349a1394: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a1399: hlt    
  0x00000200349a139a: hlt    
  0x00000200349a139b: hlt    
  0x00000200349a139c: hlt    
  0x00000200349a139d: hlt    
  0x00000200349a139e: hlt    
  0x00000200349a139f: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 260 836 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1023 
ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }pc offsets: 1125 
ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }pc offsets: 1135 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1140 1168 1201 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 1211 
ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }pc offsets: 1216 1225 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1230 1258 Compiled method (c2)      95   15       4       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000002003bed0010,0x000002003bed0548] = 1336
 relocation     [0x000002003bed0188,0x000002003bed0198] = 16
 main code      [0x000002003bed01a0,0x000002003bed0320] = 384
 stub code      [0x000002003bed0320,0x000002003bed0338] = 24
 metadata       [0x000002003bed0338,0x000002003bed0340] = 8
 scopes data    [0x000002003bed0340,0x000002003bed03c0] = 128
 scopes pcs     [0x000002003bed03c0,0x000002003bed0530] = 368
 dependencies   [0x000002003bed0530,0x000002003bed0538] = 8
 nul chk table  [0x000002003bed0538,0x000002003bed0548] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000002003bed01a0, 0x000002003bed0338]  408 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2852d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  #           [sp+0x30]  (sp of caller)
  0x000002003bed01a0: mov    %eax,-0x7000(%rsp)
  0x000002003bed01a7: push   %rbp
  0x000002003bed01a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1

  0x000002003bed01ac: mov    0xc(%rdx),%r13d    ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; implicit exception: dispatches to 0x000002003bed0302
  0x000002003bed01b0: test   %r13d,%r13d
  0x000002003bed01b3: jbe    0x000002003bed02e8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000002003bed01b9: mov    %r13d,%r8d
  0x000002003bed01bc: dec    %r8d
  0x000002003bed01bf: cmp    %r13d,%r8d
  0x000002003bed01c2: jae    0x000002003bed02ec
  0x000002003bed01c8: movzbl 0x10(%rdx),%r11d   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31

  0x000002003bed01cd: mov    %r13d,%ebp
  0x000002003bed01d0: add    $0xfffffff9,%ebp
  0x000002003bed01d3: mov    $0x80000000,%r9d
  0x000002003bed01d9: cmp    %ebp,%r8d
  0x000002003bed01dc: cmovl  %r9d,%ebp
  0x000002003bed01e0: mov    $0x1,%esi
  0x000002003bed01e5: cmp    $0x1,%ebp
  0x000002003bed01e8: jle    0x000002003bed02b3
  0x000002003bed01ee: mov    %r11d,%eax
  0x000002003bed01f1: shl    $0x5,%eax
  0x000002003bed01f4: sub    %r11d,%eax         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000002003bed01f7: nopw   0x0(%rax,%rax,1)   ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25

  0x000002003bed0200: movslq %esi,%r14          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000002003bed0203: movzbl 0x10(%rdx,%r14,1),%r10d
  0x000002003bed0209: movzbl 0x17(%rdx,%r14,1),%r8d
  0x000002003bed020f: movzbl 0x11(%rdx,%r14,1),%r11d
  0x000002003bed0215: movzbl 0x16(%rdx,%r14,1),%ecx
  0x000002003bed021b: movzbl 0x15(%rdx,%r14,1),%r9d
  0x000002003bed0221: movzbl 0x14(%rdx,%r14,1),%edi
  0x000002003bed0227: movzbl 0x13(%rdx,%r14,1),%ebx
  0x000002003bed022d: movzbl 0x12(%rdx,%r14,1),%r14d
  0x000002003bed0233: add    %r10d,%eax
  0x000002003bed0236: mov    %eax,%r10d
  0x000002003bed0239: shl    $0x5,%r10d
  0x000002003bed023d: sub    %eax,%r10d
  0x000002003bed0240: add    %r11d,%r10d
  0x000002003bed0243: mov    %r10d,%eax
  0x000002003bed0246: shl    $0x5,%eax
  0x000002003bed0249: sub    %r10d,%eax
  0x000002003bed024c: add    %r14d,%eax
  0x000002003bed024f: mov    %eax,%r10d
  0x000002003bed0252: shl    $0x5,%r10d
  0x000002003bed0256: sub    %eax,%r10d
  0x000002003bed0259: add    %ebx,%r10d
  0x000002003bed025c: mov    %r10d,%r11d
  0x000002003bed025f: shl    $0x5,%r11d
  0x000002003bed0263: sub    %r10d,%r11d
  0x000002003bed0266: add    %edi,%r11d
  0x000002003bed0269: mov    %r11d,%r10d
  0x000002003bed026c: shl    $0x5,%r10d
  0x000002003bed0270: sub    %r11d,%r10d
  0x000002003bed0273: add    %r9d,%r10d
  0x000002003bed0276: mov    %r10d,%r9d
  0x000002003bed0279: shl    $0x5,%r9d
  0x000002003bed027d: sub    %r10d,%r9d
  0x000002003bed0280: add    %ecx,%r9d
  0x000002003bed0283: mov    %r9d,%r11d
  0x000002003bed0286: shl    $0x5,%r11d
  0x000002003bed028a: sub    %r9d,%r11d
  0x000002003bed028d: add    %r8d,%r11d         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32

  0x000002003bed0290: mov    %r11d,%eax
  0x000002003bed0293: shl    $0x5,%eax
  0x000002003bed0296: sub    %r11d,%eax         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25

  0x000002003bed0299: add    $0x8,%esi          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34

  0x000002003bed029c: cmp    %ebp,%esi
  0x000002003bed029e: jl     0x000002003bed0200  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000002003bed02a4: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000002003bed02a8: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {poll}
  0x000002003bed02ab: cmp    %ebp,%esi
  0x000002003bed02ad: jl     0x000002003bed0200
  0x000002003bed02b3: cmp    %r13d,%esi
  0x000002003bed02b6: jge    0x000002003bed02e3  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16

  0x000002003bed02b8: movzbl 0x10(%rdx,%rsi,1),%r10d
  0x000002003bed02be: mov    %r11d,%eax
  0x000002003bed02c1: shl    $0x5,%eax
  0x000002003bed02c4: sub    %r11d,%eax
  0x000002003bed02c7: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32

  0x000002003bed02ca: inc    %esi               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34

  0x000002003bed02cc: cmp    %r13d,%esi
  0x000002003bed02cf: jge    0x000002003bed02d6
  0x000002003bed02d1: mov    %eax,%r11d
  0x000002003bed02d4: jmp    0x000002003bed02b8  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000002003bed02d6: add    $0x20,%rsp
  0x000002003bed02da: pop    %rbp
  0x000002003bed02db: mov    0x70(%r15),%r10
  0x000002003bed02df: test   %eax,(%r10)        ;   {poll_return}
  0x000002003bed02e2: retq   
  0x000002003bed02e3: mov    %r11d,%eax
  0x000002003bed02e6: jmp    0x000002003bed02d6
  0x000002003bed02e8: xor    %eax,%eax
  0x000002003bed02ea: jmp    0x000002003bed02d6
  0x000002003bed02ec: mov    %rdx,%rbp
  0x000002003bed02ef: mov    %r13d,(%rsp)
  0x000002003bed02f3: mov    $0xffffff86,%edx
  0x000002003bed02f8: data16 xchg %ax,%ax
  0x000002003bed02fb: callq  0x0000020034438a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed0300: ud2                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16

  0x000002003bed0302: mov    $0xfffffff6,%edx
  0x000002003bed0307: callq  0x0000020034438a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed030c: ud2                       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25

  0x000002003bed030e: hlt    
  0x000002003bed030f: hlt    
  0x000002003bed0310: hlt    
  0x000002003bed0311: hlt    
  0x000002003bed0312: hlt    
  0x000002003bed0313: hlt    
  0x000002003bed0314: hlt    
  0x000002003bed0315: hlt    
  0x000002003bed0316: hlt    
  0x000002003bed0317: hlt    
  0x000002003bed0318: hlt    
  0x000002003bed0319: hlt    
  0x000002003bed031a: hlt    
  0x000002003bed031b: hlt    
  0x000002003bed031c: hlt    
  0x000002003bed031d: hlt    
  0x000002003bed031e: hlt    
  0x000002003bed031f: hlt    
[Exception Handler]
[Stub Code]
  0x000002003bed0320: jmpq   0x000002003446f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000002003bed0325: callq  0x000002003bed032a
  0x000002003bed032a: subq   $0x5,(%rsp)
  0x000002003bed032f: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x000002003bed0334: hlt    
  0x000002003bed0335: hlt    
  0x000002003bed0336: hlt    
  0x000002003bed0337: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 264 
ImmutableOopMap{rbp=Oop }pc offsets: 352 
ImmutableOopMap{}pc offsets: 364 Compiled method (c1)      98   14       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x00000200349a1790,0x00000200349a1e10] = 1664
 relocation     [0x00000200349a1908,0x00000200349a1948] = 64
 main code      [0x00000200349a1960,0x00000200349a1b80] = 544
 stub code      [0x00000200349a1b80,0x00000200349a1c18] = 152
 metadata       [0x00000200349a1c18,0x00000200349a1c20] = 8
 scopes data    [0x00000200349a1c20,0x00000200349a1ca0] = 128
 scopes pcs     [0x00000200349a1ca0,0x00000200349a1df0] = 336
 dependencies   [0x00000200349a1df0,0x00000200349a1df8] = 8
 nul chk table  [0x00000200349a1df8,0x00000200349a1e10] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x00000200349a1960, 0x00000200349a1c18]  696 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8:r8     = '[B'
  #           [sp+0x40]  (sp of caller)
  0x00000200349a1960: mov    %eax,-0x7000(%rsp)
  0x00000200349a1967: push   %rbp
  0x00000200349a1968: sub    $0x30,%rsp
  0x00000200349a196c: movabs $0x2004f3c1158,%rax  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1976: mov    0xfc(%rax),%esi
  0x00000200349a197c: add    $0x8,%esi
  0x00000200349a197f: mov    %esi,0xfc(%rax)
  0x00000200349a1985: and    $0x1ff8,%esi
  0x00000200349a198b: cmp    $0x0,%esi
  0x00000200349a198e: je     0x00000200349a1ae7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0

  0x00000200349a1994: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ; implicit exception: dispatches to 0x00000200349a1b08
  0x00000200349a1997: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ; implicit exception: dispatches to 0x00000200349a1b0d
  0x00000200349a199b: cmp    %esi,%eax
  0x00000200349a199d: movabs $0x2004f3c1158,%rsi  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a19a7: movabs $0x138,%rdi
  0x00000200349a19b1: jne    0x00000200349a19c1
  0x00000200349a19b7: movabs $0x148,%rdi
  0x00000200349a19c1: mov    (%rsi,%rdi,1),%rbx
  0x00000200349a19c5: lea    0x1(%rbx),%rbx
  0x00000200349a19c9: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349a19cd: jne    0x00000200349a1ad5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4

  0x00000200349a19d3: mov    $0x0,%esi
  0x00000200349a19d8: jmpq   0x00000200349a1a74  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9

  0x00000200349a19dd: data16 xchg %ax,%ax
  0x00000200349a19e0: movslq %esi,%rdi
  0x00000200349a19e3: movsbl 0x10(%rdx,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17

  0x00000200349a19e8: movslq %esi,%rbx
  0x00000200349a19eb: cmp    0xc(%r8),%esi
  0x00000200349a19ef: jae    0x00000200349a1b12
  0x00000200349a19f5: movsbl 0x10(%r8,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20

  0x00000200349a19fb: cmp    %ebx,%edi
  0x00000200349a19fd: movabs $0x2004f3c1158,%rdi  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1a07: movabs $0x188,%rbx
  0x00000200349a1a11: jne    0x00000200349a1a21
  0x00000200349a1a17: movabs $0x178,%rbx
  0x00000200349a1a21: mov    (%rdi,%rbx,1),%rcx
  0x00000200349a1a25: lea    0x1(%rcx),%rcx
  0x00000200349a1a29: mov    %rcx,(%rdi,%rbx,1)
  0x00000200349a1a2d: jne    0x00000200349a1ab1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21

  0x00000200349a1a33: inc    %esi
  0x00000200349a1a35: movabs $0x2004f3c1158,%rdi  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1a3f: mov    0x100(%rdi),%ebx
  0x00000200349a1a45: add    $0x8,%ebx
  0x00000200349a1a48: mov    %ebx,0x100(%rdi)
  0x00000200349a1a4e: and    $0xfff8,%ebx
  0x00000200349a1a54: cmp    $0x0,%ebx
  0x00000200349a1a57: je     0x00000200349a1b1b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x00000200349a1a5d: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x00000200349a1a61: test   %eax,(%r10)        ;   {poll}
  0x00000200349a1a64: movabs $0x2004f3c1158,%rdi  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1a6e: incl   0x198(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x00000200349a1a74: cmp    %eax,%esi
  0x00000200349a1a76: movabs $0x2004f3c1158,%rdi  ;   {metadata(method data for {method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1a80: movabs $0x158,%rbx
  0x00000200349a1a8a: jge    0x00000200349a1a9a
  0x00000200349a1a90: movabs $0x168,%rbx
  0x00000200349a1a9a: mov    (%rdi,%rbx,1),%rcx
  0x00000200349a1a9e: lea    0x1(%rcx),%rcx
  0x00000200349a1aa2: mov    %rcx,(%rdi,%rbx,1)
  0x00000200349a1aa6: jge    0x00000200349a1ac3
  0x00000200349a1aac: jmpq   0x00000200349a19e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12

  0x00000200349a1ab1: mov    $0x0,%eax
  0x00000200349a1ab6: add    $0x30,%rsp
  0x00000200349a1aba: pop    %rbp
  0x00000200349a1abb: mov    0x70(%r15),%r10
  0x00000200349a1abf: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a1ac2: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25

  0x00000200349a1ac3: mov    $0x1,%eax
  0x00000200349a1ac8: add    $0x30,%rsp
  0x00000200349a1acc: pop    %rbp
  0x00000200349a1acd: mov    0x70(%r15),%r10
  0x00000200349a1ad1: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a1ad4: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33

  0x00000200349a1ad5: mov    $0x0,%eax
  0x00000200349a1ada: add    $0x30,%rsp
  0x00000200349a1ade: pop    %rbp
  0x00000200349a1adf: mov    0x70(%r15),%r10
  0x00000200349a1ae3: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a1ae6: retq   
  0x00000200349a1ae7: movabs $0x2004f284e10,%r10  ;   {metadata({method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1af1: mov    %r10,0x8(%rsp)
  0x00000200349a1af6: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a1afe: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a1b03: jmpq   0x00000200349a1994
  0x00000200349a1b08: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a1b0d: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a1b12: mov    %rsi,(%rsp)
  0x00000200349a1b16: callq  0x000002003446eda0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a1b1b: movabs $0x2004f284e10,%r10  ;   {metadata({method} {0x000002004f284e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x00000200349a1b25: mov    %r10,0x8(%rsp)
  0x00000200349a1b2a: movq   $0x1d,(%rsp)
  0x00000200349a1b32: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a1b37: jmpq   0x00000200349a1a5d
  0x00000200349a1b3c: nop
  0x00000200349a1b3d: nop
  0x00000200349a1b3e: mov    0x350(%r15),%rax
  0x00000200349a1b45: movabs $0x0,%r10
  0x00000200349a1b4f: mov    %r10,0x350(%r15)
  0x00000200349a1b56: movabs $0x0,%r10
  0x00000200349a1b60: mov    %r10,0x358(%r15)
  0x00000200349a1b67: add    $0x30,%rsp
  0x00000200349a1b6b: pop    %rbp
  0x00000200349a1b6c: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a1b71: hlt    
  0x00000200349a1b72: hlt    
  0x00000200349a1b73: hlt    
  0x00000200349a1b74: hlt    
  0x00000200349a1b75: hlt    
  0x00000200349a1b76: hlt    
  0x00000200349a1b77: hlt    
  0x00000200349a1b78: hlt    
  0x00000200349a1b79: hlt    
  0x00000200349a1b7a: hlt    
  0x00000200349a1b7b: hlt    
  0x00000200349a1b7c: hlt    
  0x00000200349a1b7d: hlt    
  0x00000200349a1b7e: hlt    
  0x00000200349a1b7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a1b80: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a1b85: mov    %rsp,-0x28(%rsp)
  0x00000200349a1b8a: sub    $0x80,%rsp
  0x00000200349a1b91: mov    %rax,0x78(%rsp)
  0x00000200349a1b96: mov    %rcx,0x70(%rsp)
  0x00000200349a1b9b: mov    %rdx,0x68(%rsp)
  0x00000200349a1ba0: mov    %rbx,0x60(%rsp)
  0x00000200349a1ba5: mov    %rbp,0x50(%rsp)
  0x00000200349a1baa: mov    %rsi,0x48(%rsp)
  0x00000200349a1baf: mov    %rdi,0x40(%rsp)
  0x00000200349a1bb4: mov    %r8,0x38(%rsp)
  0x00000200349a1bb9: mov    %r9,0x30(%rsp)
  0x00000200349a1bbe: mov    %r10,0x28(%rsp)
  0x00000200349a1bc3: mov    %r11,0x20(%rsp)
  0x00000200349a1bc8: mov    %r12,0x18(%rsp)
  0x00000200349a1bcd: mov    %r13,0x10(%rsp)
  0x00000200349a1bd2: mov    %r14,0x8(%rsp)
  0x00000200349a1bd7: mov    %r15,(%rsp)
  0x00000200349a1bdb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a1be5: movabs $0x200349a1b85,%rdx  ;   {internal_word}
  0x00000200349a1bef: mov    %rsp,%r8
  0x00000200349a1bf2: and    $0xfffffffffffffff0,%rsp
  0x00000200349a1bf6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a1c00: callq  *%r10
  0x00000200349a1c03: hlt    
[Deopt Handler Code]
  0x00000200349a1c04: movabs $0x200349a1c04,%r10  ;   {section_word}
  0x00000200349a1c0e: push   %r10
  0x00000200349a1c10: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a1c15: hlt    
  0x00000200349a1c16: hlt    
  0x00000200349a1c17: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 257 419 429 434 443 471 Compiled method (c1)     103   21       3       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x00000200349a1e90,0x00000200349a24c8] = 1592
 relocation     [0x00000200349a2008,0x00000200349a2048] = 64
 main code      [0x00000200349a2060,0x00000200349a2260] = 512
 stub code      [0x00000200349a2260,0x00000200349a22f8] = 152
 metadata       [0x00000200349a22f8,0x00000200349a2300] = 8
 scopes data    [0x00000200349a2300,0x00000200349a2368] = 104
 scopes pcs     [0x00000200349a2368,0x00000200349a24a8] = 320
 dependencies   [0x00000200349a24a8,0x00000200349a24b0] = 8
 nul chk table  [0x00000200349a24b0,0x00000200349a24c8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x00000200349a2060, 0x00000200349a22f8]  664 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x40]  (sp of caller)
  0x00000200349a2060: mov    0x8(%rdx),%r10d
  0x00000200349a2064: shl    $0x3,%r10
  0x00000200349a2068: cmp    %rax,%r10
  0x00000200349a206b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a2071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a207c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a2080: mov    %eax,-0x7000(%rsp)
  0x00000200349a2087: push   %rbp
  0x00000200349a2088: sub    $0x30,%rsp
  0x00000200349a208c: movabs $0x2004f3f3948,%rax  ;   {metadata(method data for {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a2096: mov    0xfc(%rax),%esi
  0x00000200349a209c: add    $0x8,%esi
  0x00000200349a209f: mov    %esi,0xfc(%rax)
  0x00000200349a20a5: and    $0x1ff8,%esi
  0x00000200349a20ab: cmp    $0x0,%esi
  0x00000200349a20ae: je     0x00000200349a21c6
  0x00000200349a20b4: jmpq   0x00000200349a2151  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@0

  0x00000200349a20b9: nopl   0x0(%rax)
  0x00000200349a20c0: movslq %eax,%rbx
  0x00000200349a20c3: cmp    %eax,%edi
  0x00000200349a20c5: jbe    0x00000200349a21e7
  0x00000200349a20cb: mov    0x10(%rsi,%rbx,4),%esi
  0x00000200349a20cf: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x00000200349a20d3: cmp    $0x0,%rsi
  0x00000200349a20d7: movabs $0x2004f3f3948,%rsi  ;   {metadata(method data for {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a20e1: movabs $0x168,%rdi
  0x00000200349a20eb: jne    0x00000200349a20fb
  0x00000200349a20f1: movabs $0x158,%rdi
  0x00000200349a20fb: mov    (%rsi,%rdi,1),%rbx
  0x00000200349a20ff: lea    0x1(%rbx),%rbx
  0x00000200349a2103: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349a2107: jne    0x00000200349a21a2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x00000200349a210d: inc    %eax
  0x00000200349a210f: mov    %eax,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x00000200349a2112: movabs $0x2004f3f3948,%rax  ;   {metadata(method data for {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a211c: mov    0x100(%rax),%esi
  0x00000200349a2122: add    $0x8,%esi
  0x00000200349a2125: mov    %esi,0x100(%rax)
  0x00000200349a212b: and    $0xfff8,%esi
  0x00000200349a2131: cmp    $0x0,%esi
  0x00000200349a2134: je     0x00000200349a21f0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x00000200349a213a: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x00000200349a213e: test   %eax,(%r10)        ;   {poll}
  0x00000200349a2141: movabs $0x2004f3f3948,%rax  ;   {metadata(method data for {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a214b: incl   0x178(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x00000200349a2151: mov    0xc(%rdx),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x00000200349a2154: mov    0x10(%rdx),%esi
  0x00000200349a2157: shl    $0x3,%rsi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x00000200349a215b: mov    0x10(%rsi),%esi    ; implicit exception: dispatches to 0x00000200349a2211
  0x00000200349a215e: shl    $0x3,%rsi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x00000200349a2162: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x00000200349a2216
  0x00000200349a2165: cmp    %edi,%eax
  0x00000200349a2167: movabs $0x2004f3f3948,%rbx  ;   {metadata(method data for {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a2171: movabs $0x138,%rcx
  0x00000200349a217b: jge    0x00000200349a218b
  0x00000200349a2181: movabs $0x148,%rcx
  0x00000200349a218b: mov    (%rbx,%rcx,1),%r8
  0x00000200349a218f: lea    0x1(%r8),%r8
  0x00000200349a2193: mov    %r8,(%rbx,%rcx,1)
  0x00000200349a2197: jge    0x00000200349a21b4
  0x00000200349a219d: jmpq   0x00000200349a20c0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x00000200349a21a2: mov    $0x1,%eax
  0x00000200349a21a7: add    $0x30,%rsp
  0x00000200349a21ab: pop    %rbp
  0x00000200349a21ac: mov    0x70(%r15),%r10
  0x00000200349a21b0: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a21b3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@31

  0x00000200349a21b4: mov    $0x0,%eax
  0x00000200349a21b9: add    $0x30,%rsp
  0x00000200349a21bd: pop    %rbp
  0x00000200349a21be: mov    0x70(%r15),%r10
  0x00000200349a21c2: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a21c5: retq   
  0x00000200349a21c6: movabs $0x2004f3f26a0,%r10  ;   {metadata({method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a21d0: mov    %r10,0x8(%rsp)
  0x00000200349a21d5: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a21dd: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a21e2: jmpq   0x00000200349a20b4
  0x00000200349a21e7: mov    %rax,(%rsp)
  0x00000200349a21eb: callq  0x000002003446eda0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a21f0: movabs $0x2004f3f26a0,%r10  ;   {metadata({method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a21fa: mov    %r10,0x8(%rsp)
  0x00000200349a21ff: movq   $0x2a,(%rsp)
  0x00000200349a2207: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a220c: jmpq   0x00000200349a213a
  0x00000200349a2211: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a2216: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a221b: nop
  0x00000200349a221c: nop
  0x00000200349a221d: mov    0x350(%r15),%rax
  0x00000200349a2224: movabs $0x0,%r10
  0x00000200349a222e: mov    %r10,0x350(%r15)
  0x00000200349a2235: movabs $0x0,%r10
  0x00000200349a223f: mov    %r10,0x358(%r15)
  0x00000200349a2246: add    $0x30,%rsp
  0x00000200349a224a: pop    %rbp
  0x00000200349a224b: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a2250: hlt    
  0x00000200349a2251: hlt    
  0x00000200349a2252: hlt    
  0x00000200349a2253: hlt    
  0x00000200349a2254: hlt    
  0x00000200349a2255: hlt    
  0x00000200349a2256: hlt    
  0x00000200349a2257: hlt    
  0x00000200349a2258: hlt    
  0x00000200349a2259: hlt    
  0x00000200349a225a: hlt    
  0x00000200349a225b: hlt    
  0x00000200349a225c: hlt    
  0x00000200349a225d: hlt    
  0x00000200349a225e: hlt    
  0x00000200349a225f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a2260: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a2265: mov    %rsp,-0x28(%rsp)
  0x00000200349a226a: sub    $0x80,%rsp
  0x00000200349a2271: mov    %rax,0x78(%rsp)
  0x00000200349a2276: mov    %rcx,0x70(%rsp)
  0x00000200349a227b: mov    %rdx,0x68(%rsp)
  0x00000200349a2280: mov    %rbx,0x60(%rsp)
  0x00000200349a2285: mov    %rbp,0x50(%rsp)
  0x00000200349a228a: mov    %rsi,0x48(%rsp)
  0x00000200349a228f: mov    %rdi,0x40(%rsp)
  0x00000200349a2294: mov    %r8,0x38(%rsp)
  0x00000200349a2299: mov    %r9,0x30(%rsp)
  0x00000200349a229e: mov    %r10,0x28(%rsp)
  0x00000200349a22a3: mov    %r11,0x20(%rsp)
  0x00000200349a22a8: mov    %r12,0x18(%rsp)
  0x00000200349a22ad: mov    %r13,0x10(%rsp)
  0x00000200349a22b2: mov    %r14,0x8(%rsp)
  0x00000200349a22b7: mov    %r15,(%rsp)
  0x00000200349a22bb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a22c5: movabs $0x200349a2265,%rdx  ;   {internal_word}
  0x00000200349a22cf: mov    %rsp,%r8
  0x00000200349a22d2: and    $0xfffffffffffffff0,%rsp
  0x00000200349a22d6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a22e0: callq  *%r10
  0x00000200349a22e3: hlt    
[Deopt Handler Code]
  0x00000200349a22e4: movabs $0x200349a22e4,%r10  ;   {section_word}
  0x00000200349a22ee: push   %r10
  0x00000200349a22f0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a22f5: hlt    
  0x00000200349a22f6: hlt    
  0x00000200349a22f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 222 386 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 400 
ImmutableOopMap{rdx=Oop }pc offsets: 428 438 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 443 Compiled method (c1)     107    9       3       java.lang.Math::floorMod (10 bytes)
 total in heap  [0x00000200349a2510,0x00000200349a2a28] = 1304
 relocation     [0x00000200349a2688,0x00000200349a26c0] = 56
 main code      [0x00000200349a26c0,0x00000200349a2880] = 448
 stub code      [0x00000200349a2880,0x00000200349a2918] = 152
 metadata       [0x00000200349a2918,0x00000200349a2928] = 16
 scopes data    [0x00000200349a2928,0x00000200349a2980] = 88
 scopes pcs     [0x00000200349a2980,0x00000200349a2a10] = 144
 dependencies   [0x00000200349a2a10,0x00000200349a2a18] = 8
 nul chk table  [0x00000200349a2a18,0x00000200349a2a28] = 16
----------------------------------------------------------------------
java/lang/Math.floorMod(II)I  [0x00000200349a26c0, 0x00000200349a2918]  600 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000200349a26c0: mov    %eax,-0x7000(%rsp)
  0x00000200349a26c7: push   %rbp
  0x00000200349a26c8: sub    $0x40,%rsp
  0x00000200349a26cc: mov    %rdx,%rsi
  0x00000200349a26cf: movabs $0x2004f3bebb8,%rax  ;   {metadata(method data for {method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a26d9: mov    0xfc(%rax),%edx
  0x00000200349a26df: add    $0x8,%edx
  0x00000200349a26e2: mov    %edx,0xfc(%rax)
  0x00000200349a26e8: and    $0x1ff8,%edx
  0x00000200349a26ee: cmp    $0x0,%edx
  0x00000200349a26f1: je     0x00000200349a27e6  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorMod@0

  0x00000200349a26f7: movabs $0x2004f3bebb8,%rax  ;   {metadata(method data for {method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a2701: addq   $0x1,0x138(%rax)
  0x00000200349a2709: movabs $0x2004f3bed48,%rax  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a2713: mov    0xfc(%rax),%edx
  0x00000200349a2719: add    $0x8,%edx
  0x00000200349a271c: mov    %edx,0xfc(%rax)
  0x00000200349a2722: and    $0x7ffff8,%edx
  0x00000200349a2728: cmp    $0x0,%edx
  0x00000200349a272b: je     0x00000200349a2807
  0x00000200349a2731: mov    %rsi,%rax
  0x00000200349a2734: cmp    $0x80000000,%eax
  0x00000200349a273a: jne    0x00000200349a274c
  0x00000200349a2740: xor    %edx,%edx
  0x00000200349a2742: cmp    $0xffffffff,%r8d
  0x00000200349a2746: je     0x00000200349a2750
  0x00000200349a274c: cltd   
  0x00000200349a274d: idiv   %r8d               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; implicit exception: dispatches to 0x00000200349a2828
  0x00000200349a2750: mov    %r8,%rdi
  0x00000200349a2753: xor    %rsi,%rdi
  0x00000200349a2756: cmp    $0x0,%edi
  0x00000200349a2759: movabs $0x2004f3bed48,%rdi  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a2763: movabs $0x138,%rbx
  0x00000200349a276d: jge    0x00000200349a277d
  0x00000200349a2773: movabs $0x148,%rbx
  0x00000200349a277d: mov    (%rdi,%rbx,1),%rdx
  0x00000200349a2781: lea    0x1(%rdx),%rdx
  0x00000200349a2785: mov    %rdx,(%rdi,%rbx,1)
  0x00000200349a2789: jge    0x00000200349a27d0  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7
                                                ; - java.lang.Math::floorMod@3

  0x00000200349a278f: mov    %rax,%rdi
  0x00000200349a2792: imul   %r8d,%edi
  0x00000200349a2796: cmp    %esi,%edi
  0x00000200349a2798: movabs $0x2004f3bed48,%rdi  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a27a2: movabs $0x158,%rbx
  0x00000200349a27ac: je     0x00000200349a27bc
  0x00000200349a27b2: movabs $0x168,%rbx
  0x00000200349a27bc: mov    (%rdi,%rbx,1),%rdx
  0x00000200349a27c0: lea    0x1(%rdx),%rdx
  0x00000200349a27c4: mov    %rdx,(%rdi,%rbx,1)
  0x00000200349a27c8: je     0x00000200349a27d0  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14
                                                ; - java.lang.Math::floorMod@3

  0x00000200349a27ce: dec    %eax
  0x00000200349a27d0: imul   %r8d,%eax
  0x00000200349a27d4: sub    %eax,%esi
  0x00000200349a27d6: mov    %rsi,%rax
  0x00000200349a27d9: add    $0x40,%rsp
  0x00000200349a27dd: pop    %rbp
  0x00000200349a27de: mov    0x70(%r15),%r10
  0x00000200349a27e2: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a27e5: retq   
  0x00000200349a27e6: movabs $0x2004f2e2fb8,%r10  ;   {metadata({method} {0x000002004f2e2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x00000200349a27f0: mov    %r10,0x8(%rsp)
  0x00000200349a27f5: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a27fd: callq  0x0000020034501a80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a2802: jmpq   0x00000200349a26f7
  0x00000200349a2807: movabs $0x2004f2e2dd0,%r10  ;   {metadata({method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349a2811: mov    %r10,0x8(%rsp)
  0x00000200349a2816: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a281e: callq  0x0000020034501a80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1
                                                ; - java.lang.Math::floorMod@3
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a2823: jmpq   0x00000200349a2731
  0x00000200349a2828: callq  0x00000200344fc920  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00000200349a282d: nop
  0x00000200349a282e: nop
  0x00000200349a282f: mov    0x350(%r15),%rax
  0x00000200349a2836: movabs $0x0,%r10
  0x00000200349a2840: mov    %r10,0x350(%r15)
  0x00000200349a2847: movabs $0x0,%r10
  0x00000200349a2851: mov    %r10,0x358(%r15)
  0x00000200349a2858: add    $0x40,%rsp
  0x00000200349a285c: pop    %rbp
  0x00000200349a285d: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a2862: hlt    
  0x00000200349a2863: hlt    
  0x00000200349a2864: hlt    
  0x00000200349a2865: hlt    
  0x00000200349a2866: hlt    
  0x00000200349a2867: hlt    
  0x00000200349a2868: hlt    
  0x00000200349a2869: hlt    
  0x00000200349a286a: hlt    
  0x00000200349a286b: hlt    
  0x00000200349a286c: hlt    
  0x00000200349a286d: hlt    
  0x00000200349a286e: hlt    
  0x00000200349a286f: hlt    
  0x00000200349a2870: hlt    
  0x00000200349a2871: hlt    
  0x00000200349a2872: hlt    
  0x00000200349a2873: hlt    
  0x00000200349a2874: hlt    
  0x00000200349a2875: hlt    
  0x00000200349a2876: hlt    
  0x00000200349a2877: hlt    
  0x00000200349a2878: hlt    
  0x00000200349a2879: hlt    
  0x00000200349a287a: hlt    
  0x00000200349a287b: hlt    
  0x00000200349a287c: hlt    
  0x00000200349a287d: hlt    
  0x00000200349a287e: hlt    
  0x00000200349a287f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a2880: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a2885: mov    %rsp,-0x28(%rsp)
  0x00000200349a288a: sub    $0x80,%rsp
  0x00000200349a2891: mov    %rax,0x78(%rsp)
  0x00000200349a2896: mov    %rcx,0x70(%rsp)
  0x00000200349a289b: mov    %rdx,0x68(%rsp)
  0x00000200349a28a0: mov    %rbx,0x60(%rsp)
  0x00000200349a28a5: mov    %rbp,0x50(%rsp)
  0x00000200349a28aa: mov    %rsi,0x48(%rsp)
  0x00000200349a28af: mov    %rdi,0x40(%rsp)
  0x00000200349a28b4: mov    %r8,0x38(%rsp)
  0x00000200349a28b9: mov    %r9,0x30(%rsp)
  0x00000200349a28be: mov    %r10,0x28(%rsp)
  0x00000200349a28c3: mov    %r11,0x20(%rsp)
  0x00000200349a28c8: mov    %r12,0x18(%rsp)
  0x00000200349a28cd: mov    %r13,0x10(%rsp)
  0x00000200349a28d2: mov    %r14,0x8(%rsp)
  0x00000200349a28d7: mov    %r15,(%rsp)
  0x00000200349a28db: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a28e5: movabs $0x200349a2885,%rdx  ;   {internal_word}
  0x00000200349a28ef: mov    %rsp,%r8
  0x00000200349a28f2: and    $0xfffffffffffffff0,%rsp
  0x00000200349a28f6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a2900: callq  *%r10
  0x00000200349a2903: hlt    
[Deopt Handler Code]
  0x00000200349a2904: movabs $0x200349a2904,%r10  ;   {section_word}
  0x00000200349a290e: push   %r10
  0x00000200349a2910: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a2915: hlt    
  0x00000200349a2916: hlt    
  0x00000200349a2917: hlt    

ImmutableOopMap{}pc offsets: 322 355 365 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x000002003bed0740, 0x000002003bed0998]  600 bytes
[Entry Point]
  # {method} {0x000002004f22d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  # parm2:    rdi:rdi   = long
  # parm3:    rsi:rsi   = long
  #           [sp+0x80]  (sp of caller)
  0x000002003bed0740: mov    0x8(%rdx),%r10d
  0x000002003bed0744: shl    $0x3,%r10
  0x000002003bed0748: cmp    %r10,%rax
  0x000002003bed074b: je     0x000002003bed0758
  0x000002003bed0751: jmpq   0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x000002003bed0756: xchg   %ax,%ax
[Verified Entry Point]
  0x000002003bed0758: mov    %eax,-0x7000(%rsp)
  0x000002003bed075f: push   %rbp
  0x000002003bed0760: mov    %rsp,%rbp
  0x000002003bed0763: sub    $0x70,%rsp
  0x000002003bed0767: mov    %rsi,0x28(%rsp)
  0x000002003bed076c: mov    %rdi,0x20(%rsp)
  0x000002003bed0771: mov    %r8,0x38(%rsp)
  0x000002003bed0776: cmp    $0x0,%r8
  0x000002003bed077a: lea    0x38(%rsp),%r8
  0x000002003bed077f: cmove  0x38(%rsp),%r8
  0x000002003bed0785: mov    %rdx,0x30(%rsp)
  0x000002003bed078a: cmp    $0x0,%rdx
  0x000002003bed078e: lea    0x30(%rsp),%rdx
  0x000002003bed0793: cmove  0x30(%rsp),%rdx    ; ImmutableOopMap{[56]=Oop [48]=Oop }
  0x000002003bed0799: vzeroupper 
  0x000002003bed079c: movabs $0x2003bed0799,%r10  ;   {internal_word}
  0x000002003bed07a6: mov    %r10,0x258(%r15)
  0x000002003bed07ad: mov    %rsp,0x250(%r15)
  0x000002003bed07b4: movabs $0x55fcaf1e,%r10   ;   {external_word}
  0x000002003bed07be: cmpb   $0x0,(%r10)
  0x000002003bed07c2: je     0x000002003bed081a
  0x000002003bed07c8: push   %rdx
  0x000002003bed07c9: push   %r8
  0x000002003bed07cb: push   %r9
  0x000002003bed07cd: movabs $0x2004f22d318,%rdx  ;   {metadata({method} {0x000002004f22d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000002003bed07d7: mov    %r15,%rcx
  0x000002003bed07da: sub    $0x20,%rsp
  0x000002003bed07de: test   $0xf,%esp
  0x000002003bed07e4: je     0x000002003bed0804
  0x000002003bed07ea: sub    $0x8,%rsp
  0x000002003bed07ee: movabs $0x55c395b0,%r10   ;   {runtime_call}
  0x000002003bed07f8: callq  *%r10
  0x000002003bed07fb: add    $0x8,%rsp
  0x000002003bed07ff: jmpq   0x000002003bed0811
  0x000002003bed0804: movabs $0x55c395b0,%r10   ;   {runtime_call}
  0x000002003bed080e: callq  *%r10
  0x000002003bed0811: add    $0x20,%rsp
  0x000002003bed0815: pop    %r9
  0x000002003bed0817: pop    %r8
  0x000002003bed0819: pop    %rdx
  0x000002003bed081a: lea    0x270(%r15),%rcx
  0x000002003bed0821: movl   $0x4,0x2e8(%r15)
  0x000002003bed082c: movabs $0x55cd0ad0,%r10   ;   {runtime_call}
  0x000002003bed0836: callq  *%r10
  0x000002003bed0839: vzeroupper 
  0x000002003bed083c: and    $0xff,%eax
  0x000002003bed0842: setne  %al
  0x000002003bed0845: movl   $0x5,0x2e8(%r15)
  0x000002003bed0850: lock addl $0x0,-0x40(%rsp)
  0x000002003bed0856: testb  $0x8,0x70(%r15)
  0x000002003bed085b: jne    0x000002003bed086f
  0x000002003bed0861: cmpl   $0x0,0x48(%r15)
  0x000002003bed0869: je     0x000002003bed089b
  0x000002003bed086f: vzeroupper 
  0x000002003bed0872: mov    %rax,-0x8(%rbp)
  0x000002003bed0876: mov    %r15,%rcx
  0x000002003bed0879: mov    %rsp,%r12
  0x000002003bed087c: sub    $0x20,%rsp
  0x000002003bed0880: and    $0xfffffffffffffff0,%rsp
  0x000002003bed0884: movabs $0x55cb4790,%r10   ;   {runtime_call}
  0x000002003bed088e: callq  *%r10
  0x000002003bed0891: mov    %r12,%rsp
  0x000002003bed0894: xor    %r12,%r12
  0x000002003bed0897: mov    -0x8(%rbp),%rax
  0x000002003bed089b: movl   $0x8,0x2e8(%r15)
  0x000002003bed08a6: cmpl   $0x2,0x338(%r15)
  0x000002003bed08b1: je     0x000002003bed0963
  0x000002003bed08b7: movabs $0x55fcaf1e,%r10   ;   {external_word}
  0x000002003bed08c1: cmpb   $0x0,(%r10)
  0x000002003bed08c5: je     0x000002003bed091b
  0x000002003bed08cb: mov    %rax,-0x8(%rbp)
  0x000002003bed08cf: movabs $0x2004f22d318,%rdx  ;   {metadata({method} {0x000002004f22d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000002003bed08d9: mov    %r15,%rcx
  0x000002003bed08dc: sub    $0x20,%rsp
  0x000002003bed08e0: test   $0xf,%esp
  0x000002003bed08e6: je     0x000002003bed0906
  0x000002003bed08ec: sub    $0x8,%rsp
  0x000002003bed08f0: movabs $0x55c395b0,%r10   ;   {runtime_call}
  0x000002003bed08fa: callq  *%r10
  0x000002003bed08fd: add    $0x8,%rsp
  0x000002003bed0901: jmpq   0x000002003bed0913
  0x000002003bed0906: movabs $0x55c395b0,%r10   ;   {runtime_call}
  0x000002003bed0910: callq  *%r10
  0x000002003bed0913: add    $0x20,%rsp
  0x000002003bed0917: mov    -0x8(%rbp),%rax
  0x000002003bed091b: movabs $0x0,%r10
  0x000002003bed0925: mov    %r10,0x250(%r15)
  0x000002003bed092c: movabs $0x0,%r10
  0x000002003bed0936: mov    %r10,0x258(%r15)
  0x000002003bed093d: vzeroupper 
  0x000002003bed0940: mov    0x50(%r15),%rcx
  0x000002003bed0944: movl   $0x0,0x100(%rcx)
  0x000002003bed094e: leaveq 
  0x000002003bed094f: cmpq   $0x0,0x8(%r15)
  0x000002003bed0957: jne    0x000002003bed095e
  0x000002003bed095d: retq   
  0x000002003bed095e: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000002003bed0963: vzeroupper 
  0x000002003bed0966: mov    %rax,-0x8(%rbp)
  0x000002003bed096a: mov    %rsp,%r12
  0x000002003bed096d: sub    $0x20,%rsp
  0x000002003bed0971: and    $0xfffffffffffffff0,%rsp
  0x000002003bed0975: movabs $0x55c3c310,%r10   ;   {runtime_call}
  0x000002003bed097f: callq  *%r10
  0x000002003bed0982: mov    %r12,%rsp
  0x000002003bed0985: xor    %r12,%r12
  0x000002003bed0988: mov    -0x8(%rbp),%rax
  0x000002003bed098c: jmpq   0x000002003bed08b7
  0x000002003bed0991: hlt    
  0x000002003bed0992: hlt    
  0x000002003bed0993: hlt    
  0x000002003bed0994: hlt    
  0x000002003bed0995: hlt    
  0x000002003bed0996: hlt    
  0x000002003bed0997: hlt    
Compiled method (c1)     113   24       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x00000200349a2a90,0x00000200349a3028] = 1432
 relocation     [0x00000200349a2c08,0x00000200349a2c48] = 64
 main code      [0x00000200349a2c60,0x00000200349a2ec0] = 608
 stub code      [0x00000200349a2ec0,0x00000200349a2f58] = 152
 oops           [0x00000200349a2f58,0x00000200349a2f60] = 8
 metadata       [0x00000200349a2f60,0x00000200349a2f70] = 16
 scopes data    [0x00000200349a2f70,0x00000200349a2fb0] = 64
 scopes pcs     [0x00000200349a2fb0,0x00000200349a3020] = 112
 dependencies   [0x00000200349a3020,0x00000200349a3028] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x00000200349a2c60, 0x00000200349a2f58]  760 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x00000200349a2c60: mov    %eax,-0x7000(%rsp)
  0x00000200349a2c67: push   %rbp
  0x00000200349a2c68: sub    $0x70,%rsp
  0x00000200349a2c6c: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2c76: mov    0xfc(%rcx),%eax
  0x00000200349a2c7c: add    $0x8,%eax
  0x00000200349a2c7f: mov    %eax,0xfc(%rcx)
  0x00000200349a2c85: and    $0x1ff8,%eax
  0x00000200349a2c8b: cmp    $0x0,%eax
  0x00000200349a2c8e: je     0x00000200349a2e2b  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x00000200349a2c94: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2c9e: lea    0x170(%rcx),%rcx
  0x00000200349a2ca5: mov    %rdx,%rax
  0x00000200349a2ca8: test   %rax,%rax
  0x00000200349a2cab: jne    0x00000200349a2cb7
  0x00000200349a2cad: orq    $0x1,0x8(%rcx)
  0x00000200349a2cb5: jmp    0x00000200349a2cda
  0x00000200349a2cb7: mov    0x8(%rax),%eax
  0x00000200349a2cba: shl    $0x3,%rax
  0x00000200349a2cbe: xor    0x8(%rcx),%rax
  0x00000200349a2cc2: test   $0xfffffffffffffffc,%rax
  0x00000200349a2cc8: je     0x00000200349a2cda
  0x00000200349a2cca: test   $0x2,%rax
  0x00000200349a2cd0: jne    0x00000200349a2cda
  0x00000200349a2cd2: orq    $0x2,0x8(%rcx)
  0x00000200349a2cda: movabs $0x6d1708638,%rcx  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x00000200349a2ce4: movabs $0x2004f36fd90,%rax  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2cee: addq   $0x1,0x138(%rax)
  0x00000200349a2cf6: movslq %r8d,%r8
  0x00000200349a2cf9: mov    $0x2,%ecx
  0x00000200349a2cfe: shl    %cl,%r8
  0x00000200349a2d01: movabs $0x10,%r10
  0x00000200349a2d0b: add    %r10,%r8
  0x00000200349a2d0e: movabs $0x2004f3712d8,%rax  ;   {metadata(method data for {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a2d18: mov    0xfc(%rax),%esi
  0x00000200349a2d1e: add    $0x8,%esi
  0x00000200349a2d21: mov    %esi,0xfc(%rax)
  0x00000200349a2d27: and    $0x7ffff8,%esi
  0x00000200349a2d2d: cmp    $0x0,%esi
  0x00000200349a2d30: je     0x00000200349a2e4c
  0x00000200349a2d36: mov    (%rdx,%r8,1),%eax
  0x00000200349a2d3a: shl    $0x3,%rax
  0x00000200349a2d3e: cmp    $0x0,%rax
  0x00000200349a2d42: jne    0x00000200349a2d5d
  0x00000200349a2d44: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2d4e: orl    $0x100,0x180(%rdi)
  0x00000200349a2d58: jmpq   0x00000200349a2e1e
  0x00000200349a2d5d: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a2d67: mov    0x8(%rax),%edi
  0x00000200349a2d6a: shl    $0x3,%rdi
  0x00000200349a2d6e: cmp    0x30(%rdi),%rbx
  0x00000200349a2d72: jne    0x00000200349a2e02
  0x00000200349a2d78: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2d82: mov    0x8(%rax),%ebx
  0x00000200349a2d85: shl    $0x3,%rbx
  0x00000200349a2d89: cmp    0x198(%rdi),%rbx
  0x00000200349a2d90: jne    0x00000200349a2d9f
  0x00000200349a2d92: addq   $0x1,0x1a0(%rdi)
  0x00000200349a2d9a: jmpq   0x00000200349a2e1e
  0x00000200349a2d9f: cmp    0x1a8(%rdi),%rbx
  0x00000200349a2da6: jne    0x00000200349a2db5
  0x00000200349a2da8: addq   $0x1,0x1b0(%rdi)
  0x00000200349a2db0: jmpq   0x00000200349a2e1e
  0x00000200349a2db5: cmpq   $0x0,0x198(%rdi)
  0x00000200349a2dc0: jne    0x00000200349a2dd9
  0x00000200349a2dc2: mov    %rbx,0x198(%rdi)
  0x00000200349a2dc9: movq   $0x1,0x1a0(%rdi)
  0x00000200349a2dd4: jmpq   0x00000200349a2e1e
  0x00000200349a2dd9: cmpq   $0x0,0x1a8(%rdi)
  0x00000200349a2de4: jne    0x00000200349a2dfd
  0x00000200349a2de6: mov    %rbx,0x1a8(%rdi)
  0x00000200349a2ded: movq   $0x1,0x1b0(%rdi)
  0x00000200349a2df8: jmpq   0x00000200349a2e1e
  0x00000200349a2dfd: jmpq   0x00000200349a2e1e
  0x00000200349a2e02: movabs $0x2004f36fd90,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2e0c: subq   $0x1,0x188(%rdi)
  0x00000200349a2e14: jmpq   0x00000200349a2e6d
  0x00000200349a2e19: jmpq   0x00000200349a2e1e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18

  0x00000200349a2e1e: add    $0x70,%rsp
  0x00000200349a2e22: pop    %rbp
  0x00000200349a2e23: mov    0x70(%r15),%r10
  0x00000200349a2e27: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a2e2a: retq   
  0x00000200349a2e2b: movabs $0x2004f2a3250,%r10  ;   {metadata({method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a2e35: mov    %r10,0x8(%rsp)
  0x00000200349a2e3a: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a2e42: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a2e47: jmpq   0x00000200349a2c94
  0x00000200349a2e4c: movabs $0x2004f22e6a0,%r10  ;   {metadata({method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a2e56: mov    %r10,0x8(%rsp)
  0x00000200349a2e5b: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a2e63: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a2e68: jmpq   0x00000200349a2d36
  0x00000200349a2e6d: mov    %rax,(%rsp)
  0x00000200349a2e71: callq  0x00000200344feca0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a2e76: nop
  0x00000200349a2e77: nop
  0x00000200349a2e78: mov    0x350(%r15),%rax
  0x00000200349a2e7f: movabs $0x0,%r10
  0x00000200349a2e89: mov    %r10,0x350(%r15)
  0x00000200349a2e90: movabs $0x0,%r10
  0x00000200349a2e9a: mov    %r10,0x358(%r15)
  0x00000200349a2ea1: add    $0x70,%rsp
  0x00000200349a2ea5: pop    %rbp
  0x00000200349a2ea6: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a2eab: hlt    
  0x00000200349a2eac: hlt    
  0x00000200349a2ead: hlt    
  0x00000200349a2eae: hlt    
  0x00000200349a2eaf: hlt    
  0x00000200349a2eb0: hlt    
  0x00000200349a2eb1: hlt    
  0x00000200349a2eb2: hlt    
  0x00000200349a2eb3: hlt    
  0x00000200349a2eb4: hlt    
  0x00000200349a2eb5: hlt    
  0x00000200349a2eb6: hlt    
  0x00000200349a2eb7: hlt    
  0x00000200349a2eb8: hlt    
  0x00000200349a2eb9: hlt    
  0x00000200349a2eba: hlt    
  0x00000200349a2ebb: hlt    
  0x00000200349a2ebc: hlt    
  0x00000200349a2ebd: hlt    
  0x00000200349a2ebe: hlt    
  0x00000200349a2ebf: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a2ec0: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a2ec5: mov    %rsp,-0x28(%rsp)
  0x00000200349a2eca: sub    $0x80,%rsp
  0x00000200349a2ed1: mov    %rax,0x78(%rsp)
  0x00000200349a2ed6: mov    %rcx,0x70(%rsp)
  0x00000200349a2edb: mov    %rdx,0x68(%rsp)
  0x00000200349a2ee0: mov    %rbx,0x60(%rsp)
  0x00000200349a2ee5: mov    %rbp,0x50(%rsp)
  0x00000200349a2eea: mov    %rsi,0x48(%rsp)
  0x00000200349a2eef: mov    %rdi,0x40(%rsp)
  0x00000200349a2ef4: mov    %r8,0x38(%rsp)
  0x00000200349a2ef9: mov    %r9,0x30(%rsp)
  0x00000200349a2efe: mov    %r10,0x28(%rsp)
  0x00000200349a2f03: mov    %r11,0x20(%rsp)
  0x00000200349a2f08: mov    %r12,0x18(%rsp)
  0x00000200349a2f0d: mov    %r13,0x10(%rsp)
  0x00000200349a2f12: mov    %r14,0x8(%rsp)
  0x00000200349a2f17: mov    %r15,(%rsp)
  0x00000200349a2f1b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a2f25: movabs $0x200349a2ec5,%rdx  ;   {internal_word}
  0x00000200349a2f2f: mov    %rsp,%r8
  0x00000200349a2f32: and    $0xfffffffffffffff0,%rsp
  0x00000200349a2f36: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a2f40: callq  *%r10
  0x00000200349a2f43: hlt    
[Deopt Handler Code]
  0x00000200349a2f44: movabs $0x200349a2f44,%r10  ;   {section_word}
  0x00000200349a2f4e: push   %r10
  0x00000200349a2f50: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a2f55: hlt    
  0x00000200349a2f56: hlt    
  0x00000200349a2f57: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 487 520 
ImmutableOopMap{}pc offsets: 534 Compiled method (c1)     116    4       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x00000200349a3090,0x00000200349a3400] = 880
 relocation     [0x00000200349a3208,0x00000200349a3230] = 40
 main code      [0x00000200349a3240,0x00000200349a3300] = 192
 stub code      [0x00000200349a3300,0x00000200349a3398] = 152
 metadata       [0x00000200349a3398,0x00000200349a33a8] = 16
 scopes data    [0x00000200349a33a8,0x00000200349a33b8] = 16
 scopes pcs     [0x00000200349a33b8,0x00000200349a33f8] = 64
 dependencies   [0x00000200349a33f8,0x00000200349a3400] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x00000200349a3240, 0x00000200349a3398]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000200349a3240: mov    0x8(%rdx),%r10d
  0x00000200349a3244: shl    $0x3,%r10
  0x00000200349a3248: cmp    %rax,%r10
  0x00000200349a324b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a3251: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a325c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a3260: mov    %eax,-0x7000(%rsp)
  0x00000200349a3267: push   %rbp
  0x00000200349a3268: sub    $0x30,%rsp
  0x00000200349a326c: movabs $0x2004f3632f0,%rsi  ;   {metadata(method data for {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a3276: mov    0xfc(%rsi),%edi
  0x00000200349a327c: add    $0x8,%edi
  0x00000200349a327f: mov    %edi,0xfc(%rsi)
  0x00000200349a3285: and    $0x1ff8,%edi
  0x00000200349a328b: cmp    $0x0,%edi
  0x00000200349a328e: je     0x00000200349a32a1  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x00000200349a3294: add    $0x30,%rsp
  0x00000200349a3298: pop    %rbp
  0x00000200349a3299: mov    0x70(%r15),%r10
  0x00000200349a329d: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a32a0: retq   
  0x00000200349a32a1: movabs $0x2004f190588,%r10  ;   {metadata({method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a32ab: mov    %r10,0x8(%rsp)
  0x00000200349a32b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a32b8: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a32bd: jmp    0x00000200349a3294
  0x00000200349a32bf: nop
  0x00000200349a32c0: nop
  0x00000200349a32c1: mov    0x350(%r15),%rax
  0x00000200349a32c8: movabs $0x0,%r10
  0x00000200349a32d2: mov    %r10,0x350(%r15)
  0x00000200349a32d9: movabs $0x0,%r10
  0x00000200349a32e3: mov    %r10,0x358(%r15)
  0x00000200349a32ea: add    $0x30,%rsp
  0x00000200349a32ee: pop    %rbp
  0x00000200349a32ef: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a32f4: hlt    
  0x00000200349a32f5: hlt    
  0x00000200349a32f6: hlt    
  0x00000200349a32f7: hlt    
  0x00000200349a32f8: hlt    
  0x00000200349a32f9: hlt    
  0x00000200349a32fa: hlt    
  0x00000200349a32fb: hlt    
  0x00000200349a32fc: hlt    
  0x00000200349a32fd: hlt    
  0x00000200349a32fe: hlt    
  0x00000200349a32ff: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a3300: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a3305: mov    %rsp,-0x28(%rsp)
  0x00000200349a330a: sub    $0x80,%rsp
  0x00000200349a3311: mov    %rax,0x78(%rsp)
  0x00000200349a3316: mov    %rcx,0x70(%rsp)
  0x00000200349a331b: mov    %rdx,0x68(%rsp)
  0x00000200349a3320: mov    %rbx,0x60(%rsp)
  0x00000200349a3325: mov    %rbp,0x50(%rsp)
  0x00000200349a332a: mov    %rsi,0x48(%rsp)
  0x00000200349a332f: mov    %rdi,0x40(%rsp)
  0x00000200349a3334: mov    %r8,0x38(%rsp)
  0x00000200349a3339: mov    %r9,0x30(%rsp)
  0x00000200349a333e: mov    %r10,0x28(%rsp)
  0x00000200349a3343: mov    %r11,0x20(%rsp)
  0x00000200349a3348: mov    %r12,0x18(%rsp)
  0x00000200349a334d: mov    %r13,0x10(%rsp)
  0x00000200349a3352: mov    %r14,0x8(%rsp)
  0x00000200349a3357: mov    %r15,(%rsp)
  0x00000200349a335b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a3365: movabs $0x200349a3305,%rdx  ;   {internal_word}
  0x00000200349a336f: mov    %rsp,%r8
  0x00000200349a3372: and    $0xfffffffffffffff0,%rsp
  0x00000200349a3376: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a3380: callq  *%r10
  0x00000200349a3383: hlt    
[Deopt Handler Code]
  0x00000200349a3384: movabs $0x200349a3384,%r10  ;   {section_word}
  0x00000200349a338e: push   %r10
  0x00000200349a3390: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a3395: hlt    
  0x00000200349a3396: hlt    
  0x00000200349a3397: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 125 Compiled method (c1)     118    6       2       java.lang.String::hashCode (49 bytes)
 total in heap  [0x00000200349a3410,0x00000200349a3aa0] = 1680
 relocation     [0x00000200349a3588,0x00000200349a35c8] = 64
 main code      [0x00000200349a35e0,0x00000200349a3780] = 416
 stub code      [0x00000200349a3780,0x00000200349a3830] = 176
 metadata       [0x00000200349a3830,0x00000200349a3848] = 24
 scopes data    [0x00000200349a3848,0x00000200349a38f8] = 176
 scopes pcs     [0x00000200349a38f8,0x00000200349a3a88] = 400
 dependencies   [0x00000200349a3a88,0x00000200349a3a90] = 8
 nul chk table  [0x00000200349a3a90,0x00000200349a3aa0] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x00000200349a35e0, 0x00000200349a3830]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f195810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x00000200349a35e0: mov    0x8(%rdx),%r10d
  0x00000200349a35e4: shl    $0x3,%r10
  0x00000200349a35e8: cmp    %rax,%r10
  0x00000200349a35eb: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a35f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a35fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a3600: mov    %eax,-0x7000(%rsp)
  0x00000200349a3607: push   %rbp
  0x00000200349a3608: sub    $0x50,%rsp
  0x00000200349a360c: movabs $0x2004f2c1440,%rsi
  0x00000200349a3616: mov    0x18(%rsi),%edi
  0x00000200349a3619: add    $0x8,%edi
  0x00000200349a361c: mov    %edi,0x18(%rsi)
  0x00000200349a361f: and    $0x3ff8,%edi
  0x00000200349a3625: cmp    $0x0,%edi
  0x00000200349a3628: je     0x00000200349a36ff  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0

  0x00000200349a362e: mov    0x10(%rdx),%esi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x00000200349a3631: cmp    $0x0,%esi
  0x00000200349a3634: jne    0x00000200349a36ef  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x00000200349a363a: mov    0xc(%rdx),%edi
  0x00000200349a363d: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x00000200349a3641: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x00000200349a3720
  0x00000200349a3644: cmp    $0x0,%ebx
  0x00000200349a3647: jle    0x00000200349a36ef  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x00000200349a364d: movsbl 0x14(%rdx),%esi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x00000200349a3651: cmp    $0x0,%esi
  0x00000200349a3654: mov    $0x0,%esi
  0x00000200349a3659: jne    0x00000200349a3664
  0x00000200349a365f: mov    $0x1,%esi
  0x00000200349a3664: and    $0x1,%esi
  0x00000200349a3667: cmp    $0x0,%esi
  0x00000200349a366a: mov    %rdx,0x40(%rsp)
  0x00000200349a366f: je     0x00000200349a3689  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x00000200349a3675: mov    %rdi,%rdx          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29

  0x00000200349a3678: nopl   0x0(%rax)
  0x00000200349a367f: callq  0x0000020034437500  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29
                                                ;   {static_call}
  0x00000200349a3684: jmpq   0x00000200349a36e4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32

  0x00000200349a3689: sar    %ebx
  0x00000200349a368b: mov    $0x0,%eax
  0x00000200349a3690: mov    $0x0,%esi
  0x00000200349a3695: jmpq   0x00000200349a36dd  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@9
                                                ; - java.lang.String::hashCode@39

  0x00000200349a369a: nopw   0x0(%rax,%rax,1)
  0x00000200349a36a0: movslq %eax,%rdx
  0x00000200349a36a3: movzwl 0x10(%rdi,%rdx,2),%edx  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@20
                                                ; - java.lang.String::hashCode@39

  0x00000200349a36a8: mov    %rsi,%rcx
  0x00000200349a36ab: shl    $0x5,%esi
  0x00000200349a36ae: sub    %ecx,%esi
  0x00000200349a36b0: add    %edx,%esi
  0x00000200349a36b2: inc    %eax
  0x00000200349a36b4: movabs $0x2004f40a190,%rdx
  0x00000200349a36be: mov    0x1c(%rdx),%ecx
  0x00000200349a36c1: add    $0x8,%ecx
  0x00000200349a36c4: mov    %ecx,0x1c(%rdx)
  0x00000200349a36c7: and    $0x1fff8,%ecx
  0x00000200349a36cd: cmp    $0x0,%ecx
  0x00000200349a36d0: je     0x00000200349a3725  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x00000200349a36d6: mov    0x70(%r15),%r10    ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x00000200349a36da: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {poll}
  0x00000200349a36dd: cmp    %ebx,%eax
  0x00000200349a36df: jl     0x00000200349a36a0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@11
                                                ; - java.lang.String::hashCode@39

  0x00000200349a36e1: mov    %rsi,%rax          ;*dup {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@42

  0x00000200349a36e4: mov    0x40(%rsp),%rdx
  0x00000200349a36e9: mov    %eax,0x10(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44

  0x00000200349a36ec: mov    %rax,%rsi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47

  0x00000200349a36ef: mov    %rsi,%rax
  0x00000200349a36f2: add    $0x50,%rsp
  0x00000200349a36f6: pop    %rbp
  0x00000200349a36f7: mov    0x70(%r15),%r10
  0x00000200349a36fb: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a36fe: retq   
  0x00000200349a36ff: movabs $0x2004f195808,%r10  ;   {metadata({method} {0x000002004f195810} 'hashCode' '()I' in 'java/lang/String')}
  0x00000200349a3709: mov    %r10,0x8(%rsp)
  0x00000200349a370e: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a3716: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a371b: jmpq   0x00000200349a362e
  0x00000200349a3720: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a3725: movabs $0x2004f305698,%r10  ;   {metadata({method} {0x000002004f3056a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x00000200349a372f: mov    %r10,0x8(%rsp)
  0x00000200349a3734: movq   $0x1c,(%rsp)
  0x00000200349a373c: callq  0x0000020034501a80  ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a3741: jmp    0x00000200349a36d6
  0x00000200349a3743: nop
  0x00000200349a3744: nop
  0x00000200349a3745: mov    0x350(%r15),%rax
  0x00000200349a374c: movabs $0x0,%r10
  0x00000200349a3756: mov    %r10,0x350(%r15)
  0x00000200349a375d: movabs $0x0,%r10
  0x00000200349a3767: mov    %r10,0x358(%r15)
  0x00000200349a376e: add    $0x50,%rsp
  0x00000200349a3772: pop    %rbp
  0x00000200349a3773: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a3778: hlt    
  0x00000200349a3779: hlt    
  0x00000200349a377a: hlt    
  0x00000200349a377b: hlt    
  0x00000200349a377c: hlt    
  0x00000200349a377d: hlt    
  0x00000200349a377e: hlt    
  0x00000200349a377f: hlt    
[Stub Code]
  0x00000200349a3780: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349a3785: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a378f: jmpq   0x00000200349a378f  ;   {runtime_call}
[Exception Handler]
  0x00000200349a3794: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349a3799: mov    %rsp,-0x28(%rsp)
  0x00000200349a379e: sub    $0x80,%rsp
  0x00000200349a37a5: mov    %rax,0x78(%rsp)
  0x00000200349a37aa: mov    %rcx,0x70(%rsp)
  0x00000200349a37af: mov    %rdx,0x68(%rsp)
  0x00000200349a37b4: mov    %rbx,0x60(%rsp)
  0x00000200349a37b9: mov    %rbp,0x50(%rsp)
  0x00000200349a37be: mov    %rsi,0x48(%rsp)
  0x00000200349a37c3: mov    %rdi,0x40(%rsp)
  0x00000200349a37c8: mov    %r8,0x38(%rsp)
  0x00000200349a37cd: mov    %r9,0x30(%rsp)
  0x00000200349a37d2: mov    %r10,0x28(%rsp)
  0x00000200349a37d7: mov    %r11,0x20(%rsp)
  0x00000200349a37dc: mov    %r12,0x18(%rsp)
  0x00000200349a37e1: mov    %r13,0x10(%rsp)
  0x00000200349a37e6: mov    %r14,0x8(%rsp)
  0x00000200349a37eb: mov    %r15,(%rsp)
  0x00000200349a37ef: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a37f9: movabs $0x200349a3799,%rdx  ;   {internal_word}
  0x00000200349a3803: mov    %rsp,%r8
  0x00000200349a3806: and    $0xfffffffffffffff0,%rsp
  0x00000200349a380a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a3814: callq  *%r10
  0x00000200349a3817: hlt    
[Deopt Handler Code]
  0x00000200349a3818: movabs $0x200349a3818,%r10  ;   {section_word}
  0x00000200349a3822: push   %r10
  0x00000200349a3824: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a3829: hlt    
  0x00000200349a382a: hlt    
  0x00000200349a382b: hlt    
  0x00000200349a382c: hlt    
  0x00000200349a382d: hlt    
  0x00000200349a382e: hlt    
  0x00000200349a382f: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 164 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 250 
ImmutableOopMap{rdx=Oop }pc offsets: 315 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 325 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 353 Compiled method (c2)     121   34       4       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x000002003bed0a10,0x000002003bed0ea0] = 1168
 relocation     [0x000002003bed0b88,0x000002003bed0ba0] = 24
 main code      [0x000002003bed0ba0,0x000002003bed0c60] = 192
 stub code      [0x000002003bed0c60,0x000002003bed0c78] = 24
 metadata       [0x000002003bed0c78,0x000002003bed0c80] = 8
 scopes data    [0x000002003bed0c80,0x000002003bed0cf0] = 112
 scopes pcs     [0x000002003bed0cf0,0x000002003bed0e80] = 400
 dependencies   [0x000002003bed0e80,0x000002003bed0e88] = 8
 nul chk table  [0x000002003bed0e88,0x000002003bed0ea0] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x000002003bed0ba0, 0x000002003bed0c78]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f3f26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x20]  (sp of caller)
  0x000002003bed0ba0: mov    0x8(%rdx),%r10d
  0x000002003bed0ba4: shl    $0x3,%r10
  0x000002003bed0ba8: cmp    %r10,%rax
  0x000002003bed0bab: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x000002003bed0bb1: data16 xchg %ax,%ax
  0x000002003bed0bb4: nopl   0x0(%rax,%rax,1)
  0x000002003bed0bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002003bed0bc0: mov    %eax,-0x7000(%rsp)
  0x000002003bed0bc7: push   %rbp
  0x000002003bed0bc8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000002003bed0bcc: mov    0x10(%rdx),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x000002003bed0bd0: mov    0x10(%r12,%r10,8),%r11d  ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ; implicit exception: dispatches to 0x000002003bed0c3e
  0x000002003bed0bd5: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x000002003bed0c4a
  0x000002003bed0bda: mov    0xc(%rdx),%r9d     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x000002003bed0bde: cmp    %r10d,%r9d
  0x000002003bed0be1: jge    0x000002003bed0c19  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000002003bed0be3: cmp    %r10d,%r9d
  0x000002003bed0be6: jae    0x000002003bed0c2f
  0x000002003bed0be8: mov    %r10d,%r8d
  0x000002003bed0beb: dec    %r8d
  0x000002003bed0bee: cmp    %r10d,%r8d
  0x000002003bed0bf1: jae    0x000002003bed0c2f
  0x000002003bed0bf3: shl    $0x3,%r11          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000002003bed0bf7: mov    0x10(%r11,%r9,4),%r8d  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x000002003bed0bfc: test   %r8d,%r8d
  0x000002003bed0bff: jne    0x000002003bed0c1d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x000002003bed0c01: inc    %r9d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@38

  0x000002003bed0c04: mov    %r9d,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x000002003bed0c08: cmp    %r10d,%r9d
  0x000002003bed0c0b: jl     0x000002003bed0bf7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000002003bed0c0d: mov    0x70(%r15),%r8     ; ImmutableOopMap{r11=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000002003bed0c11: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {poll}
  0x000002003bed0c14: cmp    %r10d,%r9d
  0x000002003bed0c17: jl     0x000002003bed0bf7  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000002003bed0c19: xor    %eax,%eax
  0x000002003bed0c1b: jmp    0x000002003bed0c22  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000002003bed0c1d: mov    $0x1,%eax          ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000002003bed0c22: add    $0x10,%rsp
  0x000002003bed0c26: pop    %rbp
  0x000002003bed0c27: mov    0x70(%r15),%r10
  0x000002003bed0c2b: test   %eax,(%r10)        ;   {poll_return}
  0x000002003bed0c2e: retq   
  0x000002003bed0c2f: mov    %rdx,%rbp
  0x000002003bed0c32: mov    $0xffffff86,%edx
  0x000002003bed0c37: callq  0x0000020034438a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed0c3c: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000002003bed0c3e: mov    $0xfffffff6,%edx
  0x000002003bed0c43: callq  0x0000020034438a00  ; ImmutableOopMap{}
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed0c48: ud2                       ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x000002003bed0c4a: mov    $0xfffffff6,%edx
  0x000002003bed0c4f: callq  0x0000020034438a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed0c54: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000002003bed0c56: hlt    
  0x000002003bed0c57: hlt    
  0x000002003bed0c58: hlt    
  0x000002003bed0c59: hlt    
  0x000002003bed0c5a: hlt    
  0x000002003bed0c5b: hlt    
  0x000002003bed0c5c: hlt    
  0x000002003bed0c5d: hlt    
  0x000002003bed0c5e: hlt    
  0x000002003bed0c5f: hlt    
[Exception Handler]
[Stub Code]
  0x000002003bed0c60: jmpq   0x000002003446f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000002003bed0c65: callq  0x000002003bed0c6a
  0x000002003bed0c6a: subq   $0x5,(%rsp)
  0x000002003bed0c6f: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x000002003bed0c74: hlt    
  0x000002003bed0c75: hlt    
  0x000002003bed0c76: hlt    
  0x000002003bed0c77: hlt    

ImmutableOopMap{r11=Oop rdx=Oop }pc offsets: 113 
ImmutableOopMap{rbp=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 168 180 Compiled method (c1)     124   39       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000002003bed0f10,0x000002003bed1228] = 792
 relocation     [0x000002003bed1088,0x000002003bed10b0] = 40
 main code      [0x000002003bed10c0,0x000002003bed1140] = 128
 stub code      [0x000002003bed1140,0x000002003bed11d8] = 152
 metadata       [0x000002003bed11d8,0x000002003bed11e8] = 16
 scopes data    [0x000002003bed11e8,0x000002003bed11f0] = 8
 scopes pcs     [0x000002003bed11f0,0x000002003bed1220] = 48
 dependencies   [0x000002003bed1220,0x000002003bed1228] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000002003bed10c0, 0x000002003bed11d8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000002003bed10c0: mov    0x8(%rdx),%r10d
  0x000002003bed10c4: shl    $0x3,%r10
  0x000002003bed10c8: cmp    %rax,%r10
  0x000002003bed10cb: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x000002003bed10d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002003bed10dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002003bed10e0: mov    %eax,-0x7000(%rsp)
  0x000002003bed10e7: push   %rbp
  0x000002003bed10e8: sub    $0x30,%rsp         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000002003bed10ec: add    $0x30,%rsp
  0x000002003bed10f0: pop    %rbp
  0x000002003bed10f1: mov    0x70(%r15),%r10
  0x000002003bed10f5: test   %eax,(%r10)        ;   {poll_return}
  0x000002003bed10f8: retq   
  0x000002003bed10f9: nop
  0x000002003bed10fa: nop
  0x000002003bed10fb: mov    0x350(%r15),%rax
  0x000002003bed1102: movabs $0x0,%r10
  0x000002003bed110c: mov    %r10,0x350(%r15)
  0x000002003bed1113: movabs $0x0,%r10
  0x000002003bed111d: mov    %r10,0x358(%r15)
  0x000002003bed1124: add    $0x30,%rsp
  0x000002003bed1128: pop    %rbp
  0x000002003bed1129: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000002003bed112e: hlt    
  0x000002003bed112f: hlt    
  0x000002003bed1130: hlt    
  0x000002003bed1131: hlt    
  0x000002003bed1132: hlt    
  0x000002003bed1133: hlt    
  0x000002003bed1134: hlt    
  0x000002003bed1135: hlt    
  0x000002003bed1136: hlt    
  0x000002003bed1137: hlt    
  0x000002003bed1138: hlt    
  0x000002003bed1139: hlt    
  0x000002003bed113a: hlt    
  0x000002003bed113b: hlt    
  0x000002003bed113c: hlt    
  0x000002003bed113d: hlt    
  0x000002003bed113e: hlt    
  0x000002003bed113f: hlt    
[Exception Handler]
[Stub Code]
  0x000002003bed1140: callq  0x00000200344fe800  ;   {no_reloc}
  0x000002003bed1145: mov    %rsp,-0x28(%rsp)
  0x000002003bed114a: sub    $0x80,%rsp
  0x000002003bed1151: mov    %rax,0x78(%rsp)
  0x000002003bed1156: mov    %rcx,0x70(%rsp)
  0x000002003bed115b: mov    %rdx,0x68(%rsp)
  0x000002003bed1160: mov    %rbx,0x60(%rsp)
  0x000002003bed1165: mov    %rbp,0x50(%rsp)
  0x000002003bed116a: mov    %rsi,0x48(%rsp)
  0x000002003bed116f: mov    %rdi,0x40(%rsp)
  0x000002003bed1174: mov    %r8,0x38(%rsp)
  0x000002003bed1179: mov    %r9,0x30(%rsp)
  0x000002003bed117e: mov    %r10,0x28(%rsp)
  0x000002003bed1183: mov    %r11,0x20(%rsp)
  0x000002003bed1188: mov    %r12,0x18(%rsp)
  0x000002003bed118d: mov    %r13,0x10(%rsp)
  0x000002003bed1192: mov    %r14,0x8(%rsp)
  0x000002003bed1197: mov    %r15,(%rsp)
  0x000002003bed119b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x000002003bed11a5: movabs $0x2003bed1145,%rdx  ;   {internal_word}
  0x000002003bed11af: mov    %rsp,%r8
  0x000002003bed11b2: and    $0xfffffffffffffff0,%rsp
  0x000002003bed11b6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x000002003bed11c0: callq  *%r10
  0x000002003bed11c3: hlt    
[Deopt Handler Code]
  0x000002003bed11c4: movabs $0x2003bed11c4,%r10  ;   {section_word}
  0x000002003bed11ce: push   %r10
  0x000002003bed11d0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x000002003bed11d5: hlt    
  0x000002003bed11d6: hlt    
  0x000002003bed11d7: hlt    
Compiled method (c2)     125   47       4       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000002003bed1290,0x000002003bed1980] = 1776
 relocation     [0x000002003bed1408,0x000002003bed1420] = 24
 main code      [0x000002003bed1420,0x000002003bed1620] = 512
 stub code      [0x000002003bed1620,0x000002003bed1638] = 24
 metadata       [0x000002003bed1638,0x000002003bed1650] = 24
 scopes data    [0x000002003bed1650,0x000002003bed1738] = 232
 scopes pcs     [0x000002003bed1738,0x000002003bed1968] = 560
 dependencies   [0x000002003bed1968,0x000002003bed1970] = 8
 nul chk table  [0x000002003bed1970,0x000002003bed1980] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000002003bed1420, 0x000002003bed1638]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f195810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x000002003bed1420: mov    0x8(%rdx),%r10d
  0x000002003bed1424: shl    $0x3,%r10
  0x000002003bed1428: cmp    %r10,%rax
  0x000002003bed142b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x000002003bed1431: data16 xchg %ax,%ax
  0x000002003bed1434: nopl   0x0(%rax,%rax,1)
  0x000002003bed143c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002003bed1440: mov    %eax,-0x7000(%rsp)
  0x000002003bed1447: push   %rbp
  0x000002003bed1448: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x000002003bed144c: mov    %rdx,%r14
  0x000002003bed144f: mov    0x10(%rdx),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x000002003bed1452: test   %eax,%eax
  0x000002003bed1454: jne    0x000002003bed15a0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x000002003bed145a: mov    0xc(%rdx),%ecx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000002003bed145d: mov    0xc(%r12,%rcx,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; - java.lang.String::hashCode@29
                                                ; implicit exception: dispatches to 0x000002003bed15fa
  0x000002003bed1462: test   %r9d,%r9d
  0x000002003bed1465: jbe    0x000002003bed15c6  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000002003bed146b: movsbl 0x14(%rdx),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x000002003bed1470: test   %r10d,%r10d
  0x000002003bed1473: jne    0x000002003bed15da  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000002003bed1479: mov    %r9d,%r10d
  0x000002003bed147c: dec    %r10d
  0x000002003bed147f: cmp    %r9d,%r10d
  0x000002003bed1482: jae    0x000002003bed15ad
  0x000002003bed1488: movzbl 0x10(%r12,%rcx,8),%edi  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31
                                                ; - java.lang.String::hashCode@29

  0x000002003bed148e: mov    %r9d,%r11d
  0x000002003bed1491: add    $0xfffffff9,%r11d
  0x000002003bed1495: lea    (%r12,%rcx,8),%r8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000002003bed1499: mov    $0x1,%ebp
  0x000002003bed149e: cmp    $0x1,%r11d
  0x000002003bed14a2: jle    0x000002003bed1591
  0x000002003bed14a8: mov    %edi,%r10d
  0x000002003bed14ab: shl    $0x5,%r10d
  0x000002003bed14af: sub    %edi,%r10d         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14b2: jmp    0x000002003bed14d8  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14b4: movzbl 0x10(%r8,%rbp,1),%r10d
  0x000002003bed14ba: mov    %edi,%eax
  0x000002003bed14bc: shl    $0x5,%eax
  0x000002003bed14bf: sub    %edi,%eax
  0x000002003bed14c1: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14c4: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14c6: cmp    %r9d,%ebp
  0x000002003bed14c9: jge    0x000002003bed159c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14cf: mov    %eax,%edi
  0x000002003bed14d1: jmp    0x000002003bed14b4
  0x000002003bed14d3: vmovd  %xmm1,%r9d
  0x000002003bed14d8: vmovd  %r9d,%xmm1
  0x000002003bed14dd: data16 xchg %ax,%ax       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14e0: movslq %ebp,%rdx          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19
                                                ; - java.lang.String::hashCode@29

  0x000002003bed14e3: movzbl 0x10(%r8,%rdx,1),%r13d
  0x000002003bed14e9: movzbl 0x17(%r8,%rdx,1),%ecx
  0x000002003bed14ef: movzbl 0x11(%r8,%rdx,1),%eax
  0x000002003bed14f5: movzbl 0x16(%r8,%rdx,1),%r9d
  0x000002003bed14fb: movzbl 0x15(%r8,%rdx,1),%edi
  0x000002003bed1501: movzbl 0x14(%r8,%rdx,1),%ebx
  0x000002003bed1507: movzbl 0x13(%r8,%rdx,1),%esi
  0x000002003bed150d: movzbl 0x12(%r8,%rdx,1),%edx
  0x000002003bed1513: add    %r13d,%r10d
  0x000002003bed1516: mov    %r10d,%r13d
  0x000002003bed1519: shl    $0x5,%r13d
  0x000002003bed151d: sub    %r10d,%r13d
  0x000002003bed1520: add    %eax,%r13d
  0x000002003bed1523: mov    %r13d,%r10d
  0x000002003bed1526: shl    $0x5,%r10d
  0x000002003bed152a: sub    %r13d,%r10d
  0x000002003bed152d: add    %edx,%r10d
  0x000002003bed1530: mov    %r10d,%edx
  0x000002003bed1533: shl    $0x5,%edx
  0x000002003bed1536: sub    %r10d,%edx
  0x000002003bed1539: add    %esi,%edx
  0x000002003bed153b: mov    %edx,%esi
  0x000002003bed153d: shl    $0x5,%esi
  0x000002003bed1540: sub    %edx,%esi
  0x000002003bed1542: add    %ebx,%esi
  0x000002003bed1544: mov    %esi,%r10d
  0x000002003bed1547: shl    $0x5,%r10d
  0x000002003bed154b: sub    %esi,%r10d
  0x000002003bed154e: add    %edi,%r10d
  0x000002003bed1551: mov    %r10d,%ebx
  0x000002003bed1554: shl    $0x5,%ebx
  0x000002003bed1557: sub    %r10d,%ebx
  0x000002003bed155a: add    %r9d,%ebx
  0x000002003bed155d: mov    %ebx,%edi
  0x000002003bed155f: shl    $0x5,%edi
  0x000002003bed1562: sub    %ebx,%edi
  0x000002003bed1564: add    %ecx,%edi          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32
                                                ; - java.lang.String::hashCode@29

  0x000002003bed1566: mov    %edi,%r10d
  0x000002003bed1569: shl    $0x5,%r10d
  0x000002003bed156d: sub    %edi,%r10d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25
                                                ; - java.lang.String::hashCode@29

  0x000002003bed1570: add    $0x8,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34
                                                ; - java.lang.String::hashCode@29

  0x000002003bed1573: cmp    %r11d,%ebp
  0x000002003bed1576: jl     0x000002003bed14e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13
                                                ; - java.lang.String::hashCode@29

  0x000002003bed157c: mov    0x70(%r15),%r9     ; ImmutableOopMap{r8=Oop r14=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29

  0x000002003bed1580: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29
                                                ;   {poll}
  0x000002003bed1583: cmp    %r11d,%ebp
  0x000002003bed1586: jl     0x000002003bed14d3
  0x000002003bed158c: vmovd  %xmm1,%r9d
  0x000002003bed1591: cmp    %r9d,%ebp
  0x000002003bed1594: jl     0x000002003bed14b4
  0x000002003bed159a: mov    %edi,%eax
  0x000002003bed159c: mov    %eax,0x10(%r14)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x000002003bed15a0: add    $0x20,%rsp
  0x000002003bed15a4: pop    %rbp
  0x000002003bed15a5: mov    0x70(%r15),%r10
  0x000002003bed15a9: test   %eax,(%r10)        ;   {poll_return}
  0x000002003bed15ac: retq   
  0x000002003bed15ad: mov    $0xffffff86,%edx
  0x000002003bed15b2: mov    %r14,%rbp
  0x000002003bed15b5: mov    %ecx,(%rsp)
  0x000002003bed15b8: mov    %r9d,0x4(%rsp)
  0x000002003bed15bd: xchg   %ax,%ax
  0x000002003bed15bf: callq  0x0000020034438a00  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed15c4: ud2                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29

  0x000002003bed15c6: mov    $0xffffff55,%edx
  0x000002003bed15cb: mov    %r14,%rbp
  0x000002003bed15ce: mov    %r9d,(%rsp)
  0x000002003bed15d2: nop
  0x000002003bed15d3: callq  0x0000020034438a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed15d8: ud2                       ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000002003bed15da: test   %r10d,%r10d
  0x000002003bed15dd: setne  %bpl
  0x000002003bed15e1: movzbl %bpl,%ebp
  0x000002003bed15e5: xor    $0x1,%ebp          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::hashCode@19

  0x000002003bed15e8: mov    $0xffffff55,%edx
  0x000002003bed15ed: mov    %r14,0x8(%rsp)
  0x000002003bed15f2: nop
  0x000002003bed15f3: callq  0x0000020034438a00  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed15f8: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000002003bed15fa: mov    $0xfffffff6,%edx
  0x000002003bed15ff: callq  0x0000020034438a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call UncommonTrapBlob}
  0x000002003bed1604: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13

  0x000002003bed1606: hlt    
  0x000002003bed1607: hlt    
  0x000002003bed1608: hlt    
  0x000002003bed1609: hlt    
  0x000002003bed160a: hlt    
  0x000002003bed160b: hlt    
  0x000002003bed160c: hlt    
  0x000002003bed160d: hlt    
  0x000002003bed160e: hlt    
  0x000002003bed160f: hlt    
  0x000002003bed1610: hlt    
  0x000002003bed1611: hlt    
  0x000002003bed1612: hlt    
  0x000002003bed1613: hlt    
  0x000002003bed1614: hlt    
  0x000002003bed1615: hlt    
  0x000002003bed1616: hlt    
  0x000002003bed1617: hlt    
  0x000002003bed1618: hlt    
  0x000002003bed1619: hlt    
  0x000002003bed161a: hlt    
  0x000002003bed161b: hlt    
  0x000002003bed161c: hlt    
  0x000002003bed161d: hlt    
  0x000002003bed161e: hlt    
  0x000002003bed161f: hlt    
[Exception Handler]
[Stub Code]
  0x000002003bed1620: jmpq   0x000002003446f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000002003bed1625: callq  0x000002003bed162a
  0x000002003bed162a: subq   $0x5,(%rsp)
  0x000002003bed162f: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x000002003bed1634: hlt    
  0x000002003bed1635: hlt    
  0x000002003bed1636: hlt    
  0x000002003bed1637: hlt    

ImmutableOopMap{r8=Oop r14=Oop }pc offsets: 352 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 420 
ImmutableOopMap{rbp=Oop }pc offsets: 440 
ImmutableOopMap{[8]=Oop }pc offsets: 472 
ImmutableOopMap{}pc offsets: 484 Compiled method (c1)     131   42       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x00000200349a3b10,0x00000200349a5a68] = 8024
 relocation     [0x00000200349a3c88,0x00000200349a3dd0] = 328
 main code      [0x00000200349a3de0,0x00000200349a4f00] = 4384
 stub code      [0x00000200349a4f00,0x00000200349a5040] = 320
 metadata       [0x00000200349a5040,0x00000200349a5048] = 8
 scopes data    [0x00000200349a5048,0x00000200349a53e8] = 928
 scopes pcs     [0x00000200349a53e8,0x00000200349a59f8] = 1552
 dependencies   [0x00000200349a59f8,0x00000200349a5a00] = 8
 nul chk table  [0x00000200349a5a00,0x00000200349a5a68] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x00000200349a3de0, 0x00000200349a5040]  4704 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00000200349a3de0: mov    0x8(%rdx),%r10d
  0x00000200349a3de4: shl    $0x3,%r10
  0x00000200349a3de8: cmp    %rax,%r10
  0x00000200349a3deb: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a3df1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a3dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a3e00: mov    %eax,-0x7000(%rsp)
  0x00000200349a3e07: push   %rbp
  0x00000200349a3e08: sub    $0xa0,%rsp
  0x00000200349a3e0f: mov    %rdx,0x48(%rsp)
  0x00000200349a3e14: mov    %r8d,0x40(%rsp)
  0x00000200349a3e19: mov    %r9,0x50(%rsp)
  0x00000200349a3e1e: movabs $0x2004f408af0,%rbx  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3e28: mov    0xfc(%rbx),%eax
  0x00000200349a3e2e: add    $0x8,%eax
  0x00000200349a3e31: mov    %eax,0xfc(%rbx)
  0x00000200349a3e37: and    $0x1ff8,%eax
  0x00000200349a3e3d: cmp    $0x0,%eax
  0x00000200349a3e40: je     0x00000200349a4d66  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0

  0x00000200349a3e46: mov    0x24(%rdx),%ebx
  0x00000200349a3e49: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1

  0x00000200349a3e4d: cmp    $0x0,%rbx
  0x00000200349a3e51: movabs $0x2004f408af0,%rax  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3e5b: movabs $0x138,%r11
  0x00000200349a3e65: je     0x00000200349a3e75
  0x00000200349a3e6b: movabs $0x148,%r11
  0x00000200349a3e75: mov    (%rax,%r11,1),%r13
  0x00000200349a3e79: lea    0x1(%r13),%r13
  0x00000200349a3e7d: mov    %r13,(%rax,%r11,1)
  0x00000200349a3e81: je     0x00000200349a3ed5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7

  0x00000200349a3e87: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ; implicit exception: dispatches to 0x00000200349a4d87
  0x00000200349a3e8a: cmp    $0x0,%eax
  0x00000200349a3e8d: movabs $0x2004f408af0,%r11  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3e97: movabs $0x168,%r13
  0x00000200349a3ea1: je     0x00000200349a3eb1
  0x00000200349a3ea7: movabs $0x158,%r13
  0x00000200349a3eb1: mov    (%r11,%r13,1),%r14
  0x00000200349a3eb5: lea    0x1(%r14),%r14
  0x00000200349a3eb9: mov    %r14,(%r11,%r13,1)
  0x00000200349a3ebd: je     0x00000200349a3ed5  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16

  0x00000200349a3ec3: mov    %ecx,0x60(%rsp)
  0x00000200349a3ec7: mov    %esi,0x44(%rsp)
  0x00000200349a3ecb: mov    %rdi,0x58(%rsp)
  0x00000200349a3ed0: jmpq   0x00000200349a3f11  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x00000200349a3ed5: mov    %ecx,0x60(%rsp)
  0x00000200349a3ed9: mov    %esi,0x44(%rsp)
  0x00000200349a3edd: mov    %rdi,0x58(%rsp)
  0x00000200349a3ee2: mov    %rdx,%rbx
  0x00000200349a3ee5: movabs $0x2004f408af0,%rax  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3eef: addq   $0x1,0x178(%rax)
  0x00000200349a3ef7: mov    %rdx,%rbx
  0x00000200349a3efa: mov    %rbx,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x00000200349a3efd: xchg   %ax,%ax
  0x00000200349a3eff: callq  0x0000020034437000  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20
                                                ;   {optimized virtual_call}
  0x00000200349a3f04: mov    %rax,%r8           ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x00000200349a3f07: mov    0xc(%r8),%r9d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ; implicit exception: dispatches to 0x00000200349a4d8c
  0x00000200349a3f0b: mov    %r9,%rax
  0x00000200349a3f0e: mov    %r8,%rbx           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x00000200349a3f11: dec    %eax
  0x00000200349a3f13: and    0x40(%rsp),%eax
  0x00000200349a3f17: movslq %eax,%r8
  0x00000200349a3f1a: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00000200349a4d91
  0x00000200349a3f1d: jae    0x00000200349a4d9b
  0x00000200349a3f23: mov    0x10(%rbx,%r8,4),%esi
  0x00000200349a3f28: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40

  0x00000200349a3f2c: cmp    $0x0,%rsi
  0x00000200349a3f30: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3f3a: movabs $0x1b0,%r9
  0x00000200349a3f44: jne    0x00000200349a3f54
  0x00000200349a3f4a: movabs $0x1c0,%r9
  0x00000200349a3f54: mov    (%r8,%r9,1),%rdi
  0x00000200349a3f58: lea    0x1(%rdi),%rdi
  0x00000200349a3f5c: mov    %rdi,(%r8,%r9,1)
  0x00000200349a3f60: jne    0x00000200349a419f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44

  0x00000200349a3f66: mov    %eax,0x64(%rsp)
  0x00000200349a3f6a: mov    %rbx,0x68(%rsp)
  0x00000200349a3f6f: mov    0x48(%rsp),%rdx
  0x00000200349a3f74: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a3f7e: mov    0x8(%rdx),%edx
  0x00000200349a3f81: shl    $0x3,%rdx
  0x00000200349a3f85: cmp    0x1e0(%r8),%rdx
  0x00000200349a3f8c: jne    0x00000200349a3f9b
  0x00000200349a3f8e: addq   $0x1,0x1e8(%r8)
  0x00000200349a3f96: jmpq   0x00000200349a4001
  0x00000200349a3f9b: cmp    0x1f0(%r8),%rdx
  0x00000200349a3fa2: jne    0x00000200349a3fb1
  0x00000200349a3fa4: addq   $0x1,0x1f8(%r8)
  0x00000200349a3fac: jmpq   0x00000200349a4001
  0x00000200349a3fb1: cmpq   $0x0,0x1e0(%r8)
  0x00000200349a3fbc: jne    0x00000200349a3fd5
  0x00000200349a3fbe: mov    %rdx,0x1e0(%r8)
  0x00000200349a3fc5: movq   $0x1,0x1e8(%r8)
  0x00000200349a3fd0: jmpq   0x00000200349a4001
  0x00000200349a3fd5: cmpq   $0x0,0x1f0(%r8)
  0x00000200349a3fe0: jne    0x00000200349a3ff9
  0x00000200349a3fe2: mov    %rdx,0x1f0(%r8)
  0x00000200349a3fe9: movq   $0x1,0x1f8(%r8)
  0x00000200349a3ff4: jmpq   0x00000200349a4001
  0x00000200349a3ff9: addq   $0x1,0x1d0(%r8)
  0x00000200349a4001: mov    0x40(%rsp),%r8d
  0x00000200349a4006: mov    0x50(%rsp),%r9
  0x00000200349a400b: mov    0x58(%rsp),%rdi
  0x00000200349a4010: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000200349a401a: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56

  0x00000200349a401f: nopw   0x0(%rax,%rax,1)
  0x00000200349a4025: movabs $0xffffffffffffffff,%rax
  0x00000200349a402f: callq  0x0000020034438c20  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56
                                                ;   {virtual_call}
  0x00000200349a4034: mov    0x64(%rsp),%r8d
  0x00000200349a4039: movslq %r8d,%rdx
  0x00000200349a403c: mov    0x68(%rsp),%rbx
  0x00000200349a4041: lea    0x10(%rbx,%rdx,4),%rdx
  0x00000200349a4046: cmp    0xc(%rbx),%r8d
  0x00000200349a404a: jae    0x00000200349a4da4
  0x00000200349a4050: cmp    $0x0,%rax
  0x00000200349a4054: jne    0x00000200349a406f
  0x00000200349a4056: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4060: orl    $0x100,0x200(%rsi)
  0x00000200349a406a: jmpq   0x00000200349a4159
  0x00000200349a406f: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x00000200349a4dad
  0x00000200349a4073: shl    $0x3,%r8
  0x00000200349a4077: mov    0x8(%rax),%esi
  0x00000200349a407a: shl    $0x3,%rsi
  0x00000200349a407e: mov    0xe0(%r8),%r8
  0x00000200349a4085: cmp    %r8,%rsi
  0x00000200349a4088: je     0x00000200349a40ba
  0x00000200349a408e: mov    0xc(%r8),%edi
  0x00000200349a4092: cmp    (%rsi,%rdi,1),%r8
  0x00000200349a4096: je     0x00000200349a40ba
  0x00000200349a409c: cmp    $0x18,%edi
  0x00000200349a409f: jne    0x00000200349a4142
  0x00000200349a40a5: push   %rsi
  0x00000200349a40a6: push   %r8
  0x00000200349a40a8: callq  0x00000200344ff180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00000200349a40ad: pop    %rsi
  0x00000200349a40ae: pop    %r8
  0x00000200349a40b0: cmp    $0x0,%r8d
  0x00000200349a40b4: je     0x00000200349a4142
  0x00000200349a40ba: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a40c4: mov    0x8(%rax),%r8d
  0x00000200349a40c8: shl    $0x3,%r8
  0x00000200349a40cc: cmp    0x218(%rsi),%r8
  0x00000200349a40d3: jne    0x00000200349a40e2
  0x00000200349a40d5: addq   $0x1,0x220(%rsi)
  0x00000200349a40dd: jmpq   0x00000200349a4159
  0x00000200349a40e2: cmp    0x228(%rsi),%r8
  0x00000200349a40e9: jne    0x00000200349a40f8
  0x00000200349a40eb: addq   $0x1,0x230(%rsi)
  0x00000200349a40f3: jmpq   0x00000200349a4159
  0x00000200349a40f8: cmpq   $0x0,0x218(%rsi)
  0x00000200349a4103: jne    0x00000200349a411c
  0x00000200349a4105: mov    %r8,0x218(%rsi)
  0x00000200349a410c: movq   $0x1,0x220(%rsi)
  0x00000200349a4117: jmpq   0x00000200349a4159
  0x00000200349a411c: cmpq   $0x0,0x228(%rsi)
  0x00000200349a4127: jne    0x00000200349a4140
  0x00000200349a4129: mov    %r8,0x228(%rsi)
  0x00000200349a4130: movq   $0x1,0x230(%rsi)
  0x00000200349a413b: jmpq   0x00000200349a4159
  0x00000200349a4140: jmp    0x00000200349a4159
  0x00000200349a4142: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a414c: subq   $0x1,0x208(%rsi)
  0x00000200349a4154: jmpq   0x00000200349a4db2
  0x00000200349a4159: movsbl 0x398(%r15),%r8d
  0x00000200349a4161: cmp    $0x0,%r8d
  0x00000200349a4165: jne    0x00000200349a4dbb
  0x00000200349a416b: mov    %rax,%r10
  0x00000200349a416e: shr    $0x3,%r10
  0x00000200349a4172: mov    %r10d,(%rdx)
  0x00000200349a4175: mov    %rdx,%r8
  0x00000200349a4178: xor    %rax,%r8
  0x00000200349a417b: shr    $0x14,%r8
  0x00000200349a417f: cmp    $0x0,%r8
  0x00000200349a4183: jne    0x00000200349a4dda  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59

  0x00000200349a4189: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4193: incl   0x240(%r8)
  0x00000200349a419a: jmpq   0x00000200349a4aa0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60

  0x00000200349a419f: mov    0xc(%rsi),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ; implicit exception: dispatches to 0x00000200349a4df2
  0x00000200349a41a3: cmp    0x40(%rsp),%r8d
  0x00000200349a41a8: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a41b2: movabs $0x268,%rdx
  0x00000200349a41bc: je     0x00000200349a41cc
  0x00000200349a41c2: movabs $0x258,%rdx
  0x00000200349a41cc: mov    (%r8,%rdx,1),%rdi
  0x00000200349a41d0: lea    0x1(%rdi),%rdi
  0x00000200349a41d4: mov    %rdi,(%r8,%rdx,1)
  0x00000200349a41d8: je     0x00000200349a41e8  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69

  0x00000200349a41de: mov    %rbx,0x68(%rsp)
  0x00000200349a41e3: jmpq   0x00000200349a4362  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x00000200349a41e8: mov    0x50(%rsp),%r9
  0x00000200349a41ed: mov    0x10(%rsi),%r8d
  0x00000200349a41f1: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74

  0x00000200349a41f5: cmp    %r9,%r8
  0x00000200349a41f8: movabs $0x2004f408af0,%rdx  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4202: movabs $0x278,%rdi
  0x00000200349a420c: je     0x00000200349a421c
  0x00000200349a4212: movabs $0x288,%rdi
  0x00000200349a421c: mov    (%rdx,%rdi,1),%rax
  0x00000200349a4220: lea    0x1(%rax),%rax
  0x00000200349a4224: mov    %rax,(%rdx,%rdi,1)
  0x00000200349a4228: je     0x00000200349a4a52  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81

  0x00000200349a422e: cmp    $0x0,%r9
  0x00000200349a4232: movabs $0x2004f408af0,%rdx  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a423c: movabs $0x2a8,%rdi
  0x00000200349a4246: jne    0x00000200349a4256
  0x00000200349a424c: movabs $0x298,%rdi
  0x00000200349a4256: mov    (%rdx,%rdi,1),%rax
  0x00000200349a425a: lea    0x1(%rax),%rax
  0x00000200349a425e: mov    %rax,(%rdx,%rdi,1)
  0x00000200349a4262: jne    0x00000200349a4272  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85

  0x00000200349a4268: mov    %rbx,0x68(%rsp)
  0x00000200349a426d: jmpq   0x00000200349a4362  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x00000200349a4272: mov    %rsi,0x70(%rsp)
  0x00000200349a4277: mov    %rbx,0x68(%rsp)
  0x00000200349a427c: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000200349a4df7
  0x00000200349a427f: mov    %r9,%rdx
  0x00000200349a4282: movabs $0x2004f408af0,%rdi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a428c: mov    0x8(%rdx),%edx
  0x00000200349a428f: shl    $0x3,%rdx
  0x00000200349a4293: cmp    0x2c8(%rdi),%rdx
  0x00000200349a429a: jne    0x00000200349a42a9
  0x00000200349a429c: addq   $0x1,0x2d0(%rdi)
  0x00000200349a42a4: jmpq   0x00000200349a430f
  0x00000200349a42a9: cmp    0x2d8(%rdi),%rdx
  0x00000200349a42b0: jne    0x00000200349a42bf
  0x00000200349a42b2: addq   $0x1,0x2e0(%rdi)
  0x00000200349a42ba: jmpq   0x00000200349a430f
  0x00000200349a42bf: cmpq   $0x0,0x2c8(%rdi)
  0x00000200349a42ca: jne    0x00000200349a42e3
  0x00000200349a42cc: mov    %rdx,0x2c8(%rdi)
  0x00000200349a42d3: movq   $0x1,0x2d0(%rdi)
  0x00000200349a42de: jmpq   0x00000200349a430f
  0x00000200349a42e3: cmpq   $0x0,0x2d8(%rdi)
  0x00000200349a42ee: jne    0x00000200349a4307
  0x00000200349a42f0: mov    %rdx,0x2d8(%rdi)
  0x00000200349a42f7: movq   $0x1,0x2e0(%rdi)
  0x00000200349a4302: jmpq   0x00000200349a430f
  0x00000200349a4307: addq   $0x1,0x2b8(%rdi)
  0x00000200349a430f: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91

  0x00000200349a4312: data16 xchg %ax,%ax
  0x00000200349a4315: movabs $0xffffffffffffffff,%rax
  0x00000200349a431f: callq  0x0000020034437280  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {virtual_call}
  0x00000200349a4324: cmp    $0x0,%eax
  0x00000200349a4327: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4331: movabs $0x300,%r9
  0x00000200349a433b: jne    0x00000200349a434b
  0x00000200349a4341: movabs $0x2f0,%r9
  0x00000200349a434b: mov    (%r8,%r9,1),%rdi
  0x00000200349a434f: lea    0x1(%rdi),%rdi
  0x00000200349a4353: mov    %rdi,(%r8,%r9,1)
  0x00000200349a4357: mov    0x70(%rsp),%rsi
  0x00000200349a435c: jne    0x00000200349a4a52  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94

  0x00000200349a4362: cmp    $0x0,%rsi
  0x00000200349a4366: jne    0x00000200349a4381
  0x00000200349a4368: movabs $0x2004f408af0,%rdi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4372: orl    $0x100,0x320(%rdi)
  0x00000200349a437c: jmpq   0x00000200349a4442
  0x00000200349a4381: movabs $0x7c0037bc8,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000200349a438b: mov    0x8(%rsi),%r9d
  0x00000200349a438f: shl    $0x3,%r9
  0x00000200349a4393: cmp    %r9,%rcx
  0x00000200349a4396: jne    0x00000200349a4426
  0x00000200349a439c: movabs $0x2004f408af0,%rdi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a43a6: mov    0x8(%rsi),%ecx
  0x00000200349a43a9: shl    $0x3,%rcx
  0x00000200349a43ad: cmp    0x338(%rdi),%rcx
  0x00000200349a43b4: jne    0x00000200349a43c3
  0x00000200349a43b6: addq   $0x1,0x340(%rdi)
  0x00000200349a43be: jmpq   0x00000200349a4447
  0x00000200349a43c3: cmp    0x348(%rdi),%rcx
  0x00000200349a43ca: jne    0x00000200349a43d9
  0x00000200349a43cc: addq   $0x1,0x350(%rdi)
  0x00000200349a43d4: jmpq   0x00000200349a4447
  0x00000200349a43d9: cmpq   $0x0,0x338(%rdi)
  0x00000200349a43e4: jne    0x00000200349a43fd
  0x00000200349a43e6: mov    %rcx,0x338(%rdi)
  0x00000200349a43ed: movq   $0x1,0x340(%rdi)
  0x00000200349a43f8: jmpq   0x00000200349a4447
  0x00000200349a43fd: cmpq   $0x0,0x348(%rdi)
  0x00000200349a4408: jne    0x00000200349a4421
  0x00000200349a440a: mov    %rcx,0x348(%rdi)
  0x00000200349a4411: movq   $0x1,0x350(%rdi)
  0x00000200349a441c: jmpq   0x00000200349a4447
  0x00000200349a4421: jmpq   0x00000200349a4447
  0x00000200349a4426: movabs $0x2004f408af0,%rdi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4430: subq   $0x1,0x328(%rdi)
  0x00000200349a4438: jmpq   0x00000200349a4442
  0x00000200349a443d: jmpq   0x00000200349a4447
  0x00000200349a4442: xor    %r8,%r8
  0x00000200349a4445: jmp    0x00000200349a4451
  0x00000200349a4447: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106

  0x00000200349a4451: cmp    $0x0,%r8d
  0x00000200349a4455: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a445f: movabs $0x360,%r9
  0x00000200349a4469: je     0x00000200349a4479
  0x00000200349a446f: movabs $0x370,%r9
  0x00000200349a4479: mov    (%r8,%r9,1),%rdi
  0x00000200349a447d: lea    0x1(%rdi),%rdi
  0x00000200349a4481: mov    %rdi,(%r8,%r9,1)
  0x00000200349a4485: je     0x00000200349a463a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109

  0x00000200349a448b: cmp    $0x0,%rsi
  0x00000200349a448f: jne    0x00000200349a44ab
  0x00000200349a4491: movabs $0x2004f408af0,%r9  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a449b: orl    $0x100,0x378(%r9)
  0x00000200349a44a6: jmpq   0x00000200349a456c
  0x00000200349a44ab: movabs $0x7c0037bc8,%rdi  ;   {metadata('java/util/HashMap$TreeNode')}
  0x00000200349a44b5: mov    0x8(%rsi),%r8d
  0x00000200349a44b9: shl    $0x3,%r8
  0x00000200349a44bd: cmp    %r8,%rdi
  0x00000200349a44c0: jne    0x00000200349a4550
  0x00000200349a44c6: movabs $0x2004f408af0,%r9  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a44d0: mov    0x8(%rsi),%edi
  0x00000200349a44d3: shl    $0x3,%rdi
  0x00000200349a44d7: cmp    0x390(%r9),%rdi
  0x00000200349a44de: jne    0x00000200349a44ed
  0x00000200349a44e0: addq   $0x1,0x398(%r9)
  0x00000200349a44e8: jmpq   0x00000200349a456c
  0x00000200349a44ed: cmp    0x3a0(%r9),%rdi
  0x00000200349a44f4: jne    0x00000200349a4503
  0x00000200349a44f6: addq   $0x1,0x3a8(%r9)
  0x00000200349a44fe: jmpq   0x00000200349a456c
  0x00000200349a4503: cmpq   $0x0,0x390(%r9)
  0x00000200349a450e: jne    0x00000200349a4527
  0x00000200349a4510: mov    %rdi,0x390(%r9)
  0x00000200349a4517: movq   $0x1,0x398(%r9)
  0x00000200349a4522: jmpq   0x00000200349a456c
  0x00000200349a4527: cmpq   $0x0,0x3a0(%r9)
  0x00000200349a4532: jne    0x00000200349a454b
  0x00000200349a4534: mov    %rdi,0x3a0(%r9)
  0x00000200349a453b: movq   $0x1,0x3a8(%r9)
  0x00000200349a4546: jmpq   0x00000200349a456c
  0x00000200349a454b: jmpq   0x00000200349a456c
  0x00000200349a4550: movabs $0x2004f408af0,%r9  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a455a: subq   $0x1,0x380(%r9)
  0x00000200349a4562: jmpq   0x00000200349a4dfc
  0x00000200349a4567: jmpq   0x00000200349a456c
  0x00000200349a456c: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114

  0x00000200349a456f: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000200349a4e05
  0x00000200349a4572: mov    %rdx,%r8
  0x00000200349a4575: movabs $0x2004f408af0,%r9  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a457f: mov    0x8(%r8),%r8d
  0x00000200349a4583: shl    $0x3,%r8
  0x00000200349a4587: cmp    0x3c8(%r9),%r8
  0x00000200349a458e: jne    0x00000200349a459d
  0x00000200349a4590: addq   $0x1,0x3d0(%r9)
  0x00000200349a4598: jmpq   0x00000200349a4603
  0x00000200349a459d: cmp    0x3d8(%r9),%r8
  0x00000200349a45a4: jne    0x00000200349a45b3
  0x00000200349a45a6: addq   $0x1,0x3e0(%r9)
  0x00000200349a45ae: jmpq   0x00000200349a4603
  0x00000200349a45b3: cmpq   $0x0,0x3c8(%r9)
  0x00000200349a45be: jne    0x00000200349a45d7
  0x00000200349a45c0: mov    %r8,0x3c8(%r9)
  0x00000200349a45c7: movq   $0x1,0x3d0(%r9)
  0x00000200349a45d2: jmpq   0x00000200349a4603
  0x00000200349a45d7: cmpq   $0x0,0x3d8(%r9)
  0x00000200349a45e2: jne    0x00000200349a45fb
  0x00000200349a45e4: mov    %r8,0x3d8(%r9)
  0x00000200349a45eb: movq   $0x1,0x3e0(%r9)
  0x00000200349a45f6: jmpq   0x00000200349a4603
  0x00000200349a45fb: addq   $0x1,0x3b8(%r9)
  0x00000200349a4603: mov    0x48(%rsp),%r8
  0x00000200349a4608: mov    0x68(%rsp),%r9
  0x00000200349a460d: mov    0x40(%rsp),%edi
  0x00000200349a4611: mov    0x50(%rsp),%rsi
  0x00000200349a4616: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123

  0x00000200349a461b: nopl   0x0(%rax)
  0x00000200349a461f: callq  0x0000020034437000  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {optimized virtual_call}
  0x00000200349a4624: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a462e: incl   0x3f0(%r8)
  0x00000200349a4635: jmpq   0x00000200349a4a66  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128

  0x00000200349a463a: mov    $0x0,%edi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134

  0x00000200349a463f: nop
  0x00000200349a4640: mov    %edi,0x78(%rsp)
  0x00000200349a4644: mov    0x50(%rsp),%r9
  0x00000200349a4649: mov    0x40(%rsp),%r8d
  0x00000200349a464e: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x00000200349a4e0a
  0x00000200349a4651: shl    $0x3,%rbx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136

  0x00000200349a4655: mov    %rbx,0x80(%rsp)
  0x00000200349a465d: cmp    $0x0,%rbx
  0x00000200349a4661: movabs $0x2004f408af0,%rdx  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a466b: movabs $0x418,%rax
  0x00000200349a4675: je     0x00000200349a4685
  0x00000200349a467b: movabs $0x408,%rax
  0x00000200349a4685: mov    (%rdx,%rax,1),%rcx
  0x00000200349a4689: lea    0x1(%rcx),%rcx
  0x00000200349a468d: mov    %rcx,(%rdx,%rax,1)
  0x00000200349a4691: je     0x00000200349a48b8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142

  0x00000200349a4697: mov    0xc(%rbx),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ; implicit exception: dispatches to 0x00000200349a4e0f
  0x00000200349a469a: cmp    %r8d,%edx
  0x00000200349a469d: movabs $0x2004f408af0,%rdx  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a46a7: movabs $0x4d0,%rsi
  0x00000200349a46b1: jne    0x00000200349a46c1
  0x00000200349a46b7: movabs $0x4e0,%rsi
  0x00000200349a46c1: mov    (%rdx,%rsi,1),%rax
  0x00000200349a46c5: lea    0x1(%rax),%rax
  0x00000200349a46c9: mov    %rax,(%rdx,%rsi,1)
  0x00000200349a46cd: jne    0x00000200349a4835  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181

  0x00000200349a46d3: mov    0x10(%rbx),%edx
  0x00000200349a46d6: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186

  0x00000200349a46da: cmp    %r9,%rdx
  0x00000200349a46dd: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a46e7: movabs $0x4f0,%rax
  0x00000200349a46f1: je     0x00000200349a4701
  0x00000200349a46f7: movabs $0x500,%rax
  0x00000200349a4701: mov    (%rsi,%rax,1),%rcx
  0x00000200349a4705: lea    0x1(%rcx),%rcx
  0x00000200349a4709: mov    %rcx,(%rsi,%rax,1)
  0x00000200349a470d: je     0x00000200349a488d  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193

  0x00000200349a4713: cmp    $0x0,%r9
  0x00000200349a4717: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4721: movabs $0x510,%rax
  0x00000200349a472b: je     0x00000200349a473b
  0x00000200349a4731: movabs $0x520,%rax
  0x00000200349a473b: mov    (%rsi,%rax,1),%rcx
  0x00000200349a473f: lea    0x1(%rcx),%rcx
  0x00000200349a4743: mov    %rcx,(%rsi,%rax,1)
  0x00000200349a4747: je     0x00000200349a4835  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197

  0x00000200349a474d: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000200349a4e14
  0x00000200349a4750: mov    %r9,%rsi
  0x00000200349a4753: movabs $0x2004f408af0,%rax  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a475d: mov    0x8(%rsi),%esi
  0x00000200349a4760: shl    $0x3,%rsi
  0x00000200349a4764: cmp    0x540(%rax),%rsi
  0x00000200349a476b: jne    0x00000200349a477a
  0x00000200349a476d: addq   $0x1,0x548(%rax)
  0x00000200349a4775: jmpq   0x00000200349a47e0
  0x00000200349a477a: cmp    0x550(%rax),%rsi
  0x00000200349a4781: jne    0x00000200349a4790
  0x00000200349a4783: addq   $0x1,0x558(%rax)
  0x00000200349a478b: jmpq   0x00000200349a47e0
  0x00000200349a4790: cmpq   $0x0,0x540(%rax)
  0x00000200349a479b: jne    0x00000200349a47b4
  0x00000200349a479d: mov    %rsi,0x540(%rax)
  0x00000200349a47a4: movq   $0x1,0x548(%rax)
  0x00000200349a47af: jmpq   0x00000200349a47e0
  0x00000200349a47b4: cmpq   $0x0,0x550(%rax)
  0x00000200349a47bf: jne    0x00000200349a47d8
  0x00000200349a47c1: mov    %rsi,0x550(%rax)
  0x00000200349a47c8: movq   $0x1,0x558(%rax)
  0x00000200349a47d3: jmpq   0x00000200349a47e0
  0x00000200349a47d8: addq   $0x1,0x530(%rax)
  0x00000200349a47e0: mov    %rdx,%r8
  0x00000200349a47e3: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203

  0x00000200349a47e6: nopl   0x0(%rax)
  0x00000200349a47ed: movabs $0xffffffffffffffff,%rax
  0x00000200349a47f7: callq  0x0000020034437280  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {virtual_call}
  0x00000200349a47fc: cmp    $0x0,%eax
  0x00000200349a47ff: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4809: movabs $0x578,%r9
  0x00000200349a4813: jne    0x00000200349a4823
  0x00000200349a4819: movabs $0x568,%r9
  0x00000200349a4823: mov    (%r8,%r9,1),%rdi
  0x00000200349a4827: lea    0x1(%rdi),%rdi
  0x00000200349a482b: mov    %rdi,(%r8,%r9,1)
  0x00000200349a482f: jne    0x00000200349a489a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206

  0x00000200349a4835: mov    0x78(%rsp),%edi
  0x00000200349a4839: inc    %edi
  0x00000200349a483b: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4845: mov    0x100(%r8),%r9d
  0x00000200349a484c: add    $0x8,%r9d
  0x00000200349a4850: mov    %r9d,0x100(%r8)
  0x00000200349a4857: and    $0xfff8,%r9d
  0x00000200349a485e: cmp    $0x0,%r9d
  0x00000200349a4862: je     0x00000200349a4e19  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x00000200349a4868: mov    0x70(%r15),%r10    ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x00000200349a486c: test   %eax,(%r10)        ;   {poll}
  0x00000200349a486f: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4879: incl   0x5a0(%r8)
  0x00000200349a4880: mov    0x80(%rsp),%rsi
  0x00000200349a4888: jmpq   0x00000200349a4640  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x00000200349a488d: mov    0x80(%rsp),%rax
  0x00000200349a4895: jmpq   0x00000200349a4a66  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x00000200349a489a: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a48a4: incl   0x588(%r8)
  0x00000200349a48ab: mov    0x80(%rsp),%rax
  0x00000200349a48b3: jmpq   0x00000200349a4a66  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209

  0x00000200349a48b8: mov    %rsi,0x88(%rsp)
  0x00000200349a48c0: mov    0x48(%rsp),%rdx
  0x00000200349a48c5: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a48cf: mov    0x8(%rdx),%edx
  0x00000200349a48d2: shl    $0x3,%rdx
  0x00000200349a48d6: cmp    0x438(%r8),%rdx
  0x00000200349a48dd: jne    0x00000200349a48ec
  0x00000200349a48df: addq   $0x1,0x440(%r8)
  0x00000200349a48e7: jmpq   0x00000200349a4952
  0x00000200349a48ec: cmp    0x448(%r8),%rdx
  0x00000200349a48f3: jne    0x00000200349a4902
  0x00000200349a48f5: addq   $0x1,0x450(%r8)
  0x00000200349a48fd: jmpq   0x00000200349a4952
  0x00000200349a4902: cmpq   $0x0,0x438(%r8)
  0x00000200349a490d: jne    0x00000200349a4926
  0x00000200349a490f: mov    %rdx,0x438(%r8)
  0x00000200349a4916: movq   $0x1,0x440(%r8)
  0x00000200349a4921: jmpq   0x00000200349a4952
  0x00000200349a4926: cmpq   $0x0,0x448(%r8)
  0x00000200349a4931: jne    0x00000200349a494a
  0x00000200349a4933: mov    %rdx,0x448(%r8)
  0x00000200349a493a: movq   $0x1,0x450(%r8)
  0x00000200349a4945: jmpq   0x00000200349a4952
  0x00000200349a494a: addq   $0x1,0x428(%r8)
  0x00000200349a4952: mov    0x40(%rsp),%r8d
  0x00000200349a4957: mov    0x58(%rsp),%rdi
  0x00000200349a495c: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000200349a4966: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152

  0x00000200349a496b: xchg   %ax,%ax
  0x00000200349a496d: movabs $0xffffffffffffffff,%rax
  0x00000200349a4977: callq  0x0000020034437280  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152
                                                ;   {virtual_call}
  0x00000200349a497c: movsbl 0x398(%r15),%r8d
  0x00000200349a4984: cmp    $0x0,%r8d
  0x00000200349a4988: mov    0x88(%rsp),%rsi
  0x00000200349a4990: jne    0x00000200349a4e3a
  0x00000200349a4996: mov    %rax,%r10
  0x00000200349a4999: shr    $0x3,%r10
  0x00000200349a499d: mov    %r10d,0x18(%rsi)
  0x00000200349a49a1: mov    %rsi,%r8
  0x00000200349a49a4: xor    %rax,%r8
  0x00000200349a49a7: shr    $0x14,%r8
  0x00000200349a49ab: cmp    $0x0,%r8
  0x00000200349a49af: jne    0x00000200349a4e5a  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155

  0x00000200349a49b5: mov    0x78(%rsp),%edi
  0x00000200349a49b9: cmp    $0x7,%edi
  0x00000200349a49bc: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a49c6: movabs $0x470,%r9
  0x00000200349a49d0: jge    0x00000200349a49e0
  0x00000200349a49d6: movabs $0x460,%r9
  0x00000200349a49e0: mov    (%r8,%r9,1),%rdx
  0x00000200349a49e4: lea    0x1(%rdx),%rdx
  0x00000200349a49e8: mov    %rdx,(%r8,%r9,1)
  0x00000200349a49ec: jge    0x00000200349a49ff  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162

  0x00000200349a49f2: mov    0x80(%rsp),%rax
  0x00000200349a49fa: jmpq   0x00000200349a4a66  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x00000200349a49ff: mov    0x68(%rsp),%rbx
  0x00000200349a4a04: mov    0x40(%rsp),%r9d
  0x00000200349a4a09: mov    0x48(%rsp),%rdx
  0x00000200349a4a0e: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4a18: addq   $0x1,0x480(%r8)
  0x00000200349a4a20: mov    %rbx,%r8
  0x00000200349a4a23: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169

  0x00000200349a4a28: nopl   0x0(%rax)
  0x00000200349a4a2f: callq  0x0000020034437000  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169
                                                ;   {optimized virtual_call}
  0x00000200349a4a34: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4a3e: incl   0x4b8(%r8)
  0x00000200349a4a45: mov    0x80(%rsp),%rax
  0x00000200349a4a4d: jmpq   0x00000200349a4a66  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172

  0x00000200349a4a52: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4a5c: incl   0x310(%r8)
  0x00000200349a4a63: mov    %rsi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101

  0x00000200349a4a66: cmp    $0x0,%rax
  0x00000200349a4a6a: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4a74: movabs $0x5c8,%rdx
  0x00000200349a4a7e: jne    0x00000200349a4a8e
  0x00000200349a4a84: movabs $0x5b8,%rdx
  0x00000200349a4a8e: mov    (%r8,%rdx,1),%rsi
  0x00000200349a4a92: lea    0x1(%rsi),%rsi
  0x00000200349a4a96: mov    %rsi,(%r8,%rdx,1)
  0x00000200349a4a9a: jne    0x00000200349a4b00  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224

  0x00000200349a4aa0: mov    0x48(%rsp),%rdx
  0x00000200349a4aa5: mov    0x18(%rdx),%r8d    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261

  0x00000200349a4aa9: inc    %r8d
  0x00000200349a4aac: mov    %r8d,0x18(%rdx)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266

  0x00000200349a4ab0: mov    0x14(%rdx),%r8d    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271

  0x00000200349a4ab4: inc    %r8d
  0x00000200349a4ab7: mov    %r8d,0x14(%rdx)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277

  0x00000200349a4abb: mov    0x1c(%rdx),%esi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281

  0x00000200349a4abe: cmp    %esi,%r8d
  0x00000200349a4ac1: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4acb: movabs $0x660,%rsi
  0x00000200349a4ad5: jg     0x00000200349a4ae5
  0x00000200349a4adb: movabs $0x650,%rsi
  0x00000200349a4ae5: mov    (%r8,%rsi,1),%rdi
  0x00000200349a4ae9: lea    0x1(%rdi),%rdi
  0x00000200349a4aed: mov    %rdi,(%r8,%rsi,1)
  0x00000200349a4af1: jg     0x00000200349a4c7c  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284

  0x00000200349a4af7: mov    0x60(%rsp),%ecx
  0x00000200349a4afb: jmpq   0x00000200349a4ca5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292

  0x00000200349a4b00: mov    0x44(%rsp),%esi
  0x00000200349a4b04: mov    0x48(%rsp),%rdx
  0x00000200349a4b09: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x00000200349a4e72
  0x00000200349a4b0c: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229

  0x00000200349a4b10: cmp    $0x0,%esi
  0x00000200349a4b13: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4b1d: movabs $0x5d8,%rsi
  0x00000200349a4b27: je     0x00000200349a4b37
  0x00000200349a4b2d: movabs $0x5e8,%rsi
  0x00000200349a4b37: mov    (%r8,%rsi,1),%rbx
  0x00000200349a4b3b: lea    0x1(%rbx),%rbx
  0x00000200349a4b3f: mov    %rbx,(%r8,%rsi,1)
  0x00000200349a4b43: je     0x00000200349a4b83  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236

  0x00000200349a4b49: cmp    $0x0,%rdi
  0x00000200349a4b4d: movabs $0x2004f408af0,%r8  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4b57: movabs $0x5f8,%rsi
  0x00000200349a4b61: jne    0x00000200349a4b71
  0x00000200349a4b67: movabs $0x608,%rsi
  0x00000200349a4b71: mov    (%r8,%rsi,1),%rbx
  0x00000200349a4b75: lea    0x1(%rbx),%rbx
  0x00000200349a4b79: mov    %rbx,(%r8,%rsi,1)
  0x00000200349a4b7d: jne    0x00000200349a4bb8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241

  0x00000200349a4b83: mov    0x58(%rsp),%r8
  0x00000200349a4b88: movsbl 0x398(%r15),%esi
  0x00000200349a4b90: cmp    $0x0,%esi
  0x00000200349a4b93: jne    0x00000200349a4e77
  0x00000200349a4b99: mov    %r8,%r10
  0x00000200349a4b9c: shr    $0x3,%r10
  0x00000200349a4ba0: mov    %r10d,0x14(%rax)
  0x00000200349a4ba4: mov    %rax,%rsi
  0x00000200349a4ba7: xor    %r8,%rsi
  0x00000200349a4baa: shr    $0x14,%rsi
  0x00000200349a4bae: cmp    $0x0,%rsi
  0x00000200349a4bb2: jne    0x00000200349a4e96  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247

  0x00000200349a4bb8: mov    %rdi,0x90(%rsp)
  0x00000200349a4bc0: mov    %rdx,%r8
  0x00000200349a4bc3: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4bcd: mov    0x8(%r8),%r8d
  0x00000200349a4bd1: shl    $0x3,%r8
  0x00000200349a4bd5: cmp    0x628(%rsi),%r8
  0x00000200349a4bdc: jne    0x00000200349a4beb
  0x00000200349a4bde: addq   $0x1,0x630(%rsi)
  0x00000200349a4be6: jmpq   0x00000200349a4c51
  0x00000200349a4beb: cmp    0x638(%rsi),%r8
  0x00000200349a4bf2: jne    0x00000200349a4c01
  0x00000200349a4bf4: addq   $0x1,0x640(%rsi)
  0x00000200349a4bfc: jmpq   0x00000200349a4c51
  0x00000200349a4c01: cmpq   $0x0,0x628(%rsi)
  0x00000200349a4c0c: jne    0x00000200349a4c25
  0x00000200349a4c0e: mov    %r8,0x628(%rsi)
  0x00000200349a4c15: movq   $0x1,0x630(%rsi)
  0x00000200349a4c20: jmpq   0x00000200349a4c51
  0x00000200349a4c25: cmpq   $0x0,0x638(%rsi)
  0x00000200349a4c30: jne    0x00000200349a4c49
  0x00000200349a4c32: mov    %r8,0x638(%rsi)
  0x00000200349a4c39: movq   $0x1,0x640(%rsi)
  0x00000200349a4c44: jmpq   0x00000200349a4c51
  0x00000200349a4c49: addq   $0x1,0x618(%rsi)
  0x00000200349a4c51: mov    %rax,%r8           ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253

  0x00000200349a4c54: nop
  0x00000200349a4c55: movabs $0xffffffffffffffff,%rax
  0x00000200349a4c5f: callq  0x0000020034437280  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253
                                                ;   {virtual_call}
  0x00000200349a4c64: mov    0x90(%rsp),%rax
  0x00000200349a4c6c: add    $0xa0,%rsp
  0x00000200349a4c73: pop    %rbp
  0x00000200349a4c74: mov    0x70(%r15),%r10
  0x00000200349a4c78: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a4c7b: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258

  0x00000200349a4c7c: mov    %rdx,%rsi
  0x00000200349a4c7f: movabs $0x2004f408af0,%rdi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4c89: addq   $0x1,0x670(%rdi)
  0x00000200349a4c91: mov    %rdx,%rsi
  0x00000200349a4c94: mov    %rsi,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288

  0x00000200349a4c97: callq  0x0000020034437000  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288
                                                ;   {optimized virtual_call}
  0x00000200349a4c9c: mov    0x60(%rsp),%ecx
  0x00000200349a4ca0: mov    0x48(%rsp),%rdx
  0x00000200349a4ca5: mov    %rdx,%r8
  0x00000200349a4ca8: movabs $0x2004f408af0,%rsi  ;   {metadata(method data for {method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4cb2: mov    0x8(%r8),%r8d
  0x00000200349a4cb6: shl    $0x3,%r8
  0x00000200349a4cba: cmp    0x6b8(%rsi),%r8
  0x00000200349a4cc1: jne    0x00000200349a4cd0
  0x00000200349a4cc3: addq   $0x1,0x6c0(%rsi)
  0x00000200349a4ccb: jmpq   0x00000200349a4d36
  0x00000200349a4cd0: cmp    0x6c8(%rsi),%r8
  0x00000200349a4cd7: jne    0x00000200349a4ce6
  0x00000200349a4cd9: addq   $0x1,0x6d0(%rsi)
  0x00000200349a4ce1: jmpq   0x00000200349a4d36
  0x00000200349a4ce6: cmpq   $0x0,0x6b8(%rsi)
  0x00000200349a4cf1: jne    0x00000200349a4d0a
  0x00000200349a4cf3: mov    %r8,0x6b8(%rsi)
  0x00000200349a4cfa: movq   $0x1,0x6c0(%rsi)
  0x00000200349a4d05: jmpq   0x00000200349a4d36
  0x00000200349a4d0a: cmpq   $0x0,0x6c8(%rsi)
  0x00000200349a4d15: jne    0x00000200349a4d2e
  0x00000200349a4d17: mov    %r8,0x6c8(%rsi)
  0x00000200349a4d1e: movq   $0x1,0x6d0(%rsi)
  0x00000200349a4d29: jmpq   0x00000200349a4d36
  0x00000200349a4d2e: addq   $0x1,0x6a8(%rsi)
  0x00000200349a4d36: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295

  0x00000200349a4d39: nopl   0x0(%rax)
  0x00000200349a4d3d: movabs $0xffffffffffffffff,%rax
  0x00000200349a4d47: callq  0x0000020034438c60  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295
                                                ;   {virtual_call}
  0x00000200349a4d4c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000200349a4d56: add    $0xa0,%rsp
  0x00000200349a4d5d: pop    %rbp
  0x00000200349a4d5e: mov    0x70(%r15),%r10
  0x00000200349a4d62: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a4d65: retq   
  0x00000200349a4d66: movabs $0x2004f299a70,%r10  ;   {metadata({method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4d70: mov    %r10,0x8(%rsp)
  0x00000200349a4d75: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a4d7d: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a4d82: jmpq   0x00000200349a3e46
  0x00000200349a4d87: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4d8c: callq  0x00000200344fcba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4d91: callq  0x00000200344fcba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4d96: callq  0x00000200344fcba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4d9b: mov    %rax,(%rsp)
  0x00000200349a4d9f: callq  0x000002003446eda0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a4da4: mov    %r8,(%rsp)
  0x00000200349a4da8: callq  0x000002003446eda0  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a4dad: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4db2: mov    %rax,(%rsp)
  0x00000200349a4db6: callq  0x00000200344fea20  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x00000200349a4dbb: mov    (%rdx),%r8d
  0x00000200349a4dbe: shl    $0x3,%r8
  0x00000200349a4dc2: cmp    $0x0,%r8
  0x00000200349a4dc6: je     0x00000200349a416b
  0x00000200349a4dcc: mov    %r8,(%rsp)
  0x00000200349a4dd0: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a4dd5: jmpq   0x00000200349a416b
  0x00000200349a4dda: cmp    $0x0,%rax
  0x00000200349a4dde: je     0x00000200349a4189
  0x00000200349a4de4: mov    %rdx,(%rsp)
  0x00000200349a4de8: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a4ded: jmpq   0x00000200349a4189
  0x00000200349a4df2: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4df7: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4dfc: mov    %rsi,(%rsp)
  0x00000200349a4e00: callq  0x00000200344feca0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a4e05: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4e0a: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4e0f: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4e14: callq  0x00000200344fcba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4e19: movabs $0x2004f299a70,%r10  ;   {metadata({method} {0x000002004f299a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349a4e23: mov    %r10,0x8(%rsp)
  0x00000200349a4e28: movq   $0xdb,(%rsp)
  0x00000200349a4e30: callq  0x0000020034501a80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a4e35: jmpq   0x00000200349a4868
  0x00000200349a4e3a: mov    0x18(%rsi),%r8d
  0x00000200349a4e3e: shl    $0x3,%r8
  0x00000200349a4e42: cmp    $0x0,%r8
  0x00000200349a4e46: je     0x00000200349a4996
  0x00000200349a4e4c: mov    %r8,(%rsp)
  0x00000200349a4e50: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a4e55: jmpq   0x00000200349a4996
  0x00000200349a4e5a: cmp    $0x0,%rax
  0x00000200349a4e5e: je     0x00000200349a49b5
  0x00000200349a4e64: mov    %rsi,(%rsp)
  0x00000200349a4e68: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a4e6d: jmpq   0x00000200349a49b5
  0x00000200349a4e72: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a4e77: mov    0x14(%rax),%esi
  0x00000200349a4e7a: shl    $0x3,%rsi
  0x00000200349a4e7e: cmp    $0x0,%rsi
  0x00000200349a4e82: je     0x00000200349a4b99
  0x00000200349a4e88: mov    %rsi,(%rsp)
  0x00000200349a4e8c: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a4e91: jmpq   0x00000200349a4b99
  0x00000200349a4e96: cmp    $0x0,%r8
  0x00000200349a4e9a: je     0x00000200349a4bb8
  0x00000200349a4ea0: mov    %rax,(%rsp)
  0x00000200349a4ea4: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a4ea9: jmpq   0x00000200349a4bb8
  0x00000200349a4eae: nop
  0x00000200349a4eaf: nop
  0x00000200349a4eb0: mov    0x350(%r15),%rax
  0x00000200349a4eb7: movabs $0x0,%r10
  0x00000200349a4ec1: mov    %r10,0x350(%r15)
  0x00000200349a4ec8: movabs $0x0,%r10
  0x00000200349a4ed2: mov    %r10,0x358(%r15)
  0x00000200349a4ed9: add    $0xa0,%rsp
  0x00000200349a4ee0: pop    %rbp
  0x00000200349a4ee1: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a4ee6: hlt    
  0x00000200349a4ee7: hlt    
  0x00000200349a4ee8: hlt    
  0x00000200349a4ee9: hlt    
  0x00000200349a4eea: hlt    
  0x00000200349a4eeb: hlt    
  0x00000200349a4eec: hlt    
  0x00000200349a4eed: hlt    
  0x00000200349a4eee: hlt    
  0x00000200349a4eef: hlt    
  0x00000200349a4ef0: hlt    
  0x00000200349a4ef1: hlt    
  0x00000200349a4ef2: hlt    
  0x00000200349a4ef3: hlt    
  0x00000200349a4ef4: hlt    
  0x00000200349a4ef5: hlt    
  0x00000200349a4ef6: hlt    
  0x00000200349a4ef7: hlt    
  0x00000200349a4ef8: hlt    
  0x00000200349a4ef9: hlt    
  0x00000200349a4efa: hlt    
  0x00000200349a4efb: hlt    
  0x00000200349a4efc: hlt    
  0x00000200349a4efd: hlt    
  0x00000200349a4efe: hlt    
  0x00000200349a4eff: hlt    
[Stub Code]
  0x00000200349a4f00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349a4f05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f0f: jmpq   0x00000200349a4f0f  ;   {runtime_call}
  0x00000200349a4f14: nop
  0x00000200349a4f15: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f1f: jmpq   0x00000200349a4f1f  ;   {runtime_call}
  0x00000200349a4f24: nop
  0x00000200349a4f25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f2f: jmpq   0x00000200349a4f2f  ;   {runtime_call}
  0x00000200349a4f34: nop
  0x00000200349a4f35: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f3f: jmpq   0x00000200349a4f3f  ;   {runtime_call}
  0x00000200349a4f44: nop
  0x00000200349a4f45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f4f: jmpq   0x00000200349a4f4f  ;   {runtime_call}
  0x00000200349a4f54: nop
  0x00000200349a4f55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f5f: jmpq   0x00000200349a4f5f  ;   {runtime_call}
  0x00000200349a4f64: nop
  0x00000200349a4f65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f6f: jmpq   0x00000200349a4f6f  ;   {runtime_call}
  0x00000200349a4f74: nop
  0x00000200349a4f75: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f7f: jmpq   0x00000200349a4f7f  ;   {runtime_call}
  0x00000200349a4f84: nop
  0x00000200349a4f85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f8f: jmpq   0x00000200349a4f8f  ;   {runtime_call}
  0x00000200349a4f94: nop
  0x00000200349a4f95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a4f9f: jmpq   0x00000200349a4f9f  ;   {runtime_call}
[Exception Handler]
  0x00000200349a4fa4: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349a4fa9: mov    %rsp,-0x28(%rsp)
  0x00000200349a4fae: sub    $0x80,%rsp
  0x00000200349a4fb5: mov    %rax,0x78(%rsp)
  0x00000200349a4fba: mov    %rcx,0x70(%rsp)
  0x00000200349a4fbf: mov    %rdx,0x68(%rsp)
  0x00000200349a4fc4: mov    %rbx,0x60(%rsp)
  0x00000200349a4fc9: mov    %rbp,0x50(%rsp)
  0x00000200349a4fce: mov    %rsi,0x48(%rsp)
  0x00000200349a4fd3: mov    %rdi,0x40(%rsp)
  0x00000200349a4fd8: mov    %r8,0x38(%rsp)
  0x00000200349a4fdd: mov    %r9,0x30(%rsp)
  0x00000200349a4fe2: mov    %r10,0x28(%rsp)
  0x00000200349a4fe7: mov    %r11,0x20(%rsp)
  0x00000200349a4fec: mov    %r12,0x18(%rsp)
  0x00000200349a4ff1: mov    %r13,0x10(%rsp)
  0x00000200349a4ff6: mov    %r14,0x8(%rsp)
  0x00000200349a4ffb: mov    %r15,(%rsp)
  0x00000200349a4fff: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a5009: movabs $0x200349a4fa9,%rdx  ;   {internal_word}
  0x00000200349a5013: mov    %rsp,%r8
  0x00000200349a5016: and    $0xfffffffffffffff0,%rsp
  0x00000200349a501a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a5024: callq  *%r10
  0x00000200349a5027: hlt    
[Deopt Handler Code]
  0x00000200349a5028: movabs $0x200349a5028,%r10  ;   {section_word}
  0x00000200349a5032: push   %r10
  0x00000200349a5034: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a5039: hlt    
  0x00000200349a503a: hlt    
  0x00000200349a503b: hlt    
  0x00000200349a503c: hlt    
  0x00000200349a503d: hlt    
  0x00000200349a503e: hlt    
  0x00000200349a503f: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 596 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }pc offsets: 1348 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2116 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 2588 2700 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 2972 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3156 
ImmutableOopMap{[144]=Oop }pc offsets: 3716 
ImmutableOopMap{[72]=Oop }pc offsets: 3772 
ImmutableOopMap{}pc offsets: 3948 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }pc offsets: 4002 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }pc offsets: 4012 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }pc offsets: 4017 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 4022 4027 4036 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4045 
ImmutableOopMap{[72]=Oop rax=Oop }pc offsets: 4050 4059 
ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4119 
ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }pc offsets: 4124 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }pc offsets: 4133 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }pc offsets: 4138 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }pc offsets: 4143 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }pc offsets: 4148 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }pc offsets: 4153 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 4181 
ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4247 Compiled method (c1)     148   23       3       java.util.ImmutableCollections$SetN$1::next (35 bytes)
 total in heap  [0x00000200349a5a90,0x00000200349a60f8] = 1640
 relocation     [0x00000200349a5c08,0x00000200349a5c60] = 88
 main code      [0x00000200349a5c60,0x00000200349a5e40] = 480
 stub code      [0x00000200349a5e40,0x00000200349a5f00] = 192
 metadata       [0x00000200349a5f00,0x00000200349a5f10] = 16
 scopes data    [0x00000200349a5f10,0x00000200349a5f88] = 120
 scopes pcs     [0x00000200349a5f88,0x00000200349a60d8] = 336
 dependencies   [0x00000200349a60d8,0x00000200349a60e0] = 8
 nul chk table  [0x00000200349a60e0,0x00000200349a60f8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.next()Ljava/lang/Object;  [0x00000200349a5c60, 0x00000200349a5f00]  672 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x60]  (sp of caller)
  0x00000200349a5c60: mov    0x8(%rdx),%r10d
  0x00000200349a5c64: shl    $0x3,%r10
  0x00000200349a5c68: cmp    %rax,%r10
  0x00000200349a5c6b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a5c71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a5c7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a5c80: mov    %eax,-0x7000(%rsp)
  0x00000200349a5c87: push   %rbp
  0x00000200349a5c88: sub    $0x50,%rsp
  0x00000200349a5c8c: movabs $0x2004f3fc9f0,%rsi  ;   {metadata(method data for {method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a5c96: mov    0xfc(%rsi),%edi
  0x00000200349a5c9c: add    $0x8,%edi
  0x00000200349a5c9f: mov    %edi,0xfc(%rsi)
  0x00000200349a5ca5: and    $0x1ff8,%edi
  0x00000200349a5cab: cmp    $0x0,%edi
  0x00000200349a5cae: je     0x00000200349a5d96  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@0

  0x00000200349a5cb4: mov    %rdx,%rsi
  0x00000200349a5cb7: movabs $0x2004f3fc9f0,%rdi  ;   {metadata(method data for {method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a5cc1: addq   $0x1,0x150(%rdi)
  0x00000200349a5cc9: mov    %rdx,%rsi
  0x00000200349a5ccc: mov    %rsi,%rdx          ;*invokevirtual hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@1

  0x00000200349a5ccf: mov    %rsi,0x30(%rsp)
  0x00000200349a5cd4: data16 xchg %ax,%ax
  0x00000200349a5cd7: callq  0x0000020034437000  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokevirtual hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@1
                                                ;   {optimized virtual_call}
  0x00000200349a5cdc: cmp    $0x0,%eax
  0x00000200349a5cdf: movabs $0x2004f3fc9f0,%rax  ;   {metadata(method data for {method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a5ce9: movabs $0x180,%rdx
  0x00000200349a5cf3: je     0x00000200349a5d03
  0x00000200349a5cf9: movabs $0x170,%rdx
  0x00000200349a5d03: mov    (%rax,%rdx,1),%rsi
  0x00000200349a5d07: lea    0x1(%rsi),%rsi
  0x00000200349a5d0b: mov    %rsi,(%rax,%rdx,1)
  0x00000200349a5d0f: je     0x00000200349a5d56  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@4

  0x00000200349a5d15: mov    0x30(%rsp),%rdx
  0x00000200349a5d1a: mov    0x10(%rdx),%eax
  0x00000200349a5d1d: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@16

  0x00000200349a5d21: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x00000200349a5db7
  0x00000200349a5d24: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@19

  0x00000200349a5d28: mov    0xc(%rdx),%esi     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@24

  0x00000200349a5d2b: mov    %rsi,%rdi
  0x00000200349a5d2e: inc    %edi
  0x00000200349a5d30: mov    %edi,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@30

  0x00000200349a5d33: mov    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000200349a5dbc
  0x00000200349a5d36: movslq %esi,%rdi
  0x00000200349a5d39: cmp    %esi,%edx
  0x00000200349a5d3b: jbe    0x00000200349a5dc1
  0x00000200349a5d41: mov    0x10(%rax,%rdi,4),%eax
  0x00000200349a5d45: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33

  0x00000200349a5d49: add    $0x50,%rsp
  0x00000200349a5d4d: pop    %rbp
  0x00000200349a5d4e: mov    0x70(%r15),%r10
  0x00000200349a5d52: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a5d55: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@34

  0x00000200349a5d56: xchg   %ax,%ax
  0x00000200349a5d58: jmpq   0x00000200349a5dd9  ;   {no_reloc}
  0x00000200349a5d5d: add    %al,(%rax)
  0x00000200349a5d5f: add    %al,(%rax)
  0x00000200349a5d61: add    %ch,%cl
  0x00000200349a5d63: jl     0x00000200349a5d65
  0x00000200349a5d65: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7

  0x00000200349a5d67: mov    %rax,%rdx
  0x00000200349a5d6a: movabs $0x2004f3fc9f0,%rsi  ;   {metadata(method data for {method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a5d74: addq   $0x1,0x190(%rsi)
  0x00000200349a5d7c: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@11

  0x00000200349a5d7f: mov    %rax,0x38(%rsp)
  0x00000200349a5d84: data16 xchg %ax,%ax
  0x00000200349a5d87: callq  0x0000020034437000  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@11
                                                ;   {optimized virtual_call}
  0x00000200349a5d8c: mov    0x38(%rsp),%rax
  0x00000200349a5d91: jmpq   0x00000200349a5e1b
  0x00000200349a5d96: movabs $0x2004f3f2758,%r10  ;   {metadata({method} {0x000002004f3f2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x00000200349a5da0: mov    %r10,0x8(%rsp)
  0x00000200349a5da5: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a5dad: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::next@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a5db2: jmpq   0x00000200349a5cb4
  0x00000200349a5db7: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@19
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a5dbc: callq  0x00000200344fcba0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a5dc1: mov    %rsi,(%rsp)
  0x00000200349a5dc5: callq  0x000002003446eda0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349a5dca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349a5dd4: mov    $0xa050f00,%eax
  0x00000200349a5dd9: callq  0x0000020034500500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a5dde: jmpq   0x00000200349a5d58
  0x00000200349a5de3: mov    %rdx,%rdx
  0x00000200349a5de6: callq  0x00000200344fd100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00000200349a5deb: jmpq   0x00000200349a5d67
  0x00000200349a5df0: nop
  0x00000200349a5df1: nop
  0x00000200349a5df2: mov    0x350(%r15),%rax
  0x00000200349a5df9: movabs $0x0,%r10
  0x00000200349a5e03: mov    %r10,0x350(%r15)
  0x00000200349a5e0a: movabs $0x0,%r10
  0x00000200349a5e14: mov    %r10,0x358(%r15)
  0x00000200349a5e1b: add    $0x50,%rsp
  0x00000200349a5e1f: pop    %rbp
  0x00000200349a5e20: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a5e25: hlt    
  0x00000200349a5e26: hlt    
  0x00000200349a5e27: hlt    
  0x00000200349a5e28: hlt    
  0x00000200349a5e29: hlt    
  0x00000200349a5e2a: hlt    
  0x00000200349a5e2b: hlt    
  0x00000200349a5e2c: hlt    
  0x00000200349a5e2d: hlt    
  0x00000200349a5e2e: hlt    
  0x00000200349a5e2f: hlt    
  0x00000200349a5e30: hlt    
  0x00000200349a5e31: hlt    
  0x00000200349a5e32: hlt    
  0x00000200349a5e33: hlt    
  0x00000200349a5e34: hlt    
  0x00000200349a5e35: hlt    
  0x00000200349a5e36: hlt    
  0x00000200349a5e37: hlt    
  0x00000200349a5e38: hlt    
  0x00000200349a5e39: hlt    
  0x00000200349a5e3a: hlt    
  0x00000200349a5e3b: hlt    
  0x00000200349a5e3c: hlt    
  0x00000200349a5e3d: hlt    
  0x00000200349a5e3e: hlt    
  0x00000200349a5e3f: hlt    
[Stub Code]
  0x00000200349a5e40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349a5e45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a5e4f: jmpq   0x00000200349a5e4f  ;   {runtime_call}
  0x00000200349a5e54: nop
  0x00000200349a5e55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a5e5f: jmpq   0x00000200349a5e5f  ;   {runtime_call}
[Exception Handler]
  0x00000200349a5e64: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349a5e69: mov    %rsp,-0x28(%rsp)
  0x00000200349a5e6e: sub    $0x80,%rsp
  0x00000200349a5e75: mov    %rax,0x78(%rsp)
  0x00000200349a5e7a: mov    %rcx,0x70(%rsp)
  0x00000200349a5e7f: mov    %rdx,0x68(%rsp)
  0x00000200349a5e84: mov    %rbx,0x60(%rsp)
  0x00000200349a5e89: mov    %rbp,0x50(%rsp)
  0x00000200349a5e8e: mov    %rsi,0x48(%rsp)
  0x00000200349a5e93: mov    %rdi,0x40(%rsp)
  0x00000200349a5e98: mov    %r8,0x38(%rsp)
  0x00000200349a5e9d: mov    %r9,0x30(%rsp)
  0x00000200349a5ea2: mov    %r10,0x28(%rsp)
  0x00000200349a5ea7: mov    %r11,0x20(%rsp)
  0x00000200349a5eac: mov    %r12,0x18(%rsp)
  0x00000200349a5eb1: mov    %r13,0x10(%rsp)
  0x00000200349a5eb6: mov    %r14,0x8(%rsp)
  0x00000200349a5ebb: mov    %r15,(%rsp)
  0x00000200349a5ebf: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a5ec9: movabs $0x200349a5e69,%rdx  ;   {internal_word}
  0x00000200349a5ed3: mov    %rsp,%r8
  0x00000200349a5ed6: and    $0xfffffffffffffff0,%rsp
  0x00000200349a5eda: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a5ee4: callq  *%r10
  0x00000200349a5ee7: hlt    
[Deopt Handler Code]
  0x00000200349a5ee8: movabs $0x200349a5ee8,%r10  ;   {section_word}
  0x00000200349a5ef2: push   %r10
  0x00000200349a5ef4: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a5ef9: hlt    
  0x00000200349a5efa: hlt    
  0x00000200349a5efb: hlt    
  0x00000200349a5efc: hlt    
  0x00000200349a5efd: hlt    
  0x00000200349a5efe: hlt    
  0x00000200349a5eff: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 124 
ImmutableOopMap{[56]=Oop }pc offsets: 300 
ImmutableOopMap{rdx=Oop }pc offsets: 338 348 
ImmutableOopMap{rax=Oop }pc offsets: 353 362 
ImmutableOopMap{}pc offsets: 382 395 Compiled method (c1)     156   27   !   3       java.util.concurrent.ConcurrentHashMap::putVal (433 bytes)
 total in heap  [0x00000200349a6110,0x00000200349a9a00] = 14576
 relocation     [0x00000200349a6288,0x00000200349a64a0] = 536
 main code      [0x00000200349a64a0,0x00000200349a8560] = 8384
 stub code      [0x00000200349a8560,0x00000200349a86a0] = 320
 oops           [0x00000200349a86a0,0x00000200349a86a8] = 8
 metadata       [0x00000200349a86a8,0x00000200349a86e8] = 64
 scopes data    [0x00000200349a86e8,0x00000200349a8f68] = 2176
 scopes pcs     [0x00000200349a8f68,0x00000200349a9878] = 2320
 dependencies   [0x00000200349a9878,0x00000200349a9880] = 8
 handler table  [0x00000200349a9880,0x00000200349a99d0] = 336
 nul chk table  [0x00000200349a99d0,0x00000200349a9a00] = 48
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x00000200349a64a0, 0x00000200349a86a0]  8704 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi       = boolean
  #           [sp+0x140]  (sp of caller)
  0x00000200349a64a0: mov    0x8(%rdx),%r10d
  0x00000200349a64a4: shl    $0x3,%r10
  0x00000200349a64a8: cmp    %rax,%r10
  0x00000200349a64ab: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349a64b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349a64bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349a64c0: mov    %eax,-0x7000(%rsp)
  0x00000200349a64c7: push   %rbp
  0x00000200349a64c8: sub    $0x130,%rsp
  0x00000200349a64cf: mov    %rdx,0xa8(%rsp)
  0x00000200349a64d7: mov    %r8,0xb0(%rsp)
  0x00000200349a64df: mov    %r9,0xb8(%rsp)
  0x00000200349a64e7: mov    %edi,0xc0(%rsp)
  0x00000200349a64ee: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a64f8: mov    0xfc(%rsi),%ebx
  0x00000200349a64fe: add    $0x8,%ebx
  0x00000200349a6501: mov    %ebx,0xfc(%rsi)
  0x00000200349a6507: and    $0x1ff8,%ebx
  0x00000200349a650d: cmp    $0x0,%ebx
  0x00000200349a6510: je     0x00000200349a805b  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0

  0x00000200349a6516: cmp    $0x0,%r8
  0x00000200349a651a: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6524: movabs $0x138,%rbx
  0x00000200349a652e: je     0x00000200349a653e
  0x00000200349a6534: movabs $0x148,%rbx
  0x00000200349a653e: mov    (%rsi,%rbx,1),%rax
  0x00000200349a6542: lea    0x1(%rax),%rax
  0x00000200349a6546: mov    %rax,(%rsi,%rbx,1)
  0x00000200349a654a: je     0x00000200349a7f74  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1

  0x00000200349a6550: cmp    $0x0,%r9
  0x00000200349a6554: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a655e: movabs $0x168,%rbx
  0x00000200349a6568: je     0x00000200349a6578
  0x00000200349a656e: movabs $0x158,%rbx
  0x00000200349a6578: mov    (%rsi,%rbx,1),%rax
  0x00000200349a657c: lea    0x1(%rax),%rax
  0x00000200349a6580: mov    %rax,(%rsi,%rbx,1)
  0x00000200349a6584: je     0x00000200349a7f74  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5

  0x00000200349a658a: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000200349a807c
  0x00000200349a658d: mov    %r8,%rsi
  0x00000200349a6590: movabs $0x2004f3fdce0,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a659a: mov    0x8(%rsi),%esi
  0x00000200349a659d: shl    $0x3,%rsi
  0x00000200349a65a1: cmp    0x198(%rbx),%rsi
  0x00000200349a65a8: jne    0x00000200349a65b7
  0x00000200349a65aa: addq   $0x1,0x1a0(%rbx)
  0x00000200349a65b2: jmpq   0x00000200349a661d
  0x00000200349a65b7: cmp    0x1a8(%rbx),%rsi
  0x00000200349a65be: jne    0x00000200349a65cd
  0x00000200349a65c0: addq   $0x1,0x1b0(%rbx)
  0x00000200349a65c8: jmpq   0x00000200349a661d
  0x00000200349a65cd: cmpq   $0x0,0x198(%rbx)
  0x00000200349a65d8: jne    0x00000200349a65f1
  0x00000200349a65da: mov    %rsi,0x198(%rbx)
  0x00000200349a65e1: movq   $0x1,0x1a0(%rbx)
  0x00000200349a65ec: jmpq   0x00000200349a661d
  0x00000200349a65f1: cmpq   $0x0,0x1a8(%rbx)
  0x00000200349a65fc: jne    0x00000200349a6615
  0x00000200349a65fe: mov    %rsi,0x1a8(%rbx)
  0x00000200349a6605: movq   $0x1,0x1b0(%rbx)
  0x00000200349a6610: jmpq   0x00000200349a661d
  0x00000200349a6615: addq   $0x1,0x188(%rbx)
  0x00000200349a661d: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17

  0x00000200349a6620: nopl   0x0(%rax,%rax,1)
  0x00000200349a6625: movabs $0xffffffffffffffff,%rax
  0x00000200349a662f: callq  0x0000020034437280  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {virtual_call}
  0x00000200349a6634: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a663e: addq   $0x1,0x1c0(%rdx)
  0x00000200349a6646: movabs $0x2004f3fdb88,%rdx  ;   {metadata(method data for {method} {0x000002004f2a2f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6650: mov    0xfc(%rdx),%esi
  0x00000200349a6656: add    $0x8,%esi
  0x00000200349a6659: mov    %esi,0xfc(%rdx)
  0x00000200349a665f: and    $0x7ffff8,%esi
  0x00000200349a6665: cmp    $0x0,%esi
  0x00000200349a6668: je     0x00000200349a8081
  0x00000200349a666e: mov    %rax,%rdx
  0x00000200349a6671: shr    $0x10,%edx
  0x00000200349a6674: xor    %rax,%rdx
  0x00000200349a6677: and    $0x7fffffff,%edx
  0x00000200349a667d: mov    %edx,0xc8(%rsp)
  0x00000200349a6684: mov    0xa8(%rsp),%rsi
  0x00000200349a668c: mov    0x28(%rsi),%edi
  0x00000200349a668f: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29

  0x00000200349a6693: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34

  0x00000200349a6698: mov    %ebx,0xc4(%rsp)
  0x00000200349a669f: nop
  0x00000200349a66a0: cmp    $0x0,%rdi
  0x00000200349a66a4: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a66ae: movabs $0x1d0,%r11
  0x00000200349a66b8: je     0x00000200349a66c8
  0x00000200349a66be: movabs $0x1e0,%r11
  0x00000200349a66c8: mov    (%rcx,%r11,1),%r13
  0x00000200349a66cc: lea    0x1(%r13),%r13
  0x00000200349a66d0: mov    %r13,(%rcx,%r11,1)
  0x00000200349a66d4: je     0x00000200349a6716  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36

  0x00000200349a66da: mov    0xc(%rdi),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ; implicit exception: dispatches to 0x00000200349a80a2
  0x00000200349a66dd: cmp    $0x0,%ecx
  0x00000200349a66e0: movabs $0x2004f3fdce0,%r11  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a66ea: movabs $0x1f0,%r13
  0x00000200349a66f4: jne    0x00000200349a6704
  0x00000200349a66fa: movabs $0x200,%r13
  0x00000200349a6704: mov    (%r11,%r13,1),%r14
  0x00000200349a6708: lea    0x1(%r14),%r14
  0x00000200349a670c: mov    %r14,(%r11,%r13,1)
  0x00000200349a6710: jne    0x00000200349a675f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45

  0x00000200349a6716: mov    %rsi,%rax
  0x00000200349a6719: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6723: addq   $0x1,0x210(%rcx)
  0x00000200349a672b: mov    %rsi,%rdx          ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49

  0x00000200349a672e: nop
  0x00000200349a672f: callq  0x0000020034437000  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49
                                                ;   {optimized virtual_call}
  0x00000200349a6734: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a673e: incl   0x220(%rcx)
  0x00000200349a6744: mov    0xc4(%rsp),%ebx
  0x00000200349a674b: mov    0xc0(%rsp),%edi
  0x00000200349a6752: mov    0xb8(%rsp),%r9
  0x00000200349a675a: jmpq   0x00000200349a7d51  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54

  0x00000200349a675f: dec    %ecx
  0x00000200349a6761: and    0xc8(%rsp),%ecx
  0x00000200349a6768: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6772: addq   $0x1,0x238(%rdx)
  0x00000200349a677a: movabs $0x2004f36fd90,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6784: mov    0xfc(%rdx),%esi
  0x00000200349a678a: add    $0x8,%esi
  0x00000200349a678d: mov    %esi,0xfc(%rdx)
  0x00000200349a6793: and    $0x7ffff8,%esi
  0x00000200349a6799: cmp    $0x0,%esi
  0x00000200349a679c: je     0x00000200349a80a7
  0x00000200349a67a2: movslq %ecx,%rdx
  0x00000200349a67a5: mov    %ecx,0xe8(%rsp)
  0x00000200349a67ac: mov    $0x2,%ecx
  0x00000200349a67b1: shl    %cl,%rdx
  0x00000200349a67b4: movabs $0x10,%r10
  0x00000200349a67be: add    %r10,%rdx
  0x00000200349a67c1: movabs $0x2004f36fd90,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a67cb: lea    0x170(%rsi),%rsi
  0x00000200349a67d2: mov    %rdi,%rax
  0x00000200349a67d5: mov    0x8(%rax),%eax
  0x00000200349a67d8: shl    $0x3,%rax
  0x00000200349a67dc: xor    0x8(%rsi),%rax
  0x00000200349a67e0: test   $0xfffffffffffffffc,%rax
  0x00000200349a67e6: je     0x00000200349a67f8
  0x00000200349a67e8: test   $0x2,%rax
  0x00000200349a67ee: jne    0x00000200349a67f8
  0x00000200349a67f0: orq    $0x2,0x8(%rsi)
  0x00000200349a67f8: movabs $0x6d1708638,%rsi  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x00000200349a6802: movabs $0x2004f36fd90,%rax  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a680c: addq   $0x1,0x138(%rax)
  0x00000200349a6814: movabs $0x2004f3712d8,%rsi  ;   {metadata(method data for {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a681e: mov    0xfc(%rsi),%eax
  0x00000200349a6824: add    $0x8,%eax
  0x00000200349a6827: mov    %eax,0xfc(%rsi)
  0x00000200349a682d: and    $0x7ffff8,%eax
  0x00000200349a6833: cmp    $0x0,%eax
  0x00000200349a6836: je     0x00000200349a80c8
  0x00000200349a683c: mov    (%rdi,%rdx,1),%esi
  0x00000200349a683f: shl    $0x3,%rsi
  0x00000200349a6843: movabs $0xc,%rax
  0x00000200349a684d: cmp    %rax,%rdx
  0x00000200349a6850: jne    0x00000200349a6888
  0x00000200349a6856: cmp    $0x0,%rdi
  0x00000200349a685a: je     0x00000200349a6888
  0x00000200349a6860: mov    0x8(%rdi),%eax
  0x00000200349a6863: shl    $0x3,%rax
  0x00000200349a6867: movsbl 0x16b(%rax),%eax
  0x00000200349a686e: cmp    $0x0,%eax
  0x00000200349a6871: je     0x00000200349a6888
  0x00000200349a6877: movsbl 0x398(%r15),%eax
  0x00000200349a687f: cmp    $0x0,%eax
  0x00000200349a6882: jne    0x00000200349a80e9
  0x00000200349a6888: cmp    $0x0,%rsi
  0x00000200349a688c: jne    0x00000200349a68a7
  0x00000200349a688e: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6898: orl    $0x100,0x180(%rcx)
  0x00000200349a68a2: jmpq   0x00000200349a6969
  0x00000200349a68a7: movabs $0x7c001acb8,%r8   ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a68b1: mov    0x8(%rsi),%ecx
  0x00000200349a68b4: shl    $0x3,%rcx
  0x00000200349a68b8: cmp    0x30(%rcx),%r8
  0x00000200349a68bc: jne    0x00000200349a694d
  0x00000200349a68c2: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a68cc: mov    0x8(%rsi),%r8d
  0x00000200349a68d0: shl    $0x3,%r8
  0x00000200349a68d4: cmp    0x198(%rcx),%r8
  0x00000200349a68db: jne    0x00000200349a68ea
  0x00000200349a68dd: addq   $0x1,0x1a0(%rcx)
  0x00000200349a68e5: jmpq   0x00000200349a6969
  0x00000200349a68ea: cmp    0x1a8(%rcx),%r8
  0x00000200349a68f1: jne    0x00000200349a6900
  0x00000200349a68f3: addq   $0x1,0x1b0(%rcx)
  0x00000200349a68fb: jmpq   0x00000200349a6969
  0x00000200349a6900: cmpq   $0x0,0x198(%rcx)
  0x00000200349a690b: jne    0x00000200349a6924
  0x00000200349a690d: mov    %r8,0x198(%rcx)
  0x00000200349a6914: movq   $0x1,0x1a0(%rcx)
  0x00000200349a691f: jmpq   0x00000200349a6969
  0x00000200349a6924: cmpq   $0x0,0x1a8(%rcx)
  0x00000200349a692f: jne    0x00000200349a6948
  0x00000200349a6931: mov    %r8,0x1a8(%rcx)
  0x00000200349a6938: movq   $0x1,0x1b0(%rcx)
  0x00000200349a6943: jmpq   0x00000200349a6969
  0x00000200349a6948: jmpq   0x00000200349a6969
  0x00000200349a694d: movabs $0x2004f36fd90,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6957: subq   $0x1,0x188(%rcx)
  0x00000200349a695f: jmpq   0x00000200349a8101
  0x00000200349a6964: jmpq   0x00000200349a6969  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69

  0x00000200349a6969: mov    %rsi,0xd0(%rsp)
  0x00000200349a6971: cmp    $0x0,%rsi
  0x00000200349a6975: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a697f: movabs $0x248,%rcx
  0x00000200349a6989: jne    0x00000200349a6999
  0x00000200349a698f: movabs $0x258,%rcx
  0x00000200349a6999: mov    (%rax,%rcx,1),%r8
  0x00000200349a699d: lea    0x1(%r8),%r8
  0x00000200349a69a1: mov    %r8,(%rax,%rcx,1)
  0x00000200349a69a5: mov    %rdx,%r11
  0x00000200349a69a8: jne    0x00000200349a6bdf  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75

  0x00000200349a69ae: mov    0xc8(%rsp),%edx
  0x00000200349a69b5: mov    0xb8(%rsp),%r9
  0x00000200349a69bd: mov    0xb0(%rsp),%r8
  0x00000200349a69c5: mov    %rdx,%r13
  0x00000200349a69c8: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a69d2: mov    %rdi,%r14
  0x00000200349a69d5: mov    0x80(%r15),%rax
  0x00000200349a69dc: lea    0x20(%rax),%rdi
  0x00000200349a69e0: cmp    0x90(%r15),%rdi
  0x00000200349a69e7: ja     0x00000200349a810a
  0x00000200349a69ed: mov    %rdi,0x80(%r15)
  0x00000200349a69f4: mov    0xb0(%rdx),%rcx
  0x00000200349a69fb: mov    %rcx,(%rax)
  0x00000200349a69fe: mov    %rdx,%rcx
  0x00000200349a6a01: shr    $0x3,%rcx
  0x00000200349a6a05: mov    %ecx,0x8(%rax)
  0x00000200349a6a08: xor    %rcx,%rcx
  0x00000200349a6a0b: mov    %ecx,0xc(%rax)
  0x00000200349a6a0e: xor    %rcx,%rcx
  0x00000200349a6a11: mov    %rcx,0x10(%rax)
  0x00000200349a6a15: mov    %rcx,0x18(%rax)
  0x00000200349a6a19: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83

  0x00000200349a6a1c: mov    %rdx,%rax
  0x00000200349a6a1f: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6a29: addq   $0x1,0x268(%rsi)
  0x00000200349a6a31: movabs $0x2004f3feb68,%rax  ;   {metadata(method data for {method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a6a3b: mov    0xfc(%rax),%esi
  0x00000200349a6a41: add    $0x8,%esi
  0x00000200349a6a44: mov    %esi,0xfc(%rax)
  0x00000200349a6a4a: and    $0x7ffff8,%esi
  0x00000200349a6a50: cmp    $0x0,%esi
  0x00000200349a6a53: je     0x00000200349a8117
  0x00000200349a6a59: mov    %rdx,%rax
  0x00000200349a6a5c: movabs $0x2004f3feb68,%rsi  ;   {metadata(method data for {method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a6a66: addq   $0x1,0x138(%rsi)
  0x00000200349a6a6e: movabs $0x2004f3632f0,%rax  ;   {metadata(method data for {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a6a78: mov    0xfc(%rax),%esi
  0x00000200349a6a7e: add    $0x8,%esi
  0x00000200349a6a81: mov    %esi,0xfc(%rax)
  0x00000200349a6a87: and    $0x7ffff8,%esi
  0x00000200349a6a8d: cmp    $0x0,%esi
  0x00000200349a6a90: je     0x00000200349a8138
  0x00000200349a6a96: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x00000200349a6a9a: movsbl 0x398(%r15),%eax
  0x00000200349a6aa2: cmp    $0x0,%eax
  0x00000200349a6aa5: jne    0x00000200349a8159
  0x00000200349a6aab: mov    %r8,%r10
  0x00000200349a6aae: shr    $0x3,%r10
  0x00000200349a6ab2: mov    %r10d,0x10(%rdx)
  0x00000200349a6ab6: mov    %rdx,%rax
  0x00000200349a6ab9: xor    %r8,%rax
  0x00000200349a6abc: shr    $0x14,%rax
  0x00000200349a6ac0: cmp    $0x0,%rax
  0x00000200349a6ac4: jne    0x00000200349a8178
  0x00000200349a6aca: movsbl 0x398(%r15),%eax
  0x00000200349a6ad2: cmp    $0x0,%eax
  0x00000200349a6ad5: jne    0x00000200349a8190
  0x00000200349a6adb: mov    %r9,%r10
  0x00000200349a6ade: shr    $0x3,%r10
  0x00000200349a6ae2: mov    %r10d,0x14(%rdx)
  0x00000200349a6ae6: mov    %rdx,%rax
  0x00000200349a6ae9: xor    %r9,%rax
  0x00000200349a6aec: shr    $0x14,%rax
  0x00000200349a6af0: cmp    $0x0,%rax
  0x00000200349a6af4: jne    0x00000200349a81af
  0x00000200349a6afa: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x00000200349a6b00: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6b0a: addq   $0x1,0x278(%rax)
  0x00000200349a6b12: movabs $0x2004f3feeb8,%rax  ;   {metadata(method data for {method} {0x000002004f2a3300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6b1c: mov    0xfc(%rax),%esi
  0x00000200349a6b22: add    $0x8,%esi
  0x00000200349a6b25: mov    %esi,0xfc(%rax)
  0x00000200349a6b2b: and    $0x7ffff8,%esi
  0x00000200349a6b31: cmp    $0x0,%esi
  0x00000200349a6b34: je     0x00000200349a81c7
  0x00000200349a6b3a: lea    (%r14,%r11,1),%rsi
  0x00000200349a6b3e: movsbl 0x398(%r15),%eax
  0x00000200349a6b46: cmp    $0x0,%eax
  0x00000200349a6b49: jne    0x00000200349a81e8
  0x00000200349a6b4f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000200349a6b59: shr    $0x3,%rax
  0x00000200349a6b5d: mov    %rdx,%r10
  0x00000200349a6b60: shr    $0x3,%r10
  0x00000200349a6b64: lock cmpxchg %r10d,(%rsi)
  0x00000200349a6b69: mov    $0x1,%edi
  0x00000200349a6b6e: je     0x00000200349a6b79
  0x00000200349a6b74: mov    $0x0,%edi
  0x00000200349a6b79: mov    %rsi,%rbx
  0x00000200349a6b7c: xor    %rdx,%rbx
  0x00000200349a6b7f: shr    $0x14,%rbx
  0x00000200349a6b83: cmp    $0x0,%rbx
  0x00000200349a6b87: jne    0x00000200349a8206  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94

  0x00000200349a6b8d: and    $0x1,%edi
  0x00000200349a6b90: cmp    $0x0,%edi
  0x00000200349a6b93: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6b9d: movabs $0x298,%rsi
  0x00000200349a6ba7: jne    0x00000200349a6bb7
  0x00000200349a6bad: movabs $0x288,%rsi
  0x00000200349a6bb7: mov    (%rdx,%rsi,1),%rdi
  0x00000200349a6bbb: lea    0x1(%rdi),%rdi
  0x00000200349a6bbf: mov    %rdi,(%rdx,%rsi,1)
  0x00000200349a6bc3: jne    0x00000200349a7eb0  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97

  0x00000200349a6bc9: mov    %r14,%rax
  0x00000200349a6bcc: mov    0xc4(%rsp),%ebx
  0x00000200349a6bd3: mov    0xc0(%rsp),%edi
  0x00000200349a6bda: jmpq   0x00000200349a7d51  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x00000200349a6bdf: mov    %rdi,%r14
  0x00000200349a6be2: mov    0xc8(%rsp),%r13d
  0x00000200349a6bea: mov    0xb8(%rsp),%r9
  0x00000200349a6bf2: mov    0xb0(%rsp),%r8
  0x00000200349a6bfa: mov    0xc(%rsi),%edi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ; implicit exception: dispatches to 0x00000200349a821e
  0x00000200349a6bfd: cmp    $0xffffffff,%edi
  0x00000200349a6c00: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6c0a: movabs $0x2c0,%rax
  0x00000200349a6c14: jne    0x00000200349a6c24
  0x00000200349a6c1a: movabs $0x2d0,%rax
  0x00000200349a6c24: mov    (%rdx,%rax,1),%rcx
  0x00000200349a6c28: lea    0x1(%rcx),%rcx
  0x00000200349a6c2c: mov    %rcx,(%rdx,%rax,1)
  0x00000200349a6c30: jne    0x00000200349a6c90  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112

  0x00000200349a6c36: mov    0xa8(%rsp),%rdi
  0x00000200349a6c3e: movabs $0x2004f3fdce0,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6c48: addq   $0x1,0x2e0(%rbx)
  0x00000200349a6c50: mov    %r14,%r8
  0x00000200349a6c53: mov    %rsi,%r9
  0x00000200349a6c56: mov    0xa8(%rsp),%rdx    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120

  0x00000200349a6c5e: nop
  0x00000200349a6c5f: callq  0x0000020034437000  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120
                                                ;   {optimized virtual_call}
  0x00000200349a6c64: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6c6e: incl   0x318(%r8)
  0x00000200349a6c75: mov    0xc4(%rsp),%ebx
  0x00000200349a6c7c: mov    0xc0(%rsp),%edi
  0x00000200349a6c83: mov    0xb8(%rsp),%r9
  0x00000200349a6c8b: jmpq   0x00000200349a7d51  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125

  0x00000200349a6c90: mov    0xc0(%rsp),%eax
  0x00000200349a6c97: cmp    $0x0,%eax
  0x00000200349a6c9a: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6ca4: movabs $0x340,%rdx
  0x00000200349a6cae: jne    0x00000200349a6cbe
  0x00000200349a6cb4: movabs $0x330,%rdx
  0x00000200349a6cbe: mov    (%r8,%rdx,1),%rcx
  0x00000200349a6cc2: lea    0x1(%rcx),%rcx
  0x00000200349a6cc6: mov    %rcx,(%r8,%rdx,1)
  0x00000200349a6cca: jne    0x00000200349a6cec  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129

  0x00000200349a6cd0: mov    %edi,0xcc(%rsp)
  0x00000200349a6cd7: mov    %r11,0xe0(%rsp)
  0x00000200349a6cdf: mov    %r14,0xd8(%rsp)
  0x00000200349a6ce7: jmpq   0x00000200349a6f26  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x00000200349a6cec: cmp    0xc8(%rsp),%edi
  0x00000200349a6cf3: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6cfd: movabs $0x360,%rdx
  0x00000200349a6d07: je     0x00000200349a6d17
  0x00000200349a6d0d: movabs $0x350,%rdx
  0x00000200349a6d17: mov    (%r8,%rdx,1),%rcx
  0x00000200349a6d1b: lea    0x1(%rcx),%rcx
  0x00000200349a6d1f: mov    %rcx,(%r8,%rdx,1)
  0x00000200349a6d23: je     0x00000200349a6d45  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136

  0x00000200349a6d29: mov    %edi,0xcc(%rsp)
  0x00000200349a6d30: mov    %r11,0xe0(%rsp)
  0x00000200349a6d38: mov    %r14,0xd8(%rsp)
  0x00000200349a6d40: jmpq   0x00000200349a6f26  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x00000200349a6d45: mov    0xb0(%rsp),%r8
  0x00000200349a6d4d: mov    0x10(%rsi),%edx
  0x00000200349a6d50: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141

  0x00000200349a6d54: cmp    %r8,%rdx
  0x00000200349a6d57: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6d61: movabs $0x380,%r9
  0x00000200349a6d6b: jne    0x00000200349a6d7b
  0x00000200349a6d71: movabs $0x370,%r9
  0x00000200349a6d7b: mov    (%rcx,%r9,1),%r13
  0x00000200349a6d7f: lea    0x1(%r13),%r13
  0x00000200349a6d83: mov    %r13,(%rcx,%r9,1)
  0x00000200349a6d87: jne    0x00000200349a6da9  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148

  0x00000200349a6d8d: mov    %edi,0xcc(%rsp)
  0x00000200349a6d94: mov    %r11,0xe0(%rsp)
  0x00000200349a6d9c: mov    %r14,0xd8(%rsp)
  0x00000200349a6da4: jmpq   0x00000200349a6ee5  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165

  0x00000200349a6da9: cmp    $0x0,%rdx
  0x00000200349a6dad: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6db7: movabs $0x390,%r9
  0x00000200349a6dc1: je     0x00000200349a6dd1
  0x00000200349a6dc7: movabs $0x3a0,%r9
  0x00000200349a6dd1: mov    (%rcx,%r9,1),%r13
  0x00000200349a6dd5: lea    0x1(%r13),%r13
  0x00000200349a6dd9: mov    %r13,(%rcx,%r9,1)
  0x00000200349a6ddd: mov    %edi,0xcc(%rsp)
  0x00000200349a6de4: mov    %r11,0xe0(%rsp)
  0x00000200349a6dec: mov    %r14,0xd8(%rsp)
  0x00000200349a6df4: je     0x00000200349a6f26  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153

  0x00000200349a6dfa: mov    %r8,%r11
  0x00000200349a6dfd: movabs $0x2004f3fdce0,%r13  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6e07: mov    0x8(%r11),%r11d
  0x00000200349a6e0b: shl    $0x3,%r11
  0x00000200349a6e0f: cmp    0x3c0(%r13),%r11
  0x00000200349a6e16: jne    0x00000200349a6e25
  0x00000200349a6e18: addq   $0x1,0x3c8(%r13)
  0x00000200349a6e20: jmpq   0x00000200349a6e8b
  0x00000200349a6e25: cmp    0x3d0(%r13),%r11
  0x00000200349a6e2c: jne    0x00000200349a6e3b
  0x00000200349a6e2e: addq   $0x1,0x3d8(%r13)
  0x00000200349a6e36: jmpq   0x00000200349a6e8b
  0x00000200349a6e3b: cmpq   $0x0,0x3c0(%r13)
  0x00000200349a6e46: jne    0x00000200349a6e5f
  0x00000200349a6e48: mov    %r11,0x3c0(%r13)
  0x00000200349a6e4f: movq   $0x1,0x3c8(%r13)
  0x00000200349a6e5a: jmpq   0x00000200349a6e8b
  0x00000200349a6e5f: cmpq   $0x0,0x3d0(%r13)
  0x00000200349a6e6a: jne    0x00000200349a6e83
  0x00000200349a6e6c: mov    %r11,0x3d0(%r13)
  0x00000200349a6e73: movq   $0x1,0x3d8(%r13)
  0x00000200349a6e7e: jmpq   0x00000200349a6e8b
  0x00000200349a6e83: addq   $0x1,0x3b0(%r13)
  0x00000200349a6e8b: mov    %r8,%r11
  0x00000200349a6e8e: mov    %rdx,%r8
  0x00000200349a6e91: mov    %r11,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159

  0x00000200349a6e94: nop
  0x00000200349a6e95: movabs $0xffffffffffffffff,%rax
  0x00000200349a6e9f: callq  0x0000020034437280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159
                                                ;   {virtual_call}
  0x00000200349a6ea4: cmp    $0x0,%eax
  0x00000200349a6ea7: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6eb1: movabs $0x3e8,%r8
  0x00000200349a6ebb: je     0x00000200349a6ecb
  0x00000200349a6ec1: movabs $0x3f8,%r8
  0x00000200349a6ecb: mov    (%rax,%r8,1),%rdx
  0x00000200349a6ecf: lea    0x1(%rdx),%rdx
  0x00000200349a6ed3: mov    %rdx,(%rax,%r8,1)
  0x00000200349a6ed7: mov    0xd0(%rsp),%rsi
  0x00000200349a6edf: je     0x00000200349a6f26  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162

  0x00000200349a6ee5: mov    0x14(%rsi),%edi
  0x00000200349a6ee8: shl    $0x3,%rdi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167

  0x00000200349a6eec: cmp    $0x0,%rdi
  0x00000200349a6ef0: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a6efa: movabs $0x418,%r8
  0x00000200349a6f04: jne    0x00000200349a6f14
  0x00000200349a6f0a: movabs $0x408,%r8
  0x00000200349a6f14: mov    (%rax,%r8,1),%rdx
  0x00000200349a6f18: lea    0x1(%rdx),%rdx
  0x00000200349a6f1c: mov    %rdx,(%rax,%r8,1)
  0x00000200349a6f20: jne    0x00000200349a7e9d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173

  0x00000200349a6f26: lea    0x118(%rsp),%r8
  0x00000200349a6f2e: mov    %rsi,0x8(%r8)
  0x00000200349a6f32: mov    (%rsi),%rax
  0x00000200349a6f35: mov    %rax,%rdx
  0x00000200349a6f38: and    $0x7,%rdx
  0x00000200349a6f3c: cmp    $0x5,%rdx
  0x00000200349a6f40: jne    0x00000200349a6fc7
  0x00000200349a6f46: mov    0x8(%rsi),%edx
  0x00000200349a6f49: shl    $0x3,%rdx
  0x00000200349a6f4d: mov    0xb0(%rdx),%rdx
  0x00000200349a6f54: or     %r15,%rdx
  0x00000200349a6f57: xor    %rax,%rdx
  0x00000200349a6f5a: and    $0xffffffffffffff87,%rdx
  0x00000200349a6f5e: je     0x00000200349a6fef
  0x00000200349a6f64: test   $0x7,%rdx
  0x00000200349a6f6b: jne    0x00000200349a6fb4
  0x00000200349a6f6d: test   $0x300,%rdx
  0x00000200349a6f74: jne    0x00000200349a6f93
  0x00000200349a6f76: and    $0x37f,%rax
  0x00000200349a6f7d: mov    %rax,%rdx
  0x00000200349a6f80: or     %r15,%rdx
  0x00000200349a6f83: lock cmpxchg %rdx,(%rsi)
  0x00000200349a6f88: jne    0x00000200349a8223
  0x00000200349a6f8e: jmpq   0x00000200349a6fef
  0x00000200349a6f93: mov    0x8(%rsi),%edx
  0x00000200349a6f96: shl    $0x3,%rdx
  0x00000200349a6f9a: mov    0xb0(%rdx),%rdx
  0x00000200349a6fa1: or     %r15,%rdx
  0x00000200349a6fa4: lock cmpxchg %rdx,(%rsi)
  0x00000200349a6fa9: jne    0x00000200349a8223
  0x00000200349a6faf: jmpq   0x00000200349a6fef
  0x00000200349a6fb4: mov    0x8(%rsi),%edx
  0x00000200349a6fb7: shl    $0x3,%rdx
  0x00000200349a6fbb: mov    0xb0(%rdx),%rdx
  0x00000200349a6fc2: lock cmpxchg %rdx,(%rsi)
  0x00000200349a6fc7: mov    (%rsi),%rax
  0x00000200349a6fca: or     $0x1,%rax
  0x00000200349a6fce: mov    %rax,(%r8)
  0x00000200349a6fd1: lock cmpxchg %r8,(%rsi)
  0x00000200349a6fd6: je     0x00000200349a6fef
  0x00000200349a6fdc: sub    %rsp,%rax
  0x00000200349a6fdf: and    $0xfffffffffffff007,%rax
  0x00000200349a6fe6: mov    %rax,(%r8)
  0x00000200349a6fe9: jne    0x00000200349a8223  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187

  0x00000200349a6fef: mov    0xe0(%rsp),%rdx
  0x00000200349a6ff7: mov    0xd8(%rsp),%rdi
  0x00000200349a6fff: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7009: addq   $0x1,0x428(%r8)
  0x00000200349a7011: movabs $0x2004f36fd90,%r8  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a701b: mov    0xfc(%r8),%ebx
  0x00000200349a7022: add    $0x8,%ebx
  0x00000200349a7025: mov    %ebx,0xfc(%r8)
  0x00000200349a702c: and    $0x7ffff8,%ebx
  0x00000200349a7032: cmp    $0x0,%ebx
  0x00000200349a7035: je     0x00000200349a8236
  0x00000200349a703b: movabs $0x2004f36fd90,%r8  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7045: lea    0x170(%r8),%r8
  0x00000200349a704c: mov    %rdi,%rbx
  0x00000200349a704f: mov    0x8(%rbx),%ebx
  0x00000200349a7052: shl    $0x3,%rbx
  0x00000200349a7056: xor    0x8(%r8),%rbx
  0x00000200349a705a: test   $0xfffffffffffffffc,%rbx
  0x00000200349a7061: je     0x00000200349a7074
  0x00000200349a7063: test   $0x2,%rbx
  0x00000200349a706a: jne    0x00000200349a7074
  0x00000200349a706c: orq    $0x2,0x8(%r8)
  0x00000200349a7074: movabs $0x6d1708638,%r8   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x00000200349a707e: movabs $0x2004f36fd90,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7088: addq   $0x1,0x138(%rbx)
  0x00000200349a7090: movabs $0x2004f3712d8,%r8  ;   {metadata(method data for {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a709a: mov    0xfc(%r8),%ebx
  0x00000200349a70a1: add    $0x8,%ebx
  0x00000200349a70a4: mov    %ebx,0xfc(%r8)
  0x00000200349a70ab: and    $0x7ffff8,%ebx
  0x00000200349a70b1: cmp    $0x0,%ebx
  0x00000200349a70b4: je     0x00000200349a8257
  0x00000200349a70ba: mov    (%rdi,%rdx,1),%r8d
  0x00000200349a70be: shl    $0x3,%r8
  0x00000200349a70c2: movabs $0xc,%rbx
  0x00000200349a70cc: cmp    %rbx,%rdx
  0x00000200349a70cf: jne    0x00000200349a7107
  0x00000200349a70d5: cmp    $0x0,%rdi
  0x00000200349a70d9: je     0x00000200349a7107
  0x00000200349a70df: mov    0x8(%rdi),%edx
  0x00000200349a70e2: shl    $0x3,%rdx
  0x00000200349a70e6: movsbl 0x16b(%rdx),%edx
  0x00000200349a70ed: cmp    $0x0,%edx
  0x00000200349a70f0: je     0x00000200349a7107
  0x00000200349a70f6: movsbl 0x398(%r15),%edx
  0x00000200349a70fe: cmp    $0x0,%edx
  0x00000200349a7101: jne    0x00000200349a8278
  0x00000200349a7107: cmp    $0x0,%r8
  0x00000200349a710b: jne    0x00000200349a7126
  0x00000200349a710d: movabs $0x2004f36fd90,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7117: orl    $0x100,0x180(%rbx)
  0x00000200349a7121: jmpq   0x00000200349a71e9
  0x00000200349a7126: movabs $0x7c001acb8,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a7130: mov    0x8(%r8),%ebx
  0x00000200349a7134: shl    $0x3,%rbx
  0x00000200349a7138: cmp    0x30(%rbx),%rax
  0x00000200349a713c: jne    0x00000200349a71cd
  0x00000200349a7142: movabs $0x2004f36fd90,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a714c: mov    0x8(%r8),%eax
  0x00000200349a7150: shl    $0x3,%rax
  0x00000200349a7154: cmp    0x198(%rbx),%rax
  0x00000200349a715b: jne    0x00000200349a716a
  0x00000200349a715d: addq   $0x1,0x1a0(%rbx)
  0x00000200349a7165: jmpq   0x00000200349a71e9
  0x00000200349a716a: cmp    0x1a8(%rbx),%rax
  0x00000200349a7171: jne    0x00000200349a7180
  0x00000200349a7173: addq   $0x1,0x1b0(%rbx)
  0x00000200349a717b: jmpq   0x00000200349a71e9
  0x00000200349a7180: cmpq   $0x0,0x198(%rbx)
  0x00000200349a718b: jne    0x00000200349a71a4
  0x00000200349a718d: mov    %rax,0x198(%rbx)
  0x00000200349a7194: movq   $0x1,0x1a0(%rbx)
  0x00000200349a719f: jmpq   0x00000200349a71e9
  0x00000200349a71a4: cmpq   $0x0,0x1a8(%rbx)
  0x00000200349a71af: jne    0x00000200349a71c8
  0x00000200349a71b1: mov    %rax,0x1a8(%rbx)
  0x00000200349a71b8: movq   $0x1,0x1b0(%rbx)
  0x00000200349a71c3: jmpq   0x00000200349a71e9
  0x00000200349a71c8: jmpq   0x00000200349a71e9
  0x00000200349a71cd: movabs $0x2004f36fd90,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a71d7: subq   $0x1,0x188(%rbx)
  0x00000200349a71df: jmpq   0x00000200349a8290
  0x00000200349a71e4: jmpq   0x00000200349a71e9  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192

  0x00000200349a71e9: cmp    %rsi,%r8
  0x00000200349a71ec: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a71f6: movabs $0x448,%rdx
  0x00000200349a7200: je     0x00000200349a7210
  0x00000200349a7206: movabs $0x438,%rdx
  0x00000200349a7210: mov    (%r8,%rdx,1),%rbx
  0x00000200349a7214: lea    0x1(%rbx),%rbx
  0x00000200349a7218: mov    %rbx,(%r8,%rdx,1)
  0x00000200349a721c: je     0x00000200349a724f  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197

  0x00000200349a7222: mov    0xc4(%rsp),%ebx
  0x00000200349a7229: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000200349a7233: mov    %rdi,0xd8(%rsp)
  0x00000200349a723b: mov    0xc0(%rsp),%edi
  0x00000200349a7242: mov    0xb8(%rsp),%r9
  0x00000200349a724a: jmpq   0x00000200349a7ccb  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379

  0x00000200349a724f: mov    0xcc(%rsp),%r8d
  0x00000200349a7257: cmp    $0x0,%r8d
  0x00000200349a725b: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7265: movabs $0x458,%rdx
  0x00000200349a726f: jl     0x00000200349a727f
  0x00000200349a7275: movabs $0x468,%rdx
  0x00000200349a727f: mov    (%r8,%rdx,1),%rbx
  0x00000200349a7283: lea    0x1(%rbx),%rbx
  0x00000200349a7287: mov    %rbx,(%r8,%rdx,1)
  0x00000200349a728b: jl     0x00000200349a77aa  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202

  0x00000200349a7291: mov    %rsi,%rbx
  0x00000200349a7294: mov    $0x1,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212

  0x00000200349a7299: mov    %eax,0xec(%rsp)
  0x00000200349a72a0: mov    %rdi,0xd8(%rsp)
  0x00000200349a72a8: mov    0xc8(%rsp),%edx
  0x00000200349a72af: mov    0xb0(%rsp),%r8
  0x00000200349a72b7: mov    0xc(%rbx),%ecx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ; implicit exception: dispatches to 0x00000200349a8299
  0x00000200349a72ba: cmp    %edx,%ecx
  0x00000200349a72bc: movabs $0x2004f3fdce0,%rcx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a72c6: movabs $0x478,%r9
  0x00000200349a72d0: jne    0x00000200349a72e0
  0x00000200349a72d6: movabs $0x488,%r9
  0x00000200349a72e0: mov    (%rcx,%r9,1),%r11
  0x00000200349a72e4: lea    0x1(%r11),%r11
  0x00000200349a72e8: mov    %r11,(%rcx,%r9,1)
  0x00000200349a72ec: jne    0x00000200349a7465  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219

  0x00000200349a72f2: mov    0x10(%rbx),%ecx
  0x00000200349a72f5: shl    $0x3,%rcx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224

  0x00000200349a72f9: cmp    %r8,%rcx
  0x00000200349a72fc: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7306: movabs $0x498,%r11
  0x00000200349a7310: je     0x00000200349a7320
  0x00000200349a7316: movabs $0x4a8,%r11
  0x00000200349a7320: mov    (%r9,%r11,1),%r13
  0x00000200349a7324: lea    0x1(%r13),%r13
  0x00000200349a7328: mov    %r13,(%r9,%r11,1)
  0x00000200349a732c: je     0x00000200349a7515  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231

  0x00000200349a7332: cmp    $0x0,%rcx
  0x00000200349a7336: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7340: movabs $0x4b8,%r11
  0x00000200349a734a: je     0x00000200349a735a
  0x00000200349a7350: movabs $0x4c8,%r11
  0x00000200349a735a: mov    (%r9,%r11,1),%r13
  0x00000200349a735e: lea    0x1(%r13),%r13
  0x00000200349a7362: mov    %r13,(%r9,%r11,1)
  0x00000200349a7366: je     0x00000200349a7465  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236

  0x00000200349a736c: mov    %rbx,0xf0(%rsp)
  0x00000200349a7374: mov    %r8,%r9
  0x00000200349a7377: movabs $0x2004f3fdce0,%r11  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7381: mov    0x8(%r9),%r9d
  0x00000200349a7385: shl    $0x3,%r9
  0x00000200349a7389: cmp    0x4e8(%r11),%r9
  0x00000200349a7390: jne    0x00000200349a739f
  0x00000200349a7392: addq   $0x1,0x4f0(%r11)
  0x00000200349a739a: jmpq   0x00000200349a7405
  0x00000200349a739f: cmp    0x4f8(%r11),%r9
  0x00000200349a73a6: jne    0x00000200349a73b5
  0x00000200349a73a8: addq   $0x1,0x500(%r11)
  0x00000200349a73b0: jmpq   0x00000200349a7405
  0x00000200349a73b5: cmpq   $0x0,0x4e8(%r11)
  0x00000200349a73c0: jne    0x00000200349a73d9
  0x00000200349a73c2: mov    %r9,0x4e8(%r11)
  0x00000200349a73c9: movq   $0x1,0x4f0(%r11)
  0x00000200349a73d4: jmpq   0x00000200349a7405
  0x00000200349a73d9: cmpq   $0x0,0x4f8(%r11)
  0x00000200349a73e4: jne    0x00000200349a73fd
  0x00000200349a73e6: mov    %r9,0x4f8(%r11)
  0x00000200349a73ed: movq   $0x1,0x500(%r11)
  0x00000200349a73f8: jmpq   0x00000200349a7405
  0x00000200349a73fd: addq   $0x1,0x4d8(%r11)
  0x00000200349a7405: mov    %r8,%r9
  0x00000200349a7408: mov    %rcx,%r8
  0x00000200349a740b: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242

  0x00000200349a740e: nopl   0x0(%rax)
  0x00000200349a7415: movabs $0xffffffffffffffff,%rax
  0x00000200349a741f: callq  0x0000020034437280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242
                                                ;   {virtual_call}
  0x00000200349a7424: cmp    $0x0,%eax
  0x00000200349a7427: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7431: movabs $0x520,%rsi
  0x00000200349a743b: jne    0x00000200349a744b
  0x00000200349a7441: movabs $0x510,%rsi
  0x00000200349a744b: mov    (%rdx,%rsi,1),%rdi
  0x00000200349a744f: lea    0x1(%rdi),%rdi
  0x00000200349a7453: mov    %rdi,(%rdx,%rsi,1)
  0x00000200349a7457: mov    0xf0(%rsp),%rbx
  0x00000200349a745f: jne    0x00000200349a7501  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245

  0x00000200349a7465: mov    0x18(%rbx),%edx
  0x00000200349a7468: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274

  0x00000200349a746c: cmp    $0x0,%rdx
  0x00000200349a7470: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a747a: movabs $0x578,%rdi
  0x00000200349a7484: je     0x00000200349a7494
  0x00000200349a748a: movabs $0x568,%rdi
  0x00000200349a7494: mov    (%rsi,%rdi,1),%rax
  0x00000200349a7498: lea    0x1(%rax),%rax
  0x00000200349a749c: mov    %rax,(%rsi,%rdi,1)
  0x00000200349a74a0: je     0x00000200349a75e4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280

  0x00000200349a74a6: mov    0xec(%rsp),%eax
  0x00000200349a74ad: inc    %eax
  0x00000200349a74af: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a74b9: mov    0x100(%rsi),%edi
  0x00000200349a74bf: add    $0x8,%edi
  0x00000200349a74c2: mov    %edi,0x100(%rsi)
  0x00000200349a74c8: and    $0xfff8,%edi
  0x00000200349a74ce: cmp    $0x0,%edi
  0x00000200349a74d1: je     0x00000200349a829e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x00000200349a74d7: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x00000200349a74db: test   %eax,(%r10)        ;   {poll}
  0x00000200349a74de: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a74e8: incl   0x5b0(%rsi)
  0x00000200349a74ee: mov    %rdx,%rbx
  0x00000200349a74f1: mov    %rax,%r8
  0x00000200349a74f4: mov    %r8d,0xec(%rsp)
  0x00000200349a74fc: jmpq   0x00000200349a72a8  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x00000200349a7501: mov    0xec(%rsp),%r8d
  0x00000200349a7509: mov    0xc0(%rsp),%edi
  0x00000200349a7510: jmpq   0x00000200349a7524  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@248

  0x00000200349a7515: mov    0xc0(%rsp),%edi
  0x00000200349a751c: mov    0xec(%rsp),%r8d
  0x00000200349a7524: mov    0x14(%rbx),%edx
  0x00000200349a7527: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250

  0x00000200349a752b: cmp    $0x0,%edi
  0x00000200349a752e: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7538: movabs $0x540,%rax
  0x00000200349a7542: je     0x00000200349a7552
  0x00000200349a7548: movabs $0x530,%rax
  0x00000200349a7552: mov    (%rsi,%rax,1),%rcx
  0x00000200349a7556: lea    0x1(%rcx),%rcx
  0x00000200349a755a: mov    %rcx,(%rsi,%rax,1)
  0x00000200349a755e: je     0x00000200349a7581  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256

  0x00000200349a7564: mov    0xc8(%rsp),%r13d
  0x00000200349a756c: mov    0xb8(%rsp),%r9
  0x00000200349a7574: mov    0xb0(%rsp),%r11
  0x00000200349a757c: jmpq   0x00000200349a7788  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x00000200349a7581: mov    0xb8(%rsp),%r9
  0x00000200349a7589: movsbl 0x398(%r15),%esi
  0x00000200349a7591: cmp    $0x0,%esi
  0x00000200349a7594: jne    0x00000200349a82bf
  0x00000200349a759a: mov    %r9,%r10
  0x00000200349a759d: shr    $0x3,%r10
  0x00000200349a75a1: mov    %r10d,0x14(%rbx)
  0x00000200349a75a5: mov    %rbx,%rsi
  0x00000200349a75a8: xor    %r9,%rsi
  0x00000200349a75ab: shr    $0x14,%rsi
  0x00000200349a75af: cmp    $0x0,%rsi
  0x00000200349a75b3: jne    0x00000200349a82de
  0x00000200349a75b9: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262

  0x00000200349a75bf: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a75c9: incl   0x550(%rsi)
  0x00000200349a75cf: mov    0xc8(%rsp),%r13d
  0x00000200349a75d7: mov    0xb0(%rsp),%r11
  0x00000200349a75df: jmpq   0x00000200349a7788  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265

  0x00000200349a75e4: mov    0xec(%rsp),%r8d
  0x00000200349a75ec: mov    0xc8(%rsp),%edx
  0x00000200349a75f3: mov    0xb8(%rsp),%r9
  0x00000200349a75fb: mov    0xb0(%rsp),%r11
  0x00000200349a7603: mov    %rdx,%r13
  0x00000200349a7606: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a7610: mov    0x80(%r15),%rax
  0x00000200349a7617: lea    0x20(%rax),%rdi
  0x00000200349a761b: cmp    0x90(%r15),%rdi
  0x00000200349a7622: ja     0x00000200349a82f6
  0x00000200349a7628: mov    %rdi,0x80(%r15)
  0x00000200349a762f: mov    0xb0(%rdx),%rcx
  0x00000200349a7636: mov    %rcx,(%rax)
  0x00000200349a7639: mov    %rdx,%rcx
  0x00000200349a763c: shr    $0x3,%rcx
  0x00000200349a7640: mov    %ecx,0x8(%rax)
  0x00000200349a7643: xor    %rcx,%rcx
  0x00000200349a7646: mov    %ecx,0xc(%rax)
  0x00000200349a7649: xor    %rcx,%rcx
  0x00000200349a764c: mov    %rcx,0x10(%rax)
  0x00000200349a7650: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285

  0x00000200349a7654: mov    %rax,%rdi
  0x00000200349a7657: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7661: addq   $0x1,0x588(%rdx)
  0x00000200349a7669: movabs $0x2004f3feb68,%rdi  ;   {metadata(method data for {method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a7673: mov    0xfc(%rdi),%edx
  0x00000200349a7679: add    $0x8,%edx
  0x00000200349a767c: mov    %edx,0xfc(%rdi)
  0x00000200349a7682: and    $0x7ffff8,%edx
  0x00000200349a7688: cmp    $0x0,%edx
  0x00000200349a768b: je     0x00000200349a8303
  0x00000200349a7691: mov    %rax,%rdi
  0x00000200349a7694: movabs $0x2004f3feb68,%rdx  ;   {metadata(method data for {method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a769e: addq   $0x1,0x138(%rdx)
  0x00000200349a76a6: movabs $0x2004f3632f0,%rdi  ;   {metadata(method data for {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a76b0: mov    0xfc(%rdi),%edx
  0x00000200349a76b6: add    $0x8,%edx
  0x00000200349a76b9: mov    %edx,0xfc(%rdi)
  0x00000200349a76bf: and    $0x7ffff8,%edx
  0x00000200349a76c5: cmp    $0x0,%edx
  0x00000200349a76c8: je     0x00000200349a8324
  0x00000200349a76ce: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293

  0x00000200349a76d2: movsbl 0x398(%r15),%edi
  0x00000200349a76da: cmp    $0x0,%edi
  0x00000200349a76dd: jne    0x00000200349a8345
  0x00000200349a76e3: mov    %r11,%r10
  0x00000200349a76e6: shr    $0x3,%r10
  0x00000200349a76ea: mov    %r10d,0x10(%rax)
  0x00000200349a76ee: mov    %rax,%rdi
  0x00000200349a76f1: xor    %r11,%rdi
  0x00000200349a76f4: shr    $0x14,%rdi
  0x00000200349a76f8: cmp    $0x0,%rdi
  0x00000200349a76fc: jne    0x00000200349a8364
  0x00000200349a7702: movsbl 0x398(%r15),%edi
  0x00000200349a770a: cmp    $0x0,%edi
  0x00000200349a770d: jne    0x00000200349a837c
  0x00000200349a7713: mov    %r9,%r10
  0x00000200349a7716: shr    $0x3,%r10
  0x00000200349a771a: mov    %r10d,0x14(%rax)
  0x00000200349a771e: mov    %rax,%rdi
  0x00000200349a7721: xor    %r9,%rdi
  0x00000200349a7724: shr    $0x14,%rdi
  0x00000200349a7728: cmp    $0x0,%rdi
  0x00000200349a772c: jne    0x00000200349a839b
  0x00000200349a7732: lock addl $0x0,-0x40(%rsp)
  0x00000200349a7738: movsbl 0x398(%r15),%edi
  0x00000200349a7740: cmp    $0x0,%edi
  0x00000200349a7743: jne    0x00000200349a83b3
  0x00000200349a7749: mov    %rax,%r10
  0x00000200349a774c: shr    $0x3,%r10
  0x00000200349a7750: mov    %r10d,0x18(%rbx)
  0x00000200349a7754: mov    %rbx,%rdi
  0x00000200349a7757: xor    %rax,%rdi
  0x00000200349a775a: shr    $0x14,%rdi
  0x00000200349a775e: cmp    $0x0,%rdi
  0x00000200349a7762: jne    0x00000200349a83d2
  0x00000200349a7768: lock addl $0x0,-0x40(%rsp)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296

  0x00000200349a776e: movabs $0x2004f3fdce0,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7778: incl   0x598(%rdi)
  0x00000200349a777e: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299
                                                ;   {oop(NULL)}
  0x00000200349a7788: movabs $0x2004f3fdce0,%rdi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7792: incl   0x5c8(%rdi)
  0x00000200349a7798: mov    %rdx,%rsi
  0x00000200349a779b: mov    %r8,%rbx
  0x00000200349a779e: mov    0xc0(%rsp),%edi
  0x00000200349a77a5: jmpq   0x00000200349a7ccb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x00000200349a77aa: mov    %rdi,0xd8(%rsp)
  0x00000200349a77b2: mov    0xc8(%rsp),%r13d
  0x00000200349a77ba: mov    0xb8(%rsp),%r9
  0x00000200349a77c2: mov    0xb0(%rsp),%r11
  0x00000200349a77ca: cmp    $0x0,%rsi
  0x00000200349a77ce: jne    0x00000200349a77e9
  0x00000200349a77d0: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a77da: orl    $0x100,0x5d8(%rdx)
  0x00000200349a77e4: jmpq   0x00000200349a78d8
  0x00000200349a77e9: nopl   0x0(%rax)
  0x00000200349a77f0: jmpq   0x00000200349a83f9  ;   {no_reloc}
  0x00000200349a77f5: add    %al,(%rax)
  0x00000200349a77f7: add    %al,(%rax)
  0x00000200349a77f9: add    %cl,-0x3eb7f7aa(%rbx)
  0x00000200349a77ff: loop   0x00000200349a7804
  0x00000200349a7801: cmp    %rbx,%rdx
  0x00000200349a7804: je     0x00000200349a7832
  0x00000200349a780a: mov    0xc(%rbx),%edi
  0x00000200349a780d: cmp    (%rdx,%rdi,1),%rbx
  0x00000200349a7811: je     0x00000200349a7832
  0x00000200349a7817: cmp    $0x18,%edi
  0x00000200349a781a: jne    0x00000200349a78bc
  0x00000200349a7820: push   %rdx
  0x00000200349a7821: push   %rbx
  0x00000200349a7822: callq  0x00000200344ff180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00000200349a7827: pop    %rdx
  0x00000200349a7828: pop    %rbx
  0x00000200349a7829: cmp    $0x0,%ebx
  0x00000200349a782c: je     0x00000200349a78bc
  0x00000200349a7832: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a783c: mov    0x8(%rsi),%ebx
  0x00000200349a783f: shl    $0x3,%rbx
  0x00000200349a7843: cmp    0x5f0(%rdx),%rbx
  0x00000200349a784a: jne    0x00000200349a7859
  0x00000200349a784c: addq   $0x1,0x5f8(%rdx)
  0x00000200349a7854: jmpq   0x00000200349a78dd
  0x00000200349a7859: cmp    0x600(%rdx),%rbx
  0x00000200349a7860: jne    0x00000200349a786f
  0x00000200349a7862: addq   $0x1,0x608(%rdx)
  0x00000200349a786a: jmpq   0x00000200349a78dd
  0x00000200349a786f: cmpq   $0x0,0x5f0(%rdx)
  0x00000200349a787a: jne    0x00000200349a7893
  0x00000200349a787c: mov    %rbx,0x5f0(%rdx)
  0x00000200349a7883: movq   $0x1,0x5f8(%rdx)
  0x00000200349a788e: jmpq   0x00000200349a78dd
  0x00000200349a7893: cmpq   $0x0,0x600(%rdx)
  0x00000200349a789e: jne    0x00000200349a78b7
  0x00000200349a78a0: mov    %rbx,0x600(%rdx)
  0x00000200349a78a7: movq   $0x1,0x608(%rdx)
  0x00000200349a78b2: jmpq   0x00000200349a78dd
  0x00000200349a78b7: jmpq   0x00000200349a78dd
  0x00000200349a78bc: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a78c6: subq   $0x1,0x5e0(%rdx)
  0x00000200349a78ce: jmpq   0x00000200349a78d8
  0x00000200349a78d3: jmpq   0x00000200349a78dd
  0x00000200349a78d8: xor    %r8,%r8
  0x00000200349a78db: jmp    0x00000200349a78e7
  0x00000200349a78dd: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313

  0x00000200349a78e7: cmp    $0x0,%r8d
  0x00000200349a78eb: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a78f5: movabs $0x618,%rdi
  0x00000200349a78ff: je     0x00000200349a790f
  0x00000200349a7905: movabs $0x628,%rdi
  0x00000200349a790f: mov    (%r8,%rdi,1),%rdx
  0x00000200349a7913: lea    0x1(%rdx),%rdx
  0x00000200349a7917: mov    %rdx,(%r8,%rdi,1)
  0x00000200349a791b: je     0x00000200349a7b5b  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316

  0x00000200349a7921: cmp    $0x0,%rsi
  0x00000200349a7925: jne    0x00000200349a7940
  0x00000200349a7927: movabs $0x2004f3fdce0,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7931: orl    $0x100,0x630(%rbx)
  0x00000200349a793b: jmpq   0x00000200349a7a2a
  0x00000200349a7940: jmpq   0x00000200349a8412  ;   {no_reloc}
  0x00000200349a7945: add    %al,(%rax)
  0x00000200349a7947: add    %al,(%rax)
  0x00000200349a7949: add    %cl,-0x3eb7f7a2(%rbx)
  0x00000200349a794f: jrcxz  0x00000200349a7954
  0x00000200349a7951: cmp    %rax,%rbx
  0x00000200349a7954: je     0x00000200349a7984
  0x00000200349a795a: mov    0xc(%rax),%r8d
  0x00000200349a795e: cmp    (%rbx,%r8,1),%rax
  0x00000200349a7962: je     0x00000200349a7984
  0x00000200349a7968: cmp    $0x18,%r8d
  0x00000200349a796c: jne    0x00000200349a7a0e
  0x00000200349a7972: push   %rbx
  0x00000200349a7973: push   %rax
  0x00000200349a7974: callq  0x00000200344ff180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00000200349a7979: pop    %rbx
  0x00000200349a797a: pop    %rax
  0x00000200349a797b: cmp    $0x0,%eax
  0x00000200349a797e: je     0x00000200349a7a0e
  0x00000200349a7984: movabs $0x2004f3fdce0,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a798e: mov    0x8(%rsi),%eax
  0x00000200349a7991: shl    $0x3,%rax
  0x00000200349a7995: cmp    0x648(%rbx),%rax
  0x00000200349a799c: jne    0x00000200349a79ab
  0x00000200349a799e: addq   $0x1,0x650(%rbx)
  0x00000200349a79a6: jmpq   0x00000200349a7a2a
  0x00000200349a79ab: cmp    0x658(%rbx),%rax
  0x00000200349a79b2: jne    0x00000200349a79c1
  0x00000200349a79b4: addq   $0x1,0x660(%rbx)
  0x00000200349a79bc: jmpq   0x00000200349a7a2a
  0x00000200349a79c1: cmpq   $0x0,0x648(%rbx)
  0x00000200349a79cc: jne    0x00000200349a79e5
  0x00000200349a79ce: mov    %rax,0x648(%rbx)
  0x00000200349a79d5: movq   $0x1,0x650(%rbx)
  0x00000200349a79e0: jmpq   0x00000200349a7a2a
  0x00000200349a79e5: cmpq   $0x0,0x658(%rbx)
  0x00000200349a79f0: jne    0x00000200349a7a09
  0x00000200349a79f2: mov    %rax,0x658(%rbx)
  0x00000200349a79f9: movq   $0x1,0x660(%rbx)
  0x00000200349a7a04: jmpq   0x00000200349a7a2a
  0x00000200349a7a09: jmpq   0x00000200349a7a2a
  0x00000200349a7a0e: movabs $0x2004f3fdce0,%rbx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7a18: subq   $0x1,0x638(%rbx)
  0x00000200349a7a20: jmpq   0x00000200349a841c
  0x00000200349a7a25: jmpq   0x00000200349a7a2a
  0x00000200349a7a2a: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324

  0x00000200349a7a2d: mov    %r13,%r8
  0x00000200349a7a30: mov    %r9,%rbx
  0x00000200349a7a33: mov    %r11,%r9
  0x00000200349a7a36: mov    %rbx,%rdi          ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331

  0x00000200349a7a39: nopl   0x0(%rax)
  0x00000200349a7a3d: movabs $0xffffffffffffffff,%rax
  0x00000200349a7a47: callq  0x0000020034437280  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331
                                                ;   {virtual_call}
  0x00000200349a7a4c: cmp    $0x0,%rax
  0x00000200349a7a50: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7a5a: movabs $0x6b8,%r9
  0x00000200349a7a64: jne    0x00000200349a7a74
  0x00000200349a7a6a: movabs $0x6a8,%r9
  0x00000200349a7a74: mov    (%r8,%r9,1),%rdx
  0x00000200349a7a78: lea    0x1(%rdx),%rdx
  0x00000200349a7a7c: mov    %rdx,(%r8,%r9,1)
  0x00000200349a7a80: jne    0x00000200349a7aa4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337

  0x00000200349a7a86: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000200349a7a90: mov    0xc0(%rsp),%edi
  0x00000200349a7a97: mov    0xb8(%rsp),%r9
  0x00000200349a7a9f: jmpq   0x00000200349a7b3d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x00000200349a7aa4: mov    0xc0(%rsp),%edi
  0x00000200349a7aab: mov    0x14(%rax),%r8d    ; implicit exception: dispatches to 0x00000200349a8425
  0x00000200349a7aaf: shl    $0x3,%r8           ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342

  0x00000200349a7ab3: cmp    $0x0,%edi
  0x00000200349a7ab6: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7ac0: movabs $0x6d8,%rdx
  0x00000200349a7aca: je     0x00000200349a7ada
  0x00000200349a7ad0: movabs $0x6c8,%rdx
  0x00000200349a7ada: mov    (%r9,%rdx,1),%rsi
  0x00000200349a7ade: lea    0x1(%rsi),%rsi
  0x00000200349a7ae2: mov    %rsi,(%r9,%rdx,1)
  0x00000200349a7ae6: je     0x00000200349a7afc  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348

  0x00000200349a7aec: mov    %r8,%rax
  0x00000200349a7aef: mov    0xb8(%rsp),%r9
  0x00000200349a7af7: jmpq   0x00000200349a7b3d  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x00000200349a7afc: mov    0xb8(%rsp),%r9
  0x00000200349a7b04: movsbl 0x398(%r15),%edx
  0x00000200349a7b0c: cmp    $0x0,%edx
  0x00000200349a7b0f: jne    0x00000200349a842a
  0x00000200349a7b15: mov    %r9,%r10
  0x00000200349a7b18: shr    $0x3,%r10
  0x00000200349a7b1c: mov    %r10d,0x14(%rax)
  0x00000200349a7b20: mov    %rax,%rdx
  0x00000200349a7b23: xor    %r9,%rdx
  0x00000200349a7b26: shr    $0x14,%rdx
  0x00000200349a7b2a: cmp    $0x0,%rdx
  0x00000200349a7b2e: jne    0x00000200349a8449
  0x00000200349a7b34: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354

  0x00000200349a7b3a: mov    %r8,%rax
  0x00000200349a7b3d: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7b47: incl   0x6e8(%r8)
  0x00000200349a7b4e: mov    %rax,%rsi
  0x00000200349a7b51: mov    $0x2,%ebx
  0x00000200349a7b56: jmpq   0x00000200349a7ccb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x00000200349a7b5b: mov    0xc0(%rsp),%edi
  0x00000200349a7b62: cmp    $0x0,%rsi
  0x00000200349a7b66: jne    0x00000200349a7b81
  0x00000200349a7b68: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7b72: orl    $0x100,0x6f8(%rdx)
  0x00000200349a7b7c: jmpq   0x00000200349a7c72
  0x00000200349a7b81: nopl   0x0(%rax)
  0x00000200349a7b88: jmpq   0x00000200349a8470  ;   {no_reloc}
  0x00000200349a7b8d: add    %al,(%rax)
  0x00000200349a7b8f: add    %al,(%rax)
  0x00000200349a7b91: add    %cl,-0x3eb7f7aa(%rbx)
  0x00000200349a7b97: loop   0x00000200349a7b9c
  0x00000200349a7b99: cmp    %rbx,%rdx
  0x00000200349a7b9c: je     0x00000200349a7bcc
  0x00000200349a7ba2: mov    0xc(%rbx),%r8d
  0x00000200349a7ba6: cmp    (%rdx,%r8,1),%rbx
  0x00000200349a7baa: je     0x00000200349a7bcc
  0x00000200349a7bb0: cmp    $0x18,%r8d
  0x00000200349a7bb4: jne    0x00000200349a7c56
  0x00000200349a7bba: push   %rdx
  0x00000200349a7bbb: push   %rbx
  0x00000200349a7bbc: callq  0x00000200344ff180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x00000200349a7bc1: pop    %rdx
  0x00000200349a7bc2: pop    %rbx
  0x00000200349a7bc3: cmp    $0x0,%ebx
  0x00000200349a7bc6: je     0x00000200349a7c56
  0x00000200349a7bcc: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7bd6: mov    0x8(%rsi),%ebx
  0x00000200349a7bd9: shl    $0x3,%rbx
  0x00000200349a7bdd: cmp    0x710(%rdx),%rbx
  0x00000200349a7be4: jne    0x00000200349a7bf3
  0x00000200349a7be6: addq   $0x1,0x718(%rdx)
  0x00000200349a7bee: jmpq   0x00000200349a7c77
  0x00000200349a7bf3: cmp    0x720(%rdx),%rbx
  0x00000200349a7bfa: jne    0x00000200349a7c09
  0x00000200349a7bfc: addq   $0x1,0x728(%rdx)
  0x00000200349a7c04: jmpq   0x00000200349a7c77
  0x00000200349a7c09: cmpq   $0x0,0x710(%rdx)
  0x00000200349a7c14: jne    0x00000200349a7c2d
  0x00000200349a7c16: mov    %rbx,0x710(%rdx)
  0x00000200349a7c1d: movq   $0x1,0x718(%rdx)
  0x00000200349a7c28: jmpq   0x00000200349a7c77
  0x00000200349a7c2d: cmpq   $0x0,0x720(%rdx)
  0x00000200349a7c38: jne    0x00000200349a7c51
  0x00000200349a7c3a: mov    %rbx,0x720(%rdx)
  0x00000200349a7c41: movq   $0x1,0x728(%rdx)
  0x00000200349a7c4c: jmpq   0x00000200349a7c77
  0x00000200349a7c51: jmpq   0x00000200349a7c77
  0x00000200349a7c56: movabs $0x2004f3fdce0,%rdx  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7c60: subq   $0x1,0x700(%rdx)
  0x00000200349a7c68: jmpq   0x00000200349a7c72
  0x00000200349a7c6d: jmpq   0x00000200349a7c77
  0x00000200349a7c72: xor    %rax,%rax
  0x00000200349a7c75: jmp    0x00000200349a7c81
  0x00000200349a7c77: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362

  0x00000200349a7c81: cmp    $0x0,%eax
  0x00000200349a7c84: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7c8e: movabs $0x748,%r8
  0x00000200349a7c98: jne    0x00000200349a7ca8
  0x00000200349a7c9e: movabs $0x738,%r8
  0x00000200349a7ca8: mov    (%rax,%r8,1),%rdx
  0x00000200349a7cac: lea    0x1(%rdx),%rdx
  0x00000200349a7cb0: mov    %rdx,(%rax,%r8,1)
  0x00000200349a7cb4: jne    0x00000200349a7f16  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365

  0x00000200349a7cba: mov    0xc4(%rsp),%ebx
  0x00000200349a7cc1: movabs $0x0,%rsi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379
                                                ;   {oop(NULL)}
  0x00000200349a7ccb: lea    0x118(%rsp),%rax
  0x00000200349a7cd3: mov    0x8(%rax),%rdx
  0x00000200349a7cd7: mov    (%rdx),%r8
  0x00000200349a7cda: and    $0x7,%r8
  0x00000200349a7cde: cmp    $0x5,%r8
  0x00000200349a7ce2: je     0x00000200349a7cff
  0x00000200349a7ce8: mov    (%rax),%r8
  0x00000200349a7ceb: test   %r8,%r8
  0x00000200349a7cee: je     0x00000200349a7cff
  0x00000200349a7cf4: lock cmpxchg %r8,(%rdx)
  0x00000200349a7cf9: jne    0x00000200349a847a  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381

  0x00000200349a7cff: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7d09: incl   0x768(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@382

  0x00000200349a7d10: cmp    $0x0,%ebx
  0x00000200349a7d13: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7d1d: movabs $0x790,%rdx
  0x00000200349a7d27: jne    0x00000200349a7d37
  0x00000200349a7d2d: movabs $0x780,%rdx
  0x00000200349a7d37: mov    (%r8,%rdx,1),%rax
  0x00000200349a7d3b: lea    0x1(%rax),%rax
  0x00000200349a7d3f: mov    %rax,(%r8,%rdx,1)
  0x00000200349a7d43: jne    0x00000200349a7dad  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@395

  0x00000200349a7d49: mov    0xd8(%rsp),%rax
  0x00000200349a7d51: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7d5b: mov    0x100(%r8),%edx
  0x00000200349a7d62: add    $0x8,%edx
  0x00000200349a7d65: mov    %edx,0x100(%r8)
  0x00000200349a7d6c: and    $0xfff8,%edx
  0x00000200349a7d72: cmp    $0x0,%edx
  0x00000200349a7d75: je     0x00000200349a8490  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x00000200349a7d7b: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x00000200349a7d7f: test   %eax,(%r10)        ;   {poll}
  0x00000200349a7d82: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7d8c: incl   0x7f0(%r8)
  0x00000200349a7d93: mov    %rax,%r8
  0x00000200349a7d96: mov    %ebx,0xc4(%rsp)
  0x00000200349a7d9d: mov    0xa8(%rsp),%rsi
  0x00000200349a7da5: mov    %r8,%rdi
  0x00000200349a7da8: jmpq   0x00000200349a66a0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x00000200349a7dad: mov    0xd8(%rsp),%r8
  0x00000200349a7db5: cmp    $0x8,%ebx
  0x00000200349a7db8: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7dc2: movabs $0x7b0,%rdx
  0x00000200349a7dcc: jge    0x00000200349a7ddc
  0x00000200349a7dd2: movabs $0x7a0,%rdx
  0x00000200349a7ddc: mov    (%r9,%rdx,1),%rdi
  0x00000200349a7de0: lea    0x1(%rdi),%rdi
  0x00000200349a7de4: mov    %rdi,(%r9,%rdx,1)
  0x00000200349a7de8: jge    0x00000200349a7dfa  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@402

  0x00000200349a7dee: mov    %ebx,0x100(%rsp)
  0x00000200349a7df5: jmpq   0x00000200349a7e44  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@413

  0x00000200349a7dfa: mov    %rsi,0xf8(%rsp)
  0x00000200349a7e02: mov    %ebx,0x100(%rsp)
  0x00000200349a7e09: mov    0xe8(%rsp),%ecx
  0x00000200349a7e10: mov    0xa8(%rsp),%rdx
  0x00000200349a7e18: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7e22: addq   $0x1,0x7c0(%r9)
  0x00000200349a7e2a: mov    %rcx,%r9
  0x00000200349a7e2d: mov    0xa8(%rsp),%rdx    ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410

  0x00000200349a7e35: xchg   %ax,%ax
  0x00000200349a7e37: callq  0x0000020034437000  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410
                                                ;   {optimized virtual_call}
  0x00000200349a7e3c: mov    0xf8(%rsp),%rsi
  0x00000200349a7e44: cmp    $0x0,%rsi
  0x00000200349a7e48: movabs $0x2004f3fdce0,%rax  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7e52: movabs $0x7e0,%r8
  0x00000200349a7e5c: jne    0x00000200349a7e6c
  0x00000200349a7e62: movabs $0x7d0,%r8
  0x00000200349a7e6c: mov    (%rax,%r8,1),%r9
  0x00000200349a7e70: lea    0x1(%r9),%r9
  0x00000200349a7e74: mov    %r9,(%rax,%r8,1)
  0x00000200349a7e78: jne    0x00000200349a7e8a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@415

  0x00000200349a7e7e: mov    0x100(%rsp),%ebx
  0x00000200349a7e85: jmpq   0x00000200349a7ec8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@424

  0x00000200349a7e8a: mov    %rsi,%rax
  0x00000200349a7e8d: add    $0x130,%rsp
  0x00000200349a7e94: pop    %rbp
  0x00000200349a7e95: mov    0x70(%r15),%r10
  0x00000200349a7e99: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a7e9c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420

  0x00000200349a7e9d: mov    %rdi,%rax
  0x00000200349a7ea0: add    $0x130,%rsp
  0x00000200349a7ea7: pop    %rbp
  0x00000200349a7ea8: mov    0x70(%r15),%r10
  0x00000200349a7eac: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a7eaf: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178

  0x00000200349a7eb0: mov    0xc4(%rsp),%ebx
  0x00000200349a7eb7: movabs $0x2004f3fdce0,%r8  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7ec1: incl   0x2a8(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100

  0x00000200349a7ec8: mov    0xa8(%rsp),%rdx
  0x00000200349a7ed0: mov    %rdx,%r8
  0x00000200349a7ed3: movabs $0x2004f3fdce0,%r9  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7edd: addq   $0x1,0x808(%r9)
  0x00000200349a7ee5: movabs $0x1,%r8
  0x00000200349a7eef: mov    %rbx,%r9           ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428

  0x00000200349a7ef2: nopl   0x0(%rax,%rax,1)
  0x00000200349a7ef7: callq  0x00000200349a85d5  ; ImmutableOopMap{}
                                                ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428
                                                ;   {optimized virtual_call}
  0x00000200349a7efc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000200349a7f06: add    $0x130,%rsp
  0x00000200349a7f0d: pop    %rbp
  0x00000200349a7f0e: mov    0x70(%r15),%r10
  0x00000200349a7f12: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a7f15: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@432

  0x00000200349a7f16: xchg   %ax,%ax
  0x00000200349a7f18: jmpq   0x00000200349a84c0  ;   {no_reloc}
  0x00000200349a7f1d: add    %al,(%rax)
  0x00000200349a7f1f: add    %al,(%rax)
  0x00000200349a7f21: add    %ch,%cl
  0x00000200349a7f23: movabs %eax,0xba48c08b4c000005  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7f2c: loopne 0x00000200349a7f0a
  0x00000200349a7f2e: (bad)  
  0x00000200349a7f2f: rex.WRXB add %r8b,(%r10)
  0x00000200349a7f32: add    %al,(%rax)
  0x00000200349a7f34: addq   $0x1,0x758(%rdx)
  0x00000200349a7f3c: movabs $0x6d168fe08,%r8   ;   {oop("Recursive update"{0x00000006d168fe08})}
  0x00000200349a7f46: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375

  0x00000200349a7f49: mov    %rax,0x108(%rsp)
  0x00000200349a7f51: nopw   0x0(%rax,%rax,1)
  0x00000200349a7f57: callq  0x0000020034437000  ; ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375
                                                ;   {optimized virtual_call}
  0x00000200349a7f5c: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x00000200349a7f64: movabs $0x200349a7f64,%rdx  ;   {section_word}
  0x00000200349a7f6e: callq  0x00000200344fe300  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x00000200349a7f73: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x00000200349a7f74: nopl   0x0(%rax)
  0x00000200349a7f78: jmpq   0x00000200349a84e6  ;   {no_reloc}
  0x00000200349a7f7d: add    %al,(%rax)
  0x00000200349a7f7f: add    %al,(%rax)
  0x00000200349a7f81: add    %cl,-0x75(%rcx)
  0x00000200349a7f84: xchg   %eax,0x48000000(%rax)
  0x00000200349a7f8a: lea    0x28(%rax),%edi
  0x00000200349a7f8d: cmp    0x90(%r15),%rdi
  0x00000200349a7f94: ja     0x00000200349a84f0
  0x00000200349a7f9a: mov    %rdi,0x80(%r15)
  0x00000200349a7fa1: mov    0xb0(%rdx),%rcx
  0x00000200349a7fa8: mov    %rcx,(%rax)
  0x00000200349a7fab: mov    %rdx,%rcx
  0x00000200349a7fae: shr    $0x3,%rcx
  0x00000200349a7fb2: mov    %ecx,0x8(%rax)
  0x00000200349a7fb5: xor    %rcx,%rcx
  0x00000200349a7fb8: mov    %ecx,0xc(%rax)
  0x00000200349a7fbb: xor    %rcx,%rcx
  0x00000200349a7fbe: mov    %rcx,0x10(%rax)
  0x00000200349a7fc2: mov    %rcx,0x18(%rax)
  0x00000200349a7fc6: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8

  0x00000200349a7fca: mov    %rax,%rdx
  0x00000200349a7fcd: movabs $0x2004f3fdce0,%rsi  ;   {metadata(method data for {method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a7fd7: addq   $0x1,0x178(%rsi)
  0x00000200349a7fdf: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12

  0x00000200349a7fe2: mov    %rax,0x110(%rsp)
  0x00000200349a7fea: nopl   0x0(%rax,%rax,1)
  0x00000200349a7fef: callq  0x0000020034437000  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12
                                                ;   {optimized virtual_call}
  0x00000200349a7ff4: mov    0x110(%rsp),%rax
  0x00000200349a7ffc: jmpq   0x00000200349a853e  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15

  0x00000200349a8001: mov    0x350(%r15),%rax
  0x00000200349a8008: xor    %r10,%r10
  0x00000200349a800b: mov    %r10,0x350(%r15)
  0x00000200349a8012: xor    %r10,%r10
  0x00000200349a8015: mov    %r10,0x358(%r15)
  0x00000200349a801c: mov    %rax,%rsi
  0x00000200349a801f: lea    0x118(%rsp),%rax
  0x00000200349a8027: mov    0x8(%rax),%rbx
  0x00000200349a802b: mov    (%rbx),%rdi
  0x00000200349a802e: and    $0x7,%rdi
  0x00000200349a8032: cmp    $0x5,%rdi
  0x00000200349a8036: je     0x00000200349a8053
  0x00000200349a803c: mov    (%rax),%rdi
  0x00000200349a803f: test   %rdi,%rdi
  0x00000200349a8042: je     0x00000200349a8053
  0x00000200349a8048: lock cmpxchg %rdi,(%rbx)
  0x00000200349a804d: jne    0x00000200349a84fd  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@389

  0x00000200349a8053: mov    %rsi,%rax
  0x00000200349a8056: jmpq   0x00000200349a853e
  0x00000200349a805b: movabs $0x2004f2a3e18,%r10  ;   {metadata({method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a8065: mov    %r10,0x8(%rsp)
  0x00000200349a806a: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a8072: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8077: jmpq   0x00000200349a6516
  0x00000200349a807c: callq  0x00000200344fcba0  ; ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a8081: movabs $0x2004f2a2f28,%r10  ;   {metadata({method} {0x000002004f2a2f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a808b: mov    %r10,0x8(%rsp)
  0x00000200349a8090: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a8098: callq  0x0000020034501a80  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a809d: jmpq   0x00000200349a666e
  0x00000200349a80a2: callq  0x00000200344fcba0  ; ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a80a7: movabs $0x2004f2a3250,%r10  ;   {metadata({method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a80b1: mov    %r10,0x8(%rsp)
  0x00000200349a80b6: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a80be: callq  0x0000020034501a80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a80c3: jmpq   0x00000200349a67a2
  0x00000200349a80c8: movabs $0x2004f22e6a0,%r10  ;   {metadata({method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a80d2: mov    %r10,0x8(%rsp)
  0x00000200349a80d7: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a80df: callq  0x0000020034501a80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a80e4: jmpq   0x00000200349a683c
  0x00000200349a80e9: cmp    $0x0,%rsi
  0x00000200349a80ed: je     0x00000200349a6888
  0x00000200349a80f3: mov    %rsi,(%rsp)
  0x00000200349a80f7: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a80fc: jmpq   0x00000200349a6888
  0x00000200349a8101: mov    %rsi,(%rsp)
  0x00000200349a8105: callq  0x00000200344feca0  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a810a: mov    %rdx,%rdx
  0x00000200349a810d: callq  0x00000200344fd400  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000200349a8112: jmpq   0x00000200349a6a19
  0x00000200349a8117: movabs $0x2004f2b18f0,%r10  ;   {metadata({method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a8121: mov    %r10,0x8(%rsp)
  0x00000200349a8126: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a812e: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8133: jmpq   0x00000200349a6a59
  0x00000200349a8138: movabs $0x2004f190588,%r10  ;   {metadata({method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a8142: mov    %r10,0x8(%rsp)
  0x00000200349a8147: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a814f: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8154: jmpq   0x00000200349a6a96
  0x00000200349a8159: mov    0x10(%rdx),%eax
  0x00000200349a815c: shl    $0x3,%rax
  0x00000200349a8160: cmp    $0x0,%rax
  0x00000200349a8164: je     0x00000200349a6aab
  0x00000200349a816a: mov    %rax,(%rsp)
  0x00000200349a816e: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a8173: jmpq   0x00000200349a6aab
  0x00000200349a8178: cmp    $0x0,%r8
  0x00000200349a817c: je     0x00000200349a6aca
  0x00000200349a8182: mov    %rdx,(%rsp)
  0x00000200349a8186: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a818b: jmpq   0x00000200349a6aca
  0x00000200349a8190: mov    0x14(%rdx),%eax
  0x00000200349a8193: shl    $0x3,%rax
  0x00000200349a8197: cmp    $0x0,%rax
  0x00000200349a819b: je     0x00000200349a6adb
  0x00000200349a81a1: mov    %rax,(%rsp)
  0x00000200349a81a5: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a81aa: jmpq   0x00000200349a6adb
  0x00000200349a81af: cmp    $0x0,%r9
  0x00000200349a81b3: je     0x00000200349a6afa
  0x00000200349a81b9: mov    %rdx,(%rsp)
  0x00000200349a81bd: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a81c2: jmpq   0x00000200349a6afa
  0x00000200349a81c7: movabs $0x2004f2a32f8,%r10  ;   {metadata({method} {0x000002004f2a3300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a81d1: mov    %r10,0x8(%rsp)
  0x00000200349a81d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a81de: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a81e3: jmpq   0x00000200349a6b3a
  0x00000200349a81e8: mov    (%rsi),%eax
  0x00000200349a81ea: shl    $0x3,%rax
  0x00000200349a81ee: cmp    $0x0,%rax
  0x00000200349a81f2: je     0x00000200349a6b4f
  0x00000200349a81f8: mov    %rax,(%rsp)
  0x00000200349a81fc: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a8201: jmpq   0x00000200349a6b4f
  0x00000200349a8206: cmp    $0x0,%rdx
  0x00000200349a820a: je     0x00000200349a6b8d
  0x00000200349a8210: mov    %rsi,(%rsp)
  0x00000200349a8214: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a8219: jmpq   0x00000200349a6b8d
  0x00000200349a821e: callq  0x00000200344fcba0  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a8223: mov    %rsi,0x8(%rsp)
  0x00000200349a8228: mov    %r8,(%rsp)
  0x00000200349a822c: callq  0x00000200344ff680  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x00000200349a8231: jmpq   0x00000200349a6fef
  0x00000200349a8236: movabs $0x2004f2a3250,%r10  ;   {metadata({method} {0x000002004f2a3258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a8240: mov    %r10,0x8(%rsp)
  0x00000200349a8245: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a824d: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8252: jmpq   0x00000200349a703b
  0x00000200349a8257: movabs $0x2004f22e6a0,%r10  ;   {metadata({method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349a8261: mov    %r10,0x8(%rsp)
  0x00000200349a8266: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a826e: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8273: jmpq   0x00000200349a70ba
  0x00000200349a8278: cmp    $0x0,%r8
  0x00000200349a827c: je     0x00000200349a7107
  0x00000200349a8282: mov    %r8,(%rsp)
  0x00000200349a8286: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a828b: jmpq   0x00000200349a7107
  0x00000200349a8290: mov    %r8,(%rsp)
  0x00000200349a8294: callq  0x00000200344feca0  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a8299: callq  0x00000200344fcba0  ; ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a829e: movabs $0x2004f2a3e18,%r10  ;   {metadata({method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a82a8: mov    %r10,0x8(%rsp)
  0x00000200349a82ad: movq   $0x131,(%rsp)
  0x00000200349a82b5: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a82ba: jmpq   0x00000200349a74d7
  0x00000200349a82bf: mov    0x14(%rbx),%esi
  0x00000200349a82c2: shl    $0x3,%rsi
  0x00000200349a82c6: cmp    $0x0,%rsi
  0x00000200349a82ca: je     0x00000200349a759a
  0x00000200349a82d0: mov    %rsi,(%rsp)
  0x00000200349a82d4: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a82d9: jmpq   0x00000200349a759a
  0x00000200349a82de: cmp    $0x0,%r9
  0x00000200349a82e2: je     0x00000200349a75b9
  0x00000200349a82e8: mov    %rbx,(%rsp)
  0x00000200349a82ec: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a82f1: jmpq   0x00000200349a75b9
  0x00000200349a82f6: mov    %rdx,%rdx
  0x00000200349a82f9: callq  0x00000200344fd400  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000200349a82fe: jmpq   0x00000200349a7654
  0x00000200349a8303: movabs $0x2004f2b18f0,%r10  ;   {metadata({method} {0x000002004f2b18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x00000200349a830d: mov    %r10,0x8(%rsp)
  0x00000200349a8312: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a831a: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a831f: jmpq   0x00000200349a7691
  0x00000200349a8324: movabs $0x2004f190588,%r10  ;   {metadata({method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349a832e: mov    %r10,0x8(%rsp)
  0x00000200349a8333: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a833b: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a8340: jmpq   0x00000200349a76ce
  0x00000200349a8345: mov    0x10(%rax),%edi
  0x00000200349a8348: shl    $0x3,%rdi
  0x00000200349a834c: cmp    $0x0,%rdi
  0x00000200349a8350: je     0x00000200349a76e3
  0x00000200349a8356: mov    %rdi,(%rsp)
  0x00000200349a835a: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a835f: jmpq   0x00000200349a76e3
  0x00000200349a8364: cmp    $0x0,%r11
  0x00000200349a8368: je     0x00000200349a7702
  0x00000200349a836e: mov    %rax,(%rsp)
  0x00000200349a8372: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a8377: jmpq   0x00000200349a7702
  0x00000200349a837c: mov    0x14(%rax),%edi
  0x00000200349a837f: shl    $0x3,%rdi
  0x00000200349a8383: cmp    $0x0,%rdi
  0x00000200349a8387: je     0x00000200349a7713
  0x00000200349a838d: mov    %rdi,(%rsp)
  0x00000200349a8391: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a8396: jmpq   0x00000200349a7713
  0x00000200349a839b: cmp    $0x0,%r9
  0x00000200349a839f: je     0x00000200349a7732
  0x00000200349a83a5: mov    %rax,(%rsp)
  0x00000200349a83a9: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a83ae: jmpq   0x00000200349a7732
  0x00000200349a83b3: mov    0x18(%rbx),%edi
  0x00000200349a83b6: shl    $0x3,%rdi
  0x00000200349a83ba: cmp    $0x0,%rdi
  0x00000200349a83be: je     0x00000200349a7749
  0x00000200349a83c4: mov    %rdi,(%rsp)
  0x00000200349a83c8: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a83cd: jmpq   0x00000200349a7749
  0x00000200349a83d2: cmp    $0x0,%rax
  0x00000200349a83d6: je     0x00000200349a7768
  0x00000200349a83dc: mov    %rbx,(%rsp)
  0x00000200349a83e0: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a83e5: jmpq   0x00000200349a7768
  0x00000200349a83ea: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x00000200349a83f4: mov    $0xa050f00,%eax
  0x00000200349a83f9: callq  0x0000020034500500  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a83fe: jmpq   0x00000200349a77f0
  0x00000200349a8403: movabs $0x0,%rax          ;   {metadata(NULL)}
  0x00000200349a840d: mov    $0xa050f00,%eax
  0x00000200349a8412: callq  0x0000020034500500  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a8417: jmpq   0x00000200349a7940
  0x00000200349a841c: mov    %rsi,(%rsp)
  0x00000200349a8420: callq  0x00000200344feca0  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349a8425: callq  0x00000200344fcba0  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349a842a: mov    0x14(%rax),%edx
  0x00000200349a842d: shl    $0x3,%rdx
  0x00000200349a8431: cmp    $0x0,%rdx
  0x00000200349a8435: je     0x00000200349a7b15
  0x00000200349a843b: mov    %rdx,(%rsp)
  0x00000200349a843f: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349a8444: jmpq   0x00000200349a7b15
  0x00000200349a8449: cmp    $0x0,%r9
  0x00000200349a844d: je     0x00000200349a7b34
  0x00000200349a8453: mov    %rax,(%rsp)
  0x00000200349a8457: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349a845c: jmpq   0x00000200349a7b34
  0x00000200349a8461: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x00000200349a846b: mov    $0xa050f00,%eax
  0x00000200349a8470: callq  0x0000020034500500  ; ImmutableOopMap{[168]=Oop [216]=Oop [176]=Oop r9=Oop [184]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a8475: jmpq   0x00000200349a7b88
  0x00000200349a847a: lea    0x118(%rsp),%rax
  0x00000200349a8482: mov    %rax,(%rsp)
  0x00000200349a8486: callq  0x00000200344ffb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00000200349a848b: jmpq   0x00000200349a7cff
  0x00000200349a8490: movabs $0x2004f2a3e18,%r10  ;   {metadata({method} {0x000002004f2a3e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349a849a: mov    %r10,0x8(%rsp)
  0x00000200349a849f: movq   $0x1a5,(%rsp)
  0x00000200349a84a7: callq  0x0000020034501a80  ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a84ac: jmpq   0x00000200349a7d7b
  0x00000200349a84b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349a84bb: mov    $0xa050f00,%eax
  0x00000200349a84c0: callq  0x0000020034500500  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a84c5: jmpq   0x00000200349a7f18
  0x00000200349a84ca: mov    %rdx,%rdx
  0x00000200349a84cd: callq  0x00000200344fd100  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00000200349a84d2: jmpq   0x00000200349a7f27
  0x00000200349a84d7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349a84e1: mov    $0xa050f00,%eax
  0x00000200349a84e6: callq  0x0000020034500500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349a84eb: jmpq   0x00000200349a7f78
  0x00000200349a84f0: mov    %rdx,%rdx
  0x00000200349a84f3: callq  0x00000200344fd400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000200349a84f8: jmpq   0x00000200349a7fca
  0x00000200349a84fd: lea    0x118(%rsp),%rax
  0x00000200349a8505: mov    %rax,(%rsp)
  0x00000200349a8509: callq  0x00000200344ffb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x00000200349a850e: jmpq   0x00000200349a8053
  0x00000200349a8513: nop
  0x00000200349a8514: nop
  0x00000200349a8515: mov    0x350(%r15),%rax
  0x00000200349a851c: movabs $0x0,%r10
  0x00000200349a8526: mov    %r10,0x350(%r15)
  0x00000200349a852d: movabs $0x0,%r10
  0x00000200349a8537: mov    %r10,0x358(%r15)
  0x00000200349a853e: add    $0x130,%rsp
  0x00000200349a8545: pop    %rbp
  0x00000200349a8546: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a854b: hlt    
  0x00000200349a854c: hlt    
  0x00000200349a854d: hlt    
  0x00000200349a854e: hlt    
  0x00000200349a854f: hlt    
  0x00000200349a8550: hlt    
  0x00000200349a8551: hlt    
  0x00000200349a8552: hlt    
  0x00000200349a8553: hlt    
  0x00000200349a8554: hlt    
  0x00000200349a8555: hlt    
  0x00000200349a8556: hlt    
  0x00000200349a8557: hlt    
  0x00000200349a8558: hlt    
  0x00000200349a8559: hlt    
  0x00000200349a855a: hlt    
  0x00000200349a855b: hlt    
  0x00000200349a855c: hlt    
  0x00000200349a855d: hlt    
  0x00000200349a855e: hlt    
  0x00000200349a855f: hlt    
[Stub Code]
  0x00000200349a8560: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349a8565: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a856f: jmpq   0x00000200349a856f  ;   {runtime_call}
  0x00000200349a8574: nop
  0x00000200349a8575: movabs $0x2004f2a6580,%rbx  ;   {static_stub}
  0x00000200349a857f: jmpq   0x0000020034437d50  ;   {runtime_call I2C/C2I adapters}
  0x00000200349a8584: nop
  0x00000200349a8585: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a858f: jmpq   0x00000200349a858f  ;   {runtime_call}
  0x00000200349a8594: nop
  0x00000200349a8595: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a859f: jmpq   0x00000200349a859f  ;   {runtime_call}
  0x00000200349a85a4: nop
  0x00000200349a85a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a85af: jmpq   0x00000200349a85af  ;   {runtime_call}
  0x00000200349a85b4: nop
  0x00000200349a85b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a85bf: jmpq   0x00000200349a85bf  ;   {runtime_call}
  0x00000200349a85c4: nop
  0x00000200349a85c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a85cf: jmpq   0x00000200349a85cf  ;   {runtime_call}
  0x00000200349a85d4: nop
  0x00000200349a85d5: movabs $0x2004f2a6738,%rbx  ;   {static_stub}
  0x00000200349a85df: jmpq   0x00000200344377d8  ;   {runtime_call I2C/C2I adapters}
  0x00000200349a85e4: nop
  0x00000200349a85e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a85ef: jmpq   0x00000200349a85ef  ;   {runtime_call}
  0x00000200349a85f4: nop
  0x00000200349a85f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349a85ff: jmpq   0x00000200349a85ff  ;   {runtime_call}
[Exception Handler]
  0x00000200349a8604: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349a8609: mov    %rsp,-0x28(%rsp)
  0x00000200349a860e: sub    $0x80,%rsp
  0x00000200349a8615: mov    %rax,0x78(%rsp)
  0x00000200349a861a: mov    %rcx,0x70(%rsp)
  0x00000200349a861f: mov    %rdx,0x68(%rsp)
  0x00000200349a8624: mov    %rbx,0x60(%rsp)
  0x00000200349a8629: mov    %rbp,0x50(%rsp)
  0x00000200349a862e: mov    %rsi,0x48(%rsp)
  0x00000200349a8633: mov    %rdi,0x40(%rsp)
  0x00000200349a8638: mov    %r8,0x38(%rsp)
  0x00000200349a863d: mov    %r9,0x30(%rsp)
  0x00000200349a8642: mov    %r10,0x28(%rsp)
  0x00000200349a8647: mov    %r11,0x20(%rsp)
  0x00000200349a864c: mov    %r12,0x18(%rsp)
  0x00000200349a8651: mov    %r13,0x10(%rsp)
  0x00000200349a8656: mov    %r14,0x8(%rsp)
  0x00000200349a865b: mov    %r15,(%rsp)
  0x00000200349a865f: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a8669: movabs $0x200349a8609,%rdx  ;   {internal_word}
  0x00000200349a8673: mov    %rsp,%r8
  0x00000200349a8676: and    $0xfffffffffffffff0,%rsp
  0x00000200349a867a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a8684: callq  *%r10
  0x00000200349a8687: hlt    
[Deopt Handler Code]
  0x00000200349a8688: movabs $0x200349a8688,%r10  ;   {section_word}
  0x00000200349a8692: push   %r10
  0x00000200349a8694: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a8699: hlt    
  0x00000200349a869a: hlt    
  0x00000200349a869b: hlt    
  0x00000200349a869c: hlt    
  0x00000200349a869d: hlt    
  0x00000200349a869e: hlt    
  0x00000200349a869f: hlt    

ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 404 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 660 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 1988 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }pc offsets: 2564 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }pc offsets: 3972 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4155 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }pc offsets: 5548 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 6367 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6556 
ImmutableOopMap{}pc offsets: 6748 
ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }pc offsets: 6844 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 6852 
ImmutableOopMap{[272]=Oop }pc offsets: 6996 
ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }pc offsets: 7127 
ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }pc offsets: 7137 
ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 7165 
ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }pc offsets: 7175 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }pc offsets: 7203 7236 7274 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }pc offsets: 7282 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }pc offsets: 7315 7348 7491 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }pc offsets: 7555 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 7569 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }pc offsets: 7602 7635 7673 
ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }pc offsets: 7678 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 7706 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 7774 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }pc offsets: 7807 7840 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 8030 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }pc offsets: 8055 8069 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8074 
ImmutableOopMap{[168]=Oop [216]=Oop [176]=Oop r9=Oop [184]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 8149 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 8204 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8229 8242 
ImmutableOopMap{}pc offsets: 8267 8280 Compiled method (c1)     188   49       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000002003bed1990,0x000002003bed1cc0] = 816
 relocation     [0x000002003bed1b08,0x000002003bed1b30] = 40
 main code      [0x000002003bed1b40,0x000002003bed1bc0] = 128
 stub code      [0x000002003bed1bc0,0x000002003bed1c58] = 152
 metadata       [0x000002003bed1c58,0x000002003bed1c60] = 8
 scopes data    [0x000002003bed1c60,0x000002003bed1c78] = 24
 scopes pcs     [0x000002003bed1c78,0x000002003bed1cb8] = 64
 dependencies   [0x000002003bed1cb8,0x000002003bed1cc0] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000002003bed1b40, 0x000002003bed1c58]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000002003bed1b40: mov    0x8(%rdx),%r10d
  0x000002003bed1b44: shl    $0x3,%r10
  0x000002003bed1b48: cmp    %rax,%r10
  0x000002003bed1b4b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x000002003bed1b51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000002003bed1b5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000002003bed1b60: mov    %eax,-0x7000(%rsp)
  0x000002003bed1b67: push   %rbp
  0x000002003bed1b68: sub    $0x50,%rsp
  0x000002003bed1b6c: mov    %rdx,%rcx          ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000002003bed1b6f: mov    %rdx,0x40(%rsp)
  0x000002003bed1b74: callq  0x00000200344fce00  ; ImmutableOopMap{[64]=Oop }
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0
                                                ;   {runtime_call register_finalizer Runtime1 stub}
  0x000002003bed1b79: add    $0x50,%rsp
  0x000002003bed1b7d: pop    %rbp
  0x000002003bed1b7e: mov    0x70(%r15),%r10
  0x000002003bed1b82: test   %eax,(%r10)        ;   {poll_return}
  0x000002003bed1b85: retq   
  0x000002003bed1b86: nop
  0x000002003bed1b87: nop
  0x000002003bed1b88: mov    0x350(%r15),%rax
  0x000002003bed1b8f: movabs $0x0,%r10
  0x000002003bed1b99: mov    %r10,0x350(%r15)
  0x000002003bed1ba0: movabs $0x0,%r10
  0x000002003bed1baa: mov    %r10,0x358(%r15)
  0x000002003bed1bb1: add    $0x50,%rsp
  0x000002003bed1bb5: pop    %rbp
  0x000002003bed1bb6: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000002003bed1bbb: hlt    
  0x000002003bed1bbc: hlt    
  0x000002003bed1bbd: hlt    
  0x000002003bed1bbe: hlt    
  0x000002003bed1bbf: hlt    
[Exception Handler]
[Stub Code]
  0x000002003bed1bc0: callq  0x00000200344fe800  ;   {no_reloc}
  0x000002003bed1bc5: mov    %rsp,-0x28(%rsp)
  0x000002003bed1bca: sub    $0x80,%rsp
  0x000002003bed1bd1: mov    %rax,0x78(%rsp)
  0x000002003bed1bd6: mov    %rcx,0x70(%rsp)
  0x000002003bed1bdb: mov    %rdx,0x68(%rsp)
  0x000002003bed1be0: mov    %rbx,0x60(%rsp)
  0x000002003bed1be5: mov    %rbp,0x50(%rsp)
  0x000002003bed1bea: mov    %rsi,0x48(%rsp)
  0x000002003bed1bef: mov    %rdi,0x40(%rsp)
  0x000002003bed1bf4: mov    %r8,0x38(%rsp)
  0x000002003bed1bf9: mov    %r9,0x30(%rsp)
  0x000002003bed1bfe: mov    %r10,0x28(%rsp)
  0x000002003bed1c03: mov    %r11,0x20(%rsp)
  0x000002003bed1c08: mov    %r12,0x18(%rsp)
  0x000002003bed1c0d: mov    %r13,0x10(%rsp)
  0x000002003bed1c12: mov    %r14,0x8(%rsp)
  0x000002003bed1c17: mov    %r15,(%rsp)
  0x000002003bed1c1b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x000002003bed1c25: movabs $0x2003bed1bc5,%rdx  ;   {internal_word}
  0x000002003bed1c2f: mov    %rsp,%r8
  0x000002003bed1c32: and    $0xfffffffffffffff0,%rsp
  0x000002003bed1c36: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x000002003bed1c40: callq  *%r10
  0x000002003bed1c43: hlt    
[Deopt Handler Code]
  0x000002003bed1c44: movabs $0x2003bed1c44,%r10  ;   {section_word}
  0x000002003bed1c4e: push   %r10
  0x000002003bed1c50: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x000002003bed1c55: hlt    
  0x000002003bed1c56: hlt    
  0x000002003bed1c57: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 57 Compiled method (c1)     190   52       2       volatileTest.TestJIT::assign (38 bytes)
 total in heap  [0x00000200349a9a10,0x00000200349a9e28] = 1048
 relocation     [0x00000200349a9b88,0x00000200349a9bb0] = 40
 main code      [0x00000200349a9bc0,0x00000200349a9ca0] = 224
 stub code      [0x00000200349a9ca0,0x00000200349a9d38] = 152
 oops           [0x00000200349a9d38,0x00000200349a9d40] = 8
 metadata       [0x00000200349a9d40,0x00000200349a9d48] = 8
 scopes data    [0x00000200349a9d48,0x00000200349a9d80] = 56
 scopes pcs     [0x00000200349a9d80,0x00000200349a9e20] = 160
 dependencies   [0x00000200349a9e20,0x00000200349a9e28] = 8
----------------------------------------------------------------------
volatileTest/TestJIT.assign(I)V  [0x00000200349a9bc0, 0x00000200349a9d38]  376 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f5903e0} 'assign' '(I)V' in 'volatileTest/TestJIT'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000200349a9bc0: mov    %eax,-0x7000(%rsp)
  0x00000200349a9bc7: push   %rbp
  0x00000200349a9bc8: sub    $0x30,%rsp
  0x00000200349a9bcc: movabs $0x2004f590690,%rsi
  0x00000200349a9bd6: mov    0x18(%rsi),%edi
  0x00000200349a9bd9: add    $0x8,%edi
  0x00000200349a9bdc: mov    %edi,0x18(%rsi)
  0x00000200349a9bdf: and    $0x3ff8,%edi
  0x00000200349a9be5: cmp    $0x0,%edi
  0x00000200349a9be8: je     0x00000200349a9c49  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@0 (line 14)

  0x00000200349a9bee: movabs $0x6d1664120,%rsi  ;   {oop(a 'java/lang/Class'{0x00000006d1664120} = 'volatileTest/TestJIT')}
  0x00000200349a9bf8: mov    %rdx,%rdi
  0x00000200349a9bfb: shl    %edi
  0x00000200349a9bfd: mov    %edi,0x70(%rsi)
  0x00000200349a9c00: lock addl $0x0,-0x40(%rsp)  ;*putstatic field1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@3 (line 14)

  0x00000200349a9c06: mov    %rdx,%rdi
  0x00000200349a9c09: shl    $0x2,%edi
  0x00000200349a9c0c: mov    %edi,0x74(%rsi)    ;*putstatic field2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@9 (line 15)

  0x00000200349a9c0f: mov    %rdx,%rdi
  0x00000200349a9c12: shl    $0x3,%edi
  0x00000200349a9c15: mov    %edi,0x78(%rsi)    ;*putstatic field3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@15 (line 16)

  0x00000200349a9c18: mov    %rdx,%rdi
  0x00000200349a9c1b: shl    $0x4,%edi
  0x00000200349a9c1e: mov    %edi,0x7c(%rsi)    ;*putstatic field4 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@21 (line 17)

  0x00000200349a9c21: mov    %rdx,%rdi
  0x00000200349a9c24: shl    $0x5,%edi
  0x00000200349a9c27: mov    %edi,0x80(%rsi)    ;*putstatic field5 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@27 (line 18)

  0x00000200349a9c2d: shl    $0x6,%edx
  0x00000200349a9c30: mov    %edx,0x84(%rsi)
  0x00000200349a9c36: lock addl $0x0,-0x40(%rsp)  ;*putstatic field6 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.TestJIT::assign@34 (line 19)

  0x00000200349a9c3c: add    $0x30,%rsp
  0x00000200349a9c40: pop    %rbp
  0x00000200349a9c41: mov    0x70(%r15),%r10
  0x00000200349a9c45: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349a9c48: retq   
  0x00000200349a9c49: movabs $0x2004f5903d8,%r10  ;   {metadata({method} {0x000002004f5903e0} 'assign' '(I)V' in 'volatileTest/TestJIT')}
  0x00000200349a9c53: mov    %r10,0x8(%rsp)
  0x00000200349a9c58: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349a9c60: callq  0x0000020034501a80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - volatileTest.TestJIT::assign@-1 (line 14)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349a9c65: jmp    0x00000200349a9bee
  0x00000200349a9c67: nop
  0x00000200349a9c68: nop
  0x00000200349a9c69: mov    0x350(%r15),%rax
  0x00000200349a9c70: movabs $0x0,%r10
  0x00000200349a9c7a: mov    %r10,0x350(%r15)
  0x00000200349a9c81: movabs $0x0,%r10
  0x00000200349a9c8b: mov    %r10,0x358(%r15)
  0x00000200349a9c92: add    $0x30,%rsp
  0x00000200349a9c96: pop    %rbp
  0x00000200349a9c97: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349a9c9c: hlt    
  0x00000200349a9c9d: hlt    
  0x00000200349a9c9e: hlt    
  0x00000200349a9c9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349a9ca0: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349a9ca5: mov    %rsp,-0x28(%rsp)
  0x00000200349a9caa: sub    $0x80,%rsp
  0x00000200349a9cb1: mov    %rax,0x78(%rsp)
  0x00000200349a9cb6: mov    %rcx,0x70(%rsp)
  0x00000200349a9cbb: mov    %rdx,0x68(%rsp)
  0x00000200349a9cc0: mov    %rbx,0x60(%rsp)
  0x00000200349a9cc5: mov    %rbp,0x50(%rsp)
  0x00000200349a9cca: mov    %rsi,0x48(%rsp)
  0x00000200349a9ccf: mov    %rdi,0x40(%rsp)
  0x00000200349a9cd4: mov    %r8,0x38(%rsp)
  0x00000200349a9cd9: mov    %r9,0x30(%rsp)
  0x00000200349a9cde: mov    %r10,0x28(%rsp)
  0x00000200349a9ce3: mov    %r11,0x20(%rsp)
  0x00000200349a9ce8: mov    %r12,0x18(%rsp)
  0x00000200349a9ced: mov    %r13,0x10(%rsp)
  0x00000200349a9cf2: mov    %r14,0x8(%rsp)
  0x00000200349a9cf7: mov    %r15,(%rsp)
  0x00000200349a9cfb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349a9d05: movabs $0x200349a9ca5,%rdx  ;   {internal_word}
  0x00000200349a9d0f: mov    %rsp,%r8
  0x00000200349a9d12: and    $0xfffffffffffffff0,%rsp
  0x00000200349a9d16: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349a9d20: callq  *%r10
  0x00000200349a9d23: hlt    
[Deopt Handler Code]
  0x00000200349a9d24: movabs $0x200349a9d24,%r10  ;   {section_word}
  0x00000200349a9d2e: push   %r10
  0x00000200349a9d30: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349a9d35: hlt    
  0x00000200349a9d36: hlt    
  0x00000200349a9d37: hlt    

ImmutableOopMap{}pc offsets: 165 Compiled method (c1)     191    3       2       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x00000200349a9e90,0x00000200349aa230] = 928
 relocation     [0x00000200349aa008,0x00000200349aa030] = 40
 main code      [0x00000200349aa040,0x00000200349aa120] = 224
 stub code      [0x00000200349aa120,0x00000200349aa1b8] = 152
 metadata       [0x00000200349aa1b8,0x00000200349aa1c0] = 8
 scopes data    [0x00000200349aa1c0,0x00000200349aa1d8] = 24
 scopes pcs     [0x00000200349aa1d8,0x00000200349aa228] = 80
 dependencies   [0x00000200349aa228,0x00000200349aa230] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x00000200349aa040, 0x00000200349aa1b8]  376 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00000200349aa040: mov    0x8(%rdx),%r10d
  0x00000200349aa044: shl    $0x3,%r10
  0x00000200349aa048: cmp    %rax,%r10
  0x00000200349aa04b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349aa051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349aa05c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349aa060: mov    %eax,-0x7000(%rsp)
  0x00000200349aa067: push   %rbp
  0x00000200349aa068: sub    $0x30,%rsp
  0x00000200349aa06c: movabs $0x2004f283da0,%rax
  0x00000200349aa076: mov    0x18(%rax),%esi
  0x00000200349aa079: add    $0x8,%esi
  0x00000200349aa07c: mov    %esi,0x18(%rax)
  0x00000200349aa07f: and    $0x3ff8,%esi
  0x00000200349aa085: cmp    $0x0,%esi
  0x00000200349aa088: je     0x00000200349aa0b5  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0

  0x00000200349aa08e: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7

  0x00000200349aa092: cmp    $0x0,%eax
  0x00000200349aa095: mov    $0x0,%eax
  0x00000200349aa09a: jne    0x00000200349aa0a5
  0x00000200349aa0a0: mov    $0x1,%eax
  0x00000200349aa0a5: and    $0x1,%eax
  0x00000200349aa0a8: add    $0x30,%rsp
  0x00000200349aa0ac: pop    %rbp
  0x00000200349aa0ad: mov    0x70(%r15),%r10
  0x00000200349aa0b1: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aa0b4: retq   
  0x00000200349aa0b5: movabs $0x2004f197f08,%r10  ;   {metadata({method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aa0bf: mov    %r10,0x8(%rsp)
  0x00000200349aa0c4: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aa0cc: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aa0d1: jmp    0x00000200349aa08e
  0x00000200349aa0d3: nop
  0x00000200349aa0d4: nop
  0x00000200349aa0d5: mov    0x350(%r15),%rax
  0x00000200349aa0dc: movabs $0x0,%r10
  0x00000200349aa0e6: mov    %r10,0x350(%r15)
  0x00000200349aa0ed: movabs $0x0,%r10
  0x00000200349aa0f7: mov    %r10,0x358(%r15)
  0x00000200349aa0fe: add    $0x30,%rsp
  0x00000200349aa102: pop    %rbp
  0x00000200349aa103: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349aa108: hlt    
  0x00000200349aa109: hlt    
  0x00000200349aa10a: hlt    
  0x00000200349aa10b: hlt    
  0x00000200349aa10c: hlt    
  0x00000200349aa10d: hlt    
  0x00000200349aa10e: hlt    
  0x00000200349aa10f: hlt    
  0x00000200349aa110: hlt    
  0x00000200349aa111: hlt    
  0x00000200349aa112: hlt    
  0x00000200349aa113: hlt    
  0x00000200349aa114: hlt    
  0x00000200349aa115: hlt    
  0x00000200349aa116: hlt    
  0x00000200349aa117: hlt    
  0x00000200349aa118: hlt    
  0x00000200349aa119: hlt    
  0x00000200349aa11a: hlt    
  0x00000200349aa11b: hlt    
  0x00000200349aa11c: hlt    
  0x00000200349aa11d: hlt    
  0x00000200349aa11e: hlt    
  0x00000200349aa11f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349aa120: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349aa125: mov    %rsp,-0x28(%rsp)
  0x00000200349aa12a: sub    $0x80,%rsp
  0x00000200349aa131: mov    %rax,0x78(%rsp)
  0x00000200349aa136: mov    %rcx,0x70(%rsp)
  0x00000200349aa13b: mov    %rdx,0x68(%rsp)
  0x00000200349aa140: mov    %rbx,0x60(%rsp)
  0x00000200349aa145: mov    %rbp,0x50(%rsp)
  0x00000200349aa14a: mov    %rsi,0x48(%rsp)
  0x00000200349aa14f: mov    %rdi,0x40(%rsp)
  0x00000200349aa154: mov    %r8,0x38(%rsp)
  0x00000200349aa159: mov    %r9,0x30(%rsp)
  0x00000200349aa15e: mov    %r10,0x28(%rsp)
  0x00000200349aa163: mov    %r11,0x20(%rsp)
  0x00000200349aa168: mov    %r12,0x18(%rsp)
  0x00000200349aa16d: mov    %r13,0x10(%rsp)
  0x00000200349aa172: mov    %r14,0x8(%rsp)
  0x00000200349aa177: mov    %r15,(%rsp)
  0x00000200349aa17b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349aa185: movabs $0x200349aa125,%rdx  ;   {internal_word}
  0x00000200349aa18f: mov    %rsp,%r8
  0x00000200349aa192: and    $0xfffffffffffffff0,%rsp
  0x00000200349aa196: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349aa1a0: callq  *%r10
  0x00000200349aa1a3: hlt    
[Deopt Handler Code]
  0x00000200349aa1a4: movabs $0x200349aa1a4,%r10  ;   {section_word}
  0x00000200349aa1ae: push   %r10
  0x00000200349aa1b0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349aa1b5: hlt    
  0x00000200349aa1b6: hlt    
  0x00000200349aa1b7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 145 Compiled method (c1)     192    7       3       java.lang.String::coder (15 bytes)
 total in heap  [0x00000200349aa290,0x00000200349aa660] = 976
 relocation     [0x00000200349aa408,0x00000200349aa438] = 48
 main code      [0x00000200349aa440,0x00000200349aa520] = 224
 stub code      [0x00000200349aa520,0x00000200349aa5b8] = 152
 metadata       [0x00000200349aa5b8,0x00000200349aa5c0] = 8
 scopes data    [0x00000200349aa5c0,0x00000200349aa5e8] = 40
 scopes pcs     [0x00000200349aa5e8,0x00000200349aa658] = 112
 dependencies   [0x00000200349aa658,0x00000200349aa660] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x00000200349aa440, 0x00000200349aa5b8]  376 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00000200349aa440: mov    0x8(%rdx),%r10d
  0x00000200349aa444: shl    $0x3,%r10
  0x00000200349aa448: cmp    %rax,%r10
  0x00000200349aa44b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349aa451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349aa45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349aa460: mov    %eax,-0x7000(%rsp)
  0x00000200349aa467: push   %rbp
  0x00000200349aa468: sub    $0x30,%rsp
  0x00000200349aa46c: movabs $0x2004f3b65a0,%rax  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349aa476: mov    0xfc(%rax),%esi
  0x00000200349aa47c: add    $0x8,%esi
  0x00000200349aa47f: mov    %esi,0xfc(%rax)
  0x00000200349aa485: and    $0x1ff8,%esi
  0x00000200349aa48b: cmp    $0x0,%esi
  0x00000200349aa48e: je     0x00000200349aa4cb  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0

  0x00000200349aa494: movabs $0x2004f3b65a0,%rax  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349aa49e: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3

  0x00000200349aa4a4: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7

  0x00000200349aa4a8: movabs $0x2004f3b65a0,%rsi  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349aa4b2: incl   0x158(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10

  0x00000200349aa4b8: shl    $0x18,%eax
  0x00000200349aa4bb: sar    $0x18,%eax
  0x00000200349aa4be: add    $0x30,%rsp
  0x00000200349aa4c2: pop    %rbp
  0x00000200349aa4c3: mov    0x70(%r15),%r10
  0x00000200349aa4c7: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aa4ca: retq   
  0x00000200349aa4cb: movabs $0x2004f197dc8,%r10  ;   {metadata({method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349aa4d5: mov    %r10,0x8(%rsp)
  0x00000200349aa4da: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aa4e2: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aa4e7: jmp    0x00000200349aa494
  0x00000200349aa4e9: nop
  0x00000200349aa4ea: nop
  0x00000200349aa4eb: mov    0x350(%r15),%rax
  0x00000200349aa4f2: movabs $0x0,%r10
  0x00000200349aa4fc: mov    %r10,0x350(%r15)
  0x00000200349aa503: movabs $0x0,%r10
  0x00000200349aa50d: mov    %r10,0x358(%r15)
  0x00000200349aa514: add    $0x30,%rsp
  0x00000200349aa518: pop    %rbp
  0x00000200349aa519: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349aa51e: hlt    
  0x00000200349aa51f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349aa520: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349aa525: mov    %rsp,-0x28(%rsp)
  0x00000200349aa52a: sub    $0x80,%rsp
  0x00000200349aa531: mov    %rax,0x78(%rsp)
  0x00000200349aa536: mov    %rcx,0x70(%rsp)
  0x00000200349aa53b: mov    %rdx,0x68(%rsp)
  0x00000200349aa540: mov    %rbx,0x60(%rsp)
  0x00000200349aa545: mov    %rbp,0x50(%rsp)
  0x00000200349aa54a: mov    %rsi,0x48(%rsp)
  0x00000200349aa54f: mov    %rdi,0x40(%rsp)
  0x00000200349aa554: mov    %r8,0x38(%rsp)
  0x00000200349aa559: mov    %r9,0x30(%rsp)
  0x00000200349aa55e: mov    %r10,0x28(%rsp)
  0x00000200349aa563: mov    %r11,0x20(%rsp)
  0x00000200349aa568: mov    %r12,0x18(%rsp)
  0x00000200349aa56d: mov    %r13,0x10(%rsp)
  0x00000200349aa572: mov    %r14,0x8(%rsp)
  0x00000200349aa577: mov    %r15,(%rsp)
  0x00000200349aa57b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349aa585: movabs $0x200349aa525,%rdx  ;   {internal_word}
  0x00000200349aa58f: mov    %rsp,%r8
  0x00000200349aa592: and    $0xfffffffffffffff0,%rsp
  0x00000200349aa596: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349aa5a0: callq  *%r10
  0x00000200349aa5a3: hlt    
[Deopt Handler Code]
  0x00000200349aa5a4: movabs $0x200349aa5a4,%r10  ;   {section_word}
  0x00000200349aa5ae: push   %r10
  0x00000200349aa5b0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349aa5b5: hlt    
  0x00000200349aa5b6: hlt    
  0x00000200349aa5b7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 167 Compiled method (c1)     194   50       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x00000200349aa690,0x00000200349ab1e0] = 2896
 relocation     [0x00000200349aa808,0x00000200349aa890] = 136
 main code      [0x00000200349aa8a0,0x00000200349aad60] = 1216
 stub code      [0x00000200349aad60,0x00000200349aae20] = 192
 metadata       [0x00000200349aae20,0x00000200349aae50] = 48
 scopes data    [0x00000200349aae50,0x00000200349aafa0] = 336
 scopes pcs     [0x00000200349aafa0,0x00000200349ab1c0] = 544
 dependencies   [0x00000200349ab1c0,0x00000200349ab1c8] = 8
 nul chk table  [0x00000200349ab1c8,0x00000200349ab1e0] = 24
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x00000200349aa8a0, 0x00000200349aae20]  1408 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  #           [sp+0x90]  (sp of caller)
  0x00000200349aa8a0: mov    0x8(%rdx),%r10d
  0x00000200349aa8a4: shl    $0x3,%r10
  0x00000200349aa8a8: cmp    %rax,%r10
  0x00000200349aa8ab: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349aa8b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349aa8bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349aa8c0: mov    %eax,-0x7000(%rsp)
  0x00000200349aa8c7: push   %rbp
  0x00000200349aa8c8: sub    $0x80,%rsp
  0x00000200349aa8cf: movabs $0x2004f3e48e0,%rax  ;   {metadata(method data for {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aa8d9: mov    0xfc(%rax),%esi
  0x00000200349aa8df: add    $0x8,%esi
  0x00000200349aa8e2: mov    %esi,0xfc(%rax)
  0x00000200349aa8e8: and    $0x1ff8,%esi
  0x00000200349aa8ee: cmp    $0x0,%esi
  0x00000200349aa8f1: je     0x00000200349aac16  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0

  0x00000200349aa8f7: mov    %rdx,%rax
  0x00000200349aa8fa: movabs $0x2004f3e48e0,%rsi  ;   {metadata(method data for {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aa904: addq   $0x1,0x138(%rsi)
  0x00000200349aa90c: movabs $0x2004f35eea8,%rax  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aa916: mov    0xfc(%rax),%esi
  0x00000200349aa91c: add    $0x8,%esi
  0x00000200349aa91f: mov    %esi,0xfc(%rax)
  0x00000200349aa925: and    $0x7ffff8,%esi
  0x00000200349aa92b: cmp    $0x0,%esi
  0x00000200349aa92e: je     0x00000200349aac37
  0x00000200349aa934: movabs $0x2004f35eea8,%rax  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aa93e: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::charAt@1

  0x00000200349aa944: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::charAt@1

  0x00000200349aa948: cmp    $0x0,%eax
  0x00000200349aa94b: movabs $0x2004f35eea8,%rax  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aa955: movabs $0x158,%rsi
  0x00000200349aa95f: jne    0x00000200349aa96f
  0x00000200349aa965: movabs $0x168,%rsi
  0x00000200349aa96f: mov    (%rax,%rsi,1),%rdi
  0x00000200349aa973: lea    0x1(%rdi),%rdi
  0x00000200349aa977: mov    %rdi,(%rax,%rsi,1)
  0x00000200349aa97b: jne    0x00000200349aa99b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::charAt@1

  0x00000200349aa981: movabs $0x2004f35eea8,%rax  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aa98b: incl   0x178(%rax)
  0x00000200349aa991: mov    $0x1,%eax
  0x00000200349aa996: jmpq   0x00000200349aa9a0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::charAt@1

  0x00000200349aa99b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::charAt@1

  0x00000200349aa9a0: and    $0x1,%eax
  0x00000200349aa9a3: cmp    $0x0,%eax
  0x00000200349aa9a6: movabs $0x2004f3e48e0,%rax  ;   {metadata(method data for {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aa9b0: movabs $0x148,%rsi
  0x00000200349aa9ba: je     0x00000200349aa9ca
  0x00000200349aa9c0: movabs $0x158,%rsi
  0x00000200349aa9ca: mov    (%rax,%rsi,1),%rdi
  0x00000200349aa9ce: lea    0x1(%rdi),%rdi
  0x00000200349aa9d2: mov    %rdi,(%rax,%rsi,1)
  0x00000200349aa9d6: je     0x00000200349aaabe  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4

  0x00000200349aa9dc: mov    0xc(%rdx),%eax
  0x00000200349aa9df: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8

  0x00000200349aa9e3: movabs $0x2004f3e48e0,%rdx  ;   {metadata(method data for {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aa9ed: addq   $0x1,0x168(%rdx)
  0x00000200349aa9f5: movabs $0x2004f3e4ab0,%rdx  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349aa9ff: mov    0xfc(%rdx),%esi
  0x00000200349aaa05: add    $0x8,%esi
  0x00000200349aaa08: mov    %esi,0xfc(%rdx)
  0x00000200349aaa0e: and    $0x7ffff8,%esi
  0x00000200349aaa14: cmp    $0x0,%esi
  0x00000200349aaa17: je     0x00000200349aac58
  0x00000200349aaa1d: cmp    $0x0,%r8d
  0x00000200349aaa21: movabs $0x2004f3e4ab0,%rdx  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349aaa2b: movabs $0x138,%rsi
  0x00000200349aaa35: jl     0x00000200349aaa45
  0x00000200349aaa3b: movabs $0x148,%rsi
  0x00000200349aaa45: mov    (%rdx,%rsi,1),%rdi
  0x00000200349aaa49: lea    0x1(%rdi),%rdi
  0x00000200349aaa4d: mov    %rdi,(%rdx,%rsi,1)
  0x00000200349aaa51: jl     0x00000200349aabd3  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12

  0x00000200349aaa57: mov    0xc(%rax),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; - java.lang.String::charAt@12
                                                ; implicit exception: dispatches to 0x00000200349aac79
  0x00000200349aaa5a: cmp    %edx,%r8d
  0x00000200349aaa5d: movabs $0x2004f3e4ab0,%rdx  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349aaa67: movabs $0x168,%rsi
  0x00000200349aaa71: jge    0x00000200349aaa81
  0x00000200349aaa77: movabs $0x158,%rsi
  0x00000200349aaa81: mov    (%rdx,%rsi,1),%rdi
  0x00000200349aaa85: lea    0x1(%rdi),%rdi
  0x00000200349aaa89: mov    %rdi,(%rdx,%rsi,1)
  0x00000200349aaa8d: jge    0x00000200349aabd3  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7
                                                ; - java.lang.String::charAt@12

  0x00000200349aaa93: movslq %r8d,%r8
  0x00000200349aaa96: movsbl 0x10(%rax,%r8,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21
                                                ; - java.lang.String::charAt@12

  0x00000200349aaa9c: and    $0xff,%eax
  0x00000200349aaaa2: and    $0xffff,%eax
  0x00000200349aaaa8: and    $0xffff,%eax
  0x00000200349aaaae: add    $0x80,%rsp
  0x00000200349aaab5: pop    %rbp
  0x00000200349aaab6: mov    0x70(%r15),%r10
  0x00000200349aaaba: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aaabd: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@15

  0x00000200349aaabe: mov    0xc(%rdx),%esi
  0x00000200349aaac1: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17

  0x00000200349aaac5: movabs $0x2004f3e48e0,%rdx  ;   {metadata(method data for {method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aaacf: addq   $0x1,0x178(%rdx)
  0x00000200349aaad7: movabs $0x2004f48ed88,%rdx  ;   {metadata(method data for {method} {0x000002004f3078a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00000200349aaae1: mov    0xfc(%rdx),%edi
  0x00000200349aaae7: add    $0x8,%edi
  0x00000200349aaaea: mov    %edi,0xfc(%rdx)
  0x00000200349aaaf0: and    $0x7ffff8,%edi
  0x00000200349aaaf6: cmp    $0x0,%edi
  0x00000200349aaaf9: je     0x00000200349aac7e
  0x00000200349aaaff: movabs $0x2004f48ed88,%rdx  ;   {metadata(method data for {method} {0x000002004f3078a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00000200349aab09: addq   $0x1,0x138(%rdx)
  0x00000200349aab11: movabs $0x2004f48ef28,%rdx  ;   {metadata(method data for {method} {0x000002004f308040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00000200349aab1b: mov    0xfc(%rdx),%edi
  0x00000200349aab21: add    $0x8,%edi
  0x00000200349aab24: mov    %edi,0xfc(%rdx)
  0x00000200349aab2a: and    $0x7ffff8,%edi
  0x00000200349aab30: cmp    $0x0,%edi
  0x00000200349aab33: je     0x00000200349aac9f
  0x00000200349aab39: movabs $0x2004f48ef28,%rdx  ;   {metadata(method data for {method} {0x000002004f308040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00000200349aab43: addq   $0x1,0x138(%rdx)
  0x00000200349aab4b: movabs $0x2004f48f0c8,%rdx  ;   {metadata(method data for {method} {0x000002004f304538} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x00000200349aab55: mov    0xfc(%rdx),%edi
  0x00000200349aab5b: add    $0x8,%edi
  0x00000200349aab5e: mov    %edi,0xfc(%rdx)
  0x00000200349aab64: and    $0x7ffff8,%edi
  0x00000200349aab6a: cmp    $0x0,%edi
  0x00000200349aab6d: je     0x00000200349aacc0
  0x00000200349aab73: mov    0xc(%rsi),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ; implicit exception: dispatches to 0x00000200349aace1
  0x00000200349aab76: movabs $0x2004f48ef28,%rdi  ;   {metadata(method data for {method} {0x000002004f308040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00000200349aab80: addq   $0x1,0x148(%rdi)
  0x00000200349aab88: mov    %rdx,%rdi
  0x00000200349aab8b: sar    %edi
  0x00000200349aab8d: mov    %r8,%rdx
  0x00000200349aab90: mov    %r8d,0x60(%rsp)
  0x00000200349aab95: mov    %rdi,%r8           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21

  0x00000200349aab98: mov    %rsi,0x68(%rsp)
  0x00000200349aab9d: xchg   %ax,%ax
  0x00000200349aab9f: callq  0x0000020034437500  ; ImmutableOopMap{[104]=Oop }
                                                ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {static_call}
  0x00000200349aaba4: mov    0x60(%rsp),%r8d
  0x00000200349aaba9: movslq %r8d,%r8
  0x00000200349aabac: mov    0x68(%rsp),%rsi
  0x00000200349aabb1: movzwl 0x10(%rsi,%r8,2),%eax  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::charAt@7
                                                ; - java.lang.String::charAt@21

  0x00000200349aabb7: and    $0xffff,%eax
  0x00000200349aabbd: and    $0xffff,%eax
  0x00000200349aabc3: add    $0x80,%rsp
  0x00000200349aabca: pop    %rbp
  0x00000200349aabcb: mov    0x70(%r15),%r10
  0x00000200349aabcf: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aabd2: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@24

  0x00000200349aabd3: nopl   0x0(%rax,%rax,1)
  0x00000200349aabd8: jmpq   0x00000200349aacf5  ;   {no_reloc}
  0x00000200349aabdd: add    %al,(%rax)
  0x00000200349aabdf: add    %al,(%rax)
  0x00000200349aabe1: add    %ch,%cl
  0x00000200349aabe3: sbb    %al,(%rcx)
  0x00000200349aabe5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12

  0x00000200349aabe7: mov    %rax,%rdx
  0x00000200349aabea: movabs $0x2004f3e4ab0,%rsi  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349aabf4: addq   $0x1,0x178(%rsi)
  0x00000200349aabfc: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ; - java.lang.String::charAt@12

  0x00000200349aabff: mov    %rax,0x70(%rsp)
  0x00000200349aac04: data16 xchg %ax,%ax
  0x00000200349aac07: callq  0x0000020034437000  ; ImmutableOopMap{[112]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ; - java.lang.String::charAt@12
                                                ;   {optimized virtual_call}
  0x00000200349aac0c: mov    0x70(%rsp),%rax
  0x00000200349aac11: jmpq   0x00000200349aad37
  0x00000200349aac16: movabs $0x2004f1945f8,%r10  ;   {metadata({method} {0x000002004f194600} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000200349aac20: mov    %r10,0x8(%rsp)
  0x00000200349aac25: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aac2d: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aac32: jmpq   0x00000200349aa8f7
  0x00000200349aac37: movabs $0x2004f197f08,%r10  ;   {metadata({method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349aac41: mov    %r10,0x8(%rsp)
  0x00000200349aac46: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aac4e: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::charAt@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aac53: jmpq   0x00000200349aa934
  0x00000200349aac58: movabs $0x2004f2847c8,%r10  ;   {metadata({method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349aac62: mov    %r10,0x8(%rsp)
  0x00000200349aac67: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aac6f: callq  0x0000020034501a80  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aac74: jmpq   0x00000200349aaa1d
  0x00000200349aac79: callq  0x00000200344fcba0  ; ImmutableOopMap{rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349aac7e: movabs $0x2004f3078a0,%r10  ;   {metadata({method} {0x000002004f3078a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x00000200349aac88: mov    %r10,0x8(%rsp)
  0x00000200349aac8d: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aac95: callq  0x0000020034501a80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::charAt@-1
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aac9a: jmpq   0x00000200349aaaff
  0x00000200349aac9f: movabs $0x2004f308038,%r10  ;   {metadata({method} {0x000002004f308040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x00000200349aaca9: mov    %r10,0x8(%rsp)
  0x00000200349aacae: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aacb6: callq  0x0000020034501a80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::checkIndex@-1
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aacbb: jmpq   0x00000200349aab39
  0x00000200349aacc0: movabs $0x2004f304530,%r10  ;   {metadata({method} {0x000002004f304538} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x00000200349aacca: mov    %r10,0x8(%rsp)
  0x00000200349aaccf: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aacd7: callq  0x0000020034501a80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::length@-1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aacdc: jmpq   0x00000200349aab73
  0x00000200349aace1: callq  0x00000200344fcba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349aace6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349aacf0: mov    $0xa050f00,%eax
  0x00000200349aacf5: callq  0x0000020034500500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349aacfa: jmpq   0x00000200349aabd8
  0x00000200349aacff: mov    %rdx,%rdx
  0x00000200349aad02: callq  0x00000200344fd100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00000200349aad07: jmpq   0x00000200349aabe7
  0x00000200349aad0c: nop
  0x00000200349aad0d: nop
  0x00000200349aad0e: mov    0x350(%r15),%rax
  0x00000200349aad15: movabs $0x0,%r10
  0x00000200349aad1f: mov    %r10,0x350(%r15)
  0x00000200349aad26: movabs $0x0,%r10
  0x00000200349aad30: mov    %r10,0x358(%r15)
  0x00000200349aad37: add    $0x80,%rsp
  0x00000200349aad3e: pop    %rbp
  0x00000200349aad3f: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349aad44: hlt    
  0x00000200349aad45: hlt    
  0x00000200349aad46: hlt    
  0x00000200349aad47: hlt    
  0x00000200349aad48: hlt    
  0x00000200349aad49: hlt    
  0x00000200349aad4a: hlt    
  0x00000200349aad4b: hlt    
  0x00000200349aad4c: hlt    
  0x00000200349aad4d: hlt    
  0x00000200349aad4e: hlt    
  0x00000200349aad4f: hlt    
  0x00000200349aad50: hlt    
  0x00000200349aad51: hlt    
  0x00000200349aad52: hlt    
  0x00000200349aad53: hlt    
  0x00000200349aad54: hlt    
  0x00000200349aad55: hlt    
  0x00000200349aad56: hlt    
  0x00000200349aad57: hlt    
  0x00000200349aad58: hlt    
  0x00000200349aad59: hlt    
  0x00000200349aad5a: hlt    
  0x00000200349aad5b: hlt    
  0x00000200349aad5c: hlt    
  0x00000200349aad5d: hlt    
  0x00000200349aad5e: hlt    
  0x00000200349aad5f: hlt    
[Stub Code]
  0x00000200349aad60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349aad65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349aad6f: jmpq   0x00000200349aad6f  ;   {runtime_call}
  0x00000200349aad74: nop
  0x00000200349aad75: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349aad7f: jmpq   0x00000200349aad7f  ;   {runtime_call}
[Exception Handler]
  0x00000200349aad84: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349aad89: mov    %rsp,-0x28(%rsp)
  0x00000200349aad8e: sub    $0x80,%rsp
  0x00000200349aad95: mov    %rax,0x78(%rsp)
  0x00000200349aad9a: mov    %rcx,0x70(%rsp)
  0x00000200349aad9f: mov    %rdx,0x68(%rsp)
  0x00000200349aada4: mov    %rbx,0x60(%rsp)
  0x00000200349aada9: mov    %rbp,0x50(%rsp)
  0x00000200349aadae: mov    %rsi,0x48(%rsp)
  0x00000200349aadb3: mov    %rdi,0x40(%rsp)
  0x00000200349aadb8: mov    %r8,0x38(%rsp)
  0x00000200349aadbd: mov    %r9,0x30(%rsp)
  0x00000200349aadc2: mov    %r10,0x28(%rsp)
  0x00000200349aadc7: mov    %r11,0x20(%rsp)
  0x00000200349aadcc: mov    %r12,0x18(%rsp)
  0x00000200349aadd1: mov    %r13,0x10(%rsp)
  0x00000200349aadd6: mov    %r14,0x8(%rsp)
  0x00000200349aaddb: mov    %r15,(%rsp)
  0x00000200349aaddf: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349aade9: movabs $0x200349aad89,%rdx  ;   {internal_word}
  0x00000200349aadf3: mov    %rsp,%r8
  0x00000200349aadf6: and    $0xfffffffffffffff0,%rsp
  0x00000200349aadfa: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349aae04: callq  *%r10
  0x00000200349aae07: hlt    
[Deopt Handler Code]
  0x00000200349aae08: movabs $0x200349aae08,%r10  ;   {section_word}
  0x00000200349aae12: push   %r10
  0x00000200349aae14: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349aae19: hlt    
  0x00000200349aae1a: hlt    
  0x00000200349aae1b: hlt    
  0x00000200349aae1c: hlt    
  0x00000200349aae1d: hlt    
  0x00000200349aae1e: hlt    
  0x00000200349aae1f: hlt    

ImmutableOopMap{[104]=Oop }pc offsets: 772 
ImmutableOopMap{[112]=Oop }pc offsets: 876 
ImmutableOopMap{rdx=Oop }pc offsets: 914 947 
ImmutableOopMap{rax=Oop }pc offsets: 980 990 
ImmutableOopMap{rsi=Oop }pc offsets: 1018 1051 1084 1094 
ImmutableOopMap{}pc offsets: 1114 1127 Compiled method (c1)     202   28       3       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x00000200349ab210,0x00000200349ac558] = 4936
 relocation     [0x00000200349ab388,0x00000200349ab460] = 216
 main code      [0x00000200349ab460,0x00000200349abd40] = 2272
 stub code      [0x00000200349abd40,0x00000200349abe50] = 272
 metadata       [0x00000200349abe50,0x00000200349abe68] = 24
 scopes data    [0x00000200349abe68,0x00000200349ac0f0] = 648
 scopes pcs     [0x00000200349ac0f0,0x00000200349ac530] = 1088
 dependencies   [0x00000200349ac530,0x00000200349ac538] = 8
 nul chk table  [0x00000200349ac538,0x00000200349ac558] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x00000200349ab460, 0x00000200349abe50]  2544 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = long
  # parm1:    r9        = int
  #           [sp+0xc0]  (sp of caller)
  0x00000200349ab460: mov    0x8(%rdx),%r10d
  0x00000200349ab464: shl    $0x3,%r10
  0x00000200349ab468: cmp    %rax,%r10
  0x00000200349ab46b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349ab471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349ab47c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349ab480: mov    %eax,-0x7000(%rsp)
  0x00000200349ab487: push   %rbp
  0x00000200349ab488: sub    $0xb0,%rsp
  0x00000200349ab48f: mov    %rdx,0x88(%rsp)
  0x00000200349ab497: mov    %r9d,0x74(%rsp)
  0x00000200349ab49c: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab4a6: mov    0xfc(%rax),%ebx
  0x00000200349ab4ac: add    $0x8,%ebx
  0x00000200349ab4af: mov    %ebx,0xfc(%rax)
  0x00000200349ab4b5: and    $0x1ff8,%ebx
  0x00000200349ab4bb: cmp    $0x0,%ebx
  0x00000200349ab4be: je     0x00000200349abc7c  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0

  0x00000200349ab4c4: mov    0x30(%rdx),%esi
  0x00000200349ab4c7: shl    $0x3,%rsi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1

  0x00000200349ab4cb: cmp    $0x0,%rsi
  0x00000200349ab4cf: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab4d9: movabs $0x138,%rbx
  0x00000200349ab4e3: jne    0x00000200349ab4f3
  0x00000200349ab4e9: movabs $0x148,%rbx
  0x00000200349ab4f3: mov    (%rax,%rbx,1),%rdi
  0x00000200349ab4f7: lea    0x1(%rdi),%rdi
  0x00000200349ab4fb: mov    %rdi,(%rax,%rbx,1)
  0x00000200349ab4ff: jne    0x00000200349ab56a  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7

  0x00000200349ab505: vmovsd 0x18(%rdx),%xmm0
  0x00000200349ab50a: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18

  0x00000200349ab50f: mov    %rax,%rdi
  0x00000200349ab512: add    %r8,%rdi
  0x00000200349ab515: lea    0x18(%rdx),%rcx
  0x00000200349ab519: mov    %rdi,%rbx
  0x00000200349ab51c: lock cmpxchg %rbx,(%rcx)
  0x00000200349ab521: mov    $0x1,%ebx
  0x00000200349ab526: je     0x00000200349ab531
  0x00000200349ab52c: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31

  0x00000200349ab531: cmp    $0x0,%ebx
  0x00000200349ab534: movabs $0x2004f3fe568,%rbx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab53e: movabs $0x190,%rax
  0x00000200349ab548: jne    0x00000200349ab558
  0x00000200349ab54e: movabs $0x1a0,%rax
  0x00000200349ab558: mov    (%rbx,%rax,1),%rcx
  0x00000200349ab55c: lea    0x1(%rcx),%rcx
  0x00000200349ab560: mov    %rcx,(%rbx,%rax,1)
  0x00000200349ab564: jne    0x00000200349ab774  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34

  0x00000200349ab56a: cmp    $0x0,%rsi
  0x00000200349ab56e: movabs $0x2004f3fe568,%rdi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab578: movabs $0x1c0,%rbx
  0x00000200349ab582: jne    0x00000200349ab592
  0x00000200349ab588: movabs $0x1b0,%rbx
  0x00000200349ab592: mov    (%rdi,%rbx,1),%rax
  0x00000200349ab596: lea    0x1(%rax),%rax
  0x00000200349ab59a: mov    %rax,(%rdi,%rbx,1)
  0x00000200349ab59e: jne    0x00000200349ab5ae  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42

  0x00000200349ab5a4: mov    $0x1,%esi
  0x00000200349ab5a9: jmpq   0x00000200349abc4a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x00000200349ab5ae: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47
                                                ; implicit exception: dispatches to 0x00000200349abc9d
  0x00000200349ab5b1: dec    %edi
  0x00000200349ab5b3: cmp    $0x0,%edi
  0x00000200349ab5b6: movabs $0x2004f3fe568,%rbx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab5c0: movabs $0x1e0,%rax
  0x00000200349ab5ca: jge    0x00000200349ab5da
  0x00000200349ab5d0: movabs $0x1d0,%rax
  0x00000200349ab5da: mov    (%rbx,%rax,1),%rcx
  0x00000200349ab5de: lea    0x1(%rcx),%rcx
  0x00000200349ab5e2: mov    %rcx,(%rbx,%rax,1)
  0x00000200349ab5e6: jge    0x00000200349ab5f6  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53

  0x00000200349ab5ec: mov    $0x1,%esi
  0x00000200349ab5f1: jmpq   0x00000200349abc4a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x00000200349ab5f6: mov    %edi,0x70(%rsp)
  0x00000200349ab5fa: mov    %rsi,0x78(%rsp)
  0x00000200349ab5ff: mov    %r8,0x80(%rsp)
  0x00000200349ab607: callq  0x0000020034437500  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58
                                                ;   {static_call}
  0x00000200349ab60c: and    0x70(%rsp),%eax
  0x00000200349ab610: movslq %eax,%rbx
  0x00000200349ab613: mov    0x78(%rsp),%rsi
  0x00000200349ab618: cmp    0xc(%rsi),%eax
  0x00000200349ab61b: jae    0x00000200349abca2
  0x00000200349ab621: mov    0x10(%rsi,%rbx,4),%eax
  0x00000200349ab625: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64

  0x00000200349ab629: cmp    $0x0,%rax
  0x00000200349ab62d: movabs $0x2004f3fe568,%rbx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab637: movabs $0x210,%rdx
  0x00000200349ab641: jne    0x00000200349ab651
  0x00000200349ab647: movabs $0x200,%rdx
  0x00000200349ab651: mov    (%rbx,%rdx,1),%rsi
  0x00000200349ab655: lea    0x1(%rsi),%rsi
  0x00000200349ab659: mov    %rsi,(%rbx,%rdx,1)
  0x00000200349ab65d: jne    0x00000200349ab67d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68

  0x00000200349ab663: mov    $0x1,%esi
  0x00000200349ab668: mov    0x80(%rsp),%r8
  0x00000200349ab670: mov    0x88(%rsp),%rdx
  0x00000200349ab678: jmpq   0x00000200349abc4a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x00000200349ab67d: mov    0x80(%rsp),%r8
  0x00000200349ab685: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x00000200349abcab
  0x00000200349ab68d: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81

  0x00000200349ab692: mov    %rbx,%rdx
  0x00000200349ab695: add    %r8,%rdx
  0x00000200349ab698: lea    0x90(%rax),%rsi
  0x00000200349ab69f: mov    %rbx,%rax
  0x00000200349ab6a2: mov    %rdx,%rbx
  0x00000200349ab6a5: lock cmpxchg %rbx,(%rsi)
  0x00000200349ab6aa: mov    $0x1,%edx
  0x00000200349ab6af: je     0x00000200349ab6ba
  0x00000200349ab6b5: mov    $0x0,%edx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91

  0x00000200349ab6ba: cmp    $0x0,%edx
  0x00000200349ab6bd: movabs $0x2004f3fe568,%rsi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab6c7: movabs $0x258,%rdi
  0x00000200349ab6d1: jne    0x00000200349ab6e1
  0x00000200349ab6d7: movabs $0x268,%rdi
  0x00000200349ab6e1: mov    (%rsi,%rdi,1),%rbx
  0x00000200349ab6e5: lea    0x1(%rbx),%rbx
  0x00000200349ab6e9: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349ab6ed: jne    0x00000200349ab703  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97

  0x00000200349ab6f3: mov    %rdx,%rsi
  0x00000200349ab6f6: mov    0x88(%rsp),%rdx
  0x00000200349ab6fe: jmpq   0x00000200349abc4a  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x00000200349ab703: mov    0x74(%rsp),%r9d
  0x00000200349ab708: cmp    $0x1,%r9d
  0x00000200349ab70c: movabs $0x2004f3fe568,%rdx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab716: movabs $0x298,%rsi
  0x00000200349ab720: jle    0x00000200349ab730
  0x00000200349ab726: movabs $0x288,%rsi
  0x00000200349ab730: mov    (%rdx,%rsi,1),%rdi
  0x00000200349ab734: lea    0x1(%rdi),%rdi
  0x00000200349ab738: mov    %rdi,(%rdx,%rsi,1)
  0x00000200349ab73c: jle    0x00000200349abc3a  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110

  0x00000200349ab742: mov    0x88(%rsp),%rdx
  0x00000200349ab74a: movabs $0x2004f3fe568,%rsi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab754: addq   $0x1,0x2a8(%rsi)
  0x00000200349ab75c: mov    0x88(%rsp),%rdx    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115

  0x00000200349ab764: data16 xchg %ax,%ax
  0x00000200349ab767: callq  0x0000020034437000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115
                                                ;   {optimized virtual_call}
  0x00000200349ab76c: mov    %rax,%rdi          ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120

  0x00000200349ab76f: mov    0x74(%rsp),%r9d
  0x00000200349ab774: cmp    $0x0,%r9d
  0x00000200349ab778: movabs $0x2004f3fe568,%rdx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab782: movabs $0x2e0,%rsi
  0x00000200349ab78c: jl     0x00000200349ab79c
  0x00000200349ab792: movabs $0x2f0,%rsi
  0x00000200349ab79c: mov    (%rdx,%rsi,1),%rbx
  0x00000200349ab7a0: lea    0x1(%rbx),%rbx
  0x00000200349ab7a4: mov    %rbx,(%rdx,%rsi,1)
  0x00000200349ab7a8: jl     0x00000200349abc2a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121

  0x00000200349ab7ae: xchg   %ax,%ax
  0x00000200349ab7b0: mov    0x88(%rsp),%rdx
  0x00000200349ab7b8: mov    0x14(%rdx),%esi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127

  0x00000200349ab7bb: movslq %esi,%rbx
  0x00000200349ab7be: cmp    %rbx,%rdi
  0x00000200349ab7c1: movabs $0x2004f3fe568,%rdi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab7cb: movabs $0x300,%rbx
  0x00000200349ab7d5: jl     0x00000200349ab7e5
  0x00000200349ab7db: movabs $0x310,%rbx
  0x00000200349ab7e5: mov    (%rdi,%rbx,1),%rax
  0x00000200349ab7e9: lea    0x1(%rax),%rax
  0x00000200349ab7ed: mov    %rax,(%rdi,%rbx,1)
  0x00000200349ab7f1: jl     0x00000200349abc2a  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134

  0x00000200349ab7f7: mov    0x28(%rdx),%edi
  0x00000200349ab7fa: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139

  0x00000200349ab7fe: cmp    $0x0,%rdi
  0x00000200349ab802: movabs $0x2004f3fe568,%rbx  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab80c: movabs $0x320,%rax
  0x00000200349ab816: je     0x00000200349ab826
  0x00000200349ab81c: movabs $0x330,%rax
  0x00000200349ab826: mov    (%rbx,%rax,1),%rcx
  0x00000200349ab82a: lea    0x1(%rcx),%rcx
  0x00000200349ab82e: mov    %rcx,(%rbx,%rax,1)
  0x00000200349ab832: je     0x00000200349abc2a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145

  0x00000200349ab838: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150
                                                ; implicit exception: dispatches to 0x00000200349abcb0
  0x00000200349ab83b: cmp    $0x40000000,%ebx
  0x00000200349ab841: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab84b: movabs $0x340,%rcx
  0x00000200349ab855: jge    0x00000200349ab865
  0x00000200349ab85b: movabs $0x350,%rcx
  0x00000200349ab865: mov    (%rax,%rcx,1),%r8
  0x00000200349ab869: lea    0x1(%r8),%r8
  0x00000200349ab86d: mov    %r8,(%rax,%rcx,1)
  0x00000200349ab871: jge    0x00000200349abc2a  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156

  0x00000200349ab877: mov    %rdi,0x98(%rsp)
  0x00000200349ab87f: mov    %esi,0x90(%rsp)
  0x00000200349ab886: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab890: addq   $0x1,0x360(%rax)
  0x00000200349ab898: movabs $0x2004f48f710,%rax  ;   {metadata(method data for {method} {0x000002004f2a6470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab8a2: mov    0xfc(%rax),%ecx
  0x00000200349ab8a8: add    $0x8,%ecx
  0x00000200349ab8ab: mov    %ecx,0xfc(%rax)
  0x00000200349ab8b1: and    $0x7ffff8,%ecx
  0x00000200349ab8b7: cmp    $0x0,%ecx
  0x00000200349ab8ba: je     0x00000200349abcb5
  0x00000200349ab8c0: movabs $0x2004f48f710,%rax  ;   {metadata(method data for {method} {0x000002004f2a6470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab8ca: addq   $0x1,0x138(%rax)
  0x00000200349ab8d2: mov    %rbx,%rdx          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161

  0x00000200349ab8d5: xchg   %ax,%ax
  0x00000200349ab8d7: callq  0x0000020034437500  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161
                                                ;   {static_call}
  0x00000200349ab8dc: or     $0x8000,%eax
  0x00000200349ab8e2: mov    0x90(%rsp),%esi
  0x00000200349ab8e9: cmp    $0x0,%esi
  0x00000200349ab8ec: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab8f6: movabs $0x370,%r9
  0x00000200349ab900: jge    0x00000200349ab910
  0x00000200349ab906: movabs $0x380,%r9
  0x00000200349ab910: mov    (%r8,%r9,1),%rdx
  0x00000200349ab914: lea    0x1(%rdx),%rdx
  0x00000200349ab918: mov    %rdx,(%r8,%r9,1)
  0x00000200349ab91c: jge    0x00000200349abb01  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168

  0x00000200349ab922: mov    %rsi,%r8
  0x00000200349ab925: shr    $0x10,%r8d
  0x00000200349ab929: cmp    %eax,%r8d
  0x00000200349ab92c: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab936: movabs $0x390,%r9
  0x00000200349ab940: jne    0x00000200349ab950
  0x00000200349ab946: movabs $0x3a0,%r9
  0x00000200349ab950: mov    (%r8,%r9,1),%rdx
  0x00000200349ab954: lea    0x1(%rdx),%rdx
  0x00000200349ab958: mov    %rdx,(%r8,%r9,1)
  0x00000200349ab95c: jne    0x00000200349abc2a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178

  0x00000200349ab962: mov    %rax,%r8
  0x00000200349ab965: inc    %r8d
  0x00000200349ab968: cmp    %r8d,%esi
  0x00000200349ab96b: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab975: movabs $0x3b0,%r9
  0x00000200349ab97f: je     0x00000200349ab98f
  0x00000200349ab985: movabs $0x3c0,%r9
  0x00000200349ab98f: mov    (%r8,%r9,1),%rdx
  0x00000200349ab993: lea    0x1(%rdx),%rdx
  0x00000200349ab997: mov    %rdx,(%r8,%r9,1)
  0x00000200349ab99b: je     0x00000200349abc2a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187

  0x00000200349ab9a1: add    $0xffff,%eax
  0x00000200349ab9a7: cmp    %eax,%esi
  0x00000200349ab9a9: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab9b3: movabs $0x3d0,%r8
  0x00000200349ab9bd: je     0x00000200349ab9cd
  0x00000200349ab9c3: movabs $0x3e0,%r8
  0x00000200349ab9cd: mov    (%rax,%r8,1),%r9
  0x00000200349ab9d1: lea    0x1(%r9),%r9
  0x00000200349ab9d5: mov    %r9,(%rax,%r8,1)
  0x00000200349ab9d9: je     0x00000200349abc2a  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197

  0x00000200349ab9df: mov    0x88(%rsp),%rdx
  0x00000200349ab9e7: mov    0x2c(%rdx),%r9d
  0x00000200349ab9eb: shl    $0x3,%r9           ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201

  0x00000200349ab9ef: cmp    $0x0,%r9
  0x00000200349ab9f3: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349ab9fd: movabs $0x3f0,%r8
  0x00000200349aba07: je     0x00000200349aba17
  0x00000200349aba0d: movabs $0x400,%r8
  0x00000200349aba17: mov    (%rax,%r8,1),%rdi
  0x00000200349aba1b: lea    0x1(%rdi),%rdi
  0x00000200349aba1f: mov    %rdi,(%rax,%r8,1)
  0x00000200349aba23: je     0x00000200349abc2a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207

  0x00000200349aba29: mov    0x20(%rdx),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211

  0x00000200349aba2c: cmp    $0x0,%eax
  0x00000200349aba2f: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349aba39: movabs $0x420,%r8
  0x00000200349aba43: jle    0x00000200349aba53
  0x00000200349aba49: movabs $0x410,%r8
  0x00000200349aba53: mov    (%rax,%r8,1),%rdi
  0x00000200349aba57: lea    0x1(%rdi),%rdi
  0x00000200349aba5b: mov    %rdi,(%rax,%r8,1)
  0x00000200349aba5f: jle    0x00000200349abc19  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214

  0x00000200349aba65: mov    %rsi,%r8
  0x00000200349aba68: inc    %r8d
  0x00000200349aba6b: lea    0x14(%rdx),%rdi
  0x00000200349aba6f: mov    %rsi,%rax
  0x00000200349aba72: lock cmpxchg %r8d,(%rdi)
  0x00000200349aba77: mov    $0x1,%r8d
  0x00000200349aba7d: je     0x00000200349aba89
  0x00000200349aba83: mov    $0x0,%r8d          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233

  0x00000200349aba89: cmp    $0x0,%r8d
  0x00000200349aba8d: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349aba97: movabs $0x480,%rsi
  0x00000200349abaa1: je     0x00000200349abab1
  0x00000200349abaa7: movabs $0x490,%rsi
  0x00000200349abab1: mov    (%r8,%rsi,1),%rdi
  0x00000200349abab5: lea    0x1(%rdi),%rdi
  0x00000200349abab9: mov    %rdi,(%r8,%rsi,1)
  0x00000200349ababd: je     0x00000200349abba4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236

  0x00000200349abac3: mov    %rdx,%r8
  0x00000200349abac6: movabs $0x2004f3fe568,%rsi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abad0: addq   $0x1,0x4a0(%rsi)
  0x00000200349abad8: mov    0x98(%rsp),%r8
  0x00000200349abae0: mov    %rdx,%rsi
  0x00000200349abae3: mov    %rsi,%rdx          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244

  0x00000200349abae6: nop
  0x00000200349abae7: callq  0x0000020034437000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244
                                                ;   {optimized virtual_call}
  0x00000200349abaec: movabs $0x2004f3fe568,%rax  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abaf6: incl   0x4b0(%rax)
  0x00000200349abafc: jmpq   0x00000200349abba4  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247

  0x00000200349abb01: mov    0x88(%rsp),%rdx
  0x00000200349abb09: shl    $0x10,%eax
  0x00000200349abb0c: mov    %rax,%r8
  0x00000200349abb0f: add    $0x2,%r8d
  0x00000200349abb13: lea    0x14(%rdx),%r9
  0x00000200349abb17: mov    %rsi,%rax
  0x00000200349abb1a: lock cmpxchg %r8d,(%r9)
  0x00000200349abb1f: mov    $0x1,%r8d
  0x00000200349abb25: je     0x00000200349abb31
  0x00000200349abb2b: mov    $0x0,%r8d          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266

  0x00000200349abb31: cmp    $0x0,%r8d
  0x00000200349abb35: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abb3f: movabs $0x500,%r9
  0x00000200349abb49: je     0x00000200349abb59
  0x00000200349abb4f: movabs $0x510,%r9
  0x00000200349abb59: mov    (%r8,%r9,1),%rsi
  0x00000200349abb5d: lea    0x1(%rsi),%rsi
  0x00000200349abb61: mov    %rsi,(%r8,%r9,1)
  0x00000200349abb65: je     0x00000200349abba4  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269

  0x00000200349abb6b: mov    0x98(%rsp),%rdi
  0x00000200349abb73: mov    %rdx,%r8
  0x00000200349abb76: movabs $0x2004f3fe568,%r9  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abb80: addq   $0x1,0x520(%r9)
  0x00000200349abb88: mov    %rdi,%r8
  0x00000200349abb8b: movabs $0x0,%r9           ;   {oop(NULL)}
  0x00000200349abb95: mov    %rdx,%rsi
  0x00000200349abb98: mov    %rsi,%rdx          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276

  0x00000200349abb9b: nopl   0x0(%rax)
  0x00000200349abb9f: callq  0x0000020034437000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276
                                                ;   {optimized virtual_call}
  0x00000200349abba4: mov    0x88(%rsp),%rdx
  0x00000200349abbac: movabs $0x2004f3fe568,%rsi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abbb6: addq   $0x1,0x530(%rsi)
  0x00000200349abbbe: mov    0x88(%rsp),%rdx    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280

  0x00000200349abbc6: nop
  0x00000200349abbc7: callq  0x0000020034437000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280
                                                ;   {optimized virtual_call}
  0x00000200349abbcc: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abbd6: mov    0x100(%r8),%r9d
  0x00000200349abbdd: add    $0x8,%r9d
  0x00000200349abbe1: mov    %r9d,0x100(%r8)
  0x00000200349abbe8: and    $0xfff8,%r9d
  0x00000200349abbef: cmp    $0x0,%r9d
  0x00000200349abbf3: je     0x00000200349abcd6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x00000200349abbf9: mov    0x70(%r15),%r10    ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x00000200349abbfd: test   %eax,(%r10)        ;   {poll}
  0x00000200349abc00: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abc0a: incl   0x568(%r8)
  0x00000200349abc11: mov    %rax,%rdi
  0x00000200349abc14: jmpq   0x00000200349ab7b0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x00000200349abc19: movabs $0x2004f3fe568,%r8  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abc23: incl   0x430(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@217

  0x00000200349abc2a: add    $0xb0,%rsp
  0x00000200349abc31: pop    %rbp
  0x00000200349abc32: mov    0x70(%r15),%r10
  0x00000200349abc36: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349abc39: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288

  0x00000200349abc3a: add    $0xb0,%rsp
  0x00000200349abc41: pop    %rbp
  0x00000200349abc42: mov    0x70(%r15),%r10
  0x00000200349abc46: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349abc49: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113

  0x00000200349abc4a: mov    %rdx,%r9
  0x00000200349abc4d: movabs $0x2004f3fe568,%rdi  ;   {metadata(method data for {method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abc57: addq   $0x1,0x278(%rdi)
  0x00000200349abc5f: mov    %rsi,%r9           ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104

  0x00000200349abc62: nopl   0x0(%rax,%rax,1)
  0x00000200349abc67: callq  0x0000020034437000  ; ImmutableOopMap{}
                                                ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104
                                                ;   {optimized virtual_call}
  0x00000200349abc6c: add    $0xb0,%rsp
  0x00000200349abc73: pop    %rbp
  0x00000200349abc74: mov    0x70(%r15),%r10
  0x00000200349abc78: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349abc7b: retq   
  0x00000200349abc7c: movabs $0x2004f2a6738,%r10  ;   {metadata({method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abc86: mov    %r10,0x8(%rsp)
  0x00000200349abc8b: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349abc93: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349abc98: jmpq   0x00000200349ab4c4
  0x00000200349abc9d: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop [136]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349abca2: mov    %rax,(%rsp)
  0x00000200349abca6: callq  0x000002003446eda0  ; ImmutableOopMap{[136]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x00000200349abcab: callq  0x00000200344fcba0  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349abcb0: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349abcb5: movabs $0x2004f2a6468,%r10  ;   {metadata({method} {0x000002004f2a6470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abcbf: mov    %r10,0x8(%rsp)
  0x00000200349abcc4: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349abccc: callq  0x0000020034501a80  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349abcd1: jmpq   0x00000200349ab8c0
  0x00000200349abcd6: movabs $0x2004f2a6738,%r10  ;   {metadata({method} {0x000002004f2a6740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349abce0: mov    %r10,0x8(%rsp)
  0x00000200349abce5: movq   $0x11d,(%rsp)
  0x00000200349abced: callq  0x0000020034501a80  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349abcf2: jmpq   0x00000200349abbf9
  0x00000200349abcf7: nop
  0x00000200349abcf8: nop
  0x00000200349abcf9: mov    0x350(%r15),%rax
  0x00000200349abd00: movabs $0x0,%r10
  0x00000200349abd0a: mov    %r10,0x350(%r15)
  0x00000200349abd11: movabs $0x0,%r10
  0x00000200349abd1b: mov    %r10,0x358(%r15)
  0x00000200349abd22: add    $0xb0,%rsp
  0x00000200349abd29: pop    %rbp
  0x00000200349abd2a: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349abd2f: hlt    
  0x00000200349abd30: hlt    
  0x00000200349abd31: hlt    
  0x00000200349abd32: hlt    
  0x00000200349abd33: hlt    
  0x00000200349abd34: hlt    
  0x00000200349abd35: hlt    
  0x00000200349abd36: hlt    
  0x00000200349abd37: hlt    
  0x00000200349abd38: hlt    
  0x00000200349abd39: hlt    
  0x00000200349abd3a: hlt    
  0x00000200349abd3b: hlt    
  0x00000200349abd3c: hlt    
  0x00000200349abd3d: hlt    
  0x00000200349abd3e: hlt    
  0x00000200349abd3f: hlt    
[Stub Code]
  0x00000200349abd40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349abd45: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd4f: jmpq   0x00000200349abd4f  ;   {runtime_call}
  0x00000200349abd54: nop
  0x00000200349abd55: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd5f: jmpq   0x00000200349abd5f  ;   {runtime_call}
  0x00000200349abd64: nop
  0x00000200349abd65: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd6f: jmpq   0x00000200349abd6f  ;   {runtime_call}
  0x00000200349abd74: nop
  0x00000200349abd75: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd7f: jmpq   0x00000200349abd7f  ;   {runtime_call}
  0x00000200349abd84: nop
  0x00000200349abd85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd8f: jmpq   0x00000200349abd8f  ;   {runtime_call}
  0x00000200349abd94: nop
  0x00000200349abd95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abd9f: jmpq   0x00000200349abd9f  ;   {runtime_call}
  0x00000200349abda4: nop
  0x00000200349abda5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349abdaf: jmpq   0x00000200349abdaf  ;   {runtime_call}
[Exception Handler]
  0x00000200349abdb4: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349abdb9: mov    %rsp,-0x28(%rsp)
  0x00000200349abdbe: sub    $0x80,%rsp
  0x00000200349abdc5: mov    %rax,0x78(%rsp)
  0x00000200349abdca: mov    %rcx,0x70(%rsp)
  0x00000200349abdcf: mov    %rdx,0x68(%rsp)
  0x00000200349abdd4: mov    %rbx,0x60(%rsp)
  0x00000200349abdd9: mov    %rbp,0x50(%rsp)
  0x00000200349abdde: mov    %rsi,0x48(%rsp)
  0x00000200349abde3: mov    %rdi,0x40(%rsp)
  0x00000200349abde8: mov    %r8,0x38(%rsp)
  0x00000200349abded: mov    %r9,0x30(%rsp)
  0x00000200349abdf2: mov    %r10,0x28(%rsp)
  0x00000200349abdf7: mov    %r11,0x20(%rsp)
  0x00000200349abdfc: mov    %r12,0x18(%rsp)
  0x00000200349abe01: mov    %r13,0x10(%rsp)
  0x00000200349abe06: mov    %r14,0x8(%rsp)
  0x00000200349abe0b: mov    %r15,(%rsp)
  0x00000200349abe0f: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349abe19: movabs $0x200349abdb9,%rdx  ;   {internal_word}
  0x00000200349abe23: mov    %rsp,%r8
  0x00000200349abe26: and    $0xfffffffffffffff0,%rsp
  0x00000200349abe2a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349abe34: callq  *%r10
  0x00000200349abe37: hlt    
[Deopt Handler Code]
  0x00000200349abe38: movabs $0x200349abe38,%r10  ;   {section_word}
  0x00000200349abe42: push   %r10
  0x00000200349abe44: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349abe49: hlt    
  0x00000200349abe4a: hlt    
  0x00000200349abe4b: hlt    
  0x00000200349abe4c: hlt    
  0x00000200349abe4d: hlt    
  0x00000200349abe4e: hlt    
  0x00000200349abe4f: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 428 
ImmutableOopMap{[136]=Oop }pc offsets: 780 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 1148 
ImmutableOopMap{[136]=Oop }pc offsets: 1676 1860 1900 1949 
ImmutableOopMap{}pc offsets: 2060 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 2104 
ImmutableOopMap{rdx=Oop [136]=Oop rsi=Oop }pc offsets: 2114 
ImmutableOopMap{[136]=Oop rsi=Oop }pc offsets: 2123 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 2128 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 2133 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 2161 
ImmutableOopMap{[136]=Oop }pc offsets: 2194 Compiled method (c1)     212   51       3       java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x00000200349ac590,0x00000200349acb20] = 1424
 relocation     [0x00000200349ac708,0x00000200349ac750] = 72
 main code      [0x00000200349ac760,0x00000200349ac900] = 416
 stub code      [0x00000200349ac900,0x00000200349ac9b0] = 176
 metadata       [0x00000200349ac9b0,0x00000200349ac9b8] = 8
 scopes data    [0x00000200349ac9b8,0x00000200349aca18] = 96
 scopes pcs     [0x00000200349aca18,0x00000200349acb08] = 240
 dependencies   [0x00000200349acb08,0x00000200349acb10] = 8
 nul chk table  [0x00000200349acb10,0x00000200349acb20] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x00000200349ac760, 0x00000200349ac9b0]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000200349ac760: mov    %eax,-0x7000(%rsp)
  0x00000200349ac767: push   %rbp
  0x00000200349ac768: sub    $0x30,%rsp
  0x00000200349ac76c: movabs $0x2004f3e4ab0,%rax  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349ac776: mov    0xfc(%rax),%esi
  0x00000200349ac77c: add    $0x8,%esi
  0x00000200349ac77f: mov    %esi,0xfc(%rax)
  0x00000200349ac785: and    $0x1ff8,%esi
  0x00000200349ac78b: cmp    $0x0,%esi
  0x00000200349ac78e: je     0x00000200349ac86e  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@0

  0x00000200349ac794: cmp    $0x0,%r8d
  0x00000200349ac798: movabs $0x2004f3e4ab0,%rax  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349ac7a2: movabs $0x138,%rsi
  0x00000200349ac7ac: jl     0x00000200349ac7bc
  0x00000200349ac7b2: movabs $0x148,%rsi
  0x00000200349ac7bc: mov    (%rax,%rsi,1),%rdi
  0x00000200349ac7c0: lea    0x1(%rdi),%rdi
  0x00000200349ac7c4: mov    %rdi,(%rax,%rsi,1)
  0x00000200349ac7c8: jl     0x00000200349ac82c  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1

  0x00000200349ac7ce: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; implicit exception: dispatches to 0x00000200349ac88f
  0x00000200349ac7d1: cmp    %eax,%r8d
  0x00000200349ac7d4: movabs $0x2004f3e4ab0,%rax  ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349ac7de: movabs $0x168,%rsi
  0x00000200349ac7e8: jge    0x00000200349ac7f8
  0x00000200349ac7ee: movabs $0x158,%rsi
  0x00000200349ac7f8: mov    (%rax,%rsi,1),%rdi
  0x00000200349ac7fc: lea    0x1(%rdi),%rdi
  0x00000200349ac800: mov    %rdi,(%rax,%rsi,1)
  0x00000200349ac804: jge    0x00000200349ac82c  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7

  0x00000200349ac80a: movslq %r8d,%r8
  0x00000200349ac80d: movsbl 0x10(%rdx,%r8,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21

  0x00000200349ac813: and    $0xff,%eax
  0x00000200349ac819: and    $0xffff,%eax
  0x00000200349ac81f: add    $0x30,%rsp
  0x00000200349ac823: pop    %rbp
  0x00000200349ac824: mov    0x70(%r15),%r10
  0x00000200349ac828: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349ac82b: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@27

  0x00000200349ac82c: nopl   0x0(%rax)
  0x00000200349ac830: jmpq   0x00000200349ac8a3  ;   {no_reloc}
  0x00000200349ac835: add    %al,(%rax)
  0x00000200349ac837: add    %al,(%rax)
  0x00000200349ac839: add    %ch,%cl
  0x00000200349ac83b: outsb  %ds:(%rsi),(%dx)
  0x00000200349ac83c: add    %al,(%rax)
  0x00000200349ac83e: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10

  0x00000200349ac841: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349ac844: mov    $0x4a,%al
  0x00000200349ac846: rex.WRXB add %r8b,%ds:(%r10)
  0x00000200349ac84a: add    %al,(%rax)
  0x00000200349ac84c: addq   $0x1,0x178(%rsi)
  0x00000200349ac854: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15

  0x00000200349ac857: mov    %rax,0x20(%rsp)
  0x00000200349ac85c: data16 xchg %ax,%ax
  0x00000200349ac85f: callq  0x0000020034437000  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ;   {optimized virtual_call}
  0x00000200349ac864: mov    0x20(%rsp),%rax
  0x00000200349ac869: jmpq   0x00000200349ac8e2
  0x00000200349ac86e: movabs $0x2004f2847c8,%r10  ;   {metadata({method} {0x000002004f2847d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x00000200349ac878: mov    %r10,0x8(%rsp)
  0x00000200349ac87d: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349ac885: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349ac88a: jmpq   0x00000200349ac794
  0x00000200349ac88f: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349ac894: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349ac89e: mov    $0xa050f00,%eax
  0x00000200349ac8a3: callq  0x0000020034500500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349ac8a8: jmp    0x00000200349ac830
  0x00000200349ac8aa: nop
  0x00000200349ac8ab: nop
  0x00000200349ac8ac: nop
  0x00000200349ac8ad: mov    %rdx,%rdx
  0x00000200349ac8b0: callq  0x00000200344fd100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x00000200349ac8b5: jmp    0x00000200349ac83f
  0x00000200349ac8b7: nop
  0x00000200349ac8b8: nop
  0x00000200349ac8b9: mov    0x350(%r15),%rax
  0x00000200349ac8c0: movabs $0x0,%r10
  0x00000200349ac8ca: mov    %r10,0x350(%r15)
  0x00000200349ac8d1: movabs $0x0,%r10
  0x00000200349ac8db: mov    %r10,0x358(%r15)
  0x00000200349ac8e2: add    $0x30,%rsp
  0x00000200349ac8e6: pop    %rbp
  0x00000200349ac8e7: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349ac8ec: hlt    
  0x00000200349ac8ed: hlt    
  0x00000200349ac8ee: hlt    
  0x00000200349ac8ef: hlt    
  0x00000200349ac8f0: hlt    
  0x00000200349ac8f1: hlt    
  0x00000200349ac8f2: hlt    
  0x00000200349ac8f3: hlt    
  0x00000200349ac8f4: hlt    
  0x00000200349ac8f5: hlt    
  0x00000200349ac8f6: hlt    
  0x00000200349ac8f7: hlt    
  0x00000200349ac8f8: hlt    
  0x00000200349ac8f9: hlt    
  0x00000200349ac8fa: hlt    
  0x00000200349ac8fb: hlt    
  0x00000200349ac8fc: hlt    
  0x00000200349ac8fd: hlt    
  0x00000200349ac8fe: hlt    
  0x00000200349ac8ff: hlt    
[Stub Code]
  0x00000200349ac900: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349ac905: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349ac90f: jmpq   0x00000200349ac90f  ;   {runtime_call}
[Exception Handler]
  0x00000200349ac914: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349ac919: mov    %rsp,-0x28(%rsp)
  0x00000200349ac91e: sub    $0x80,%rsp
  0x00000200349ac925: mov    %rax,0x78(%rsp)
  0x00000200349ac92a: mov    %rcx,0x70(%rsp)
  0x00000200349ac92f: mov    %rdx,0x68(%rsp)
  0x00000200349ac934: mov    %rbx,0x60(%rsp)
  0x00000200349ac939: mov    %rbp,0x50(%rsp)
  0x00000200349ac93e: mov    %rsi,0x48(%rsp)
  0x00000200349ac943: mov    %rdi,0x40(%rsp)
  0x00000200349ac948: mov    %r8,0x38(%rsp)
  0x00000200349ac94d: mov    %r9,0x30(%rsp)
  0x00000200349ac952: mov    %r10,0x28(%rsp)
  0x00000200349ac957: mov    %r11,0x20(%rsp)
  0x00000200349ac95c: mov    %r12,0x18(%rsp)
  0x00000200349ac961: mov    %r13,0x10(%rsp)
  0x00000200349ac966: mov    %r14,0x8(%rsp)
  0x00000200349ac96b: mov    %r15,(%rsp)
  0x00000200349ac96f: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349ac979: movabs $0x200349ac919,%rdx  ;   {internal_word}
  0x00000200349ac983: mov    %rsp,%r8
  0x00000200349ac986: and    $0xfffffffffffffff0,%rsp
  0x00000200349ac98a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349ac994: callq  *%r10
  0x00000200349ac997: hlt    
[Deopt Handler Code]
  0x00000200349ac998: movabs $0x200349ac998,%r10  ;   {section_word}
  0x00000200349ac9a2: push   %r10
  0x00000200349ac9a4: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349ac9a9: hlt    
  0x00000200349ac9aa: hlt    
  0x00000200349ac9ab: hlt    
  0x00000200349ac9ac: hlt    
  0x00000200349ac9ad: hlt    
  0x00000200349ac9ae: hlt    
  0x00000200349ac9af: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 260 
ImmutableOopMap{rdx=Oop }pc offsets: 298 308 
ImmutableOopMap{}pc offsets: 328 341 Compiled method (c1)     214   10       3       java.lang.Math::floorDiv (22 bytes)
 total in heap  [0x00000200349acb90,0x00000200349acff0] = 1120
 relocation     [0x00000200349acd08,0x00000200349acd38] = 48
 main code      [0x00000200349acd40,0x00000200349ace80] = 320
 stub code      [0x00000200349ace80,0x00000200349acf18] = 152
 metadata       [0x00000200349acf18,0x00000200349acf20] = 8
 scopes data    [0x00000200349acf20,0x00000200349acf58] = 56
 scopes pcs     [0x00000200349acf58,0x00000200349acfd8] = 128
 dependencies   [0x00000200349acfd8,0x00000200349acfe0] = 8
 nul chk table  [0x00000200349acfe0,0x00000200349acff0] = 16
----------------------------------------------------------------------
java/lang/Math.floorDiv(II)I  [0x00000200349acd40, 0x00000200349acf18]  472 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000200349acd40: mov    %eax,-0x7000(%rsp)
  0x00000200349acd47: push   %rbp
  0x00000200349acd48: sub    $0x30,%rsp
  0x00000200349acd4c: mov    %rdx,%rsi
  0x00000200349acd4f: movabs $0x2004f3bed48,%rax  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349acd59: mov    0xfc(%rax),%edx
  0x00000200349acd5f: add    $0x8,%edx
  0x00000200349acd62: mov    %edx,0xfc(%rax)
  0x00000200349acd68: and    $0x1ff8,%edx
  0x00000200349acd6e: cmp    $0x0,%edx
  0x00000200349acd71: je     0x00000200349ace23  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@0

  0x00000200349acd77: mov    %rsi,%rax
  0x00000200349acd7a: cmp    $0x80000000,%eax
  0x00000200349acd80: jne    0x00000200349acd92
  0x00000200349acd86: xor    %edx,%edx
  0x00000200349acd88: cmp    $0xffffffff,%r8d
  0x00000200349acd8c: je     0x00000200349acd96
  0x00000200349acd92: cltd   
  0x00000200349acd93: idiv   %r8d               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; implicit exception: dispatches to 0x00000200349ace44
  0x00000200349acd96: mov    %rsi,%rdi
  0x00000200349acd99: xor    %r8,%rdi
  0x00000200349acd9c: cmp    $0x0,%edi
  0x00000200349acd9f: movabs $0x2004f3bed48,%rdi  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349acda9: movabs $0x138,%rbx
  0x00000200349acdb3: jge    0x00000200349acdc3
  0x00000200349acdb9: movabs $0x148,%rbx
  0x00000200349acdc3: mov    (%rdi,%rbx,1),%rdx
  0x00000200349acdc7: lea    0x1(%rdx),%rdx
  0x00000200349acdcb: mov    %rdx,(%rdi,%rbx,1)
  0x00000200349acdcf: jge    0x00000200349ace16  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7

  0x00000200349acdd5: mov    %rax,%rdi
  0x00000200349acdd8: imul   %r8d,%edi
  0x00000200349acddc: cmp    %esi,%edi
  0x00000200349acdde: movabs $0x2004f3bed48,%rsi  ;   {metadata(method data for {method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349acde8: movabs $0x158,%rdi
  0x00000200349acdf2: je     0x00000200349ace02
  0x00000200349acdf8: movabs $0x168,%rdi
  0x00000200349ace02: mov    (%rsi,%rdi,1),%rbx
  0x00000200349ace06: lea    0x1(%rbx),%rbx
  0x00000200349ace0a: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349ace0e: je     0x00000200349ace16  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14

  0x00000200349ace14: dec    %eax
  0x00000200349ace16: add    $0x30,%rsp
  0x00000200349ace1a: pop    %rbp
  0x00000200349ace1b: mov    0x70(%r15),%r10
  0x00000200349ace1f: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349ace22: retq   
  0x00000200349ace23: movabs $0x2004f2e2dd0,%r10  ;   {metadata({method} {0x000002004f2e2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x00000200349ace2d: mov    %r10,0x8(%rsp)
  0x00000200349ace32: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349ace3a: callq  0x0000020034501a80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349ace3f: jmpq   0x00000200349acd77
  0x00000200349ace44: callq  0x00000200344fc920  ; ImmutableOopMap{}
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x00000200349ace49: nop
  0x00000200349ace4a: nop
  0x00000200349ace4b: mov    0x350(%r15),%rax
  0x00000200349ace52: movabs $0x0,%r10
  0x00000200349ace5c: mov    %r10,0x350(%r15)
  0x00000200349ace63: movabs $0x0,%r10
  0x00000200349ace6d: mov    %r10,0x358(%r15)
  0x00000200349ace74: add    $0x30,%rsp
  0x00000200349ace78: pop    %rbp
  0x00000200349ace79: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349ace7e: hlt    
  0x00000200349ace7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349ace80: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349ace85: mov    %rsp,-0x28(%rsp)
  0x00000200349ace8a: sub    $0x80,%rsp
  0x00000200349ace91: mov    %rax,0x78(%rsp)
  0x00000200349ace96: mov    %rcx,0x70(%rsp)
  0x00000200349ace9b: mov    %rdx,0x68(%rsp)
  0x00000200349acea0: mov    %rbx,0x60(%rsp)
  0x00000200349acea5: mov    %rbp,0x50(%rsp)
  0x00000200349aceaa: mov    %rsi,0x48(%rsp)
  0x00000200349aceaf: mov    %rdi,0x40(%rsp)
  0x00000200349aceb4: mov    %r8,0x38(%rsp)
  0x00000200349aceb9: mov    %r9,0x30(%rsp)
  0x00000200349acebe: mov    %r10,0x28(%rsp)
  0x00000200349acec3: mov    %r11,0x20(%rsp)
  0x00000200349acec8: mov    %r12,0x18(%rsp)
  0x00000200349acecd: mov    %r13,0x10(%rsp)
  0x00000200349aced2: mov    %r14,0x8(%rsp)
  0x00000200349aced7: mov    %r15,(%rsp)
  0x00000200349acedb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349acee5: movabs $0x200349ace85,%rdx  ;   {internal_word}
  0x00000200349aceef: mov    %rsp,%r8
  0x00000200349acef2: and    $0xfffffffffffffff0,%rsp
  0x00000200349acef6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349acf00: callq  *%r10
  0x00000200349acf03: hlt    
[Deopt Handler Code]
  0x00000200349acf04: movabs $0x200349acf04,%r10  ;   {section_word}
  0x00000200349acf0e: push   %r10
  0x00000200349acf10: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349acf15: hlt    
  0x00000200349acf16: hlt    
  0x00000200349acf17: hlt    

ImmutableOopMap{}pc offsets: 255 265 Compiled method (c1)     216   31       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x00000200349ad010,0x00000200349ad510] = 1280
 relocation     [0x00000200349ad188,0x00000200349ad1c8] = 64
 main code      [0x00000200349ad1e0,0x00000200349ad380] = 416
 stub code      [0x00000200349ad380,0x00000200349ad430] = 176
 metadata       [0x00000200349ad430,0x00000200349ad438] = 8
 scopes data    [0x00000200349ad438,0x00000200349ad468] = 48
 scopes pcs     [0x00000200349ad468,0x00000200349ad4f8] = 144
 dependencies   [0x00000200349ad4f8,0x00000200349ad500] = 8
 nul chk table  [0x00000200349ad500,0x00000200349ad510] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x00000200349ad1e0, 0x00000200349ad430]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000200349ad1e0: mov    %eax,-0x7000(%rsp)
  0x00000200349ad1e7: push   %rbp
  0x00000200349ad1e8: sub    $0x30,%rsp
  0x00000200349ad1ec: movabs $0x2004f405cc0,%rsi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349ad1f6: mov    0xfc(%rsi),%edi
  0x00000200349ad1fc: add    $0x8,%edi
  0x00000200349ad1ff: mov    %edi,0xfc(%rsi)
  0x00000200349ad205: and    $0x1ff8,%edi
  0x00000200349ad20b: cmp    $0x0,%edi
  0x00000200349ad20e: je     0x00000200349ad325  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0

  0x00000200349ad214: cmp    $0x0,%rdx
  0x00000200349ad218: movabs $0x2004f405cc0,%rsi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349ad222: movabs $0x138,%rdi
  0x00000200349ad22c: jne    0x00000200349ad23c
  0x00000200349ad232: movabs $0x148,%rdi
  0x00000200349ad23c: mov    (%rsi,%rdi,1),%rbx
  0x00000200349ad240: lea    0x1(%rbx),%rbx
  0x00000200349ad244: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349ad248: jne    0x00000200349ad268  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1

  0x00000200349ad24e: movabs $0x2004f405cc0,%rdx  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349ad258: incl   0x158(%rdx)
  0x00000200349ad25e: mov    $0x0,%esi
  0x00000200349ad263: jmpq   0x00000200349ad315  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5

  0x00000200349ad268: cmp    (%rdx),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ; implicit exception: dispatches to 0x00000200349ad346
  0x00000200349ad26b: mov    %rdx,%rsi
  0x00000200349ad26e: movabs $0x2004f405cc0,%rdi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349ad278: mov    0x8(%rsi),%esi
  0x00000200349ad27b: shl    $0x3,%rsi
  0x00000200349ad27f: cmp    0x180(%rdi),%rsi
  0x00000200349ad286: jne    0x00000200349ad295
  0x00000200349ad288: addq   $0x1,0x188(%rdi)
  0x00000200349ad290: jmpq   0x00000200349ad2fb
  0x00000200349ad295: cmp    0x190(%rdi),%rsi
  0x00000200349ad29c: jne    0x00000200349ad2ab
  0x00000200349ad29e: addq   $0x1,0x198(%rdi)
  0x00000200349ad2a6: jmpq   0x00000200349ad2fb
  0x00000200349ad2ab: cmpq   $0x0,0x180(%rdi)
  0x00000200349ad2b6: jne    0x00000200349ad2cf
  0x00000200349ad2b8: mov    %rsi,0x180(%rdi)
  0x00000200349ad2bf: movq   $0x1,0x188(%rdi)
  0x00000200349ad2ca: jmpq   0x00000200349ad2fb
  0x00000200349ad2cf: cmpq   $0x0,0x190(%rdi)
  0x00000200349ad2da: jne    0x00000200349ad2f3
  0x00000200349ad2dc: mov    %rsi,0x190(%rdi)
  0x00000200349ad2e3: movq   $0x1,0x198(%rdi)
  0x00000200349ad2ee: jmpq   0x00000200349ad2fb
  0x00000200349ad2f3: addq   $0x1,0x170(%rdi)
  0x00000200349ad2fb: xchg   %ax,%ax
  0x00000200349ad2fd: movabs $0xffffffffffffffff,%rax
  0x00000200349ad307: callq  0x0000020034437280  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ;   {virtual_call}
  0x00000200349ad30c: mov    %rax,%rsi
  0x00000200349ad30f: shr    $0x10,%esi
  0x00000200349ad312: xor    %rax,%rsi
  0x00000200349ad315: mov    %rsi,%rax
  0x00000200349ad318: add    $0x30,%rsp
  0x00000200349ad31c: pop    %rbp
  0x00000200349ad31d: mov    0x70(%r15),%r10
  0x00000200349ad321: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349ad324: retq   
  0x00000200349ad325: movabs $0x2004f298dc8,%r10  ;   {metadata({method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349ad32f: mov    %r10,0x8(%rsp)
  0x00000200349ad334: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349ad33c: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349ad341: jmpq   0x00000200349ad214
  0x00000200349ad346: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349ad34b: nop
  0x00000200349ad34c: nop
  0x00000200349ad34d: mov    0x350(%r15),%rax
  0x00000200349ad354: movabs $0x0,%r10
  0x00000200349ad35e: mov    %r10,0x350(%r15)
  0x00000200349ad365: movabs $0x0,%r10
  0x00000200349ad36f: mov    %r10,0x358(%r15)
  0x00000200349ad376: add    $0x30,%rsp
  0x00000200349ad37a: pop    %rbp
  0x00000200349ad37b: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x00000200349ad380: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349ad385: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349ad38f: jmpq   0x00000200349ad38f  ;   {runtime_call}
[Exception Handler]
  0x00000200349ad394: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349ad399: mov    %rsp,-0x28(%rsp)
  0x00000200349ad39e: sub    $0x80,%rsp
  0x00000200349ad3a5: mov    %rax,0x78(%rsp)
  0x00000200349ad3aa: mov    %rcx,0x70(%rsp)
  0x00000200349ad3af: mov    %rdx,0x68(%rsp)
  0x00000200349ad3b4: mov    %rbx,0x60(%rsp)
  0x00000200349ad3b9: mov    %rbp,0x50(%rsp)
  0x00000200349ad3be: mov    %rsi,0x48(%rsp)
  0x00000200349ad3c3: mov    %rdi,0x40(%rsp)
  0x00000200349ad3c8: mov    %r8,0x38(%rsp)
  0x00000200349ad3cd: mov    %r9,0x30(%rsp)
  0x00000200349ad3d2: mov    %r10,0x28(%rsp)
  0x00000200349ad3d7: mov    %r11,0x20(%rsp)
  0x00000200349ad3dc: mov    %r12,0x18(%rsp)
  0x00000200349ad3e1: mov    %r13,0x10(%rsp)
  0x00000200349ad3e6: mov    %r14,0x8(%rsp)
  0x00000200349ad3eb: mov    %r15,(%rsp)
  0x00000200349ad3ef: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349ad3f9: movabs $0x200349ad399,%rdx  ;   {internal_word}
  0x00000200349ad403: mov    %rsp,%r8
  0x00000200349ad406: and    $0xfffffffffffffff0,%rsp
  0x00000200349ad40a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349ad414: callq  *%r10
  0x00000200349ad417: hlt    
[Deopt Handler Code]
  0x00000200349ad418: movabs $0x200349ad418,%r10  ;   {section_word}
  0x00000200349ad422: push   %r10
  0x00000200349ad424: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349ad429: hlt    
  0x00000200349ad42a: hlt    
  0x00000200349ad42b: hlt    
  0x00000200349ad42c: hlt    
  0x00000200349ad42d: hlt    
  0x00000200349ad42e: hlt    
  0x00000200349ad42f: hlt    

ImmutableOopMap{}pc offsets: 300 
ImmutableOopMap{rdx=Oop }pc offsets: 353 363 Compiled method (c1)     219   13       3       java.lang.String::equals (65 bytes)
 total in heap  [0x00000200349ad590,0x00000200349ae1d8] = 3144
 relocation     [0x00000200349ad708,0x00000200349ad798] = 144
 main code      [0x00000200349ad7a0,0x00000200349adda0] = 1536
 stub code      [0x00000200349adda0,0x00000200349ade60] = 192
 metadata       [0x00000200349ade60,0x00000200349ade78] = 24
 scopes data    [0x00000200349ade78,0x00000200349adf90] = 280
 scopes pcs     [0x00000200349adf90,0x00000200349ae1c0] = 560
 dependencies   [0x00000200349ae1c0,0x00000200349ae1c8] = 8
 nul chk table  [0x00000200349ae1c8,0x00000200349ae1d8] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x00000200349ad7a0, 0x00000200349ade60]  1728 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000200349ad7a0: mov    0x8(%rdx),%r10d
  0x00000200349ad7a4: shl    $0x3,%r10
  0x00000200349ad7a8: cmp    %rax,%r10
  0x00000200349ad7ab: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349ad7b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349ad7bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349ad7c0: mov    %eax,-0x7000(%rsp)
  0x00000200349ad7c7: push   %rbp
  0x00000200349ad7c8: sub    $0x30,%rsp
  0x00000200349ad7cc: movabs $0x2004f3c0e30,%rsi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad7d6: mov    0xfc(%rsi),%edi
  0x00000200349ad7dc: add    $0x8,%edi
  0x00000200349ad7df: mov    %edi,0xfc(%rsi)
  0x00000200349ad7e5: and    $0x1ff8,%edi
  0x00000200349ad7eb: cmp    $0x0,%edi
  0x00000200349ad7ee: je     0x00000200349adcd0  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0

  0x00000200349ad7f4: cmp    %r8,%rdx
  0x00000200349ad7f7: movabs $0x2004f3c0e30,%rsi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad801: movabs $0x148,%rdi
  0x00000200349ad80b: je     0x00000200349ad81b
  0x00000200349ad811: movabs $0x138,%rdi
  0x00000200349ad81b: mov    (%rsi,%rdi,1),%rbx
  0x00000200349ad81f: lea    0x1(%rbx),%rbx
  0x00000200349ad823: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349ad827: je     0x00000200349adcbe  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2

  0x00000200349ad82d: cmp    $0x0,%r8
  0x00000200349ad831: jne    0x00000200349ad84c
  0x00000200349ad833: movabs $0x2004f3c0e30,%rbx  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad83d: orl    $0x100,0x150(%rbx)
  0x00000200349ad847: jmpq   0x00000200349ad90e
  0x00000200349ad84c: movabs $0x7c0001678,%rax  ;   {metadata('java/lang/String')}
  0x00000200349ad856: mov    0x8(%r8),%edi
  0x00000200349ad85a: shl    $0x3,%rdi
  0x00000200349ad85e: cmp    %rdi,%rax
  0x00000200349ad861: jne    0x00000200349ad8f2
  0x00000200349ad867: movabs $0x2004f3c0e30,%rbx  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad871: mov    0x8(%r8),%eax
  0x00000200349ad875: shl    $0x3,%rax
  0x00000200349ad879: cmp    0x168(%rbx),%rax
  0x00000200349ad880: jne    0x00000200349ad88f
  0x00000200349ad882: addq   $0x1,0x170(%rbx)
  0x00000200349ad88a: jmpq   0x00000200349ad913
  0x00000200349ad88f: cmp    0x178(%rbx),%rax
  0x00000200349ad896: jne    0x00000200349ad8a5
  0x00000200349ad898: addq   $0x1,0x180(%rbx)
  0x00000200349ad8a0: jmpq   0x00000200349ad913
  0x00000200349ad8a5: cmpq   $0x0,0x168(%rbx)
  0x00000200349ad8b0: jne    0x00000200349ad8c9
  0x00000200349ad8b2: mov    %rax,0x168(%rbx)
  0x00000200349ad8b9: movq   $0x1,0x170(%rbx)
  0x00000200349ad8c4: jmpq   0x00000200349ad913
  0x00000200349ad8c9: cmpq   $0x0,0x178(%rbx)
  0x00000200349ad8d4: jne    0x00000200349ad8ed
  0x00000200349ad8d6: mov    %rax,0x178(%rbx)
  0x00000200349ad8dd: movq   $0x1,0x180(%rbx)
  0x00000200349ad8e8: jmpq   0x00000200349ad913
  0x00000200349ad8ed: jmpq   0x00000200349ad913
  0x00000200349ad8f2: movabs $0x2004f3c0e30,%rbx  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad8fc: subq   $0x1,0x158(%rbx)
  0x00000200349ad904: jmpq   0x00000200349ad90e
  0x00000200349ad909: jmpq   0x00000200349ad913
  0x00000200349ad90e: xor    %rsi,%rsi
  0x00000200349ad911: jmp    0x00000200349ad91d
  0x00000200349ad913: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8

  0x00000200349ad91d: cmp    $0x0,%esi
  0x00000200349ad920: movabs $0x2004f3c0e30,%rsi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad92a: movabs $0x190,%rdi
  0x00000200349ad934: je     0x00000200349ad944
  0x00000200349ad93a: movabs $0x1a0,%rdi
  0x00000200349ad944: mov    (%rsi,%rdi,1),%rbx
  0x00000200349ad948: lea    0x1(%rbx),%rbx
  0x00000200349ad94c: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349ad950: je     0x00000200349adcac  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11

  0x00000200349ad956: cmp    $0x0,%r8
  0x00000200349ad95a: jne    0x00000200349ad975
  0x00000200349ad95c: movabs $0x2004f3c0e30,%rdi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad966: orl    $0x100,0x1a8(%rdi)
  0x00000200349ad970: jmpq   0x00000200349ada37
  0x00000200349ad975: movabs $0x7c0001678,%rbx  ;   {metadata('java/lang/String')}
  0x00000200349ad97f: mov    0x8(%r8),%esi
  0x00000200349ad983: shl    $0x3,%rsi
  0x00000200349ad987: cmp    %rsi,%rbx
  0x00000200349ad98a: jne    0x00000200349ada1b
  0x00000200349ad990: movabs $0x2004f3c0e30,%rdi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ad99a: mov    0x8(%r8),%ebx
  0x00000200349ad99e: shl    $0x3,%rbx
  0x00000200349ad9a2: cmp    0x1c0(%rdi),%rbx
  0x00000200349ad9a9: jne    0x00000200349ad9b8
  0x00000200349ad9ab: addq   $0x1,0x1c8(%rdi)
  0x00000200349ad9b3: jmpq   0x00000200349ada37
  0x00000200349ad9b8: cmp    0x1d0(%rdi),%rbx
  0x00000200349ad9bf: jne    0x00000200349ad9ce
  0x00000200349ad9c1: addq   $0x1,0x1d8(%rdi)
  0x00000200349ad9c9: jmpq   0x00000200349ada37
  0x00000200349ad9ce: cmpq   $0x0,0x1c0(%rdi)
  0x00000200349ad9d9: jne    0x00000200349ad9f2
  0x00000200349ad9db: mov    %rbx,0x1c0(%rdi)
  0x00000200349ad9e2: movq   $0x1,0x1c8(%rdi)
  0x00000200349ad9ed: jmpq   0x00000200349ada37
  0x00000200349ad9f2: cmpq   $0x0,0x1d0(%rdi)
  0x00000200349ad9fd: jne    0x00000200349ada16
  0x00000200349ad9ff: mov    %rbx,0x1d0(%rdi)
  0x00000200349ada06: movq   $0x1,0x1d8(%rdi)
  0x00000200349ada11: jmpq   0x00000200349ada37
  0x00000200349ada16: jmpq   0x00000200349ada37
  0x00000200349ada1b: movabs $0x2004f3c0e30,%rdi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ada25: subq   $0x1,0x1b0(%rdi)
  0x00000200349ada2d: jmpq   0x00000200349adcf1
  0x00000200349ada32: jmpq   0x00000200349ada37
  0x00000200349ada37: mov    %r8,%rsi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15

  0x00000200349ada3a: mov    %rdx,%r8
  0x00000200349ada3d: movabs $0x2004f3c0e30,%rdi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349ada47: addq   $0x1,0x1e8(%rdi)
  0x00000200349ada4f: movabs $0x2004f3b65a0,%r8  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349ada59: mov    0xfc(%r8),%edi
  0x00000200349ada60: add    $0x8,%edi
  0x00000200349ada63: mov    %edi,0xfc(%r8)
  0x00000200349ada6a: and    $0x7ffff8,%edi
  0x00000200349ada70: cmp    $0x0,%edi
  0x00000200349ada73: je     0x00000200349adcfa
  0x00000200349ada79: movabs $0x2004f3b65a0,%r8  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349ada83: incl   0x148(%r8)         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3
                                                ; - java.lang.String::equals@20

  0x00000200349ada8a: movsbl 0x14(%rdx),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7
                                                ; - java.lang.String::equals@20

  0x00000200349ada8f: movabs $0x2004f3b65a0,%rdi  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349ada99: incl   0x158(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10
                                                ; - java.lang.String::equals@20

  0x00000200349ada9f: mov    %r8,%rdi
  0x00000200349adaa2: shl    $0x18,%edi
  0x00000200349adaa5: sar    $0x18,%edi
  0x00000200349adaa8: cmp    (%rsi),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24
                                                ; implicit exception: dispatches to 0x00000200349add1b
  0x00000200349adaab: mov    %rsi,%rbx
  0x00000200349adaae: movabs $0x2004f3c0e30,%rax  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adab8: addq   $0x1,0x220(%rax)
  0x00000200349adac0: movabs $0x2004f3b65a0,%rbx  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349adaca: mov    0xfc(%rbx),%eax
  0x00000200349adad0: add    $0x8,%eax
  0x00000200349adad3: mov    %eax,0xfc(%rbx)
  0x00000200349adad9: and    $0x7ffff8,%eax
  0x00000200349adadf: cmp    $0x0,%eax
  0x00000200349adae2: je     0x00000200349add20
  0x00000200349adae8: movabs $0x2004f3b65a0,%rbx  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349adaf2: incl   0x148(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3
                                                ; - java.lang.String::equals@24

  0x00000200349adaf8: movsbl 0x14(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7
                                                ; - java.lang.String::equals@24

  0x00000200349adafc: movabs $0x2004f3b65a0,%rax  ;   {metadata(method data for {method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349adb06: incl   0x158(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10
                                                ; - java.lang.String::equals@24

  0x00000200349adb0c: shl    $0x18,%ebx
  0x00000200349adb0f: sar    $0x18,%ebx
  0x00000200349adb12: cmp    %ebx,%edi
  0x00000200349adb14: movabs $0x2004f3c0e30,%rdi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adb1e: movabs $0x258,%rbx
  0x00000200349adb28: jne    0x00000200349adb38
  0x00000200349adb2e: movabs $0x268,%rbx
  0x00000200349adb38: mov    (%rdi,%rbx,1),%rax
  0x00000200349adb3c: lea    0x1(%rax),%rax
  0x00000200349adb40: mov    %rax,(%rdi,%rbx,1)
  0x00000200349adb44: jne    0x00000200349adcac  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27

  0x00000200349adb4a: mov    %rdx,%rdi
  0x00000200349adb4d: movabs $0x2004f3c0e30,%rbx  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adb57: addq   $0x1,0x278(%rbx)
  0x00000200349adb5f: movabs $0x2004f35eea8,%rdi  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349adb69: mov    0xfc(%rdi),%ebx
  0x00000200349adb6f: add    $0x8,%ebx
  0x00000200349adb72: mov    %ebx,0xfc(%rdi)
  0x00000200349adb78: and    $0x7ffff8,%ebx
  0x00000200349adb7e: cmp    $0x0,%ebx
  0x00000200349adb81: je     0x00000200349add41
  0x00000200349adb87: movabs $0x2004f35eea8,%rdi  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349adb91: incl   0x148(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::equals@31

  0x00000200349adb97: cmp    $0x0,%r8d
  0x00000200349adb9b: movabs $0x2004f35eea8,%r8  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349adba5: movabs $0x158,%rdi
  0x00000200349adbaf: jne    0x00000200349adbbf
  0x00000200349adbb5: movabs $0x168,%rdi
  0x00000200349adbbf: mov    (%r8,%rdi,1),%rbx
  0x00000200349adbc3: lea    0x1(%rbx),%rbx
  0x00000200349adbc7: mov    %rbx,(%r8,%rdi,1)
  0x00000200349adbcb: jne    0x00000200349adbed  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::equals@31

  0x00000200349adbd1: movabs $0x2004f35eea8,%r8  ;   {metadata(method data for {method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349adbdb: incl   0x178(%r8)
  0x00000200349adbe2: mov    $0x1,%r8d
  0x00000200349adbe8: jmpq   0x00000200349adbf3  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::equals@31

  0x00000200349adbed: mov    $0x0,%r8d          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::equals@31

  0x00000200349adbf3: and    $0x1,%r8d
  0x00000200349adbf7: cmp    $0x0,%r8d
  0x00000200349adbfb: movabs $0x2004f3c0e30,%r8  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adc05: movabs $0x288,%rdi
  0x00000200349adc0f: je     0x00000200349adc1f
  0x00000200349adc15: movabs $0x298,%rdi
  0x00000200349adc1f: mov    (%r8,%rdi,1),%rbx
  0x00000200349adc23: lea    0x1(%rbx),%rbx
  0x00000200349adc27: mov    %rbx,(%r8,%rdi,1)
  0x00000200349adc2b: je     0x00000200349adc71  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34

  0x00000200349adc31: mov    0xc(%rdx),%edx
  0x00000200349adc34: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38

  0x00000200349adc38: mov    0xc(%rsi),%r8d
  0x00000200349adc3c: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42

  0x00000200349adc40: movabs $0x2004f3c0e30,%rsi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adc4a: addq   $0x1,0x2a8(%rsi)
  0x00000200349adc52: nopl   0x0(%rax,%rax,1)
  0x00000200349adc57: callq  0x0000020034437500  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45
                                                ;   {static_call}
  0x00000200349adc5c: movabs $0x2004f3c0e30,%rdx  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adc66: incl   0x2b8(%rdx)
  0x00000200349adc6c: jmpq   0x00000200349adc9c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48

  0x00000200349adc71: mov    0xc(%rdx),%edx
  0x00000200349adc74: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52

  0x00000200349adc78: mov    0xc(%rsi),%r8d
  0x00000200349adc7c: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56

  0x00000200349adc80: movabs $0x2004f3c0e30,%rsi  ;   {metadata(method data for {method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adc8a: addq   $0x1,0x2d0(%rsi)
  0x00000200349adc92: nopl   0x0(%rax,%rax,1)
  0x00000200349adc97: callq  0x0000020034437500  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59
                                                ;   {static_call}
  0x00000200349adc9c: and    $0x1,%eax
  0x00000200349adc9f: add    $0x30,%rsp
  0x00000200349adca3: pop    %rbp
  0x00000200349adca4: mov    0x70(%r15),%r10
  0x00000200349adca8: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349adcab: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62

  0x00000200349adcac: mov    $0x0,%eax
  0x00000200349adcb1: add    $0x30,%rsp
  0x00000200349adcb5: pop    %rbp
  0x00000200349adcb6: mov    0x70(%r15),%r10
  0x00000200349adcba: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349adcbd: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64

  0x00000200349adcbe: mov    $0x1,%eax
  0x00000200349adcc3: add    $0x30,%rsp
  0x00000200349adcc7: pop    %rbp
  0x00000200349adcc8: mov    0x70(%r15),%r10
  0x00000200349adccc: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349adccf: retq   
  0x00000200349adcd0: movabs $0x2004f194d88,%r10  ;   {metadata({method} {0x000002004f194d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000200349adcda: mov    %r10,0x8(%rsp)
  0x00000200349adcdf: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349adce7: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349adcec: jmpq   0x00000200349ad7f4
  0x00000200349adcf1: mov    %r8,(%rsp)
  0x00000200349adcf5: callq  0x00000200344feca0  ; ImmutableOopMap{rdx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x00000200349adcfa: movabs $0x2004f197dc8,%r10  ;   {metadata({method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349add04: mov    %r10,0x8(%rsp)
  0x00000200349add09: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349add11: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ; - java.lang.String::equals@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349add16: jmpq   0x00000200349ada79
  0x00000200349add1b: callq  0x00000200344fcba0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349add20: movabs $0x2004f197dc8,%r10  ;   {metadata({method} {0x000002004f197dd0} 'coder' '()B' in 'java/lang/String')}
  0x00000200349add2a: mov    %r10,0x8(%rsp)
  0x00000200349add2f: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349add37: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ; - java.lang.String::equals@24
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349add3c: jmpq   0x00000200349adae8
  0x00000200349add41: movabs $0x2004f197f08,%r10  ;   {metadata({method} {0x000002004f197f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x00000200349add4b: mov    %r10,0x8(%rsp)
  0x00000200349add50: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349add58: callq  0x0000020034501a80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::equals@31
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349add5d: jmpq   0x00000200349adb87
  0x00000200349add62: nop
  0x00000200349add63: nop
  0x00000200349add64: mov    0x350(%r15),%rax
  0x00000200349add6b: movabs $0x0,%r10
  0x00000200349add75: mov    %r10,0x350(%r15)
  0x00000200349add7c: movabs $0x0,%r10
  0x00000200349add86: mov    %r10,0x358(%r15)
  0x00000200349add8d: add    $0x30,%rsp
  0x00000200349add91: pop    %rbp
  0x00000200349add92: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349add97: hlt    
  0x00000200349add98: hlt    
  0x00000200349add99: hlt    
  0x00000200349add9a: hlt    
  0x00000200349add9b: hlt    
  0x00000200349add9c: hlt    
  0x00000200349add9d: hlt    
  0x00000200349add9e: hlt    
  0x00000200349add9f: hlt    
[Stub Code]
  0x00000200349adda0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349adda5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349addaf: jmpq   0x00000200349addaf  ;   {runtime_call}
  0x00000200349addb4: nop
  0x00000200349addb5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349addbf: jmpq   0x00000200349addbf  ;   {runtime_call}
[Exception Handler]
  0x00000200349addc4: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349addc9: mov    %rsp,-0x28(%rsp)
  0x00000200349addce: sub    $0x80,%rsp
  0x00000200349addd5: mov    %rax,0x78(%rsp)
  0x00000200349addda: mov    %rcx,0x70(%rsp)
  0x00000200349adddf: mov    %rdx,0x68(%rsp)
  0x00000200349adde4: mov    %rbx,0x60(%rsp)
  0x00000200349adde9: mov    %rbp,0x50(%rsp)
  0x00000200349addee: mov    %rsi,0x48(%rsp)
  0x00000200349addf3: mov    %rdi,0x40(%rsp)
  0x00000200349addf8: mov    %r8,0x38(%rsp)
  0x00000200349addfd: mov    %r9,0x30(%rsp)
  0x00000200349ade02: mov    %r10,0x28(%rsp)
  0x00000200349ade07: mov    %r11,0x20(%rsp)
  0x00000200349ade0c: mov    %r12,0x18(%rsp)
  0x00000200349ade11: mov    %r13,0x10(%rsp)
  0x00000200349ade16: mov    %r14,0x8(%rsp)
  0x00000200349ade1b: mov    %r15,(%rsp)
  0x00000200349ade1f: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349ade29: movabs $0x200349addc9,%rdx  ;   {internal_word}
  0x00000200349ade33: mov    %rsp,%r8
  0x00000200349ade36: and    $0xfffffffffffffff0,%rsp
  0x00000200349ade3a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349ade44: callq  *%r10
  0x00000200349ade47: hlt    
[Deopt Handler Code]
  0x00000200349ade48: movabs $0x200349ade48,%r10  ;   {section_word}
  0x00000200349ade52: push   %r10
  0x00000200349ade54: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349ade59: hlt    
  0x00000200349ade5a: hlt    
  0x00000200349ade5b: hlt    
  0x00000200349ade5c: hlt    
  0x00000200349ade5d: hlt    
  0x00000200349ade5e: hlt    
  0x00000200349ade5f: hlt    

ImmutableOopMap{}pc offsets: 1212 1276 
ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 1356 
ImmutableOopMap{rdx=Oop }pc offsets: 1370 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 1398 1408 1436 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 1469 Compiled method (c1)     225   16       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x00000200349ae210,0x00000200349ae710] = 1280
 relocation     [0x00000200349ae388,0x00000200349ae3c8] = 64
 main code      [0x00000200349ae3e0,0x00000200349ae560] = 384
 stub code      [0x00000200349ae560,0x00000200349ae610] = 176
 metadata       [0x00000200349ae610,0x00000200349ae618] = 8
 scopes data    [0x00000200349ae618,0x00000200349ae658] = 64
 scopes pcs     [0x00000200349ae658,0x00000200349ae708] = 176
 dependencies   [0x00000200349ae708,0x00000200349ae710] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x00000200349ae3e0, 0x00000200349ae610]  560 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f291d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000200349ae3e0: mov    %eax,-0x7000(%rsp)
  0x00000200349ae3e7: push   %rbp
  0x00000200349ae3e8: sub    $0x30,%rsp
  0x00000200349ae3ec: movabs $0x2004f3c1580,%rax  ;   {metadata(method data for {method} {0x000002004f291d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00000200349ae3f6: mov    0xfc(%rax),%esi
  0x00000200349ae3fc: add    $0x8,%esi
  0x00000200349ae3ff: mov    %esi,0xfc(%rax)
  0x00000200349ae405: and    $0x1ff8,%esi
  0x00000200349ae40b: cmp    $0x0,%esi
  0x00000200349ae40e: je     0x00000200349ae4de  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0

  0x00000200349ae414: cmp    $0x0,%rdx
  0x00000200349ae418: movabs $0x2004f3c1580,%rax  ;   {metadata(method data for {method} {0x000002004f291d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00000200349ae422: movabs $0x148,%rsi
  0x00000200349ae42c: je     0x00000200349ae43c
  0x00000200349ae432: movabs $0x138,%rsi
  0x00000200349ae43c: mov    (%rax,%rsi,1),%rdi
  0x00000200349ae440: lea    0x1(%rdi),%rdi
  0x00000200349ae444: mov    %rdi,(%rax,%rsi,1)
  0x00000200349ae448: je     0x00000200349ae45e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1

  0x00000200349ae44e: mov    %rdx,%rax
  0x00000200349ae451: add    $0x30,%rsp
  0x00000200349ae455: pop    %rbp
  0x00000200349ae456: mov    0x70(%r15),%r10
  0x00000200349ae45a: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349ae45d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13

  0x00000200349ae45e: xchg   %ax,%ax
  0x00000200349ae460: jmpq   0x00000200349ae50e  ;   {no_reloc}
  0x00000200349ae465: add    %al,(%rax)
  0x00000200349ae467: add    %al,(%rax)
  0x00000200349ae469: add    %cl,-0x75(%rcx)
  0x00000200349ae46c: xchg   %eax,0x48000000(%rax)
  0x00000200349ae472: lea    0x28(%rax),%edi
  0x00000200349ae475: cmp    0x90(%r15),%rdi
  0x00000200349ae47c: ja     0x00000200349ae518
  0x00000200349ae482: mov    %rdi,0x80(%r15)
  0x00000200349ae489: mov    0xb0(%rdx),%rcx
  0x00000200349ae490: mov    %rcx,(%rax)
  0x00000200349ae493: mov    %rdx,%rcx
  0x00000200349ae496: shr    $0x3,%rcx
  0x00000200349ae49a: mov    %ecx,0x8(%rax)
  0x00000200349ae49d: xor    %rcx,%rcx
  0x00000200349ae4a0: mov    %ecx,0xc(%rax)
  0x00000200349ae4a3: xor    %rcx,%rcx
  0x00000200349ae4a6: mov    %rcx,0x10(%rax)
  0x00000200349ae4aa: mov    %rcx,0x18(%rax)
  0x00000200349ae4ae: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4

  0x00000200349ae4b2: mov    %rax,%rdx
  0x00000200349ae4b5: movabs $0x2004f3c1580,%rsi  ;   {metadata(method data for {method} {0x000002004f291d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00000200349ae4bf: addq   $0x1,0x158(%rsi)
  0x00000200349ae4c7: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8

  0x00000200349ae4ca: mov    %rax,0x20(%rsp)
  0x00000200349ae4cf: callq  0x0000020034437000  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8
                                                ;   {optimized virtual_call}
  0x00000200349ae4d4: mov    0x20(%rsp),%rax
  0x00000200349ae4d9: jmpq   0x00000200349ae54d
  0x00000200349ae4de: movabs $0x2004f291d60,%r10  ;   {metadata({method} {0x000002004f291d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x00000200349ae4e8: mov    %r10,0x8(%rsp)
  0x00000200349ae4ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349ae4f5: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349ae4fa: jmpq   0x00000200349ae414
  0x00000200349ae4ff: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000200349ae509: mov    $0xa050f00,%eax
  0x00000200349ae50e: callq  0x0000020034500500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x00000200349ae513: jmpq   0x00000200349ae460
  0x00000200349ae518: mov    %rdx,%rdx
  0x00000200349ae51b: callq  0x00000200344fd400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000200349ae520: jmp    0x00000200349ae4b2
  0x00000200349ae522: nop
  0x00000200349ae523: nop
  0x00000200349ae524: mov    0x350(%r15),%rax
  0x00000200349ae52b: movabs $0x0,%r10
  0x00000200349ae535: mov    %r10,0x350(%r15)
  0x00000200349ae53c: movabs $0x0,%r10
  0x00000200349ae546: mov    %r10,0x358(%r15)
  0x00000200349ae54d: add    $0x30,%rsp
  0x00000200349ae551: pop    %rbp
  0x00000200349ae552: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349ae557: hlt    
  0x00000200349ae558: hlt    
  0x00000200349ae559: hlt    
  0x00000200349ae55a: hlt    
  0x00000200349ae55b: hlt    
  0x00000200349ae55c: hlt    
  0x00000200349ae55d: hlt    
  0x00000200349ae55e: hlt    
  0x00000200349ae55f: hlt    
[Stub Code]
  0x00000200349ae560: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349ae565: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349ae56f: jmpq   0x00000200349ae56f  ;   {runtime_call}
[Exception Handler]
  0x00000200349ae574: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349ae579: mov    %rsp,-0x28(%rsp)
  0x00000200349ae57e: sub    $0x80,%rsp
  0x00000200349ae585: mov    %rax,0x78(%rsp)
  0x00000200349ae58a: mov    %rcx,0x70(%rsp)
  0x00000200349ae58f: mov    %rdx,0x68(%rsp)
  0x00000200349ae594: mov    %rbx,0x60(%rsp)
  0x00000200349ae599: mov    %rbp,0x50(%rsp)
  0x00000200349ae59e: mov    %rsi,0x48(%rsp)
  0x00000200349ae5a3: mov    %rdi,0x40(%rsp)
  0x00000200349ae5a8: mov    %r8,0x38(%rsp)
  0x00000200349ae5ad: mov    %r9,0x30(%rsp)
  0x00000200349ae5b2: mov    %r10,0x28(%rsp)
  0x00000200349ae5b7: mov    %r11,0x20(%rsp)
  0x00000200349ae5bc: mov    %r12,0x18(%rsp)
  0x00000200349ae5c1: mov    %r13,0x10(%rsp)
  0x00000200349ae5c6: mov    %r14,0x8(%rsp)
  0x00000200349ae5cb: mov    %r15,(%rsp)
  0x00000200349ae5cf: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349ae5d9: movabs $0x200349ae579,%rdx  ;   {internal_word}
  0x00000200349ae5e3: mov    %rsp,%r8
  0x00000200349ae5e6: and    $0xfffffffffffffff0,%rsp
  0x00000200349ae5ea: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349ae5f4: callq  *%r10
  0x00000200349ae5f7: hlt    
[Deopt Handler Code]
  0x00000200349ae5f8: movabs $0x200349ae5f8,%r10  ;   {section_word}
  0x00000200349ae602: push   %r10
  0x00000200349ae604: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349ae609: hlt    
  0x00000200349ae60a: hlt    
  0x00000200349ae60b: hlt    
  0x00000200349ae60c: hlt    
  0x00000200349ae60d: hlt    
  0x00000200349ae60e: hlt    
  0x00000200349ae60f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 244 
ImmutableOopMap{rdx=Oop }pc offsets: 282 
ImmutableOopMap{}pc offsets: 307 320 Compiled method (c1)     228   43       3       java.util.HashMap$Node::<init> (26 bytes)
 total in heap  [0x00000200349ae790,0x00000200349aed50] = 1472
 relocation     [0x00000200349ae908,0x00000200349ae948] = 64
 main code      [0x00000200349ae960,0x00000200349aebc0] = 608
 stub code      [0x00000200349aebc0,0x00000200349aec58] = 152
 metadata       [0x00000200349aec58,0x00000200349aec70] = 24
 scopes data    [0x00000200349aec70,0x00000200349aecb8] = 72
 scopes pcs     [0x00000200349aecb8,0x00000200349aed48] = 144
 dependencies   [0x00000200349aed48,0x00000200349aed50] = 8
----------------------------------------------------------------------
java/util/HashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V  [0x00000200349ae960, 0x00000200349aec58]  760 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node'
  # this:     rdx:rdx   = 'java/util/HashMap$Node'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/util/HashMap$Node'
  #           [sp+0x40]  (sp of caller)
  0x00000200349ae960: mov    0x8(%rdx),%r10d
  0x00000200349ae964: shl    $0x3,%r10
  0x00000200349ae968: cmp    %rax,%r10
  0x00000200349ae96b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349ae971: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349ae97c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349ae980: mov    %eax,-0x7000(%rsp)
  0x00000200349ae987: push   %rbp
  0x00000200349ae988: sub    $0x30,%rsp
  0x00000200349ae98c: movabs $0x2004f409250,%rbx  ;   {metadata(method data for {method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349ae996: mov    0xfc(%rbx),%eax
  0x00000200349ae99c: add    $0x8,%eax
  0x00000200349ae99f: mov    %eax,0xfc(%rbx)
  0x00000200349ae9a5: and    $0x1ff8,%eax
  0x00000200349ae9ab: cmp    $0x0,%eax
  0x00000200349ae9ae: je     0x00000200349aea92  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@0

  0x00000200349ae9b4: mov    %rdx,%rbx
  0x00000200349ae9b7: movabs $0x2004f409250,%rax  ;   {metadata(method data for {method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349ae9c1: addq   $0x1,0x138(%rax)
  0x00000200349ae9c9: movabs $0x2004f3632f0,%rbx  ;   {metadata(method data for {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349ae9d3: mov    0xfc(%rbx),%eax
  0x00000200349ae9d9: add    $0x8,%eax
  0x00000200349ae9dc: mov    %eax,0xfc(%rbx)
  0x00000200349ae9e2: and    $0x7ffff8,%eax
  0x00000200349ae9e8: cmp    $0x0,%eax
  0x00000200349ae9eb: je     0x00000200349aeab3
  0x00000200349ae9f1: mov    %r8d,0xc(%rdx)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@6

  0x00000200349ae9f5: movsbl 0x398(%r15),%ebx
  0x00000200349ae9fd: cmp    $0x0,%ebx
  0x00000200349aea00: jne    0x00000200349aead4
  0x00000200349aea06: mov    %r9,%r10
  0x00000200349aea09: shr    $0x3,%r10
  0x00000200349aea0d: mov    %r10d,0x10(%rdx)
  0x00000200349aea11: mov    %rdx,%rbx
  0x00000200349aea14: xor    %r9,%rbx
  0x00000200349aea17: shr    $0x14,%rbx
  0x00000200349aea1b: cmp    $0x0,%rbx
  0x00000200349aea1f: jne    0x00000200349aeaf3  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@11

  0x00000200349aea25: movsbl 0x398(%r15),%ebx
  0x00000200349aea2d: cmp    $0x0,%ebx
  0x00000200349aea30: jne    0x00000200349aeb0b
  0x00000200349aea36: mov    %rdi,%r10
  0x00000200349aea39: shr    $0x3,%r10
  0x00000200349aea3d: mov    %r10d,0x14(%rdx)
  0x00000200349aea41: mov    %rdx,%rbx
  0x00000200349aea44: xor    %rdi,%rbx
  0x00000200349aea47: shr    $0x14,%rbx
  0x00000200349aea4b: cmp    $0x0,%rbx
  0x00000200349aea4f: jne    0x00000200349aeb2a  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@16

  0x00000200349aea55: movsbl 0x398(%r15),%edi
  0x00000200349aea5d: cmp    $0x0,%edi
  0x00000200349aea60: jne    0x00000200349aeb42
  0x00000200349aea66: mov    %rsi,%r10
  0x00000200349aea69: shr    $0x3,%r10
  0x00000200349aea6d: mov    %r10d,0x18(%rdx)
  0x00000200349aea71: mov    %rdx,%rdi
  0x00000200349aea74: xor    %rsi,%rdi
  0x00000200349aea77: shr    $0x14,%rdi
  0x00000200349aea7b: cmp    $0x0,%rdi
  0x00000200349aea7f: jne    0x00000200349aeb61  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@22

  0x00000200349aea85: add    $0x30,%rsp
  0x00000200349aea89: pop    %rbp
  0x00000200349aea8a: mov    0x70(%r15),%r10
  0x00000200349aea8e: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aea91: retq   
  0x00000200349aea92: movabs $0x2004f2f8bc0,%r10  ;   {metadata({method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349aea9c: mov    %r10,0x8(%rsp)
  0x00000200349aeaa1: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aeaa9: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aeaae: jmpq   0x00000200349ae9b4
  0x00000200349aeab3: movabs $0x2004f190588,%r10  ;   {metadata({method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349aeabd: mov    %r10,0x8(%rsp)
  0x00000200349aeac2: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349aeaca: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.HashMap$Node::<init>@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349aeacf: jmpq   0x00000200349ae9f1
  0x00000200349aead4: mov    0x10(%rdx),%ebx
  0x00000200349aead7: shl    $0x3,%rbx
  0x00000200349aeadb: cmp    $0x0,%rbx
  0x00000200349aeadf: je     0x00000200349aea06
  0x00000200349aeae5: mov    %rbx,(%rsp)
  0x00000200349aeae9: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349aeaee: jmpq   0x00000200349aea06
  0x00000200349aeaf3: cmp    $0x0,%r9
  0x00000200349aeaf7: je     0x00000200349aea25
  0x00000200349aeafd: mov    %rdx,(%rsp)
  0x00000200349aeb01: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349aeb06: jmpq   0x00000200349aea25
  0x00000200349aeb0b: mov    0x14(%rdx),%ebx
  0x00000200349aeb0e: shl    $0x3,%rbx
  0x00000200349aeb12: cmp    $0x0,%rbx
  0x00000200349aeb16: je     0x00000200349aea36
  0x00000200349aeb1c: mov    %rbx,(%rsp)
  0x00000200349aeb20: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349aeb25: jmpq   0x00000200349aea36
  0x00000200349aeb2a: cmp    $0x0,%rdi
  0x00000200349aeb2e: je     0x00000200349aea55
  0x00000200349aeb34: mov    %rdx,(%rsp)
  0x00000200349aeb38: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349aeb3d: jmpq   0x00000200349aea55
  0x00000200349aeb42: mov    0x18(%rdx),%edi
  0x00000200349aeb45: shl    $0x3,%rdi
  0x00000200349aeb49: cmp    $0x0,%rdi
  0x00000200349aeb4d: je     0x00000200349aea66
  0x00000200349aeb53: mov    %rdi,(%rsp)
  0x00000200349aeb57: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349aeb5c: jmpq   0x00000200349aea66
  0x00000200349aeb61: cmp    $0x0,%rsi
  0x00000200349aeb65: je     0x00000200349aea85
  0x00000200349aeb6b: mov    %rdx,(%rsp)
  0x00000200349aeb6f: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349aeb74: jmpq   0x00000200349aea85
  0x00000200349aeb79: nop
  0x00000200349aeb7a: nop
  0x00000200349aeb7b: mov    0x350(%r15),%rax
  0x00000200349aeb82: movabs $0x0,%r10
  0x00000200349aeb8c: mov    %r10,0x350(%r15)
  0x00000200349aeb93: movabs $0x0,%r10
  0x00000200349aeb9d: mov    %r10,0x358(%r15)
  0x00000200349aeba4: add    $0x30,%rsp
  0x00000200349aeba8: pop    %rbp
  0x00000200349aeba9: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349aebae: hlt    
  0x00000200349aebaf: hlt    
  0x00000200349aebb0: hlt    
  0x00000200349aebb1: hlt    
  0x00000200349aebb2: hlt    
  0x00000200349aebb3: hlt    
  0x00000200349aebb4: hlt    
  0x00000200349aebb5: hlt    
  0x00000200349aebb6: hlt    
  0x00000200349aebb7: hlt    
  0x00000200349aebb8: hlt    
  0x00000200349aebb9: hlt    
  0x00000200349aebba: hlt    
  0x00000200349aebbb: hlt    
  0x00000200349aebbc: hlt    
  0x00000200349aebbd: hlt    
  0x00000200349aebbe: hlt    
  0x00000200349aebbf: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349aebc0: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349aebc5: mov    %rsp,-0x28(%rsp)
  0x00000200349aebca: sub    $0x80,%rsp
  0x00000200349aebd1: mov    %rax,0x78(%rsp)
  0x00000200349aebd6: mov    %rcx,0x70(%rsp)
  0x00000200349aebdb: mov    %rdx,0x68(%rsp)
  0x00000200349aebe0: mov    %rbx,0x60(%rsp)
  0x00000200349aebe5: mov    %rbp,0x50(%rsp)
  0x00000200349aebea: mov    %rsi,0x48(%rsp)
  0x00000200349aebef: mov    %rdi,0x40(%rsp)
  0x00000200349aebf4: mov    %r8,0x38(%rsp)
  0x00000200349aebf9: mov    %r9,0x30(%rsp)
  0x00000200349aebfe: mov    %r10,0x28(%rsp)
  0x00000200349aec03: mov    %r11,0x20(%rsp)
  0x00000200349aec08: mov    %r12,0x18(%rsp)
  0x00000200349aec0d: mov    %r13,0x10(%rsp)
  0x00000200349aec12: mov    %r14,0x8(%rsp)
  0x00000200349aec17: mov    %r15,(%rsp)
  0x00000200349aec1b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349aec25: movabs $0x200349aebc5,%rdx  ;   {internal_word}
  0x00000200349aec2f: mov    %rsp,%r8
  0x00000200349aec32: and    $0xfffffffffffffff0,%rsp
  0x00000200349aec36: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349aec40: callq  *%r10
  0x00000200349aec43: hlt    
[Deopt Handler Code]
  0x00000200349aec44: movabs $0x200349aec44,%r10  ;   {section_word}
  0x00000200349aec4e: push   %r10
  0x00000200349aec50: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349aec55: hlt    
  0x00000200349aec56: hlt    
  0x00000200349aec57: hlt    

ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop }pc offsets: 334 367 Compiled method (c1)     231    2       3       jdk.internal.misc.Unsafe::getObjectAcquire (7 bytes)
 total in heap  [0x00000200349aed90,0x00000200349af160] = 976
 relocation     [0x00000200349aef08,0x00000200349aef38] = 48
 main code      [0x00000200349aef40,0x00000200349af060] = 288
 stub code      [0x00000200349af060,0x00000200349af0f8] = 152
 metadata       [0x00000200349af0f8,0x00000200349af100] = 8
 scopes data    [0x00000200349af100,0x00000200349af118] = 24
 scopes pcs     [0x00000200349af118,0x00000200349af158] = 64
 dependencies   [0x00000200349af158,0x00000200349af160] = 8
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;  [0x00000200349aef40, 0x00000200349af0f8]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  #           [sp+0x40]  (sp of caller)
  0x00000200349aef40: mov    0x8(%rdx),%r10d
  0x00000200349aef44: shl    $0x3,%r10
  0x00000200349aef48: cmp    %rax,%r10
  0x00000200349aef4b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349aef51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349aef5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349aef60: mov    %eax,-0x7000(%rsp)
  0x00000200349aef67: push   %rbp
  0x00000200349aef68: sub    $0x30,%rsp
  0x00000200349aef6c: movabs $0x2004f3712d8,%rax  ;   {metadata(method data for {method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349aef76: mov    0xfc(%rax),%esi
  0x00000200349aef7c: add    $0x8,%esi
  0x00000200349aef7f: mov    %esi,0xfc(%rax)
  0x00000200349aef85: and    $0x1ff8,%esi
  0x00000200349aef8b: cmp    $0x0,%esi
  0x00000200349aef8e: je     0x00000200349aefef  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@0

  0x00000200349aef94: mov    (%r8,%r9,1),%eax
  0x00000200349aef98: shl    $0x3,%rax
  0x00000200349aef9c: movabs $0xc,%rsi
  0x00000200349aefa6: cmp    %rsi,%r9
  0x00000200349aefa9: jne    0x00000200349aefe2
  0x00000200349aefaf: cmp    $0x0,%r8
  0x00000200349aefb3: je     0x00000200349aefe2
  0x00000200349aefb9: mov    0x8(%r8),%esi
  0x00000200349aefbd: shl    $0x3,%rsi
  0x00000200349aefc1: movsbl 0x16b(%rsi),%esi
  0x00000200349aefc8: cmp    $0x0,%esi
  0x00000200349aefcb: je     0x00000200349aefe2
  0x00000200349aefd1: movsbl 0x398(%r15),%esi
  0x00000200349aefd9: cmp    $0x0,%esi
  0x00000200349aefdc: jne    0x00000200349af00d
  0x00000200349aefe2: add    $0x30,%rsp
  0x00000200349aefe6: pop    %rbp
  0x00000200349aefe7: mov    0x70(%r15),%r10
  0x00000200349aefeb: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349aefee: retq   
  0x00000200349aefef: movabs $0x2004f22e6a0,%r10  ;   {metadata({method} {0x000002004f22e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x00000200349aeff9: mov    %r10,0x8(%rsp)
  0x00000200349aeffe: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349af006: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349af00b: jmp    0x00000200349aef94
  0x00000200349af00d: cmp    $0x0,%rax
  0x00000200349af011: je     0x00000200349aefe2
  0x00000200349af013: mov    %rax,(%rsp)
  0x00000200349af017: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349af01c: jmp    0x00000200349aefe2
  0x00000200349af01e: nop
  0x00000200349af01f: nop
  0x00000200349af020: mov    0x350(%r15),%rax
  0x00000200349af027: movabs $0x0,%r10
  0x00000200349af031: mov    %r10,0x350(%r15)
  0x00000200349af038: movabs $0x0,%r10
  0x00000200349af042: mov    %r10,0x358(%r15)
  0x00000200349af049: add    $0x30,%rsp
  0x00000200349af04d: pop    %rbp
  0x00000200349af04e: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349af053: hlt    
  0x00000200349af054: hlt    
  0x00000200349af055: hlt    
  0x00000200349af056: hlt    
  0x00000200349af057: hlt    
  0x00000200349af058: hlt    
  0x00000200349af059: hlt    
  0x00000200349af05a: hlt    
  0x00000200349af05b: hlt    
  0x00000200349af05c: hlt    
  0x00000200349af05d: hlt    
  0x00000200349af05e: hlt    
  0x00000200349af05f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349af060: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349af065: mov    %rsp,-0x28(%rsp)
  0x00000200349af06a: sub    $0x80,%rsp
  0x00000200349af071: mov    %rax,0x78(%rsp)
  0x00000200349af076: mov    %rcx,0x70(%rsp)
  0x00000200349af07b: mov    %rdx,0x68(%rsp)
  0x00000200349af080: mov    %rbx,0x60(%rsp)
  0x00000200349af085: mov    %rbp,0x50(%rsp)
  0x00000200349af08a: mov    %rsi,0x48(%rsp)
  0x00000200349af08f: mov    %rdi,0x40(%rsp)
  0x00000200349af094: mov    %r8,0x38(%rsp)
  0x00000200349af099: mov    %r9,0x30(%rsp)
  0x00000200349af09e: mov    %r10,0x28(%rsp)
  0x00000200349af0a3: mov    %r11,0x20(%rsp)
  0x00000200349af0a8: mov    %r12,0x18(%rsp)
  0x00000200349af0ad: mov    %r13,0x10(%rsp)
  0x00000200349af0b2: mov    %r14,0x8(%rsp)
  0x00000200349af0b7: mov    %r15,(%rsp)
  0x00000200349af0bb: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349af0c5: movabs $0x200349af065,%rdx  ;   {internal_word}
  0x00000200349af0cf: mov    %rsp,%r8
  0x00000200349af0d2: and    $0xfffffffffffffff0,%rsp
  0x00000200349af0d6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349af0e0: callq  *%r10
  0x00000200349af0e3: hlt    
[Deopt Handler Code]
  0x00000200349af0e4: movabs $0x200349af0e4,%r10  ;   {section_word}
  0x00000200349af0ee: push   %r10
  0x00000200349af0f0: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349af0f5: hlt    
  0x00000200349af0f6: hlt    
  0x00000200349af0f7: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 203 Compiled method (c1)     233   45       3       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x00000200349af190,0x00000200349af870] = 1760
 relocation     [0x00000200349af308,0x00000200349af350] = 72
 main code      [0x00000200349af360,0x00000200349af680] = 800
 stub code      [0x00000200349af680,0x00000200349af718] = 152
 metadata       [0x00000200349af718,0x00000200349af730] = 24
 scopes data    [0x00000200349af730,0x00000200349af7b8] = 136
 scopes pcs     [0x00000200349af7b8,0x00000200349af868] = 176
 dependencies   [0x00000200349af868,0x00000200349af870] = 8
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x00000200349af360, 0x00000200349af718]  952 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f29b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x00000200349af360: mov    0x8(%rdx),%r10d
  0x00000200349af364: shl    $0x3,%r10
  0x00000200349af368: cmp    %rax,%r10
  0x00000200349af36b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349af371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349af37c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349af380: mov    %eax,-0x7000(%rsp)
  0x00000200349af387: push   %rbp
  0x00000200349af388: sub    $0x60,%rsp
  0x00000200349af38c: mov    %rdi,%rbx
  0x00000200349af38f: mov    %rsi,%r11
  0x00000200349af392: movabs $0x2004f4093e8,%rsi  ;   {metadata(method data for {method} {0x000002004f29b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00000200349af39c: mov    0xfc(%rsi),%edi
  0x00000200349af3a2: add    $0x8,%edi
  0x00000200349af3a5: mov    %edi,0xfc(%rsi)
  0x00000200349af3ab: and    $0x1ff8,%edi
  0x00000200349af3b1: cmp    $0x0,%edi
  0x00000200349af3b4: je     0x00000200349af523
  0x00000200349af3ba: movabs $0x7c0021678,%rdx  ;   {metadata('java/util/HashMap$Node')}
  0x00000200349af3c4: mov    0x80(%r15),%rax
  0x00000200349af3cb: lea    0x20(%rax),%rdi
  0x00000200349af3cf: cmp    0x90(%r15),%rdi
  0x00000200349af3d6: ja     0x00000200349af544
  0x00000200349af3dc: mov    %rdi,0x80(%r15)
  0x00000200349af3e3: mov    0xb0(%rdx),%rcx
  0x00000200349af3ea: mov    %rcx,(%rax)
  0x00000200349af3ed: mov    %rdx,%rcx
  0x00000200349af3f0: shr    $0x3,%rcx
  0x00000200349af3f4: mov    %ecx,0x8(%rax)
  0x00000200349af3f7: xor    %rcx,%rcx
  0x00000200349af3fa: mov    %ecx,0xc(%rax)
  0x00000200349af3fd: xor    %rcx,%rcx
  0x00000200349af400: mov    %rcx,0x10(%rax)
  0x00000200349af404: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0

  0x00000200349af408: mov    %rax,%rsi
  0x00000200349af40b: movabs $0x2004f4093e8,%rdi  ;   {metadata(method data for {method} {0x000002004f29b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00000200349af415: addq   $0x1,0x138(%rdi)
  0x00000200349af41d: movabs $0x2004f409250,%rsi  ;   {metadata(method data for {method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349af427: mov    0xfc(%rsi),%edi
  0x00000200349af42d: add    $0x8,%edi
  0x00000200349af430: mov    %edi,0xfc(%rsi)
  0x00000200349af436: and    $0x7ffff8,%edi
  0x00000200349af43c: cmp    $0x0,%edi
  0x00000200349af43f: je     0x00000200349af551
  0x00000200349af445: mov    %rax,%rsi
  0x00000200349af448: movabs $0x2004f409250,%rdi  ;   {metadata(method data for {method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349af452: addq   $0x1,0x138(%rdi)
  0x00000200349af45a: movabs $0x2004f3632f0,%rsi  ;   {metadata(method data for {method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349af464: mov    0xfc(%rsi),%edi
  0x00000200349af46a: add    $0x8,%edi
  0x00000200349af46d: mov    %edi,0xfc(%rsi)
  0x00000200349af473: and    $0x7ffff8,%edi
  0x00000200349af479: cmp    $0x0,%edi
  0x00000200349af47c: je     0x00000200349af572
  0x00000200349af482: mov    %r8d,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@6
                                                ; - java.util.HashMap::newNode@9

  0x00000200349af486: movsbl 0x398(%r15),%esi
  0x00000200349af48e: cmp    $0x0,%esi
  0x00000200349af491: jne    0x00000200349af593
  0x00000200349af497: mov    %r9,%r10
  0x00000200349af49a: shr    $0x3,%r10
  0x00000200349af49e: mov    %r10d,0x10(%rax)
  0x00000200349af4a2: mov    %rax,%rsi
  0x00000200349af4a5: xor    %r9,%rsi
  0x00000200349af4a8: shr    $0x14,%rsi
  0x00000200349af4ac: cmp    $0x0,%rsi
  0x00000200349af4b0: jne    0x00000200349af5b2  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@11
                                                ; - java.util.HashMap::newNode@9

  0x00000200349af4b6: movsbl 0x398(%r15),%esi
  0x00000200349af4be: cmp    $0x0,%esi
  0x00000200349af4c1: jne    0x00000200349af5ca
  0x00000200349af4c7: mov    %rbx,%r10
  0x00000200349af4ca: shr    $0x3,%r10
  0x00000200349af4ce: mov    %r10d,0x14(%rax)
  0x00000200349af4d2: mov    %rax,%rsi
  0x00000200349af4d5: xor    %rbx,%rsi
  0x00000200349af4d8: shr    $0x14,%rsi
  0x00000200349af4dc: cmp    $0x0,%rsi
  0x00000200349af4e0: jne    0x00000200349af5e9  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@16
                                                ; - java.util.HashMap::newNode@9

  0x00000200349af4e6: movsbl 0x398(%r15),%esi
  0x00000200349af4ee: cmp    $0x0,%esi
  0x00000200349af4f1: jne    0x00000200349af601
  0x00000200349af4f7: mov    %r11,%r10
  0x00000200349af4fa: shr    $0x3,%r10
  0x00000200349af4fe: mov    %r10d,0x18(%rax)
  0x00000200349af502: mov    %rax,%rsi
  0x00000200349af505: xor    %r11,%rsi
  0x00000200349af508: shr    $0x14,%rsi
  0x00000200349af50c: cmp    $0x0,%rsi
  0x00000200349af510: jne    0x00000200349af620  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@22
                                                ; - java.util.HashMap::newNode@9

  0x00000200349af516: add    $0x60,%rsp
  0x00000200349af51a: pop    %rbp
  0x00000200349af51b: mov    0x70(%r15),%r10
  0x00000200349af51f: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349af522: retq   
  0x00000200349af523: movabs $0x2004f29b588,%r10  ;   {metadata({method} {0x000002004f29b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x00000200349af52d: mov    %r10,0x8(%rsp)
  0x00000200349af532: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349af53a: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r9=Oop rbx=Oop r11=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349af53f: jmpq   0x00000200349af3ba
  0x00000200349af544: mov    %rdx,%rdx
  0x00000200349af547: callq  0x00000200344fd400  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x00000200349af54c: jmpq   0x00000200349af408
  0x00000200349af551: movabs $0x2004f2f8bc0,%r10  ;   {metadata({method} {0x000002004f2f8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x00000200349af55b: mov    %r10,0x8(%rsp)
  0x00000200349af560: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349af568: callq  0x0000020034501a80  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1
                                                ; - java.util.HashMap::newNode@9
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349af56d: jmpq   0x00000200349af445
  0x00000200349af572: movabs $0x2004f190588,%r10  ;   {metadata({method} {0x000002004f190590} '<init>' '()V' in 'java/lang/Object')}
  0x00000200349af57c: mov    %r10,0x8(%rsp)
  0x00000200349af581: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349af589: callq  0x0000020034501a80  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.HashMap$Node::<init>@1
                                                ; - java.util.HashMap::newNode@9
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349af58e: jmpq   0x00000200349af482
  0x00000200349af593: mov    0x10(%rax),%esi
  0x00000200349af596: shl    $0x3,%rsi
  0x00000200349af59a: cmp    $0x0,%rsi
  0x00000200349af59e: je     0x00000200349af497
  0x00000200349af5a4: mov    %rsi,(%rsp)
  0x00000200349af5a8: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349af5ad: jmpq   0x00000200349af497
  0x00000200349af5b2: cmp    $0x0,%r9
  0x00000200349af5b6: je     0x00000200349af4b6
  0x00000200349af5bc: mov    %rax,(%rsp)
  0x00000200349af5c0: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349af5c5: jmpq   0x00000200349af4b6
  0x00000200349af5ca: mov    0x14(%rax),%esi
  0x00000200349af5cd: shl    $0x3,%rsi
  0x00000200349af5d1: cmp    $0x0,%rsi
  0x00000200349af5d5: je     0x00000200349af4c7
  0x00000200349af5db: mov    %rsi,(%rsp)
  0x00000200349af5df: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349af5e4: jmpq   0x00000200349af4c7
  0x00000200349af5e9: cmp    $0x0,%rbx
  0x00000200349af5ed: je     0x00000200349af4e6
  0x00000200349af5f3: mov    %rax,(%rsp)
  0x00000200349af5f7: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349af5fc: jmpq   0x00000200349af4e6
  0x00000200349af601: mov    0x18(%rax),%esi
  0x00000200349af604: shl    $0x3,%rsi
  0x00000200349af608: cmp    $0x0,%rsi
  0x00000200349af60c: je     0x00000200349af4f7
  0x00000200349af612: mov    %rsi,(%rsp)
  0x00000200349af616: callq  0x0000020034501280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x00000200349af61b: jmpq   0x00000200349af4f7
  0x00000200349af620: cmp    $0x0,%r11
  0x00000200349af624: je     0x00000200349af516
  0x00000200349af62a: mov    %rax,(%rsp)
  0x00000200349af62e: callq  0x0000020034501580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x00000200349af633: jmpq   0x00000200349af516
  0x00000200349af638: nop
  0x00000200349af639: nop
  0x00000200349af63a: mov    0x350(%r15),%rax
  0x00000200349af641: movabs $0x0,%r10
  0x00000200349af64b: mov    %r10,0x350(%r15)
  0x00000200349af652: movabs $0x0,%r10
  0x00000200349af65c: mov    %r10,0x358(%r15)
  0x00000200349af663: add    $0x60,%rsp
  0x00000200349af667: pop    %rbp
  0x00000200349af668: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349af66d: hlt    
  0x00000200349af66e: hlt    
  0x00000200349af66f: hlt    
  0x00000200349af670: hlt    
  0x00000200349af671: hlt    
  0x00000200349af672: hlt    
  0x00000200349af673: hlt    
  0x00000200349af674: hlt    
  0x00000200349af675: hlt    
  0x00000200349af676: hlt    
  0x00000200349af677: hlt    
  0x00000200349af678: hlt    
  0x00000200349af679: hlt    
  0x00000200349af67a: hlt    
  0x00000200349af67b: hlt    
  0x00000200349af67c: hlt    
  0x00000200349af67d: hlt    
  0x00000200349af67e: hlt    
  0x00000200349af67f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349af680: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349af685: mov    %rsp,-0x28(%rsp)
  0x00000200349af68a: sub    $0x80,%rsp
  0x00000200349af691: mov    %rax,0x78(%rsp)
  0x00000200349af696: mov    %rcx,0x70(%rsp)
  0x00000200349af69b: mov    %rdx,0x68(%rsp)
  0x00000200349af6a0: mov    %rbx,0x60(%rsp)
  0x00000200349af6a5: mov    %rbp,0x50(%rsp)
  0x00000200349af6aa: mov    %rsi,0x48(%rsp)
  0x00000200349af6af: mov    %rdi,0x40(%rsp)
  0x00000200349af6b4: mov    %r8,0x38(%rsp)
  0x00000200349af6b9: mov    %r9,0x30(%rsp)
  0x00000200349af6be: mov    %r10,0x28(%rsp)
  0x00000200349af6c3: mov    %r11,0x20(%rsp)
  0x00000200349af6c8: mov    %r12,0x18(%rsp)
  0x00000200349af6cd: mov    %r13,0x10(%rsp)
  0x00000200349af6d2: mov    %r14,0x8(%rsp)
  0x00000200349af6d7: mov    %r15,(%rsp)
  0x00000200349af6db: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349af6e5: movabs $0x200349af685,%rdx  ;   {internal_word}
  0x00000200349af6ef: mov    %rsp,%r8
  0x00000200349af6f2: and    $0xfffffffffffffff0,%rsp
  0x00000200349af6f6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349af700: callq  *%r10
  0x00000200349af703: hlt    
[Deopt Handler Code]
  0x00000200349af704: movabs $0x200349af704,%r10  ;   {section_word}
  0x00000200349af70e: push   %r10
  0x00000200349af710: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349af715: hlt    
  0x00000200349af716: hlt    
  0x00000200349af717: hlt    

ImmutableOopMap{rdx=Oop r9=Oop rbx=Oop r11=Oop }pc offsets: 479 
ImmutableOopMap{r9=Oop rbx=Oop r11=Oop }pc offsets: 492 
ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }pc offsets: 525 558 Compiled method (c1)     236   46       3       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x00000200349af890,0x00000200349afc00] = 880
 relocation     [0x00000200349afa08,0x00000200349afa30] = 40
 main code      [0x00000200349afa40,0x00000200349afb00] = 192
 stub code      [0x00000200349afb00,0x00000200349afb98] = 152
 metadata       [0x00000200349afb98,0x00000200349afba0] = 8
 scopes data    [0x00000200349afba0,0x00000200349afbb8] = 24
 scopes pcs     [0x00000200349afbb8,0x00000200349afbf8] = 64
 dependencies   [0x00000200349afbf8,0x00000200349afc00] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x00000200349afa40, 0x00000200349afb98]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f29b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x00000200349afa40: mov    0x8(%rdx),%r10d
  0x00000200349afa44: shl    $0x3,%r10
  0x00000200349afa48: cmp    %rax,%r10
  0x00000200349afa4b: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349afa51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349afa5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349afa60: mov    %eax,-0x7000(%rsp)
  0x00000200349afa67: push   %rbp
  0x00000200349afa68: sub    $0x30,%rsp
  0x00000200349afa6c: movabs $0x2004f409570,%rsi  ;   {metadata(method data for {method} {0x000002004f29b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x00000200349afa76: mov    0xfc(%rsi),%edi
  0x00000200349afa7c: add    $0x8,%edi
  0x00000200349afa7f: mov    %edi,0xfc(%rsi)
  0x00000200349afa85: and    $0x1ff8,%edi
  0x00000200349afa8b: cmp    $0x0,%edi
  0x00000200349afa8e: je     0x00000200349afaa1  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0

  0x00000200349afa94: add    $0x30,%rsp
  0x00000200349afa98: pop    %rbp
  0x00000200349afa99: mov    0x70(%r15),%r10
  0x00000200349afa9d: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349afaa0: retq   
  0x00000200349afaa1: movabs $0x2004f29b960,%r10  ;   {metadata({method} {0x000002004f29b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x00000200349afaab: mov    %r10,0x8(%rsp)
  0x00000200349afab0: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349afab8: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349afabd: jmp    0x00000200349afa94
  0x00000200349afabf: nop
  0x00000200349afac0: nop
  0x00000200349afac1: mov    0x350(%r15),%rax
  0x00000200349afac8: movabs $0x0,%r10
  0x00000200349afad2: mov    %r10,0x350(%r15)
  0x00000200349afad9: movabs $0x0,%r10
  0x00000200349afae3: mov    %r10,0x358(%r15)
  0x00000200349afaea: add    $0x30,%rsp
  0x00000200349afaee: pop    %rbp
  0x00000200349afaef: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349afaf4: hlt    
  0x00000200349afaf5: hlt    
  0x00000200349afaf6: hlt    
  0x00000200349afaf7: hlt    
  0x00000200349afaf8: hlt    
  0x00000200349afaf9: hlt    
  0x00000200349afafa: hlt    
  0x00000200349afafb: hlt    
  0x00000200349afafc: hlt    
  0x00000200349afafd: hlt    
  0x00000200349afafe: hlt    
  0x00000200349afaff: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349afb00: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349afb05: mov    %rsp,-0x28(%rsp)
  0x00000200349afb0a: sub    $0x80,%rsp
  0x00000200349afb11: mov    %rax,0x78(%rsp)
  0x00000200349afb16: mov    %rcx,0x70(%rsp)
  0x00000200349afb1b: mov    %rdx,0x68(%rsp)
  0x00000200349afb20: mov    %rbx,0x60(%rsp)
  0x00000200349afb25: mov    %rbp,0x50(%rsp)
  0x00000200349afb2a: mov    %rsi,0x48(%rsp)
  0x00000200349afb2f: mov    %rdi,0x40(%rsp)
  0x00000200349afb34: mov    %r8,0x38(%rsp)
  0x00000200349afb39: mov    %r9,0x30(%rsp)
  0x00000200349afb3e: mov    %r10,0x28(%rsp)
  0x00000200349afb43: mov    %r11,0x20(%rsp)
  0x00000200349afb48: mov    %r12,0x18(%rsp)
  0x00000200349afb4d: mov    %r13,0x10(%rsp)
  0x00000200349afb52: mov    %r14,0x8(%rsp)
  0x00000200349afb57: mov    %r15,(%rsp)
  0x00000200349afb5b: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349afb65: movabs $0x200349afb05,%rdx  ;   {internal_word}
  0x00000200349afb6f: mov    %rsp,%r8
  0x00000200349afb72: and    $0xfffffffffffffff0,%rsp
  0x00000200349afb76: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349afb80: callq  *%r10
  0x00000200349afb83: hlt    
[Deopt Handler Code]
  0x00000200349afb84: movabs $0x200349afb84,%r10  ;   {section_word}
  0x00000200349afb8e: push   %r10
  0x00000200349afb90: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349afb95: hlt    
  0x00000200349afb96: hlt    
  0x00000200349afb97: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 125 Compiled method (c1)     238   40       3       java.util.HashMap::put (13 bytes)
 total in heap  [0x00000200349afc10,0x00000200349b02d0] = 1728
 relocation     [0x00000200349afd88,0x00000200349afde0] = 88
 main code      [0x00000200349afde0,0x00000200349b0080] = 672
 stub code      [0x00000200349b0080,0x00000200349b0140] = 192
 metadata       [0x00000200349b0140,0x00000200349b0150] = 16
 scopes data    [0x00000200349b0150,0x00000200349b01e8] = 152
 scopes pcs     [0x00000200349b01e8,0x00000200349b02b8] = 208
 dependencies   [0x00000200349b02b8,0x00000200349b02c0] = 8
 nul chk table  [0x00000200349b02c0,0x00000200349b02d0] = 16
----------------------------------------------------------------------
java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x00000200349afde0, 0x00000200349b0140]  864 bytes
[Entry Point]
[Constants]
  # {method} {0x000002004f2998b8} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x90]  (sp of caller)
  0x00000200349afde0: mov    0x8(%rdx),%r10d
  0x00000200349afde4: shl    $0x3,%r10
  0x00000200349afde8: cmp    %rax,%r10
  0x00000200349afdeb: jne    0x0000020034436d80  ;   {runtime_call ic_miss_stub}
  0x00000200349afdf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000200349afdfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000200349afe00: mov    %eax,-0x7000(%rsp)
  0x00000200349afe07: push   %rbp
  0x00000200349afe08: sub    $0x80,%rsp
  0x00000200349afe0f: movabs $0x2004f408920,%rsi  ;   {metadata(method data for {method} {0x000002004f2998b8} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349afe19: mov    0xfc(%rsi),%edi
  0x00000200349afe1f: add    $0x8,%edi
  0x00000200349afe22: mov    %edi,0xfc(%rsi)
  0x00000200349afe28: and    $0x1ff8,%edi
  0x00000200349afe2e: cmp    $0x0,%edi
  0x00000200349afe31: je     0x00000200349affe4  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@0

  0x00000200349afe37: movabs $0x2004f408920,%rsi  ;   {metadata(method data for {method} {0x000002004f2998b8} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349afe41: addq   $0x1,0x138(%rsi)
  0x00000200349afe49: movabs $0x2004f405cc0,%rsi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349afe53: mov    0xfc(%rsi),%edi
  0x00000200349afe59: add    $0x8,%edi
  0x00000200349afe5c: mov    %edi,0xfc(%rsi)
  0x00000200349afe62: and    $0x7ffff8,%edi
  0x00000200349afe68: cmp    $0x0,%edi
  0x00000200349afe6b: je     0x00000200349b0005
  0x00000200349afe71: cmp    $0x0,%r8
  0x00000200349afe75: movabs $0x2004f405cc0,%rsi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349afe7f: movabs $0x138,%rdi
  0x00000200349afe89: jne    0x00000200349afe99
  0x00000200349afe8f: movabs $0x148,%rdi
  0x00000200349afe99: mov    (%rsi,%rdi,1),%rbx
  0x00000200349afe9d: lea    0x1(%rbx),%rbx
  0x00000200349afea1: mov    %rbx,(%rsi,%rdi,1)
  0x00000200349afea5: jne    0x00000200349afed4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1
                                                ; - java.util.HashMap::put@2

  0x00000200349afeab: movabs $0x2004f405cc0,%rsi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349afeb5: incl   0x158(%rsi)
  0x00000200349afebb: mov    $0x0,%esi
  0x00000200349afec0: mov    %r9,0x68(%rsp)
  0x00000200349afec5: mov    %r8,0x60(%rsp)
  0x00000200349afeca: mov    %rdx,0x58(%rsp)
  0x00000200349afecf: jmpq   0x00000200349aff99  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5
                                                ; - java.util.HashMap::put@2

  0x00000200349afed4: mov    %r9,0x68(%rsp)
  0x00000200349afed9: mov    %rdx,0x58(%rsp)
  0x00000200349afede: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000200349b0026
  0x00000200349afee1: mov    %r8,%rsi
  0x00000200349afee4: movabs $0x2004f405cc0,%rdi  ;   {metadata(method data for {method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349afeee: mov    0x8(%rsi),%esi
  0x00000200349afef1: shl    $0x3,%rsi
  0x00000200349afef5: cmp    0x180(%rdi),%rsi
  0x00000200349afefc: jne    0x00000200349aff0b
  0x00000200349afefe: addq   $0x1,0x188(%rdi)
  0x00000200349aff06: jmpq   0x00000200349aff71
  0x00000200349aff0b: cmp    0x190(%rdi),%rsi
  0x00000200349aff12: jne    0x00000200349aff21
  0x00000200349aff14: addq   $0x1,0x198(%rdi)
  0x00000200349aff1c: jmpq   0x00000200349aff71
  0x00000200349aff21: cmpq   $0x0,0x180(%rdi)
  0x00000200349aff2c: jne    0x00000200349aff45
  0x00000200349aff2e: mov    %rsi,0x180(%rdi)
  0x00000200349aff35: movq   $0x1,0x188(%rdi)
  0x00000200349aff40: jmpq   0x00000200349aff71
  0x00000200349aff45: cmpq   $0x0,0x190(%rdi)
  0x00000200349aff50: jne    0x00000200349aff69
  0x00000200349aff52: mov    %rsi,0x190(%rdi)
  0x00000200349aff59: movq   $0x1,0x198(%rdi)
  0x00000200349aff64: jmpq   0x00000200349aff71
  0x00000200349aff69: addq   $0x1,0x170(%rdi)
  0x00000200349aff71: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.HashMap::put@2

  0x00000200349aff74: mov    %r8,0x60(%rsp)
  0x00000200349aff79: nopl   0x0(%rax)
  0x00000200349aff7d: movabs $0xffffffffffffffff,%rax
  0x00000200349aff87: callq  0x0000020034437280  ; ImmutableOopMap{[88]=Oop [104]=Oop [96]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.HashMap::put@2
                                                ;   {virtual_call}
  0x00000200349aff8c: mov    %rax,%r8
  0x00000200349aff8f: shr    $0x10,%r8d
  0x00000200349aff93: xor    %rax,%r8
  0x00000200349aff96: mov    %r8,%rsi           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@19
                                                ; - java.util.HashMap::put@2

  0x00000200349aff99: mov    0x68(%rsp),%rdi
  0x00000200349aff9e: mov    0x60(%rsp),%r9
  0x00000200349affa3: mov    0x58(%rsp),%rdx
  0x00000200349affa8: mov    %rdx,%r8
  0x00000200349affab: movabs $0x2004f408920,%rcx  ;   {metadata(method data for {method} {0x000002004f2998b8} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349affb5: addq   $0x1,0x148(%rcx)
  0x00000200349affbd: mov    %rsi,%r8
  0x00000200349affc0: mov    $0x0,%esi
  0x00000200349affc5: mov    $0x1,%ecx          ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9

  0x00000200349affca: nopl   0x0(%rax,%rax,1)
  0x00000200349affcf: callq  0x0000020034437000  ; ImmutableOopMap{}
                                                ;*invokevirtual putVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::put@9
                                                ;   {optimized virtual_call}
  0x00000200349affd4: add    $0x80,%rsp
  0x00000200349affdb: pop    %rbp
  0x00000200349affdc: mov    0x70(%r15),%r10
  0x00000200349affe0: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349affe3: retq   
  0x00000200349affe4: movabs $0x2004f2998b0,%r10  ;   {metadata({method} {0x000002004f2998b8} 'put' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x00000200349affee: mov    %r10,0x8(%rsp)
  0x00000200349afff3: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349afffb: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349b0000: jmpq   0x00000200349afe37
  0x00000200349b0005: movabs $0x2004f298dc8,%r10  ;   {metadata({method} {0x000002004f298dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000200349b000f: mov    %r10,0x8(%rsp)
  0x00000200349b0014: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349b001c: callq  0x0000020034501a80  ; ImmutableOopMap{rdx=Oop r8=Oop r9=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1
                                                ; - java.util.HashMap::put@2
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349b0021: jmpq   0x00000200349afe71
  0x00000200349b0026: callq  0x00000200344fcba0  ; ImmutableOopMap{r8=Oop [88]=Oop [104]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ; - java.util.HashMap::put@2
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x00000200349b002b: nop
  0x00000200349b002c: nop
  0x00000200349b002d: mov    0x350(%r15),%rax
  0x00000200349b0034: movabs $0x0,%r10
  0x00000200349b003e: mov    %r10,0x350(%r15)
  0x00000200349b0045: movabs $0x0,%r10
  0x00000200349b004f: mov    %r10,0x358(%r15)
  0x00000200349b0056: add    $0x80,%rsp
  0x00000200349b005d: pop    %rbp
  0x00000200349b005e: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349b0063: hlt    
  0x00000200349b0064: hlt    
  0x00000200349b0065: hlt    
  0x00000200349b0066: hlt    
  0x00000200349b0067: hlt    
  0x00000200349b0068: hlt    
  0x00000200349b0069: hlt    
  0x00000200349b006a: hlt    
  0x00000200349b006b: hlt    
  0x00000200349b006c: hlt    
  0x00000200349b006d: hlt    
  0x00000200349b006e: hlt    
  0x00000200349b006f: hlt    
  0x00000200349b0070: hlt    
  0x00000200349b0071: hlt    
  0x00000200349b0072: hlt    
  0x00000200349b0073: hlt    
  0x00000200349b0074: hlt    
  0x00000200349b0075: hlt    
  0x00000200349b0076: hlt    
  0x00000200349b0077: hlt    
  0x00000200349b0078: hlt    
  0x00000200349b0079: hlt    
  0x00000200349b007a: hlt    
  0x00000200349b007b: hlt    
  0x00000200349b007c: hlt    
  0x00000200349b007d: hlt    
  0x00000200349b007e: hlt    
  0x00000200349b007f: hlt    
[Stub Code]
  0x00000200349b0080: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x00000200349b0085: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349b008f: jmpq   0x00000200349b008f  ;   {runtime_call}
  0x00000200349b0094: nop
  0x00000200349b0095: movabs $0x0,%rbx          ;   {static_stub}
  0x00000200349b009f: jmpq   0x00000200349b009f  ;   {runtime_call}
[Exception Handler]
  0x00000200349b00a4: callq  0x00000200344fe800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x00000200349b00a9: mov    %rsp,-0x28(%rsp)
  0x00000200349b00ae: sub    $0x80,%rsp
  0x00000200349b00b5: mov    %rax,0x78(%rsp)
  0x00000200349b00ba: mov    %rcx,0x70(%rsp)
  0x00000200349b00bf: mov    %rdx,0x68(%rsp)
  0x00000200349b00c4: mov    %rbx,0x60(%rsp)
  0x00000200349b00c9: mov    %rbp,0x50(%rsp)
  0x00000200349b00ce: mov    %rsi,0x48(%rsp)
  0x00000200349b00d3: mov    %rdi,0x40(%rsp)
  0x00000200349b00d8: mov    %r8,0x38(%rsp)
  0x00000200349b00dd: mov    %r9,0x30(%rsp)
  0x00000200349b00e2: mov    %r10,0x28(%rsp)
  0x00000200349b00e7: mov    %r11,0x20(%rsp)
  0x00000200349b00ec: mov    %r12,0x18(%rsp)
  0x00000200349b00f1: mov    %r13,0x10(%rsp)
  0x00000200349b00f6: mov    %r14,0x8(%rsp)
  0x00000200349b00fb: mov    %r15,(%rsp)
  0x00000200349b00ff: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349b0109: movabs $0x200349b00a9,%rdx  ;   {internal_word}
  0x00000200349b0113: mov    %rsp,%r8
  0x00000200349b0116: and    $0xfffffffffffffff0,%rsp
  0x00000200349b011a: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349b0124: callq  *%r10
  0x00000200349b0127: hlt    
[Deopt Handler Code]
  0x00000200349b0128: movabs $0x200349b0128,%r10  ;   {section_word}
  0x00000200349b0132: push   %r10
  0x00000200349b0134: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349b0139: hlt    
  0x00000200349b013a: hlt    
  0x00000200349b013b: hlt    
  0x00000200349b013c: hlt    
  0x00000200349b013d: hlt    
  0x00000200349b013e: hlt    
  0x00000200349b013f: hlt    

ImmutableOopMap{[88]=Oop [104]=Oop [96]=Oop }pc offsets: 428 
ImmutableOopMap{}pc offsets: 500 
ImmutableOopMap{rdx=Oop r8=Oop r9=Oop }pc offsets: 544 577 
ImmutableOopMap{r8=Oop [88]=Oop [104]=Oop }pc offsets: 587 Compiled method (c1)     241   25       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x00000200349b0310,0x00000200349b0678] = 872
 relocation     [0x00000200349b0488,0x00000200349b04b0] = 40
 main code      [0x00000200349b04c0,0x00000200349b0580] = 192
 stub code      [0x00000200349b0580,0x00000200349b0618] = 152
 metadata       [0x00000200349b0618,0x00000200349b0620] = 8
 scopes data    [0x00000200349b0620,0x00000200349b0630] = 16
 scopes pcs     [0x00000200349b0630,0x00000200349b0670] = 64
 dependencies   [0x00000200349b0670,0x00000200349b0678] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x00000200349b04c0, 0x00000200349b0618]  344 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000002004f2a2f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000200349b04c0: mov    %eax,-0x7000(%rsp)
  0x00000200349b04c7: push   %rbp
  0x00000200349b04c8: sub    $0x30,%rsp
  0x00000200349b04cc: movabs $0x2004f3fdb88,%rax  ;   {metadata(method data for {method} {0x000002004f2a2f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349b04d6: mov    0xfc(%rax),%esi
  0x00000200349b04dc: add    $0x8,%esi
  0x00000200349b04df: mov    %esi,0xfc(%rax)
  0x00000200349b04e5: and    $0x1ff8,%esi
  0x00000200349b04eb: cmp    $0x0,%esi
  0x00000200349b04ee: je     0x00000200349b0510  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0

  0x00000200349b04f4: mov    %rdx,%rax
  0x00000200349b04f7: shr    $0x10,%eax
  0x00000200349b04fa: xor    %rdx,%rax
  0x00000200349b04fd: and    $0x7fffffff,%eax
  0x00000200349b0503: add    $0x30,%rsp
  0x00000200349b0507: pop    %rbp
  0x00000200349b0508: mov    0x70(%r15),%r10
  0x00000200349b050c: test   %eax,(%r10)        ;   {poll_return}
  0x00000200349b050f: retq   
  0x00000200349b0510: movabs $0x2004f2a2f28,%r10  ;   {metadata({method} {0x000002004f2a2f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x00000200349b051a: mov    %r10,0x8(%rsp)
  0x00000200349b051f: movq   $0xffffffffffffffff,(%rsp)
  0x00000200349b0527: callq  0x0000020034501a80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x00000200349b052c: jmp    0x00000200349b04f4
  0x00000200349b052e: nop
  0x00000200349b052f: nop
  0x00000200349b0530: mov    0x350(%r15),%rax
  0x00000200349b0537: movabs $0x0,%r10
  0x00000200349b0541: mov    %r10,0x350(%r15)
  0x00000200349b0548: movabs $0x0,%r10
  0x00000200349b0552: mov    %r10,0x358(%r15)
  0x00000200349b0559: add    $0x30,%rsp
  0x00000200349b055d: pop    %rbp
  0x00000200349b055e: jmpq   0x000002003446f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000200349b0563: hlt    
  0x00000200349b0564: hlt    
  0x00000200349b0565: hlt    
  0x00000200349b0566: hlt    
  0x00000200349b0567: hlt    
  0x00000200349b0568: hlt    
  0x00000200349b0569: hlt    
  0x00000200349b056a: hlt    
  0x00000200349b056b: hlt    
  0x00000200349b056c: hlt    
  0x00000200349b056d: hlt    
  0x00000200349b056e: hlt    
  0x00000200349b056f: hlt    
  0x00000200349b0570: hlt    
  0x00000200349b0571: hlt    
  0x00000200349b0572: hlt    
  0x00000200349b0573: hlt    
  0x00000200349b0574: hlt    
  0x00000200349b0575: hlt    
  0x00000200349b0576: hlt    
  0x00000200349b0577: hlt    
  0x00000200349b0578: hlt    
  0x00000200349b0579: hlt    
  0x00000200349b057a: hlt    
  0x00000200349b057b: hlt    
  0x00000200349b057c: hlt    
  0x00000200349b057d: hlt    
  0x00000200349b057e: hlt    
  0x00000200349b057f: hlt    
[Exception Handler]
[Stub Code]
  0x00000200349b0580: callq  0x00000200344fe800  ;   {no_reloc}
  0x00000200349b0585: mov    %rsp,-0x28(%rsp)
  0x00000200349b058a: sub    $0x80,%rsp
  0x00000200349b0591: mov    %rax,0x78(%rsp)
  0x00000200349b0596: mov    %rcx,0x70(%rsp)
  0x00000200349b059b: mov    %rdx,0x68(%rsp)
  0x00000200349b05a0: mov    %rbx,0x60(%rsp)
  0x00000200349b05a5: mov    %rbp,0x50(%rsp)
  0x00000200349b05aa: mov    %rsi,0x48(%rsp)
  0x00000200349b05af: mov    %rdi,0x40(%rsp)
  0x00000200349b05b4: mov    %r8,0x38(%rsp)
  0x00000200349b05b9: mov    %r9,0x30(%rsp)
  0x00000200349b05be: mov    %r10,0x28(%rsp)
  0x00000200349b05c3: mov    %r11,0x20(%rsp)
  0x00000200349b05c8: mov    %r12,0x18(%rsp)
  0x00000200349b05cd: mov    %r13,0x10(%rsp)
  0x00000200349b05d2: mov    %r14,0x8(%rsp)
  0x00000200349b05d7: mov    %r15,(%rsp)
  0x00000200349b05db: movabs $0x55dc44e8,%rcx   ;   {external_word}
  0x00000200349b05e5: movabs $0x200349b0585,%rdx  ;   {internal_word}
  0x00000200349b05ef: mov    %rsp,%r8
  0x00000200349b05f2: and    $0xfffffffffffffff0,%rsp
  0x00000200349b05f6: movabs $0x55b17850,%r10   ;   {runtime_call}
  0x00000200349b0600: callq  *%r10
  0x00000200349b0603: hlt    
[Deopt Handler Code]
  0x00000200349b0604: movabs $0x200349b0604,%r10  ;   {section_word}
  0x00000200349b060e: push   %r10
  0x00000200349b0610: jmpq   0x0000020034438620  ;   {runtime_call DeoptimizationBlob}
  0x00000200349b0615: hlt    
  0x00000200349b0616: hlt    
  0x00000200349b0617: hlt    

ImmutableOopMap{}pc offsets: 108 