Compiled method (c1)     168    1       3       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x000001a89c970010,0x000001a89c970468] = 1112
 relocation     [0x000001a89c970188,0x000001a89c9701b8] = 48
 main code      [0x000001a89c9701c0,0x000001a89c970300] = 320
 stub code      [0x000001a89c970300,0x000001a89c970398] = 152
 metadata       [0x000001a89c970398,0x000001a89c9703a0] = 8
 scopes data    [0x000001a89c9703a0,0x000001a89c9703d0] = 48
 scopes pcs     [0x000001a89c9703d0,0x000001a89c970460] = 144
 dependencies   [0x000001a89c970460,0x000001a89c970468] = 8
Loaded disassembler from hsdis-amd64.dll
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x000001a89c9701c0, 0x000001a89c970398]  472 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c9701c0: mov    0x8(%rdx),%r10d
  0x000001a89c9701c4: shl    $0x3,%r10
  0x000001a89c9701c8: cmp    %rax,%r10
  0x000001a89c9701cb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c9701d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c9701dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c9701e0: mov    %eax,-0x7000(%rsp)
  0x000001a89c9701e7: push   %rbp
  0x000001a89c9701e8: sub    $0x30,%rsp
  0x000001a89c9701ec: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9701f6: mov    0xfc(%rax),%esi
  0x000001a89c9701fc: add    $0x8,%esi
  0x000001a89c9701ff: mov    %esi,0xfc(%rax)
  0x000001a89c970205: and    $0x1ff8,%esi
  0x000001a89c97020b: cmp    $0x0,%esi
  0x000001a89c97020e: je     0x000001a89c970290  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@0

  0x000001a89c970214: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97021e: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3

  0x000001a89c970224: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7

  0x000001a89c970228: cmp    $0x0,%eax
  0x000001a89c97022b: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c970235: movabs $0x158,%rsi
  0x000001a89c97023f: jne    0x000001a89c97024f
  0x000001a89c970245: movabs $0x168,%rsi
  0x000001a89c97024f: mov    (%rax,%rsi,1),%rdi
  0x000001a89c970253: lea    0x1(%rdi),%rdi
  0x000001a89c970257: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97025b: jne    0x000001a89c97027b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10

  0x000001a89c970261: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97026b: incl   0x178(%rax)
  0x000001a89c970271: mov    $0x1,%eax
  0x000001a89c970276: jmpq   0x000001a89c970280  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14

  0x000001a89c97027b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18

  0x000001a89c970280: and    $0x1,%eax
  0x000001a89c970283: add    $0x30,%rsp
  0x000001a89c970287: pop    %rbp
  0x000001a89c970288: mov    0x70(%r15),%r10
  0x000001a89c97028c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97028f: retq   
  0x000001a89c970290: movabs $0x1a8b7177f08,%r10  ;   {metadata({method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97029a: mov    %r10,0x8(%rsp)
  0x000001a89c97029f: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9702a7: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9702ac: jmpq   0x000001a89c970214
  0x000001a89c9702b1: nop
  0x000001a89c9702b2: nop
  0x000001a89c9702b3: mov    0x350(%r15),%rax
  0x000001a89c9702ba: movabs $0x0,%r10
  0x000001a89c9702c4: mov    %r10,0x350(%r15)
  0x000001a89c9702cb: movabs $0x0,%r10
  0x000001a89c9702d5: mov    %r10,0x358(%r15)
  0x000001a89c9702dc: add    $0x30,%rsp
  0x000001a89c9702e0: pop    %rbp
  0x000001a89c9702e1: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9702e6: hlt    
  0x000001a89c9702e7: hlt    
  0x000001a89c9702e8: hlt    
  0x000001a89c9702e9: hlt    
  0x000001a89c9702ea: hlt    
  0x000001a89c9702eb: hlt    
  0x000001a89c9702ec: hlt    
  0x000001a89c9702ed: hlt    
  0x000001a89c9702ee: hlt    
  0x000001a89c9702ef: hlt    
  0x000001a89c9702f0: hlt    
  0x000001a89c9702f1: hlt    
  0x000001a89c9702f2: hlt    
  0x000001a89c9702f3: hlt    
  0x000001a89c9702f4: hlt    
  0x000001a89c9702f5: hlt    
  0x000001a89c9702f6: hlt    
  0x000001a89c9702f7: hlt    
  0x000001a89c9702f8: hlt    
  0x000001a89c9702f9: hlt    
  0x000001a89c9702fa: hlt    
  0x000001a89c9702fb: hlt    
  0x000001a89c9702fc: hlt    
  0x000001a89c9702fd: hlt    
  0x000001a89c9702fe: hlt    
  0x000001a89c9702ff: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c970300: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c970305: mov    %rsp,-0x28(%rsp)
  0x000001a89c97030a: sub    $0x80,%rsp
  0x000001a89c970311: mov    %rax,0x78(%rsp)
  0x000001a89c970316: mov    %rcx,0x70(%rsp)
  0x000001a89c97031b: mov    %rdx,0x68(%rsp)
  0x000001a89c970320: mov    %rbx,0x60(%rsp)
  0x000001a89c970325: mov    %rbp,0x50(%rsp)
  0x000001a89c97032a: mov    %rsi,0x48(%rsp)
  0x000001a89c97032f: mov    %rdi,0x40(%rsp)
  0x000001a89c970334: mov    %r8,0x38(%rsp)
  0x000001a89c970339: mov    %r9,0x30(%rsp)
  0x000001a89c97033e: mov    %r10,0x28(%rsp)
  0x000001a89c970343: mov    %r11,0x20(%rsp)
  0x000001a89c970348: mov    %r12,0x18(%rsp)
  0x000001a89c97034d: mov    %r13,0x10(%rsp)
  0x000001a89c970352: mov    %r14,0x8(%rsp)
  0x000001a89c970357: mov    %r15,(%rsp)
  0x000001a89c97035b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c970365: movabs $0x1a89c970305,%rdx  ;   {internal_word}
  0x000001a89c97036f: mov    %rsp,%r8
  0x000001a89c970372: and    $0xfffffffffffffff0,%rsp
  0x000001a89c970376: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c970380: callq  *%r10
  0x000001a89c970383: hlt    
[Deopt Handler Code]
  0x000001a89c970384: movabs $0x1a89c970384,%r10  ;   {section_word}
  0x000001a89c97038e: push   %r10
  0x000001a89c970390: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c970395: hlt    
  0x000001a89c970396: hlt    
  0x000001a89c970397: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 236 Compiled method (c1)     185    5       2       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000001a89c970490,0x000001a89c970948] = 1208
 relocation     [0x000001a89c970608,0x000001a89c970638] = 48
 main code      [0x000001a89c970640,0x000001a89c970760] = 288
 stub code      [0x000001a89c970760,0x000001a89c9707f8] = 152
 metadata       [0x000001a89c9707f8,0x000001a89c970800] = 8
 scopes data    [0x000001a89c970800,0x000001a89c970860] = 96
 scopes pcs     [0x000001a89c970860,0x000001a89c970930] = 208
 dependencies   [0x000001a89c970930,0x000001a89c970938] = 8
 nul chk table  [0x000001a89c970938,0x000001a89c970948] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000001a89c970640, 0x000001a89c9707f8]  440 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b72652d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c970640: mov    %eax,-0x7000(%rsp)
  0x000001a89c970647: push   %rbp
  0x000001a89c970648: sub    $0x30,%rsp
  0x000001a89c97064c: movabs $0x1a8b72a1490,%rax
  0x000001a89c970656: mov    0x18(%rax),%esi
  0x000001a89c970659: add    $0x8,%esi
  0x000001a89c97065c: mov    %esi,0x18(%rax)
  0x000001a89c97065f: and    $0x3ff8,%esi
  0x000001a89c970665: cmp    $0x0,%esi
  0x000001a89c970668: je     0x000001a89c9706d7  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0

  0x000001a89c97066e: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; implicit exception: dispatches to 0x000001a89c9706f8
  0x000001a89c970671: mov    $0x0,%esi
  0x000001a89c970676: mov    $0x0,%edi
  0x000001a89c97067b: jmpq   0x000001a89c9706c3  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10

  0x000001a89c970680: movslq %esi,%rbx
  0x000001a89c970683: movsbl 0x10(%rdx,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000001a89c970688: mov    %rdi,%rcx
  0x000001a89c97068b: shl    $0x5,%edi
  0x000001a89c97068e: sub    %ecx,%edi
  0x000001a89c970690: and    $0xff,%ebx
  0x000001a89c970696: add    %ebx,%edi
  0x000001a89c970698: inc    %esi
  0x000001a89c97069a: movabs $0x1a8b72a1490,%rbx
  0x000001a89c9706a4: mov    0x1c(%rbx),%ecx
  0x000001a89c9706a7: add    $0x8,%ecx
  0x000001a89c9706aa: mov    %ecx,0x1c(%rbx)
  0x000001a89c9706ad: and    $0x1fff8,%ecx
  0x000001a89c9706b3: cmp    $0x0,%ecx
  0x000001a89c9706b6: je     0x000001a89c9706fd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a89c9706bc: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a89c9706c0: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {poll}
  0x000001a89c9706c3: cmp    %eax,%esi
  0x000001a89c9706c5: jl     0x000001a89c970680  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a89c9706c7: mov    %rdi,%rax
  0x000001a89c9706ca: add    $0x30,%rsp
  0x000001a89c9706ce: pop    %rbp
  0x000001a89c9706cf: mov    0x70(%r15),%r10
  0x000001a89c9706d3: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9706d6: retq   
  0x000001a89c9706d7: movabs $0x1a8b72652d0,%r10  ;   {metadata({method} {0x000001a8b72652d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a89c9706e1: mov    %r10,0x8(%rsp)
  0x000001a89c9706e6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9706ee: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9706f3: jmpq   0x000001a89c97066e
  0x000001a89c9706f8: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9706fd: movabs $0x1a8b72652d0,%r10  ;   {metadata({method} {0x000001a8b72652d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a89c970707: mov    %r10,0x8(%rsp)
  0x000001a89c97070c: movq   $0x25,(%rsp)
  0x000001a89c970714: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c970719: jmp    0x000001a89c9706bc
  0x000001a89c97071b: nop
  0x000001a89c97071c: nop
  0x000001a89c97071d: mov    0x350(%r15),%rax
  0x000001a89c970724: movabs $0x0,%r10
  0x000001a89c97072e: mov    %r10,0x350(%r15)
  0x000001a89c970735: movabs $0x0,%r10
  0x000001a89c97073f: mov    %r10,0x358(%r15)
  0x000001a89c970746: add    $0x30,%rsp
  0x000001a89c97074a: pop    %rbp
  0x000001a89c97074b: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c970750: hlt    
  0x000001a89c970751: hlt    
  0x000001a89c970752: hlt    
  0x000001a89c970753: hlt    
  0x000001a89c970754: hlt    
  0x000001a89c970755: hlt    
  0x000001a89c970756: hlt    
  0x000001a89c970757: hlt    
  0x000001a89c970758: hlt    
  0x000001a89c970759: hlt    
  0x000001a89c97075a: hlt    
  0x000001a89c97075b: hlt    
  0x000001a89c97075c: hlt    
  0x000001a89c97075d: hlt    
  0x000001a89c97075e: hlt    
  0x000001a89c97075f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c970760: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c970765: mov    %rsp,-0x28(%rsp)
  0x000001a89c97076a: sub    $0x80,%rsp
  0x000001a89c970771: mov    %rax,0x78(%rsp)
  0x000001a89c970776: mov    %rcx,0x70(%rsp)
  0x000001a89c97077b: mov    %rdx,0x68(%rsp)
  0x000001a89c970780: mov    %rbx,0x60(%rsp)
  0x000001a89c970785: mov    %rbp,0x50(%rsp)
  0x000001a89c97078a: mov    %rsi,0x48(%rsp)
  0x000001a89c97078f: mov    %rdi,0x40(%rsp)
  0x000001a89c970794: mov    %r8,0x38(%rsp)
  0x000001a89c970799: mov    %r9,0x30(%rsp)
  0x000001a89c97079e: mov    %r10,0x28(%rsp)
  0x000001a89c9707a3: mov    %r11,0x20(%rsp)
  0x000001a89c9707a8: mov    %r12,0x18(%rsp)
  0x000001a89c9707ad: mov    %r13,0x10(%rsp)
  0x000001a89c9707b2: mov    %r14,0x8(%rsp)
  0x000001a89c9707b7: mov    %r15,(%rsp)
  0x000001a89c9707bb: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9707c5: movabs $0x1a89c970765,%rdx  ;   {internal_word}
  0x000001a89c9707cf: mov    %rsp,%r8
  0x000001a89c9707d2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9707d6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9707e0: callq  *%r10
  0x000001a89c9707e3: hlt    
[Deopt Handler Code]
  0x000001a89c9707e4: movabs $0x1a89c9707e4,%r10  ;   {section_word}
  0x000001a89c9707ee: push   %r10
  0x000001a89c9707f0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9707f5: hlt    
  0x000001a89c9707f6: hlt    
  0x000001a89c9707f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 128 179 189 217 Compiled method (c1)     189   10       3       java.util.ImmutableCollections$SetN::probe (60 bytes)
 total in heap  [0x000001a89c970990,0x000001a89c971548] = 3000
 relocation     [0x000001a89c970b08,0x000001a89c970b88] = 128
 main code      [0x000001a89c970ba0,0x000001a89c9710e0] = 1344
 stub code      [0x000001a89c9710e0,0x000001a89c9711a0] = 192
 metadata       [0x000001a89c9711a0,0x000001a89c9711b8] = 24
 scopes data    [0x000001a89c9711b8,0x000001a89c971300] = 328
 scopes pcs     [0x000001a89c971300,0x000001a89c971510] = 528
 dependencies   [0x000001a89c971510,0x000001a89c971518] = 8
 nul chk table  [0x000001a89c971518,0x000001a89c971548] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x000001a89c970ba0, 0x000001a89c9711a0]  1536 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN'
  # this:     rdx:rdx   = 'java/util/ImmutableCollections$SetN'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x80]  (sp of caller)
  0x000001a89c970ba0: mov    0x8(%rdx),%r10d
  0x000001a89c970ba4: shl    $0x3,%r10
  0x000001a89c970ba8: cmp    %rax,%r10
  0x000001a89c970bab: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c970bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c970bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c970bc0: mov    %eax,-0x7000(%rsp)
  0x000001a89c970bc7: push   %rbp
  0x000001a89c970bc8: sub    $0x70,%rsp
  0x000001a89c970bcc: mov    %rdx,0x50(%rsp)
  0x000001a89c970bd1: mov    %r8,0x58(%rsp)
  0x000001a89c970bd6: movabs $0x1a8b739eb00,%rsi  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970be0: mov    0xfc(%rsi),%edi
  0x000001a89c970be6: add    $0x8,%edi
  0x000001a89c970be9: mov    %edi,0xfc(%rsi)
  0x000001a89c970bef: and    $0x1ff8,%edi
  0x000001a89c970bf5: cmp    $0x0,%edi
  0x000001a89c970bf8: je     0x000001a89c970fe9  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0

  0x000001a89c970bfe: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000001a89c97100a
  0x000001a89c970c01: mov    %r8,%rsi
  0x000001a89c970c04: movabs $0x1a8b739eb00,%rdi  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970c0e: mov    0x8(%rsi),%esi
  0x000001a89c970c11: shl    $0x3,%rsi
  0x000001a89c970c15: cmp    0x148(%rdi),%rsi
  0x000001a89c970c1c: jne    0x000001a89c970c2b
  0x000001a89c970c1e: addq   $0x1,0x150(%rdi)
  0x000001a89c970c26: jmpq   0x000001a89c970c91
  0x000001a89c970c2b: cmp    0x158(%rdi),%rsi
  0x000001a89c970c32: jne    0x000001a89c970c41
  0x000001a89c970c34: addq   $0x1,0x160(%rdi)
  0x000001a89c970c3c: jmpq   0x000001a89c970c91
  0x000001a89c970c41: cmpq   $0x0,0x148(%rdi)
  0x000001a89c970c4c: jne    0x000001a89c970c65
  0x000001a89c970c4e: mov    %rsi,0x148(%rdi)
  0x000001a89c970c55: movq   $0x1,0x150(%rdi)
  0x000001a89c970c60: jmpq   0x000001a89c970c91
  0x000001a89c970c65: cmpq   $0x0,0x158(%rdi)
  0x000001a89c970c70: jne    0x000001a89c970c89
  0x000001a89c970c72: mov    %rsi,0x158(%rdi)
  0x000001a89c970c79: movq   $0x1,0x160(%rdi)
  0x000001a89c970c84: jmpq   0x000001a89c970c91
  0x000001a89c970c89: addq   $0x1,0x138(%rdi)
  0x000001a89c970c91: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1

  0x000001a89c970c94: nop
  0x000001a89c970c95: movabs $0xffffffffffffffff,%rax
  0x000001a89c970c9f: callq  0x000001a89c407280  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {virtual_call}
  0x000001a89c970ca4: mov    %rax,%r8
  0x000001a89c970ca7: xor    $0x64b9dfe8,%r8d
  0x000001a89c970cae: mov    0x50(%rsp),%rdx
  0x000001a89c970cb3: mov    0x10(%rdx),%eax
  0x000001a89c970cb6: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@9

  0x000001a89c970cba: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ; implicit exception: dispatches to 0x000001a89c97100f
  0x000001a89c970cbd: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970cc7: addq   $0x1,0x170(%rax)
  0x000001a89c970ccf: movabs $0x1a8b739e7d0,%rax  ;   {metadata(method data for {method} {0x000001a8b72c2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a89c970cd9: mov    0xfc(%rax),%edi
  0x000001a89c970cdf: add    $0x8,%edi
  0x000001a89c970ce2: mov    %edi,0xfc(%rax)
  0x000001a89c970ce8: and    $0x7ffff8,%edi
  0x000001a89c970cee: cmp    $0x0,%edi
  0x000001a89c970cf1: je     0x000001a89c971014
  0x000001a89c970cf7: movabs $0x1a8b739e7d0,%rax  ;   {metadata(method data for {method} {0x000001a8b72c2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a89c970d01: addq   $0x1,0x138(%rax)
  0x000001a89c970d09: movabs $0x1a8b739e960,%rax  ;   {metadata(method data for {method} {0x000001a8b72c2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a89c970d13: mov    0xfc(%rax),%edi
  0x000001a89c970d19: add    $0x8,%edi
  0x000001a89c970d1c: mov    %edi,0xfc(%rax)
  0x000001a89c970d22: and    $0x7ffff8,%edi
  0x000001a89c970d28: cmp    $0x0,%edi
  0x000001a89c970d2b: je     0x000001a89c971035
  0x000001a89c970d31: mov    %r8,%rax
  0x000001a89c970d34: mov    %rdx,%rdi
  0x000001a89c970d37: cmp    $0x80000000,%eax
  0x000001a89c970d3d: jne    0x000001a89c970d4e
  0x000001a89c970d43: xor    %edx,%edx
  0x000001a89c970d45: cmp    $0xffffffff,%esi
  0x000001a89c970d48: je     0x000001a89c970d51
  0x000001a89c970d4e: cltd   
  0x000001a89c970d4f: idiv   %esi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ; implicit exception: dispatches to 0x000001a89c971056
  0x000001a89c970d51: mov    %rsi,%rdx
  0x000001a89c970d54: xor    %r8,%rdx
  0x000001a89c970d57: cmp    $0x0,%edx
  0x000001a89c970d5a: movabs $0x1a8b739e960,%rdx  ;   {metadata(method data for {method} {0x000001a8b72c2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a89c970d64: movabs $0x138,%rbx
  0x000001a89c970d6e: jge    0x000001a89c970d7e
  0x000001a89c970d74: movabs $0x148,%rbx
  0x000001a89c970d7e: mov    (%rdx,%rbx,1),%rcx
  0x000001a89c970d82: lea    0x1(%rcx),%rcx
  0x000001a89c970d86: mov    %rcx,(%rdx,%rbx,1)
  0x000001a89c970d8a: jge    0x000001a89c970dd1  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x000001a89c970d90: mov    %rax,%rdx
  0x000001a89c970d93: imul   %esi,%edx
  0x000001a89c970d96: cmp    %r8d,%edx
  0x000001a89c970d99: movabs $0x1a8b739e960,%rdx  ;   {metadata(method data for {method} {0x000001a8b72c2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a89c970da3: movabs $0x158,%rbx
  0x000001a89c970dad: je     0x000001a89c970dbd
  0x000001a89c970db3: movabs $0x168,%rbx
  0x000001a89c970dbd: mov    (%rdx,%rbx,1),%rcx
  0x000001a89c970dc1: lea    0x1(%rcx),%rcx
  0x000001a89c970dc5: mov    %rcx,(%rdx,%rbx,1)
  0x000001a89c970dc9: je     0x000001a89c970dd1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x000001a89c970dcf: dec    %eax
  0x000001a89c970dd1: imul   %esi,%eax
  0x000001a89c970dd4: sub    %eax,%r8d
  0x000001a89c970dd7: mov    0x58(%rsp),%rsi
  0x000001a89c970ddc: nopl   0x0(%rax)
  0x000001a89c970de0: mov    0x10(%rdi),%edx
  0x000001a89c970de3: shl    $0x3,%rdx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18

  0x000001a89c970de7: mov    0xc(%rdx),%ebx     ; implicit exception: dispatches to 0x000001a89c97105b
  0x000001a89c970dea: movslq %r8d,%rax
  0x000001a89c970ded: cmp    %r8d,%ebx
  0x000001a89c970df0: jbe    0x000001a89c971060
  0x000001a89c970df6: mov    0x10(%rdx,%rax,4),%edx
  0x000001a89c970dfa: shl    $0x3,%rdx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22

  0x000001a89c970dfe: cmp    $0x0,%rdx
  0x000001a89c970e02: movabs $0x1a8b739eb00,%rbx  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970e0c: movabs $0x190,%rax
  0x000001a89c970e16: je     0x000001a89c970e26
  0x000001a89c970e1c: movabs $0x180,%rax
  0x000001a89c970e26: mov    (%rbx,%rax,1),%rcx
  0x000001a89c970e2a: lea    0x1(%rcx),%rcx
  0x000001a89c970e2e: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c970e32: je     0x000001a89c970fd4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@25

  0x000001a89c970e38: mov    %r8d,0x60(%rsp)
  0x000001a89c970e3d: mov    %rsi,%rbx
  0x000001a89c970e40: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970e4a: mov    0x8(%rbx),%ebx
  0x000001a89c970e4d: shl    $0x3,%rbx
  0x000001a89c970e51: cmp    0x1b0(%rax),%rbx
  0x000001a89c970e58: jne    0x000001a89c970e67
  0x000001a89c970e5a: addq   $0x1,0x1b8(%rax)
  0x000001a89c970e62: jmpq   0x000001a89c970ecd
  0x000001a89c970e67: cmp    0x1c0(%rax),%rbx
  0x000001a89c970e6e: jne    0x000001a89c970e7d
  0x000001a89c970e70: addq   $0x1,0x1c8(%rax)
  0x000001a89c970e78: jmpq   0x000001a89c970ecd
  0x000001a89c970e7d: cmpq   $0x0,0x1b0(%rax)
  0x000001a89c970e88: jne    0x000001a89c970ea1
  0x000001a89c970e8a: mov    %rbx,0x1b0(%rax)
  0x000001a89c970e91: movq   $0x1,0x1b8(%rax)
  0x000001a89c970e9c: jmpq   0x000001a89c970ecd
  0x000001a89c970ea1: cmpq   $0x0,0x1c0(%rax)
  0x000001a89c970eac: jne    0x000001a89c970ec5
  0x000001a89c970eae: mov    %rbx,0x1c0(%rax)
  0x000001a89c970eb5: movq   $0x1,0x1c8(%rax)
  0x000001a89c970ec0: jmpq   0x000001a89c970ecd
  0x000001a89c970ec5: addq   $0x1,0x1a0(%rax)
  0x000001a89c970ecd: mov    %rdx,%r8
  0x000001a89c970ed0: mov    %rsi,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35

  0x000001a89c970ed3: xchg   %ax,%ax
  0x000001a89c970ed5: movabs $0xffffffffffffffff,%rax
  0x000001a89c970edf: callq  0x000001a89c408c60  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35
                                                ;   {virtual_call}
  0x000001a89c970ee4: cmp    $0x0,%eax
  0x000001a89c970ee7: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970ef1: movabs $0x1e8,%rsi
  0x000001a89c970efb: jne    0x000001a89c970f0b
  0x000001a89c970f01: movabs $0x1d8,%rsi
  0x000001a89c970f0b: mov    (%rax,%rsi,1),%rdi
  0x000001a89c970f0f: lea    0x1(%rdi),%rdi
  0x000001a89c970f13: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c970f17: jne    0x000001a89c970fbf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38

  0x000001a89c970f1d: mov    0x50(%rsp),%rdx
  0x000001a89c970f22: mov    0x60(%rsp),%r8d
  0x000001a89c970f27: inc    %r8d
  0x000001a89c970f2a: mov    0x10(%rdx),%eax
  0x000001a89c970f2d: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48

  0x000001a89c970f31: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ; implicit exception: dispatches to 0x000001a89c971069
  0x000001a89c970f34: cmp    %eax,%r8d
  0x000001a89c970f37: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970f41: movabs $0x1f8,%rsi
  0x000001a89c970f4b: jne    0x000001a89c970f5b
  0x000001a89c970f51: movabs $0x208,%rsi
  0x000001a89c970f5b: mov    (%rax,%rsi,1),%rdi
  0x000001a89c970f5f: lea    0x1(%rdi),%rdi
  0x000001a89c970f63: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c970f67: jne    0x000001a89c970f73  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@52

  0x000001a89c970f6d: mov    $0x0,%r8d
  0x000001a89c970f73: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970f7d: mov    0x100(%rax),%esi
  0x000001a89c970f83: add    $0x8,%esi
  0x000001a89c970f86: mov    %esi,0x100(%rax)
  0x000001a89c970f8c: and    $0xfff8,%esi
  0x000001a89c970f92: cmp    $0x0,%esi
  0x000001a89c970f95: je     0x000001a89c97106e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a89c970f9b: mov    0x70(%r15),%r10    ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a89c970f9f: test   %eax,(%r10)        ;   {poll}
  0x000001a89c970fa2: movabs $0x1a8b739eb00,%rax  ;   {metadata(method data for {method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970fac: incl   0x218(%rax)
  0x000001a89c970fb2: mov    0x58(%rsp),%rsi
  0x000001a89c970fb7: mov    %rdx,%rdi
  0x000001a89c970fba: jmpq   0x000001a89c970de0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a89c970fbf: mov    0x60(%rsp),%r8d
  0x000001a89c970fc4: mov    %r8,%rax
  0x000001a89c970fc7: add    $0x70,%rsp
  0x000001a89c970fcb: pop    %rbp
  0x000001a89c970fcc: mov    0x70(%r15),%r10
  0x000001a89c970fd0: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c970fd3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@42

  0x000001a89c970fd4: neg    %r8d
  0x000001a89c970fd7: mov    %r8,%rax
  0x000001a89c970fda: dec    %eax
  0x000001a89c970fdc: add    $0x70,%rsp
  0x000001a89c970fe0: pop    %rbp
  0x000001a89c970fe1: mov    0x70(%r15),%r10
  0x000001a89c970fe5: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c970fe8: retq   
  0x000001a89c970fe9: movabs $0x1a8b73911e8,%r10  ;   {metadata({method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c970ff3: mov    %r10,0x8(%rsp)
  0x000001a89c970ff8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c971000: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c971005: jmpq   0x000001a89c970bfe
  0x000001a89c97100a: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97100f: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c971014: movabs $0x1a8b72c2fb8,%r10  ;   {metadata({method} {0x000001a8b72c2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a89c97101e: mov    %r10,0x8(%rsp)
  0x000001a89c971023: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97102b: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c971030: jmpq   0x000001a89c970cf7
  0x000001a89c971035: movabs $0x1a8b72c2dd0,%r10  ;   {metadata({method} {0x000001a8b72c2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a89c97103f: mov    %r10,0x8(%rsp)
  0x000001a89c971044: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97104c: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c971051: jmpq   0x000001a89c970d31
  0x000001a89c971056: callq  0x000001a89c4cc920  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000001a89c97105b: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c971060: mov    %r8,(%rsp)
  0x000001a89c971064: callq  0x000001a89c43eda0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c971069: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97106e: movabs $0x1a8b73911e8,%r10  ;   {metadata({method} {0x000001a8b73911f0} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a89c971078: mov    %r10,0x8(%rsp)
  0x000001a89c97107d: movq   $0x39,(%rsp)
  0x000001a89c971085: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97108a: jmpq   0x000001a89c970f9b
  0x000001a89c97108f: nop
  0x000001a89c971090: nop
  0x000001a89c971091: mov    0x350(%r15),%rax
  0x000001a89c971098: movabs $0x0,%r10
  0x000001a89c9710a2: mov    %r10,0x350(%r15)
  0x000001a89c9710a9: movabs $0x0,%r10
  0x000001a89c9710b3: mov    %r10,0x358(%r15)
  0x000001a89c9710ba: add    $0x70,%rsp
  0x000001a89c9710be: pop    %rbp
  0x000001a89c9710bf: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9710c4: hlt    
  0x000001a89c9710c5: hlt    
  0x000001a89c9710c6: hlt    
  0x000001a89c9710c7: hlt    
  0x000001a89c9710c8: hlt    
  0x000001a89c9710c9: hlt    
  0x000001a89c9710ca: hlt    
  0x000001a89c9710cb: hlt    
  0x000001a89c9710cc: hlt    
  0x000001a89c9710cd: hlt    
  0x000001a89c9710ce: hlt    
  0x000001a89c9710cf: hlt    
  0x000001a89c9710d0: hlt    
  0x000001a89c9710d1: hlt    
  0x000001a89c9710d2: hlt    
  0x000001a89c9710d3: hlt    
  0x000001a89c9710d4: hlt    
  0x000001a89c9710d5: hlt    
  0x000001a89c9710d6: hlt    
  0x000001a89c9710d7: hlt    
  0x000001a89c9710d8: hlt    
  0x000001a89c9710d9: hlt    
  0x000001a89c9710da: hlt    
  0x000001a89c9710db: hlt    
  0x000001a89c9710dc: hlt    
  0x000001a89c9710dd: hlt    
  0x000001a89c9710de: hlt    
  0x000001a89c9710df: hlt    
[Stub Code]
  0x000001a89c9710e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c9710e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9710ef: jmpq   0x000001a89c9710ef  ;   {runtime_call}
  0x000001a89c9710f4: nop
  0x000001a89c9710f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9710ff: jmpq   0x000001a89c9710ff  ;   {runtime_call}
[Exception Handler]
  0x000001a89c971104: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c971109: mov    %rsp,-0x28(%rsp)
  0x000001a89c97110e: sub    $0x80,%rsp
  0x000001a89c971115: mov    %rax,0x78(%rsp)
  0x000001a89c97111a: mov    %rcx,0x70(%rsp)
  0x000001a89c97111f: mov    %rdx,0x68(%rsp)
  0x000001a89c971124: mov    %rbx,0x60(%rsp)
  0x000001a89c971129: mov    %rbp,0x50(%rsp)
  0x000001a89c97112e: mov    %rsi,0x48(%rsp)
  0x000001a89c971133: mov    %rdi,0x40(%rsp)
  0x000001a89c971138: mov    %r8,0x38(%rsp)
  0x000001a89c97113d: mov    %r9,0x30(%rsp)
  0x000001a89c971142: mov    %r10,0x28(%rsp)
  0x000001a89c971147: mov    %r11,0x20(%rsp)
  0x000001a89c97114c: mov    %r12,0x18(%rsp)
  0x000001a89c971151: mov    %r13,0x10(%rsp)
  0x000001a89c971156: mov    %r14,0x8(%rsp)
  0x000001a89c97115b: mov    %r15,(%rsp)
  0x000001a89c97115f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c971169: movabs $0x1a89c971109,%rdx  ;   {internal_word}
  0x000001a89c971173: mov    %rsp,%r8
  0x000001a89c971176: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97117a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c971184: callq  *%r10
  0x000001a89c971187: hlt    
[Deopt Handler Code]
  0x000001a89c971188: movabs $0x1a89c971188,%r10  ;   {section_word}
  0x000001a89c971192: push   %r10
  0x000001a89c971194: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c971199: hlt    
  0x000001a89c97119a: hlt    
  0x000001a89c97119b: hlt    
  0x000001a89c97119c: hlt    
  0x000001a89c97119d: hlt    
  0x000001a89c97119e: hlt    
  0x000001a89c97119f: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 260 836 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1023 
ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }pc offsets: 1125 
ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }pc offsets: 1135 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1140 1168 1201 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 1211 
ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }pc offsets: 1216 1225 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1230 1258 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;  [0x000001a8a3ea01c0, 0x000001a8a3ea04a8]  744 bytes
[Entry Point]
  # {method} {0x000001a8b720d920} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x000001a8a3ea01c0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea01c4: shl    $0x3,%r10
  0x000001a8a3ea01c8: cmp    %r10,%rax
  0x000001a8a3ea01cb: je     0x000001a8a3ea01d8
  0x000001a8a3ea01d1: jmpq   0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea01d6: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea01d8: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea01df: push   %rbp
  0x000001a8a3ea01e0: mov    %rsp,%rbp
  0x000001a8a3ea01e3: sub    $0x60,%rsp
  0x000001a8a3ea01e7: mov    %r8,0x28(%rsp)
  0x000001a8a3ea01ec: cmp    $0x0,%r8
  0x000001a8a3ea01f0: lea    0x28(%rsp),%r8
  0x000001a8a3ea01f5: cmove  0x28(%rsp),%r8
  0x000001a8a3ea01fb: mov    %rdx,0x20(%rsp)
  0x000001a8a3ea0200: cmp    $0x0,%rdx
  0x000001a8a3ea0204: lea    0x20(%rsp),%rdx
  0x000001a8a3ea0209: cmove  0x20(%rsp),%rdx    ; ImmutableOopMap{[40]=Oop [32]=Oop }
  0x000001a8a3ea020f: vzeroupper 
  0x000001a8a3ea0212: movabs $0x1a8a3ea020f,%r10  ;   {internal_word}
  0x000001a8a3ea021c: mov    %r10,0x258(%r15)
  0x000001a8a3ea0223: mov    %rsp,0x250(%r15)
  0x000001a8a3ea022a: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea0234: cmpb   $0x0,(%r10)
  0x000001a8a3ea0238: je     0x000001a8a3ea0290
  0x000001a8a3ea023e: push   %rdx
  0x000001a8a3ea023f: push   %r8
  0x000001a8a3ea0241: push   %r9
  0x000001a8a3ea0243: movabs $0x1a8b720d918,%rdx  ;   {metadata({method} {0x000001a8b720d920} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a8a3ea024d: mov    %r15,%rcx
  0x000001a8a3ea0250: sub    $0x20,%rsp
  0x000001a8a3ea0254: test   $0xf,%esp
  0x000001a8a3ea025a: je     0x000001a8a3ea027a
  0x000001a8a3ea0260: sub    $0x8,%rsp
  0x000001a8a3ea0264: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea026e: callq  *%r10
  0x000001a8a3ea0271: add    $0x8,%rsp
  0x000001a8a3ea0275: jmpq   0x000001a8a3ea0287
  0x000001a8a3ea027a: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea0284: callq  *%r10
  0x000001a8a3ea0287: add    $0x20,%rsp
  0x000001a8a3ea028b: pop    %r9
  0x000001a8a3ea028d: pop    %r8
  0x000001a8a3ea028f: pop    %rdx
  0x000001a8a3ea0290: lea    0x270(%r15),%rcx
  0x000001a8a3ea0297: movl   $0x4,0x2e8(%r15)
  0x000001a8a3ea02a2: movabs $0x540e2e00,%r10   ;   {runtime_call}
  0x000001a8a3ea02ac: callq  *%r10
  0x000001a8a3ea02af: vzeroupper 
  0x000001a8a3ea02b2: movl   $0x5,0x2e8(%r15)
  0x000001a8a3ea02bd: lock addl $0x0,-0x40(%rsp)
  0x000001a8a3ea02c3: testb  $0x8,0x70(%r15)
  0x000001a8a3ea02c8: jne    0x000001a8a3ea02dc
  0x000001a8a3ea02ce: cmpl   $0x0,0x48(%r15)
  0x000001a8a3ea02d6: je     0x000001a8a3ea0308
  0x000001a8a3ea02dc: vzeroupper 
  0x000001a8a3ea02df: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea02e3: mov    %r15,%rcx
  0x000001a8a3ea02e6: mov    %rsp,%r12
  0x000001a8a3ea02e9: sub    $0x20,%rsp
  0x000001a8a3ea02ed: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea02f1: movabs $0x540c4790,%r10   ;   {runtime_call}
  0x000001a8a3ea02fb: callq  *%r10
  0x000001a8a3ea02fe: mov    %r12,%rsp
  0x000001a8a3ea0301: xor    %r12,%r12
  0x000001a8a3ea0304: mov    -0x8(%rbp),%rax
  0x000001a8a3ea0308: movl   $0x8,0x2e8(%r15)
  0x000001a8a3ea0313: cmpl   $0x2,0x338(%r15)
  0x000001a8a3ea031e: je     0x000001a8a3ea0477
  0x000001a8a3ea0324: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea032e: cmpb   $0x0,(%r10)
  0x000001a8a3ea0332: je     0x000001a8a3ea0388
  0x000001a8a3ea0338: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea033c: movabs $0x1a8b720d918,%rdx  ;   {metadata({method} {0x000001a8b720d920} 'getObjectVolatile' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a8a3ea0346: mov    %r15,%rcx
  0x000001a8a3ea0349: sub    $0x20,%rsp
  0x000001a8a3ea034d: test   $0xf,%esp
  0x000001a8a3ea0353: je     0x000001a8a3ea0373
  0x000001a8a3ea0359: sub    $0x8,%rsp
  0x000001a8a3ea035d: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea0367: callq  *%r10
  0x000001a8a3ea036a: add    $0x8,%rsp
  0x000001a8a3ea036e: jmpq   0x000001a8a3ea0380
  0x000001a8a3ea0373: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea037d: callq  *%r10
  0x000001a8a3ea0380: add    $0x20,%rsp
  0x000001a8a3ea0384: mov    -0x8(%rbp),%rax
  0x000001a8a3ea0388: movabs $0x0,%r10
  0x000001a8a3ea0392: mov    %r10,0x250(%r15)
  0x000001a8a3ea0399: movabs $0x0,%r10
  0x000001a8a3ea03a3: mov    %r10,0x258(%r15)
  0x000001a8a3ea03aa: vzeroupper 
  0x000001a8a3ea03ad: test   %rax,%rax
  0x000001a8a3ea03b0: je     0x000001a8a3ea0454
  0x000001a8a3ea03b6: test   $0x1,%rax
  0x000001a8a3ea03bc: je     0x000001a8a3ea0451
  0x000001a8a3ea03c2: mov    -0x1(%rax),%rax
  0x000001a8a3ea03c6: cmpb   $0x0,0x398(%r15)
  0x000001a8a3ea03ce: je     0x000001a8a3ea044c
  0x000001a8a3ea03d4: cmp    $0x0,%rax
  0x000001a8a3ea03d8: je     0x000001a8a3ea044c
  0x000001a8a3ea03de: mov    0x3a0(%r15),%rcx
  0x000001a8a3ea03e5: cmp    $0x0,%rcx
  0x000001a8a3ea03e9: je     0x000001a8a3ea0409
  0x000001a8a3ea03ef: sub    $0x8,%rcx
  0x000001a8a3ea03f3: mov    %rcx,0x3a0(%r15)
  0x000001a8a3ea03fa: add    0x3b0(%r15),%rcx
  0x000001a8a3ea0401: mov    %rax,(%rcx)
  0x000001a8a3ea0404: jmpq   0x000001a8a3ea044c
  0x000001a8a3ea0409: push   %rax
  0x000001a8a3ea040a: mov    %r15,%rdx
  0x000001a8a3ea040d: mov    %rax,%rcx
  0x000001a8a3ea0410: sub    $0x20,%rsp
  0x000001a8a3ea0414: test   $0xf,%esp
  0x000001a8a3ea041a: je     0x000001a8a3ea043a
  0x000001a8a3ea0420: sub    $0x8,%rsp
  0x000001a8a3ea0424: movabs $0x5404a4b0,%r10   ;   {runtime_call}
  0x000001a8a3ea042e: callq  *%r10
  0x000001a8a3ea0431: add    $0x8,%rsp
  0x000001a8a3ea0435: jmpq   0x000001a8a3ea0447
  0x000001a8a3ea043a: movabs $0x5404a4b0,%r10   ;   {runtime_call}
  0x000001a8a3ea0444: callq  *%r10
  0x000001a8a3ea0447: add    $0x20,%rsp
  0x000001a8a3ea044b: pop    %rax
  0x000001a8a3ea044c: jmpq   0x000001a8a3ea0454
  0x000001a8a3ea0451: mov    (%rax),%rax
  0x000001a8a3ea0454: mov    0x50(%r15),%rcx
  0x000001a8a3ea0458: movl   $0x0,0x100(%rcx)
  0x000001a8a3ea0462: leaveq 
  0x000001a8a3ea0463: cmpq   $0x0,0x8(%r15)
  0x000001a8a3ea046b: jne    0x000001a8a3ea0472
  0x000001a8a3ea0471: retq   
  0x000001a8a3ea0472: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a8a3ea0477: vzeroupper 
  0x000001a8a3ea047a: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea047e: mov    %rsp,%r12
  0x000001a8a3ea0481: sub    $0x20,%rsp
  0x000001a8a3ea0485: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea0489: movabs $0x5404c310,%r10   ;   {runtime_call}
  0x000001a8a3ea0493: callq  *%r10
  0x000001a8a3ea0496: mov    %r12,%rsp
  0x000001a8a3ea0499: xor    %r12,%r12
  0x000001a8a3ea049c: mov    -0x8(%rbp),%rax
  0x000001a8a3ea04a0: jmpq   0x000001a8a3ea0324
  0x000001a8a3ea04a5: hlt    
  0x000001a8a3ea04a6: hlt    
  0x000001a8a3ea04a7: hlt    
Compiled method (c1)     201   19       3       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x000001a89c971590,0x000001a89c971bc8] = 1592
 relocation     [0x000001a89c971708,0x000001a89c971748] = 64
 main code      [0x000001a89c971760,0x000001a89c971960] = 512
 stub code      [0x000001a89c971960,0x000001a89c9719f8] = 152
 metadata       [0x000001a89c9719f8,0x000001a89c971a00] = 8
 scopes data    [0x000001a89c971a00,0x000001a89c971a68] = 104
 scopes pcs     [0x000001a89c971a68,0x000001a89c971ba8] = 320
 dependencies   [0x000001a89c971ba8,0x000001a89c971bb0] = 8
 nul chk table  [0x000001a89c971bb0,0x000001a89c971bc8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x000001a89c971760, 0x000001a89c9719f8]  664 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c971760: mov    0x8(%rdx),%r10d
  0x000001a89c971764: shl    $0x3,%r10
  0x000001a89c971768: cmp    %rax,%r10
  0x000001a89c97176b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c971771: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97177c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c971780: mov    %eax,-0x7000(%rsp)
  0x000001a89c971787: push   %rbp
  0x000001a89c971788: sub    $0x30,%rsp
  0x000001a89c97178c: movabs $0x1a8b73d3560,%rax  ;   {metadata(method data for {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c971796: mov    0xfc(%rax),%esi
  0x000001a89c97179c: add    $0x8,%esi
  0x000001a89c97179f: mov    %esi,0xfc(%rax)
  0x000001a89c9717a5: and    $0x1ff8,%esi
  0x000001a89c9717ab: cmp    $0x0,%esi
  0x000001a89c9717ae: je     0x000001a89c9718c6
  0x000001a89c9717b4: jmpq   0x000001a89c971851  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@0

  0x000001a89c9717b9: nopl   0x0(%rax)
  0x000001a89c9717c0: movslq %eax,%rbx
  0x000001a89c9717c3: cmp    %eax,%edi
  0x000001a89c9717c5: jbe    0x000001a89c9718e7
  0x000001a89c9717cb: mov    0x10(%rsi,%rbx,4),%esi
  0x000001a89c9717cf: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x000001a89c9717d3: cmp    $0x0,%rsi
  0x000001a89c9717d7: movabs $0x1a8b73d3560,%rsi  ;   {metadata(method data for {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c9717e1: movabs $0x168,%rdi
  0x000001a89c9717eb: jne    0x000001a89c9717fb
  0x000001a89c9717f1: movabs $0x158,%rdi
  0x000001a89c9717fb: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c9717ff: lea    0x1(%rbx),%rbx
  0x000001a89c971803: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c971807: jne    0x000001a89c9718a2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x000001a89c97180d: inc    %eax
  0x000001a89c97180f: mov    %eax,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x000001a89c971812: movabs $0x1a8b73d3560,%rax  ;   {metadata(method data for {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c97181c: mov    0x100(%rax),%esi
  0x000001a89c971822: add    $0x8,%esi
  0x000001a89c971825: mov    %esi,0x100(%rax)
  0x000001a89c97182b: and    $0xfff8,%esi
  0x000001a89c971831: cmp    $0x0,%esi
  0x000001a89c971834: je     0x000001a89c9718f0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a89c97183a: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a89c97183e: test   %eax,(%r10)        ;   {poll}
  0x000001a89c971841: movabs $0x1a8b73d3560,%rax  ;   {metadata(method data for {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c97184b: incl   0x178(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a89c971851: mov    0xc(%rdx),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x000001a89c971854: mov    0x10(%rdx),%esi
  0x000001a89c971857: shl    $0x3,%rsi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x000001a89c97185b: mov    0x10(%rsi),%esi    ; implicit exception: dispatches to 0x000001a89c971911
  0x000001a89c97185e: shl    $0x3,%rsi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x000001a89c971862: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x000001a89c971916
  0x000001a89c971865: cmp    %edi,%eax
  0x000001a89c971867: movabs $0x1a8b73d3560,%rbx  ;   {metadata(method data for {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c971871: movabs $0x138,%rcx
  0x000001a89c97187b: jge    0x000001a89c97188b
  0x000001a89c971881: movabs $0x148,%rcx
  0x000001a89c97188b: mov    (%rbx,%rcx,1),%r8
  0x000001a89c97188f: lea    0x1(%r8),%r8
  0x000001a89c971893: mov    %r8,(%rbx,%rcx,1)
  0x000001a89c971897: jge    0x000001a89c9718b4
  0x000001a89c97189d: jmpq   0x000001a89c9717c0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a89c9718a2: mov    $0x1,%eax
  0x000001a89c9718a7: add    $0x30,%rsp
  0x000001a89c9718ab: pop    %rbp
  0x000001a89c9718ac: mov    0x70(%r15),%r10
  0x000001a89c9718b0: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9718b3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@31

  0x000001a89c9718b4: mov    $0x0,%eax
  0x000001a89c9718b9: add    $0x30,%rsp
  0x000001a89c9718bd: pop    %rbp
  0x000001a89c9718be: mov    0x70(%r15),%r10
  0x000001a89c9718c2: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9718c5: retq   
  0x000001a89c9718c6: movabs $0x1a8b73d22b8,%r10  ;   {metadata({method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c9718d0: mov    %r10,0x8(%rsp)
  0x000001a89c9718d5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9718dd: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9718e2: jmpq   0x000001a89c9717b4
  0x000001a89c9718e7: mov    %rax,(%rsp)
  0x000001a89c9718eb: callq  0x000001a89c43eda0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c9718f0: movabs $0x1a8b73d22b8,%r10  ;   {metadata({method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a89c9718fa: mov    %r10,0x8(%rsp)
  0x000001a89c9718ff: movq   $0x2a,(%rsp)
  0x000001a89c971907: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97190c: jmpq   0x000001a89c97183a
  0x000001a89c971911: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c971916: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97191b: nop
  0x000001a89c97191c: nop
  0x000001a89c97191d: mov    0x350(%r15),%rax
  0x000001a89c971924: movabs $0x0,%r10
  0x000001a89c97192e: mov    %r10,0x350(%r15)
  0x000001a89c971935: movabs $0x0,%r10
  0x000001a89c97193f: mov    %r10,0x358(%r15)
  0x000001a89c971946: add    $0x30,%rsp
  0x000001a89c97194a: pop    %rbp
  0x000001a89c97194b: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c971950: hlt    
  0x000001a89c971951: hlt    
  0x000001a89c971952: hlt    
  0x000001a89c971953: hlt    
  0x000001a89c971954: hlt    
  0x000001a89c971955: hlt    
  0x000001a89c971956: hlt    
  0x000001a89c971957: hlt    
  0x000001a89c971958: hlt    
  0x000001a89c971959: hlt    
  0x000001a89c97195a: hlt    
  0x000001a89c97195b: hlt    
  0x000001a89c97195c: hlt    
  0x000001a89c97195d: hlt    
  0x000001a89c97195e: hlt    
  0x000001a89c97195f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c971960: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c971965: mov    %rsp,-0x28(%rsp)
  0x000001a89c97196a: sub    $0x80,%rsp
  0x000001a89c971971: mov    %rax,0x78(%rsp)
  0x000001a89c971976: mov    %rcx,0x70(%rsp)
  0x000001a89c97197b: mov    %rdx,0x68(%rsp)
  0x000001a89c971980: mov    %rbx,0x60(%rsp)
  0x000001a89c971985: mov    %rbp,0x50(%rsp)
  0x000001a89c97198a: mov    %rsi,0x48(%rsp)
  0x000001a89c97198f: mov    %rdi,0x40(%rsp)
  0x000001a89c971994: mov    %r8,0x38(%rsp)
  0x000001a89c971999: mov    %r9,0x30(%rsp)
  0x000001a89c97199e: mov    %r10,0x28(%rsp)
  0x000001a89c9719a3: mov    %r11,0x20(%rsp)
  0x000001a89c9719a8: mov    %r12,0x18(%rsp)
  0x000001a89c9719ad: mov    %r13,0x10(%rsp)
  0x000001a89c9719b2: mov    %r14,0x8(%rsp)
  0x000001a89c9719b7: mov    %r15,(%rsp)
  0x000001a89c9719bb: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9719c5: movabs $0x1a89c971965,%rdx  ;   {internal_word}
  0x000001a89c9719cf: mov    %rsp,%r8
  0x000001a89c9719d2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9719d6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9719e0: callq  *%r10
  0x000001a89c9719e3: hlt    
[Deopt Handler Code]
  0x000001a89c9719e4: movabs $0x1a89c9719e4,%r10  ;   {section_word}
  0x000001a89c9719ee: push   %r10
  0x000001a89c9719f0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9719f5: hlt    
  0x000001a89c9719f6: hlt    
  0x000001a89c9719f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 222 386 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 400 
ImmutableOopMap{rdx=Oop }pc offsets: 428 438 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 443 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x000001a8a3ea06c0, 0x000001a8a3ea0918]  600 bytes
[Entry Point]
  # {method} {0x000001a8b720d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  # parm2:    rdi:rdi   = long
  # parm3:    rsi:rsi   = long
  #           [sp+0x80]  (sp of caller)
  0x000001a8a3ea06c0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea06c4: shl    $0x3,%r10
  0x000001a8a3ea06c8: cmp    %r10,%rax
  0x000001a8a3ea06cb: je     0x000001a8a3ea06d8
  0x000001a8a3ea06d1: jmpq   0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea06d6: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea06d8: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea06df: push   %rbp
  0x000001a8a3ea06e0: mov    %rsp,%rbp
  0x000001a8a3ea06e3: sub    $0x70,%rsp
  0x000001a8a3ea06e7: mov    %rsi,0x28(%rsp)
  0x000001a8a3ea06ec: mov    %rdi,0x20(%rsp)
  0x000001a8a3ea06f1: mov    %r8,0x38(%rsp)
  0x000001a8a3ea06f6: cmp    $0x0,%r8
  0x000001a8a3ea06fa: lea    0x38(%rsp),%r8
  0x000001a8a3ea06ff: cmove  0x38(%rsp),%r8
  0x000001a8a3ea0705: mov    %rdx,0x30(%rsp)
  0x000001a8a3ea070a: cmp    $0x0,%rdx
  0x000001a8a3ea070e: lea    0x30(%rsp),%rdx
  0x000001a8a3ea0713: cmove  0x30(%rsp),%rdx    ; ImmutableOopMap{[56]=Oop [48]=Oop }
  0x000001a8a3ea0719: vzeroupper 
  0x000001a8a3ea071c: movabs $0x1a8a3ea0719,%r10  ;   {internal_word}
  0x000001a8a3ea0726: mov    %r10,0x258(%r15)
  0x000001a8a3ea072d: mov    %rsp,0x250(%r15)
  0x000001a8a3ea0734: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea073e: cmpb   $0x0,(%r10)
  0x000001a8a3ea0742: je     0x000001a8a3ea079a
  0x000001a8a3ea0748: push   %rdx
  0x000001a8a3ea0749: push   %r8
  0x000001a8a3ea074b: push   %r9
  0x000001a8a3ea074d: movabs $0x1a8b720d318,%rdx  ;   {metadata({method} {0x000001a8b720d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000001a8a3ea0757: mov    %r15,%rcx
  0x000001a8a3ea075a: sub    $0x20,%rsp
  0x000001a8a3ea075e: test   $0xf,%esp
  0x000001a8a3ea0764: je     0x000001a8a3ea0784
  0x000001a8a3ea076a: sub    $0x8,%rsp
  0x000001a8a3ea076e: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea0778: callq  *%r10
  0x000001a8a3ea077b: add    $0x8,%rsp
  0x000001a8a3ea077f: jmpq   0x000001a8a3ea0791
  0x000001a8a3ea0784: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea078e: callq  *%r10
  0x000001a8a3ea0791: add    $0x20,%rsp
  0x000001a8a3ea0795: pop    %r9
  0x000001a8a3ea0797: pop    %r8
  0x000001a8a3ea0799: pop    %rdx
  0x000001a8a3ea079a: lea    0x270(%r15),%rcx
  0x000001a8a3ea07a1: movl   $0x4,0x2e8(%r15)
  0x000001a8a3ea07ac: movabs $0x540e0ad0,%r10   ;   {runtime_call}
  0x000001a8a3ea07b6: callq  *%r10
  0x000001a8a3ea07b9: vzeroupper 
  0x000001a8a3ea07bc: and    $0xff,%eax
  0x000001a8a3ea07c2: setne  %al
  0x000001a8a3ea07c5: movl   $0x5,0x2e8(%r15)
  0x000001a8a3ea07d0: lock addl $0x0,-0x40(%rsp)
  0x000001a8a3ea07d6: testb  $0x8,0x70(%r15)
  0x000001a8a3ea07db: jne    0x000001a8a3ea07ef
  0x000001a8a3ea07e1: cmpl   $0x0,0x48(%r15)
  0x000001a8a3ea07e9: je     0x000001a8a3ea081b
  0x000001a8a3ea07ef: vzeroupper 
  0x000001a8a3ea07f2: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea07f6: mov    %r15,%rcx
  0x000001a8a3ea07f9: mov    %rsp,%r12
  0x000001a8a3ea07fc: sub    $0x20,%rsp
  0x000001a8a3ea0800: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea0804: movabs $0x540c4790,%r10   ;   {runtime_call}
  0x000001a8a3ea080e: callq  *%r10
  0x000001a8a3ea0811: mov    %r12,%rsp
  0x000001a8a3ea0814: xor    %r12,%r12
  0x000001a8a3ea0817: mov    -0x8(%rbp),%rax
  0x000001a8a3ea081b: movl   $0x8,0x2e8(%r15)
  0x000001a8a3ea0826: cmpl   $0x2,0x338(%r15)
  0x000001a8a3ea0831: je     0x000001a8a3ea08e3
  0x000001a8a3ea0837: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea0841: cmpb   $0x0,(%r10)
  0x000001a8a3ea0845: je     0x000001a8a3ea089b
  0x000001a8a3ea084b: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea084f: movabs $0x1a8b720d318,%rdx  ;   {metadata({method} {0x000001a8b720d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000001a8a3ea0859: mov    %r15,%rcx
  0x000001a8a3ea085c: sub    $0x20,%rsp
  0x000001a8a3ea0860: test   $0xf,%esp
  0x000001a8a3ea0866: je     0x000001a8a3ea0886
  0x000001a8a3ea086c: sub    $0x8,%rsp
  0x000001a8a3ea0870: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea087a: callq  *%r10
  0x000001a8a3ea087d: add    $0x8,%rsp
  0x000001a8a3ea0881: jmpq   0x000001a8a3ea0893
  0x000001a8a3ea0886: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea0890: callq  *%r10
  0x000001a8a3ea0893: add    $0x20,%rsp
  0x000001a8a3ea0897: mov    -0x8(%rbp),%rax
  0x000001a8a3ea089b: movabs $0x0,%r10
  0x000001a8a3ea08a5: mov    %r10,0x250(%r15)
  0x000001a8a3ea08ac: movabs $0x0,%r10
  0x000001a8a3ea08b6: mov    %r10,0x258(%r15)
  0x000001a8a3ea08bd: vzeroupper 
  0x000001a8a3ea08c0: mov    0x50(%r15),%rcx
  0x000001a8a3ea08c4: movl   $0x0,0x100(%rcx)
  0x000001a8a3ea08ce: leaveq 
  0x000001a8a3ea08cf: cmpq   $0x0,0x8(%r15)
  0x000001a8a3ea08d7: jne    0x000001a8a3ea08de
  0x000001a8a3ea08dd: retq   
  0x000001a8a3ea08de: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a8a3ea08e3: vzeroupper 
  0x000001a8a3ea08e6: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea08ea: mov    %rsp,%r12
  0x000001a8a3ea08ed: sub    $0x20,%rsp
  0x000001a8a3ea08f1: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea08f5: movabs $0x5404c310,%r10   ;   {runtime_call}
  0x000001a8a3ea08ff: callq  *%r10
  0x000001a8a3ea0902: mov    %r12,%rsp
  0x000001a8a3ea0905: xor    %r12,%r12
  0x000001a8a3ea0908: mov    -0x8(%rbp),%rax
  0x000001a8a3ea090c: jmpq   0x000001a8a3ea0837
  0x000001a8a3ea0911: hlt    
  0x000001a8a3ea0912: hlt    
  0x000001a8a3ea0913: hlt    
  0x000001a8a3ea0914: hlt    
  0x000001a8a3ea0915: hlt    
  0x000001a8a3ea0916: hlt    
  0x000001a8a3ea0917: hlt    
Compiled method (c1)     206   13       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x000001a89c971c10,0x000001a89c972290] = 1664
 relocation     [0x000001a89c971d88,0x000001a89c971dc8] = 64
 main code      [0x000001a89c971de0,0x000001a89c972000] = 544
 stub code      [0x000001a89c972000,0x000001a89c972098] = 152
 metadata       [0x000001a89c972098,0x000001a89c9720a0] = 8
 scopes data    [0x000001a89c9720a0,0x000001a89c972120] = 128
 scopes pcs     [0x000001a89c972120,0x000001a89c972270] = 336
 dependencies   [0x000001a89c972270,0x000001a89c972278] = 8
 nul chk table  [0x000001a89c972278,0x000001a89c972290] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x000001a89c971de0, 0x000001a89c972098]  696 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8:r8     = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c971de0: mov    %eax,-0x7000(%rsp)
  0x000001a89c971de7: push   %rbp
  0x000001a89c971de8: sub    $0x30,%rsp
  0x000001a89c971dec: movabs $0x1a8b73a0d70,%rax  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971df6: mov    0xfc(%rax),%esi
  0x000001a89c971dfc: add    $0x8,%esi
  0x000001a89c971dff: mov    %esi,0xfc(%rax)
  0x000001a89c971e05: and    $0x1ff8,%esi
  0x000001a89c971e0b: cmp    $0x0,%esi
  0x000001a89c971e0e: je     0x000001a89c971f67  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0

  0x000001a89c971e14: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ; implicit exception: dispatches to 0x000001a89c971f88
  0x000001a89c971e17: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ; implicit exception: dispatches to 0x000001a89c971f8d
  0x000001a89c971e1b: cmp    %esi,%eax
  0x000001a89c971e1d: movabs $0x1a8b73a0d70,%rsi  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971e27: movabs $0x138,%rdi
  0x000001a89c971e31: jne    0x000001a89c971e41
  0x000001a89c971e37: movabs $0x148,%rdi
  0x000001a89c971e41: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c971e45: lea    0x1(%rbx),%rbx
  0x000001a89c971e49: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c971e4d: jne    0x000001a89c971f55  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4

  0x000001a89c971e53: mov    $0x0,%esi
  0x000001a89c971e58: jmpq   0x000001a89c971ef4  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9

  0x000001a89c971e5d: data16 xchg %ax,%ax
  0x000001a89c971e60: movslq %esi,%rdi
  0x000001a89c971e63: movsbl 0x10(%rdx,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17

  0x000001a89c971e68: movslq %esi,%rbx
  0x000001a89c971e6b: cmp    0xc(%r8),%esi
  0x000001a89c971e6f: jae    0x000001a89c971f92
  0x000001a89c971e75: movsbl 0x10(%r8,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20

  0x000001a89c971e7b: cmp    %ebx,%edi
  0x000001a89c971e7d: movabs $0x1a8b73a0d70,%rdi  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971e87: movabs $0x188,%rbx
  0x000001a89c971e91: jne    0x000001a89c971ea1
  0x000001a89c971e97: movabs $0x178,%rbx
  0x000001a89c971ea1: mov    (%rdi,%rbx,1),%rcx
  0x000001a89c971ea5: lea    0x1(%rcx),%rcx
  0x000001a89c971ea9: mov    %rcx,(%rdi,%rbx,1)
  0x000001a89c971ead: jne    0x000001a89c971f31  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21

  0x000001a89c971eb3: inc    %esi
  0x000001a89c971eb5: movabs $0x1a8b73a0d70,%rdi  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971ebf: mov    0x100(%rdi),%ebx
  0x000001a89c971ec5: add    $0x8,%ebx
  0x000001a89c971ec8: mov    %ebx,0x100(%rdi)
  0x000001a89c971ece: and    $0xfff8,%ebx
  0x000001a89c971ed4: cmp    $0x0,%ebx
  0x000001a89c971ed7: je     0x000001a89c971f9b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a89c971edd: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a89c971ee1: test   %eax,(%r10)        ;   {poll}
  0x000001a89c971ee4: movabs $0x1a8b73a0d70,%rdi  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971eee: incl   0x198(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a89c971ef4: cmp    %eax,%esi
  0x000001a89c971ef6: movabs $0x1a8b73a0d70,%rdi  ;   {metadata(method data for {method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971f00: movabs $0x158,%rbx
  0x000001a89c971f0a: jge    0x000001a89c971f1a
  0x000001a89c971f10: movabs $0x168,%rbx
  0x000001a89c971f1a: mov    (%rdi,%rbx,1),%rcx
  0x000001a89c971f1e: lea    0x1(%rcx),%rcx
  0x000001a89c971f22: mov    %rcx,(%rdi,%rbx,1)
  0x000001a89c971f26: jge    0x000001a89c971f43
  0x000001a89c971f2c: jmpq   0x000001a89c971e60  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12

  0x000001a89c971f31: mov    $0x0,%eax
  0x000001a89c971f36: add    $0x30,%rsp
  0x000001a89c971f3a: pop    %rbp
  0x000001a89c971f3b: mov    0x70(%r15),%r10
  0x000001a89c971f3f: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c971f42: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25

  0x000001a89c971f43: mov    $0x1,%eax
  0x000001a89c971f48: add    $0x30,%rsp
  0x000001a89c971f4c: pop    %rbp
  0x000001a89c971f4d: mov    0x70(%r15),%r10
  0x000001a89c971f51: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c971f54: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33

  0x000001a89c971f55: mov    $0x0,%eax
  0x000001a89c971f5a: add    $0x30,%rsp
  0x000001a89c971f5e: pop    %rbp
  0x000001a89c971f5f: mov    0x70(%r15),%r10
  0x000001a89c971f63: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c971f66: retq   
  0x000001a89c971f67: movabs $0x1a8b7264e10,%r10  ;   {metadata({method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971f71: mov    %r10,0x8(%rsp)
  0x000001a89c971f76: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c971f7e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c971f83: jmpq   0x000001a89c971e14
  0x000001a89c971f88: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c971f8d: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c971f92: mov    %rsi,(%rsp)
  0x000001a89c971f96: callq  0x000001a89c43eda0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c971f9b: movabs $0x1a8b7264e10,%r10  ;   {metadata({method} {0x000001a8b7264e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a89c971fa5: mov    %r10,0x8(%rsp)
  0x000001a89c971faa: movq   $0x1d,(%rsp)
  0x000001a89c971fb2: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c971fb7: jmpq   0x000001a89c971edd
  0x000001a89c971fbc: nop
  0x000001a89c971fbd: nop
  0x000001a89c971fbe: mov    0x350(%r15),%rax
  0x000001a89c971fc5: movabs $0x0,%r10
  0x000001a89c971fcf: mov    %r10,0x350(%r15)
  0x000001a89c971fd6: movabs $0x0,%r10
  0x000001a89c971fe0: mov    %r10,0x358(%r15)
  0x000001a89c971fe7: add    $0x30,%rsp
  0x000001a89c971feb: pop    %rbp
  0x000001a89c971fec: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c971ff1: hlt    
  0x000001a89c971ff2: hlt    
  0x000001a89c971ff3: hlt    
  0x000001a89c971ff4: hlt    
  0x000001a89c971ff5: hlt    
  0x000001a89c971ff6: hlt    
  0x000001a89c971ff7: hlt    
  0x000001a89c971ff8: hlt    
  0x000001a89c971ff9: hlt    
  0x000001a89c971ffa: hlt    
  0x000001a89c971ffb: hlt    
  0x000001a89c971ffc: hlt    
  0x000001a89c971ffd: hlt    
  0x000001a89c971ffe: hlt    
  0x000001a89c971fff: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c972000: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c972005: mov    %rsp,-0x28(%rsp)
  0x000001a89c97200a: sub    $0x80,%rsp
  0x000001a89c972011: mov    %rax,0x78(%rsp)
  0x000001a89c972016: mov    %rcx,0x70(%rsp)
  0x000001a89c97201b: mov    %rdx,0x68(%rsp)
  0x000001a89c972020: mov    %rbx,0x60(%rsp)
  0x000001a89c972025: mov    %rbp,0x50(%rsp)
  0x000001a89c97202a: mov    %rsi,0x48(%rsp)
  0x000001a89c97202f: mov    %rdi,0x40(%rsp)
  0x000001a89c972034: mov    %r8,0x38(%rsp)
  0x000001a89c972039: mov    %r9,0x30(%rsp)
  0x000001a89c97203e: mov    %r10,0x28(%rsp)
  0x000001a89c972043: mov    %r11,0x20(%rsp)
  0x000001a89c972048: mov    %r12,0x18(%rsp)
  0x000001a89c97204d: mov    %r13,0x10(%rsp)
  0x000001a89c972052: mov    %r14,0x8(%rsp)
  0x000001a89c972057: mov    %r15,(%rsp)
  0x000001a89c97205b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c972065: movabs $0x1a89c972005,%rdx  ;   {internal_word}
  0x000001a89c97206f: mov    %rsp,%r8
  0x000001a89c972072: and    $0xfffffffffffffff0,%rsp
  0x000001a89c972076: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c972080: callq  *%r10
  0x000001a89c972083: hlt    
[Deopt Handler Code]
  0x000001a89c972084: movabs $0x1a89c972084,%r10  ;   {section_word}
  0x000001a89c97208e: push   %r10
  0x000001a89c972090: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c972095: hlt    
  0x000001a89c972096: hlt    
  0x000001a89c972097: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 257 419 429 434 443 471 Compiled method (c1)     209    4       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a89c972310,0x000001a89c972680] = 880
 relocation     [0x000001a89c972488,0x000001a89c9724b0] = 40
 main code      [0x000001a89c9724c0,0x000001a89c972580] = 192
 stub code      [0x000001a89c972580,0x000001a89c972618] = 152
 metadata       [0x000001a89c972618,0x000001a89c972628] = 16
 scopes data    [0x000001a89c972628,0x000001a89c972638] = 16
 scopes pcs     [0x000001a89c972638,0x000001a89c972678] = 64
 dependencies   [0x000001a89c972678,0x000001a89c972680] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a89c9724c0, 0x000001a89c972618]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c9724c0: mov    0x8(%rdx),%r10d
  0x000001a89c9724c4: shl    $0x3,%r10
  0x000001a89c9724c8: cmp    %rax,%r10
  0x000001a89c9724cb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c9724d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c9724dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c9724e0: mov    %eax,-0x7000(%rsp)
  0x000001a89c9724e7: push   %rbp
  0x000001a89c9724e8: sub    $0x30,%rsp
  0x000001a89c9724ec: movabs $0x1a8b73432f0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c9724f6: mov    0xfc(%rsi),%edi
  0x000001a89c9724fc: add    $0x8,%edi
  0x000001a89c9724ff: mov    %edi,0xfc(%rsi)
  0x000001a89c972505: and    $0x1ff8,%edi
  0x000001a89c97250b: cmp    $0x0,%edi
  0x000001a89c97250e: je     0x000001a89c972521  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a89c972514: add    $0x30,%rsp
  0x000001a89c972518: pop    %rbp
  0x000001a89c972519: mov    0x70(%r15),%r10
  0x000001a89c97251d: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c972520: retq   
  0x000001a89c972521: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c97252b: mov    %r10,0x8(%rsp)
  0x000001a89c972530: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c972538: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97253d: jmp    0x000001a89c972514
  0x000001a89c97253f: nop
  0x000001a89c972540: nop
  0x000001a89c972541: mov    0x350(%r15),%rax
  0x000001a89c972548: movabs $0x0,%r10
  0x000001a89c972552: mov    %r10,0x350(%r15)
  0x000001a89c972559: movabs $0x0,%r10
  0x000001a89c972563: mov    %r10,0x358(%r15)
  0x000001a89c97256a: add    $0x30,%rsp
  0x000001a89c97256e: pop    %rbp
  0x000001a89c97256f: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c972574: hlt    
  0x000001a89c972575: hlt    
  0x000001a89c972576: hlt    
  0x000001a89c972577: hlt    
  0x000001a89c972578: hlt    
  0x000001a89c972579: hlt    
  0x000001a89c97257a: hlt    
  0x000001a89c97257b: hlt    
  0x000001a89c97257c: hlt    
  0x000001a89c97257d: hlt    
  0x000001a89c97257e: hlt    
  0x000001a89c97257f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c972580: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c972585: mov    %rsp,-0x28(%rsp)
  0x000001a89c97258a: sub    $0x80,%rsp
  0x000001a89c972591: mov    %rax,0x78(%rsp)
  0x000001a89c972596: mov    %rcx,0x70(%rsp)
  0x000001a89c97259b: mov    %rdx,0x68(%rsp)
  0x000001a89c9725a0: mov    %rbx,0x60(%rsp)
  0x000001a89c9725a5: mov    %rbp,0x50(%rsp)
  0x000001a89c9725aa: mov    %rsi,0x48(%rsp)
  0x000001a89c9725af: mov    %rdi,0x40(%rsp)
  0x000001a89c9725b4: mov    %r8,0x38(%rsp)
  0x000001a89c9725b9: mov    %r9,0x30(%rsp)
  0x000001a89c9725be: mov    %r10,0x28(%rsp)
  0x000001a89c9725c3: mov    %r11,0x20(%rsp)
  0x000001a89c9725c8: mov    %r12,0x18(%rsp)
  0x000001a89c9725cd: mov    %r13,0x10(%rsp)
  0x000001a89c9725d2: mov    %r14,0x8(%rsp)
  0x000001a89c9725d7: mov    %r15,(%rsp)
  0x000001a89c9725db: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9725e5: movabs $0x1a89c972585,%rdx  ;   {internal_word}
  0x000001a89c9725ef: mov    %rsp,%r8
  0x000001a89c9725f2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9725f6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c972600: callq  *%r10
  0x000001a89c972603: hlt    
[Deopt Handler Code]
  0x000001a89c972604: movabs $0x1a89c972604,%r10  ;   {section_word}
  0x000001a89c97260e: push   %r10
  0x000001a89c972610: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c972615: hlt    
  0x000001a89c972616: hlt    
  0x000001a89c972617: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 125 Compiled method (c1)     211    6       2       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000001a89c972690,0x000001a89c972d20] = 1680
 relocation     [0x000001a89c972808,0x000001a89c972848] = 64
 main code      [0x000001a89c972860,0x000001a89c972a00] = 416
 stub code      [0x000001a89c972a00,0x000001a89c972ab0] = 176
 metadata       [0x000001a89c972ab0,0x000001a89c972ac8] = 24
 scopes data    [0x000001a89c972ac8,0x000001a89c972b78] = 176
 scopes pcs     [0x000001a89c972b78,0x000001a89c972d08] = 400
 dependencies   [0x000001a89c972d08,0x000001a89c972d10] = 8
 nul chk table  [0x000001a89c972d10,0x000001a89c972d20] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000001a89c972860, 0x000001a89c972ab0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7175810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x000001a89c972860: mov    0x8(%rdx),%r10d
  0x000001a89c972864: shl    $0x3,%r10
  0x000001a89c972868: cmp    %rax,%r10
  0x000001a89c97286b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c972871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97287c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c972880: mov    %eax,-0x7000(%rsp)
  0x000001a89c972887: push   %rbp
  0x000001a89c972888: sub    $0x50,%rsp
  0x000001a89c97288c: movabs $0x1a8b72a1440,%rsi
  0x000001a89c972896: mov    0x18(%rsi),%edi
  0x000001a89c972899: add    $0x8,%edi
  0x000001a89c97289c: mov    %edi,0x18(%rsi)
  0x000001a89c97289f: and    $0x3ff8,%edi
  0x000001a89c9728a5: cmp    $0x0,%edi
  0x000001a89c9728a8: je     0x000001a89c97297f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0

  0x000001a89c9728ae: mov    0x10(%rdx),%esi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x000001a89c9728b1: cmp    $0x0,%esi
  0x000001a89c9728b4: jne    0x000001a89c97296f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x000001a89c9728ba: mov    0xc(%rdx),%edi
  0x000001a89c9728bd: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000001a89c9728c1: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x000001a89c9729a0
  0x000001a89c9728c4: cmp    $0x0,%ebx
  0x000001a89c9728c7: jle    0x000001a89c97296f  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000001a89c9728cd: movsbl 0x14(%rdx),%esi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x000001a89c9728d1: cmp    $0x0,%esi
  0x000001a89c9728d4: mov    $0x0,%esi
  0x000001a89c9728d9: jne    0x000001a89c9728e4
  0x000001a89c9728df: mov    $0x1,%esi
  0x000001a89c9728e4: and    $0x1,%esi
  0x000001a89c9728e7: cmp    $0x0,%esi
  0x000001a89c9728ea: mov    %rdx,0x40(%rsp)
  0x000001a89c9728ef: je     0x000001a89c972909  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000001a89c9728f5: mov    %rdi,%rdx          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29

  0x000001a89c9728f8: nopl   0x0(%rax)
  0x000001a89c9728ff: callq  0x000001a89c970640  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29
                                                ;   {static_call}
  0x000001a89c972904: jmpq   0x000001a89c972964  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32

  0x000001a89c972909: sar    %ebx
  0x000001a89c97290b: mov    $0x0,%eax
  0x000001a89c972910: mov    $0x0,%esi
  0x000001a89c972915: jmpq   0x000001a89c97295d  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@9
                                                ; - java.lang.String::hashCode@39

  0x000001a89c97291a: nopw   0x0(%rax,%rax,1)
  0x000001a89c972920: movslq %eax,%rdx
  0x000001a89c972923: movzwl 0x10(%rdi,%rdx,2),%edx  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@20
                                                ; - java.lang.String::hashCode@39

  0x000001a89c972928: mov    %rsi,%rcx
  0x000001a89c97292b: shl    $0x5,%esi
  0x000001a89c97292e: sub    %ecx,%esi
  0x000001a89c972930: add    %edx,%esi
  0x000001a89c972932: inc    %eax
  0x000001a89c972934: movabs $0x1a8b73ea190,%rdx
  0x000001a89c97293e: mov    0x1c(%rdx),%ecx
  0x000001a89c972941: add    $0x8,%ecx
  0x000001a89c972944: mov    %ecx,0x1c(%rdx)
  0x000001a89c972947: and    $0x1fff8,%ecx
  0x000001a89c97294d: cmp    $0x0,%ecx
  0x000001a89c972950: je     0x000001a89c9729a5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a89c972956: mov    0x70(%r15),%r10    ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a89c97295a: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {poll}
  0x000001a89c97295d: cmp    %ebx,%eax
  0x000001a89c97295f: jl     0x000001a89c972920  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@11
                                                ; - java.lang.String::hashCode@39

  0x000001a89c972961: mov    %rsi,%rax          ;*dup {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@42

  0x000001a89c972964: mov    0x40(%rsp),%rdx
  0x000001a89c972969: mov    %eax,0x10(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44

  0x000001a89c97296c: mov    %rax,%rsi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47

  0x000001a89c97296f: mov    %rsi,%rax
  0x000001a89c972972: add    $0x50,%rsp
  0x000001a89c972976: pop    %rbp
  0x000001a89c972977: mov    0x70(%r15),%r10
  0x000001a89c97297b: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97297e: retq   
  0x000001a89c97297f: movabs $0x1a8b7175808,%r10  ;   {metadata({method} {0x000001a8b7175810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a89c972989: mov    %r10,0x8(%rsp)
  0x000001a89c97298e: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c972996: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97299b: jmpq   0x000001a89c9728ae
  0x000001a89c9729a0: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9729a5: movabs $0x1a8b72e5698,%r10  ;   {metadata({method} {0x000001a8b72e56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a89c9729af: mov    %r10,0x8(%rsp)
  0x000001a89c9729b4: movq   $0x1c,(%rsp)
  0x000001a89c9729bc: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9729c1: jmp    0x000001a89c972956
  0x000001a89c9729c3: nop
  0x000001a89c9729c4: nop
  0x000001a89c9729c5: mov    0x350(%r15),%rax
  0x000001a89c9729cc: movabs $0x0,%r10
  0x000001a89c9729d6: mov    %r10,0x350(%r15)
  0x000001a89c9729dd: movabs $0x0,%r10
  0x000001a89c9729e7: mov    %r10,0x358(%r15)
  0x000001a89c9729ee: add    $0x50,%rsp
  0x000001a89c9729f2: pop    %rbp
  0x000001a89c9729f3: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9729f8: hlt    
  0x000001a89c9729f9: hlt    
  0x000001a89c9729fa: hlt    
  0x000001a89c9729fb: hlt    
  0x000001a89c9729fc: hlt    
  0x000001a89c9729fd: hlt    
  0x000001a89c9729fe: hlt    
  0x000001a89c9729ff: hlt    
[Stub Code]
  0x000001a89c972a00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c972a05: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c972a0f: jmpq   0x000001a89c972a0f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c972a14: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c972a19: mov    %rsp,-0x28(%rsp)
  0x000001a89c972a1e: sub    $0x80,%rsp
  0x000001a89c972a25: mov    %rax,0x78(%rsp)
  0x000001a89c972a2a: mov    %rcx,0x70(%rsp)
  0x000001a89c972a2f: mov    %rdx,0x68(%rsp)
  0x000001a89c972a34: mov    %rbx,0x60(%rsp)
  0x000001a89c972a39: mov    %rbp,0x50(%rsp)
  0x000001a89c972a3e: mov    %rsi,0x48(%rsp)
  0x000001a89c972a43: mov    %rdi,0x40(%rsp)
  0x000001a89c972a48: mov    %r8,0x38(%rsp)
  0x000001a89c972a4d: mov    %r9,0x30(%rsp)
  0x000001a89c972a52: mov    %r10,0x28(%rsp)
  0x000001a89c972a57: mov    %r11,0x20(%rsp)
  0x000001a89c972a5c: mov    %r12,0x18(%rsp)
  0x000001a89c972a61: mov    %r13,0x10(%rsp)
  0x000001a89c972a66: mov    %r14,0x8(%rsp)
  0x000001a89c972a6b: mov    %r15,(%rsp)
  0x000001a89c972a6f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c972a79: movabs $0x1a89c972a19,%rdx  ;   {internal_word}
  0x000001a89c972a83: mov    %rsp,%r8
  0x000001a89c972a86: and    $0xfffffffffffffff0,%rsp
  0x000001a89c972a8a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c972a94: callq  *%r10
  0x000001a89c972a97: hlt    
[Deopt Handler Code]
  0x000001a89c972a98: movabs $0x1a89c972a98,%r10  ;   {section_word}
  0x000001a89c972aa2: push   %r10
  0x000001a89c972aa4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c972aa9: hlt    
  0x000001a89c972aaa: hlt    
  0x000001a89c972aab: hlt    
  0x000001a89c972aac: hlt    
  0x000001a89c972aad: hlt    
  0x000001a89c972aae: hlt    
  0x000001a89c972aaf: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 164 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 250 
ImmutableOopMap{rdx=Oop }pc offsets: 315 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 325 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 353 Compiled method (c2)     214   33       4       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x000001a8a3ea0990,0x000001a8a3ea0e20] = 1168
 relocation     [0x000001a8a3ea0b08,0x000001a8a3ea0b20] = 24
 main code      [0x000001a8a3ea0b20,0x000001a8a3ea0be0] = 192
 stub code      [0x000001a8a3ea0be0,0x000001a8a3ea0bf8] = 24
 metadata       [0x000001a8a3ea0bf8,0x000001a8a3ea0c00] = 8
 scopes data    [0x000001a8a3ea0c00,0x000001a8a3ea0c70] = 112
 scopes pcs     [0x000001a8a3ea0c70,0x000001a8a3ea0e00] = 400
 dependencies   [0x000001a8a3ea0e00,0x000001a8a3ea0e08] = 8
 nul chk table  [0x000001a8a3ea0e08,0x000001a8a3ea0e20] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x000001a8a3ea0b20, 0x000001a8a3ea0bf8]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b73d22c0} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x20]  (sp of caller)
  0x000001a8a3ea0b20: mov    0x8(%rdx),%r10d
  0x000001a8a3ea0b24: shl    $0x3,%r10
  0x000001a8a3ea0b28: cmp    %r10,%rax
  0x000001a8a3ea0b2b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea0b31: data16 xchg %ax,%ax
  0x000001a8a3ea0b34: nopl   0x0(%rax,%rax,1)
  0x000001a8a3ea0b3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea0b40: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea0b47: push   %rbp
  0x000001a8a3ea0b48: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000001a8a3ea0b4c: mov    0x10(%rdx),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x000001a8a3ea0b50: mov    0x10(%r12,%r10,8),%r11d  ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ; implicit exception: dispatches to 0x000001a8a3ea0bbe
  0x000001a8a3ea0b55: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x000001a8a3ea0bca
  0x000001a8a3ea0b5a: mov    0xc(%rdx),%r9d     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x000001a8a3ea0b5e: cmp    %r10d,%r9d
  0x000001a8a3ea0b61: jge    0x000001a8a3ea0b99  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a8a3ea0b63: cmp    %r10d,%r9d
  0x000001a8a3ea0b66: jae    0x000001a8a3ea0baf
  0x000001a8a3ea0b68: mov    %r10d,%r8d
  0x000001a8a3ea0b6b: dec    %r8d
  0x000001a8a3ea0b6e: cmp    %r10d,%r8d
  0x000001a8a3ea0b71: jae    0x000001a8a3ea0baf
  0x000001a8a3ea0b73: shl    $0x3,%r11          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a8a3ea0b77: mov    0x10(%r11,%r9,4),%r8d  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x000001a8a3ea0b7c: test   %r8d,%r8d
  0x000001a8a3ea0b7f: jne    0x000001a8a3ea0b9d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x000001a8a3ea0b81: inc    %r9d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@38

  0x000001a8a3ea0b84: mov    %r9d,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x000001a8a3ea0b88: cmp    %r10d,%r9d
  0x000001a8a3ea0b8b: jl     0x000001a8a3ea0b77  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a8a3ea0b8d: mov    0x70(%r15),%r8     ; ImmutableOopMap{r11=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a8a3ea0b91: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {poll}
  0x000001a8a3ea0b94: cmp    %r10d,%r9d
  0x000001a8a3ea0b97: jl     0x000001a8a3ea0b77  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a8a3ea0b99: xor    %eax,%eax
  0x000001a8a3ea0b9b: jmp    0x000001a8a3ea0ba2  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a8a3ea0b9d: mov    $0x1,%eax          ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000001a8a3ea0ba2: add    $0x10,%rsp
  0x000001a8a3ea0ba6: pop    %rbp
  0x000001a8a3ea0ba7: mov    0x70(%r15),%r10
  0x000001a8a3ea0bab: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea0bae: retq   
  0x000001a8a3ea0baf: mov    %rdx,%rbp
  0x000001a8a3ea0bb2: mov    $0xffffff86,%edx
  0x000001a8a3ea0bb7: callq  0x000001a89c408a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea0bbc: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a8a3ea0bbe: mov    $0xfffffff6,%edx
  0x000001a8a3ea0bc3: callq  0x000001a89c408a00  ; ImmutableOopMap{}
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea0bc8: ud2                       ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x000001a8a3ea0bca: mov    $0xfffffff6,%edx
  0x000001a8a3ea0bcf: callq  0x000001a89c408a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea0bd4: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a8a3ea0bd6: hlt    
  0x000001a8a3ea0bd7: hlt    
  0x000001a8a3ea0bd8: hlt    
  0x000001a8a3ea0bd9: hlt    
  0x000001a8a3ea0bda: hlt    
  0x000001a8a3ea0bdb: hlt    
  0x000001a8a3ea0bdc: hlt    
  0x000001a8a3ea0bdd: hlt    
  0x000001a8a3ea0bde: hlt    
  0x000001a8a3ea0bdf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea0be0: jmpq   0x000001a89c43f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a8a3ea0be5: callq  0x000001a8a3ea0bea
  0x000001a8a3ea0bea: subq   $0x5,(%rsp)
  0x000001a8a3ea0bef: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea0bf4: hlt    
  0x000001a8a3ea0bf5: hlt    
  0x000001a8a3ea0bf6: hlt    
  0x000001a8a3ea0bf7: hlt    

ImmutableOopMap{r11=Oop rdx=Oop }pc offsets: 113 
ImmutableOopMap{rbp=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 168 180 Compiled method (c1)     217   39       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a8a3ea0e90,0x000001a8a3ea11a8] = 792
 relocation     [0x000001a8a3ea1008,0x000001a8a3ea1030] = 40
 main code      [0x000001a8a3ea1040,0x000001a8a3ea10c0] = 128
 stub code      [0x000001a8a3ea10c0,0x000001a8a3ea1158] = 152
 metadata       [0x000001a8a3ea1158,0x000001a8a3ea1168] = 16
 scopes data    [0x000001a8a3ea1168,0x000001a8a3ea1170] = 8
 scopes pcs     [0x000001a8a3ea1170,0x000001a8a3ea11a0] = 48
 dependencies   [0x000001a8a3ea11a0,0x000001a8a3ea11a8] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a8a3ea1040, 0x000001a8a3ea1158]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a8a3ea1040: mov    0x8(%rdx),%r10d
  0x000001a8a3ea1044: shl    $0x3,%r10
  0x000001a8a3ea1048: cmp    %rax,%r10
  0x000001a8a3ea104b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea1051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a8a3ea105c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea1060: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea1067: push   %rbp
  0x000001a8a3ea1068: sub    $0x30,%rsp         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a8a3ea106c: add    $0x30,%rsp
  0x000001a8a3ea1070: pop    %rbp
  0x000001a8a3ea1071: mov    0x70(%r15),%r10
  0x000001a8a3ea1075: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea1078: retq   
  0x000001a8a3ea1079: nop
  0x000001a8a3ea107a: nop
  0x000001a8a3ea107b: mov    0x350(%r15),%rax
  0x000001a8a3ea1082: movabs $0x0,%r10
  0x000001a8a3ea108c: mov    %r10,0x350(%r15)
  0x000001a8a3ea1093: movabs $0x0,%r10
  0x000001a8a3ea109d: mov    %r10,0x358(%r15)
  0x000001a8a3ea10a4: add    $0x30,%rsp
  0x000001a8a3ea10a8: pop    %rbp
  0x000001a8a3ea10a9: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a8a3ea10ae: hlt    
  0x000001a8a3ea10af: hlt    
  0x000001a8a3ea10b0: hlt    
  0x000001a8a3ea10b1: hlt    
  0x000001a8a3ea10b2: hlt    
  0x000001a8a3ea10b3: hlt    
  0x000001a8a3ea10b4: hlt    
  0x000001a8a3ea10b5: hlt    
  0x000001a8a3ea10b6: hlt    
  0x000001a8a3ea10b7: hlt    
  0x000001a8a3ea10b8: hlt    
  0x000001a8a3ea10b9: hlt    
  0x000001a8a3ea10ba: hlt    
  0x000001a8a3ea10bb: hlt    
  0x000001a8a3ea10bc: hlt    
  0x000001a8a3ea10bd: hlt    
  0x000001a8a3ea10be: hlt    
  0x000001a8a3ea10bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea10c0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a8a3ea10c5: mov    %rsp,-0x28(%rsp)
  0x000001a8a3ea10ca: sub    $0x80,%rsp
  0x000001a8a3ea10d1: mov    %rax,0x78(%rsp)
  0x000001a8a3ea10d6: mov    %rcx,0x70(%rsp)
  0x000001a8a3ea10db: mov    %rdx,0x68(%rsp)
  0x000001a8a3ea10e0: mov    %rbx,0x60(%rsp)
  0x000001a8a3ea10e5: mov    %rbp,0x50(%rsp)
  0x000001a8a3ea10ea: mov    %rsi,0x48(%rsp)
  0x000001a8a3ea10ef: mov    %rdi,0x40(%rsp)
  0x000001a8a3ea10f4: mov    %r8,0x38(%rsp)
  0x000001a8a3ea10f9: mov    %r9,0x30(%rsp)
  0x000001a8a3ea10fe: mov    %r10,0x28(%rsp)
  0x000001a8a3ea1103: mov    %r11,0x20(%rsp)
  0x000001a8a3ea1108: mov    %r12,0x18(%rsp)
  0x000001a8a3ea110d: mov    %r13,0x10(%rsp)
  0x000001a8a3ea1112: mov    %r14,0x8(%rsp)
  0x000001a8a3ea1117: mov    %r15,(%rsp)
  0x000001a8a3ea111b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a8a3ea1125: movabs $0x1a8a3ea10c5,%rdx  ;   {internal_word}
  0x000001a8a3ea112f: mov    %rsp,%r8
  0x000001a8a3ea1132: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea1136: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a8a3ea1140: callq  *%r10
  0x000001a8a3ea1143: hlt    
[Deopt Handler Code]
  0x000001a8a3ea1144: movabs $0x1a8a3ea1144,%r10  ;   {section_word}
  0x000001a8a3ea114e: push   %r10
  0x000001a8a3ea1150: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea1155: hlt    
  0x000001a8a3ea1156: hlt    
  0x000001a8a3ea1157: hlt    
Compiled method (c1)     219   41       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x000001a89c972d90,0x000001a89c974ce8] = 8024
 relocation     [0x000001a89c972f08,0x000001a89c973050] = 328
 main code      [0x000001a89c973060,0x000001a89c974180] = 4384
 stub code      [0x000001a89c974180,0x000001a89c9742c0] = 320
 metadata       [0x000001a89c9742c0,0x000001a89c9742c8] = 8
 scopes data    [0x000001a89c9742c8,0x000001a89c974668] = 928
 scopes pcs     [0x000001a89c974668,0x000001a89c974c78] = 1552
 dependencies   [0x000001a89c974c78,0x000001a89c974c80] = 8
 nul chk table  [0x000001a89c974c80,0x000001a89c974ce8] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x000001a89c973060, 0x000001a89c9742c0]  4704 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000001a89c973060: mov    0x8(%rdx),%r10d
  0x000001a89c973064: shl    $0x3,%r10
  0x000001a89c973068: cmp    %rax,%r10
  0x000001a89c97306b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c973071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97307c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c973080: mov    %eax,-0x7000(%rsp)
  0x000001a89c973087: push   %rbp
  0x000001a89c973088: sub    $0xa0,%rsp
  0x000001a89c97308f: mov    %rdx,0x48(%rsp)
  0x000001a89c973094: mov    %r8d,0x40(%rsp)
  0x000001a89c973099: mov    %r9,0x50(%rsp)
  0x000001a89c97309e: movabs $0x1a8b73e8910,%rbx  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9730a8: mov    0xfc(%rbx),%eax
  0x000001a89c9730ae: add    $0x8,%eax
  0x000001a89c9730b1: mov    %eax,0xfc(%rbx)
  0x000001a89c9730b7: and    $0x1ff8,%eax
  0x000001a89c9730bd: cmp    $0x0,%eax
  0x000001a89c9730c0: je     0x000001a89c973fe6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0

  0x000001a89c9730c6: mov    0x24(%rdx),%ebx
  0x000001a89c9730c9: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1

  0x000001a89c9730cd: cmp    $0x0,%rbx
  0x000001a89c9730d1: movabs $0x1a8b73e8910,%rax  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9730db: movabs $0x138,%r11
  0x000001a89c9730e5: je     0x000001a89c9730f5
  0x000001a89c9730eb: movabs $0x148,%r11
  0x000001a89c9730f5: mov    (%rax,%r11,1),%r13
  0x000001a89c9730f9: lea    0x1(%r13),%r13
  0x000001a89c9730fd: mov    %r13,(%rax,%r11,1)
  0x000001a89c973101: je     0x000001a89c973155  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7

  0x000001a89c973107: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ; implicit exception: dispatches to 0x000001a89c974007
  0x000001a89c97310a: cmp    $0x0,%eax
  0x000001a89c97310d: movabs $0x1a8b73e8910,%r11  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973117: movabs $0x168,%r13
  0x000001a89c973121: je     0x000001a89c973131
  0x000001a89c973127: movabs $0x158,%r13
  0x000001a89c973131: mov    (%r11,%r13,1),%r14
  0x000001a89c973135: lea    0x1(%r14),%r14
  0x000001a89c973139: mov    %r14,(%r11,%r13,1)
  0x000001a89c97313d: je     0x000001a89c973155  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16

  0x000001a89c973143: mov    %ecx,0x60(%rsp)
  0x000001a89c973147: mov    %esi,0x44(%rsp)
  0x000001a89c97314b: mov    %rdi,0x58(%rsp)
  0x000001a89c973150: jmpq   0x000001a89c973191  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x000001a89c973155: mov    %ecx,0x60(%rsp)
  0x000001a89c973159: mov    %esi,0x44(%rsp)
  0x000001a89c97315d: mov    %rdi,0x58(%rsp)
  0x000001a89c973162: mov    %rdx,%rbx
  0x000001a89c973165: movabs $0x1a8b73e8910,%rax  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c97316f: addq   $0x1,0x178(%rax)
  0x000001a89c973177: mov    %rdx,%rbx
  0x000001a89c97317a: mov    %rbx,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x000001a89c97317d: xchg   %ax,%ax
  0x000001a89c97317f: callq  0x000001a89c407000  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20
                                                ;   {optimized virtual_call}
  0x000001a89c973184: mov    %rax,%r8           ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x000001a89c973187: mov    0xc(%r8),%r9d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ; implicit exception: dispatches to 0x000001a89c97400c
  0x000001a89c97318b: mov    %r9,%rax
  0x000001a89c97318e: mov    %r8,%rbx           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x000001a89c973191: dec    %eax
  0x000001a89c973193: and    0x40(%rsp),%eax
  0x000001a89c973197: movslq %eax,%r8
  0x000001a89c97319a: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000001a89c974011
  0x000001a89c97319d: jae    0x000001a89c97401b
  0x000001a89c9731a3: mov    0x10(%rbx,%r8,4),%esi
  0x000001a89c9731a8: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40

  0x000001a89c9731ac: cmp    $0x0,%rsi
  0x000001a89c9731b0: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9731ba: movabs $0x1b0,%r9
  0x000001a89c9731c4: jne    0x000001a89c9731d4
  0x000001a89c9731ca: movabs $0x1c0,%r9
  0x000001a89c9731d4: mov    (%r8,%r9,1),%rdi
  0x000001a89c9731d8: lea    0x1(%rdi),%rdi
  0x000001a89c9731dc: mov    %rdi,(%r8,%r9,1)
  0x000001a89c9731e0: jne    0x000001a89c97341f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44

  0x000001a89c9731e6: mov    %eax,0x64(%rsp)
  0x000001a89c9731ea: mov    %rbx,0x68(%rsp)
  0x000001a89c9731ef: mov    0x48(%rsp),%rdx
  0x000001a89c9731f4: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9731fe: mov    0x8(%rdx),%edx
  0x000001a89c973201: shl    $0x3,%rdx
  0x000001a89c973205: cmp    0x1e0(%r8),%rdx
  0x000001a89c97320c: jne    0x000001a89c97321b
  0x000001a89c97320e: addq   $0x1,0x1e8(%r8)
  0x000001a89c973216: jmpq   0x000001a89c973281
  0x000001a89c97321b: cmp    0x1f0(%r8),%rdx
  0x000001a89c973222: jne    0x000001a89c973231
  0x000001a89c973224: addq   $0x1,0x1f8(%r8)
  0x000001a89c97322c: jmpq   0x000001a89c973281
  0x000001a89c973231: cmpq   $0x0,0x1e0(%r8)
  0x000001a89c97323c: jne    0x000001a89c973255
  0x000001a89c97323e: mov    %rdx,0x1e0(%r8)
  0x000001a89c973245: movq   $0x1,0x1e8(%r8)
  0x000001a89c973250: jmpq   0x000001a89c973281
  0x000001a89c973255: cmpq   $0x0,0x1f0(%r8)
  0x000001a89c973260: jne    0x000001a89c973279
  0x000001a89c973262: mov    %rdx,0x1f0(%r8)
  0x000001a89c973269: movq   $0x1,0x1f8(%r8)
  0x000001a89c973274: jmpq   0x000001a89c973281
  0x000001a89c973279: addq   $0x1,0x1d0(%r8)
  0x000001a89c973281: mov    0x40(%rsp),%r8d
  0x000001a89c973286: mov    0x50(%rsp),%r9
  0x000001a89c97328b: mov    0x58(%rsp),%rdi
  0x000001a89c973290: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a89c97329a: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56

  0x000001a89c97329f: nopw   0x0(%rax,%rax,1)
  0x000001a89c9732a5: movabs $0xffffffffffffffff,%rax
  0x000001a89c9732af: callq  0x000001a89c408c20  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56
                                                ;   {virtual_call}
  0x000001a89c9732b4: mov    0x64(%rsp),%r8d
  0x000001a89c9732b9: movslq %r8d,%rdx
  0x000001a89c9732bc: mov    0x68(%rsp),%rbx
  0x000001a89c9732c1: lea    0x10(%rbx,%rdx,4),%rdx
  0x000001a89c9732c6: cmp    0xc(%rbx),%r8d
  0x000001a89c9732ca: jae    0x000001a89c974024
  0x000001a89c9732d0: cmp    $0x0,%rax
  0x000001a89c9732d4: jne    0x000001a89c9732ef
  0x000001a89c9732d6: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9732e0: orl    $0x100,0x200(%rsi)
  0x000001a89c9732ea: jmpq   0x000001a89c9733d9
  0x000001a89c9732ef: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x000001a89c97402d
  0x000001a89c9732f3: shl    $0x3,%r8
  0x000001a89c9732f7: mov    0x8(%rax),%esi
  0x000001a89c9732fa: shl    $0x3,%rsi
  0x000001a89c9732fe: mov    0xe0(%r8),%r8
  0x000001a89c973305: cmp    %r8,%rsi
  0x000001a89c973308: je     0x000001a89c97333a
  0x000001a89c97330e: mov    0xc(%r8),%edi
  0x000001a89c973312: cmp    (%rsi,%rdi,1),%r8
  0x000001a89c973316: je     0x000001a89c97333a
  0x000001a89c97331c: cmp    $0x18,%edi
  0x000001a89c97331f: jne    0x000001a89c9733c2
  0x000001a89c973325: push   %rsi
  0x000001a89c973326: push   %r8
  0x000001a89c973328: callq  0x000001a89c4cf180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a89c97332d: pop    %rsi
  0x000001a89c97332e: pop    %r8
  0x000001a89c973330: cmp    $0x0,%r8d
  0x000001a89c973334: je     0x000001a89c9733c2
  0x000001a89c97333a: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973344: mov    0x8(%rax),%r8d
  0x000001a89c973348: shl    $0x3,%r8
  0x000001a89c97334c: cmp    0x218(%rsi),%r8
  0x000001a89c973353: jne    0x000001a89c973362
  0x000001a89c973355: addq   $0x1,0x220(%rsi)
  0x000001a89c97335d: jmpq   0x000001a89c9733d9
  0x000001a89c973362: cmp    0x228(%rsi),%r8
  0x000001a89c973369: jne    0x000001a89c973378
  0x000001a89c97336b: addq   $0x1,0x230(%rsi)
  0x000001a89c973373: jmpq   0x000001a89c9733d9
  0x000001a89c973378: cmpq   $0x0,0x218(%rsi)
  0x000001a89c973383: jne    0x000001a89c97339c
  0x000001a89c973385: mov    %r8,0x218(%rsi)
  0x000001a89c97338c: movq   $0x1,0x220(%rsi)
  0x000001a89c973397: jmpq   0x000001a89c9733d9
  0x000001a89c97339c: cmpq   $0x0,0x228(%rsi)
  0x000001a89c9733a7: jne    0x000001a89c9733c0
  0x000001a89c9733a9: mov    %r8,0x228(%rsi)
  0x000001a89c9733b0: movq   $0x1,0x230(%rsi)
  0x000001a89c9733bb: jmpq   0x000001a89c9733d9
  0x000001a89c9733c0: jmp    0x000001a89c9733d9
  0x000001a89c9733c2: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9733cc: subq   $0x1,0x208(%rsi)
  0x000001a89c9733d4: jmpq   0x000001a89c974032
  0x000001a89c9733d9: movsbl 0x398(%r15),%r8d
  0x000001a89c9733e1: cmp    $0x0,%r8d
  0x000001a89c9733e5: jne    0x000001a89c97403b
  0x000001a89c9733eb: mov    %rax,%r10
  0x000001a89c9733ee: shr    $0x3,%r10
  0x000001a89c9733f2: mov    %r10d,(%rdx)
  0x000001a89c9733f5: mov    %rdx,%r8
  0x000001a89c9733f8: xor    %rax,%r8
  0x000001a89c9733fb: shr    $0x14,%r8
  0x000001a89c9733ff: cmp    $0x0,%r8
  0x000001a89c973403: jne    0x000001a89c97405a  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59

  0x000001a89c973409: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973413: incl   0x240(%r8)
  0x000001a89c97341a: jmpq   0x000001a89c973d20  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60

  0x000001a89c97341f: mov    0xc(%rsi),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ; implicit exception: dispatches to 0x000001a89c974072
  0x000001a89c973423: cmp    0x40(%rsp),%r8d
  0x000001a89c973428: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973432: movabs $0x268,%rdx
  0x000001a89c97343c: je     0x000001a89c97344c
  0x000001a89c973442: movabs $0x258,%rdx
  0x000001a89c97344c: mov    (%r8,%rdx,1),%rdi
  0x000001a89c973450: lea    0x1(%rdi),%rdi
  0x000001a89c973454: mov    %rdi,(%r8,%rdx,1)
  0x000001a89c973458: je     0x000001a89c973468  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69

  0x000001a89c97345e: mov    %rbx,0x68(%rsp)
  0x000001a89c973463: jmpq   0x000001a89c9735e2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x000001a89c973468: mov    0x50(%rsp),%r9
  0x000001a89c97346d: mov    0x10(%rsi),%r8d
  0x000001a89c973471: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74

  0x000001a89c973475: cmp    %r9,%r8
  0x000001a89c973478: movabs $0x1a8b73e8910,%rdx  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973482: movabs $0x278,%rdi
  0x000001a89c97348c: je     0x000001a89c97349c
  0x000001a89c973492: movabs $0x288,%rdi
  0x000001a89c97349c: mov    (%rdx,%rdi,1),%rax
  0x000001a89c9734a0: lea    0x1(%rax),%rax
  0x000001a89c9734a4: mov    %rax,(%rdx,%rdi,1)
  0x000001a89c9734a8: je     0x000001a89c973cd2  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81

  0x000001a89c9734ae: cmp    $0x0,%r9
  0x000001a89c9734b2: movabs $0x1a8b73e8910,%rdx  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9734bc: movabs $0x2a8,%rdi
  0x000001a89c9734c6: jne    0x000001a89c9734d6
  0x000001a89c9734cc: movabs $0x298,%rdi
  0x000001a89c9734d6: mov    (%rdx,%rdi,1),%rax
  0x000001a89c9734da: lea    0x1(%rax),%rax
  0x000001a89c9734de: mov    %rax,(%rdx,%rdi,1)
  0x000001a89c9734e2: jne    0x000001a89c9734f2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85

  0x000001a89c9734e8: mov    %rbx,0x68(%rsp)
  0x000001a89c9734ed: jmpq   0x000001a89c9735e2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x000001a89c9734f2: mov    %rsi,0x70(%rsp)
  0x000001a89c9734f7: mov    %rbx,0x68(%rsp)
  0x000001a89c9734fc: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a89c974077
  0x000001a89c9734ff: mov    %r9,%rdx
  0x000001a89c973502: movabs $0x1a8b73e8910,%rdi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c97350c: mov    0x8(%rdx),%edx
  0x000001a89c97350f: shl    $0x3,%rdx
  0x000001a89c973513: cmp    0x2c8(%rdi),%rdx
  0x000001a89c97351a: jne    0x000001a89c973529
  0x000001a89c97351c: addq   $0x1,0x2d0(%rdi)
  0x000001a89c973524: jmpq   0x000001a89c97358f
  0x000001a89c973529: cmp    0x2d8(%rdi),%rdx
  0x000001a89c973530: jne    0x000001a89c97353f
  0x000001a89c973532: addq   $0x1,0x2e0(%rdi)
  0x000001a89c97353a: jmpq   0x000001a89c97358f
  0x000001a89c97353f: cmpq   $0x0,0x2c8(%rdi)
  0x000001a89c97354a: jne    0x000001a89c973563
  0x000001a89c97354c: mov    %rdx,0x2c8(%rdi)
  0x000001a89c973553: movq   $0x1,0x2d0(%rdi)
  0x000001a89c97355e: jmpq   0x000001a89c97358f
  0x000001a89c973563: cmpq   $0x0,0x2d8(%rdi)
  0x000001a89c97356e: jne    0x000001a89c973587
  0x000001a89c973570: mov    %rdx,0x2d8(%rdi)
  0x000001a89c973577: movq   $0x1,0x2e0(%rdi)
  0x000001a89c973582: jmpq   0x000001a89c97358f
  0x000001a89c973587: addq   $0x1,0x2b8(%rdi)
  0x000001a89c97358f: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91

  0x000001a89c973592: data16 xchg %ax,%ax
  0x000001a89c973595: movabs $0xffffffffffffffff,%rax
  0x000001a89c97359f: callq  0x000001a89c407280  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {virtual_call}
  0x000001a89c9735a4: cmp    $0x0,%eax
  0x000001a89c9735a7: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9735b1: movabs $0x300,%r9
  0x000001a89c9735bb: jne    0x000001a89c9735cb
  0x000001a89c9735c1: movabs $0x2f0,%r9
  0x000001a89c9735cb: mov    (%r8,%r9,1),%rdi
  0x000001a89c9735cf: lea    0x1(%rdi),%rdi
  0x000001a89c9735d3: mov    %rdi,(%r8,%r9,1)
  0x000001a89c9735d7: mov    0x70(%rsp),%rsi
  0x000001a89c9735dc: jne    0x000001a89c973cd2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94

  0x000001a89c9735e2: cmp    $0x0,%rsi
  0x000001a89c9735e6: jne    0x000001a89c973601
  0x000001a89c9735e8: movabs $0x1a8b73e8910,%rdi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9735f2: orl    $0x100,0x320(%rdi)
  0x000001a89c9735fc: jmpq   0x000001a89c9736c2
  0x000001a89c973601: movabs $0x7c0037bc8,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000001a89c97360b: mov    0x8(%rsi),%r9d
  0x000001a89c97360f: shl    $0x3,%r9
  0x000001a89c973613: cmp    %r9,%rcx
  0x000001a89c973616: jne    0x000001a89c9736a6
  0x000001a89c97361c: movabs $0x1a8b73e8910,%rdi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973626: mov    0x8(%rsi),%ecx
  0x000001a89c973629: shl    $0x3,%rcx
  0x000001a89c97362d: cmp    0x338(%rdi),%rcx
  0x000001a89c973634: jne    0x000001a89c973643
  0x000001a89c973636: addq   $0x1,0x340(%rdi)
  0x000001a89c97363e: jmpq   0x000001a89c9736c7
  0x000001a89c973643: cmp    0x348(%rdi),%rcx
  0x000001a89c97364a: jne    0x000001a89c973659
  0x000001a89c97364c: addq   $0x1,0x350(%rdi)
  0x000001a89c973654: jmpq   0x000001a89c9736c7
  0x000001a89c973659: cmpq   $0x0,0x338(%rdi)
  0x000001a89c973664: jne    0x000001a89c97367d
  0x000001a89c973666: mov    %rcx,0x338(%rdi)
  0x000001a89c97366d: movq   $0x1,0x340(%rdi)
  0x000001a89c973678: jmpq   0x000001a89c9736c7
  0x000001a89c97367d: cmpq   $0x0,0x348(%rdi)
  0x000001a89c973688: jne    0x000001a89c9736a1
  0x000001a89c97368a: mov    %rcx,0x348(%rdi)
  0x000001a89c973691: movq   $0x1,0x350(%rdi)
  0x000001a89c97369c: jmpq   0x000001a89c9736c7
  0x000001a89c9736a1: jmpq   0x000001a89c9736c7
  0x000001a89c9736a6: movabs $0x1a8b73e8910,%rdi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9736b0: subq   $0x1,0x328(%rdi)
  0x000001a89c9736b8: jmpq   0x000001a89c9736c2
  0x000001a89c9736bd: jmpq   0x000001a89c9736c7
  0x000001a89c9736c2: xor    %r8,%r8
  0x000001a89c9736c5: jmp    0x000001a89c9736d1
  0x000001a89c9736c7: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106

  0x000001a89c9736d1: cmp    $0x0,%r8d
  0x000001a89c9736d5: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9736df: movabs $0x360,%r9
  0x000001a89c9736e9: je     0x000001a89c9736f9
  0x000001a89c9736ef: movabs $0x370,%r9
  0x000001a89c9736f9: mov    (%r8,%r9,1),%rdi
  0x000001a89c9736fd: lea    0x1(%rdi),%rdi
  0x000001a89c973701: mov    %rdi,(%r8,%r9,1)
  0x000001a89c973705: je     0x000001a89c9738ba  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109

  0x000001a89c97370b: cmp    $0x0,%rsi
  0x000001a89c97370f: jne    0x000001a89c97372b
  0x000001a89c973711: movabs $0x1a8b73e8910,%r9  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c97371b: orl    $0x100,0x378(%r9)
  0x000001a89c973726: jmpq   0x000001a89c9737ec
  0x000001a89c97372b: movabs $0x7c0037bc8,%rdi  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000001a89c973735: mov    0x8(%rsi),%r8d
  0x000001a89c973739: shl    $0x3,%r8
  0x000001a89c97373d: cmp    %r8,%rdi
  0x000001a89c973740: jne    0x000001a89c9737d0
  0x000001a89c973746: movabs $0x1a8b73e8910,%r9  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973750: mov    0x8(%rsi),%edi
  0x000001a89c973753: shl    $0x3,%rdi
  0x000001a89c973757: cmp    0x390(%r9),%rdi
  0x000001a89c97375e: jne    0x000001a89c97376d
  0x000001a89c973760: addq   $0x1,0x398(%r9)
  0x000001a89c973768: jmpq   0x000001a89c9737ec
  0x000001a89c97376d: cmp    0x3a0(%r9),%rdi
  0x000001a89c973774: jne    0x000001a89c973783
  0x000001a89c973776: addq   $0x1,0x3a8(%r9)
  0x000001a89c97377e: jmpq   0x000001a89c9737ec
  0x000001a89c973783: cmpq   $0x0,0x390(%r9)
  0x000001a89c97378e: jne    0x000001a89c9737a7
  0x000001a89c973790: mov    %rdi,0x390(%r9)
  0x000001a89c973797: movq   $0x1,0x398(%r9)
  0x000001a89c9737a2: jmpq   0x000001a89c9737ec
  0x000001a89c9737a7: cmpq   $0x0,0x3a0(%r9)
  0x000001a89c9737b2: jne    0x000001a89c9737cb
  0x000001a89c9737b4: mov    %rdi,0x3a0(%r9)
  0x000001a89c9737bb: movq   $0x1,0x3a8(%r9)
  0x000001a89c9737c6: jmpq   0x000001a89c9737ec
  0x000001a89c9737cb: jmpq   0x000001a89c9737ec
  0x000001a89c9737d0: movabs $0x1a8b73e8910,%r9  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9737da: subq   $0x1,0x380(%r9)
  0x000001a89c9737e2: jmpq   0x000001a89c97407c
  0x000001a89c9737e7: jmpq   0x000001a89c9737ec
  0x000001a89c9737ec: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114

  0x000001a89c9737ef: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000001a89c974085
  0x000001a89c9737f2: mov    %rdx,%r8
  0x000001a89c9737f5: movabs $0x1a8b73e8910,%r9  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9737ff: mov    0x8(%r8),%r8d
  0x000001a89c973803: shl    $0x3,%r8
  0x000001a89c973807: cmp    0x3c8(%r9),%r8
  0x000001a89c97380e: jne    0x000001a89c97381d
  0x000001a89c973810: addq   $0x1,0x3d0(%r9)
  0x000001a89c973818: jmpq   0x000001a89c973883
  0x000001a89c97381d: cmp    0x3d8(%r9),%r8
  0x000001a89c973824: jne    0x000001a89c973833
  0x000001a89c973826: addq   $0x1,0x3e0(%r9)
  0x000001a89c97382e: jmpq   0x000001a89c973883
  0x000001a89c973833: cmpq   $0x0,0x3c8(%r9)
  0x000001a89c97383e: jne    0x000001a89c973857
  0x000001a89c973840: mov    %r8,0x3c8(%r9)
  0x000001a89c973847: movq   $0x1,0x3d0(%r9)
  0x000001a89c973852: jmpq   0x000001a89c973883
  0x000001a89c973857: cmpq   $0x0,0x3d8(%r9)
  0x000001a89c973862: jne    0x000001a89c97387b
  0x000001a89c973864: mov    %r8,0x3d8(%r9)
  0x000001a89c97386b: movq   $0x1,0x3e0(%r9)
  0x000001a89c973876: jmpq   0x000001a89c973883
  0x000001a89c97387b: addq   $0x1,0x3b8(%r9)
  0x000001a89c973883: mov    0x48(%rsp),%r8
  0x000001a89c973888: mov    0x68(%rsp),%r9
  0x000001a89c97388d: mov    0x40(%rsp),%edi
  0x000001a89c973891: mov    0x50(%rsp),%rsi
  0x000001a89c973896: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123

  0x000001a89c97389b: nopl   0x0(%rax)
  0x000001a89c97389f: callq  0x000001a89c407000  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {optimized virtual_call}
  0x000001a89c9738a4: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9738ae: incl   0x3f0(%r8)
  0x000001a89c9738b5: jmpq   0x000001a89c973ce6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128

  0x000001a89c9738ba: mov    $0x0,%edi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134

  0x000001a89c9738bf: nop
  0x000001a89c9738c0: mov    %edi,0x78(%rsp)
  0x000001a89c9738c4: mov    0x50(%rsp),%r9
  0x000001a89c9738c9: mov    0x40(%rsp),%r8d
  0x000001a89c9738ce: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x000001a89c97408a
  0x000001a89c9738d1: shl    $0x3,%rbx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136

  0x000001a89c9738d5: mov    %rbx,0x80(%rsp)
  0x000001a89c9738dd: cmp    $0x0,%rbx
  0x000001a89c9738e1: movabs $0x1a8b73e8910,%rdx  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9738eb: movabs $0x418,%rax
  0x000001a89c9738f5: je     0x000001a89c973905
  0x000001a89c9738fb: movabs $0x408,%rax
  0x000001a89c973905: mov    (%rdx,%rax,1),%rcx
  0x000001a89c973909: lea    0x1(%rcx),%rcx
  0x000001a89c97390d: mov    %rcx,(%rdx,%rax,1)
  0x000001a89c973911: je     0x000001a89c973b38  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142

  0x000001a89c973917: mov    0xc(%rbx),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ; implicit exception: dispatches to 0x000001a89c97408f
  0x000001a89c97391a: cmp    %r8d,%edx
  0x000001a89c97391d: movabs $0x1a8b73e8910,%rdx  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973927: movabs $0x4d0,%rsi
  0x000001a89c973931: jne    0x000001a89c973941
  0x000001a89c973937: movabs $0x4e0,%rsi
  0x000001a89c973941: mov    (%rdx,%rsi,1),%rax
  0x000001a89c973945: lea    0x1(%rax),%rax
  0x000001a89c973949: mov    %rax,(%rdx,%rsi,1)
  0x000001a89c97394d: jne    0x000001a89c973ab5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181

  0x000001a89c973953: mov    0x10(%rbx),%edx
  0x000001a89c973956: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186

  0x000001a89c97395a: cmp    %r9,%rdx
  0x000001a89c97395d: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973967: movabs $0x4f0,%rax
  0x000001a89c973971: je     0x000001a89c973981
  0x000001a89c973977: movabs $0x500,%rax
  0x000001a89c973981: mov    (%rsi,%rax,1),%rcx
  0x000001a89c973985: lea    0x1(%rcx),%rcx
  0x000001a89c973989: mov    %rcx,(%rsi,%rax,1)
  0x000001a89c97398d: je     0x000001a89c973b0d  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193

  0x000001a89c973993: cmp    $0x0,%r9
  0x000001a89c973997: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9739a1: movabs $0x510,%rax
  0x000001a89c9739ab: je     0x000001a89c9739bb
  0x000001a89c9739b1: movabs $0x520,%rax
  0x000001a89c9739bb: mov    (%rsi,%rax,1),%rcx
  0x000001a89c9739bf: lea    0x1(%rcx),%rcx
  0x000001a89c9739c3: mov    %rcx,(%rsi,%rax,1)
  0x000001a89c9739c7: je     0x000001a89c973ab5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197

  0x000001a89c9739cd: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a89c974094
  0x000001a89c9739d0: mov    %r9,%rsi
  0x000001a89c9739d3: movabs $0x1a8b73e8910,%rax  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9739dd: mov    0x8(%rsi),%esi
  0x000001a89c9739e0: shl    $0x3,%rsi
  0x000001a89c9739e4: cmp    0x540(%rax),%rsi
  0x000001a89c9739eb: jne    0x000001a89c9739fa
  0x000001a89c9739ed: addq   $0x1,0x548(%rax)
  0x000001a89c9739f5: jmpq   0x000001a89c973a60
  0x000001a89c9739fa: cmp    0x550(%rax),%rsi
  0x000001a89c973a01: jne    0x000001a89c973a10
  0x000001a89c973a03: addq   $0x1,0x558(%rax)
  0x000001a89c973a0b: jmpq   0x000001a89c973a60
  0x000001a89c973a10: cmpq   $0x0,0x540(%rax)
  0x000001a89c973a1b: jne    0x000001a89c973a34
  0x000001a89c973a1d: mov    %rsi,0x540(%rax)
  0x000001a89c973a24: movq   $0x1,0x548(%rax)
  0x000001a89c973a2f: jmpq   0x000001a89c973a60
  0x000001a89c973a34: cmpq   $0x0,0x550(%rax)
  0x000001a89c973a3f: jne    0x000001a89c973a58
  0x000001a89c973a41: mov    %rsi,0x550(%rax)
  0x000001a89c973a48: movq   $0x1,0x558(%rax)
  0x000001a89c973a53: jmpq   0x000001a89c973a60
  0x000001a89c973a58: addq   $0x1,0x530(%rax)
  0x000001a89c973a60: mov    %rdx,%r8
  0x000001a89c973a63: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203

  0x000001a89c973a66: nopl   0x0(%rax)
  0x000001a89c973a6d: movabs $0xffffffffffffffff,%rax
  0x000001a89c973a77: callq  0x000001a89c407280  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {virtual_call}
  0x000001a89c973a7c: cmp    $0x0,%eax
  0x000001a89c973a7f: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973a89: movabs $0x578,%r9
  0x000001a89c973a93: jne    0x000001a89c973aa3
  0x000001a89c973a99: movabs $0x568,%r9
  0x000001a89c973aa3: mov    (%r8,%r9,1),%rdi
  0x000001a89c973aa7: lea    0x1(%rdi),%rdi
  0x000001a89c973aab: mov    %rdi,(%r8,%r9,1)
  0x000001a89c973aaf: jne    0x000001a89c973b1a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206

  0x000001a89c973ab5: mov    0x78(%rsp),%edi
  0x000001a89c973ab9: inc    %edi
  0x000001a89c973abb: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973ac5: mov    0x100(%r8),%r9d
  0x000001a89c973acc: add    $0x8,%r9d
  0x000001a89c973ad0: mov    %r9d,0x100(%r8)
  0x000001a89c973ad7: and    $0xfff8,%r9d
  0x000001a89c973ade: cmp    $0x0,%r9d
  0x000001a89c973ae2: je     0x000001a89c974099  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a89c973ae8: mov    0x70(%r15),%r10    ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a89c973aec: test   %eax,(%r10)        ;   {poll}
  0x000001a89c973aef: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973af9: incl   0x5a0(%r8)
  0x000001a89c973b00: mov    0x80(%rsp),%rsi
  0x000001a89c973b08: jmpq   0x000001a89c9738c0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a89c973b0d: mov    0x80(%rsp),%rax
  0x000001a89c973b15: jmpq   0x000001a89c973ce6  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x000001a89c973b1a: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973b24: incl   0x588(%r8)
  0x000001a89c973b2b: mov    0x80(%rsp),%rax
  0x000001a89c973b33: jmpq   0x000001a89c973ce6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209

  0x000001a89c973b38: mov    %rsi,0x88(%rsp)
  0x000001a89c973b40: mov    0x48(%rsp),%rdx
  0x000001a89c973b45: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973b4f: mov    0x8(%rdx),%edx
  0x000001a89c973b52: shl    $0x3,%rdx
  0x000001a89c973b56: cmp    0x438(%r8),%rdx
  0x000001a89c973b5d: jne    0x000001a89c973b6c
  0x000001a89c973b5f: addq   $0x1,0x440(%r8)
  0x000001a89c973b67: jmpq   0x000001a89c973bd2
  0x000001a89c973b6c: cmp    0x448(%r8),%rdx
  0x000001a89c973b73: jne    0x000001a89c973b82
  0x000001a89c973b75: addq   $0x1,0x450(%r8)
  0x000001a89c973b7d: jmpq   0x000001a89c973bd2
  0x000001a89c973b82: cmpq   $0x0,0x438(%r8)
  0x000001a89c973b8d: jne    0x000001a89c973ba6
  0x000001a89c973b8f: mov    %rdx,0x438(%r8)
  0x000001a89c973b96: movq   $0x1,0x440(%r8)
  0x000001a89c973ba1: jmpq   0x000001a89c973bd2
  0x000001a89c973ba6: cmpq   $0x0,0x448(%r8)
  0x000001a89c973bb1: jne    0x000001a89c973bca
  0x000001a89c973bb3: mov    %rdx,0x448(%r8)
  0x000001a89c973bba: movq   $0x1,0x450(%r8)
  0x000001a89c973bc5: jmpq   0x000001a89c973bd2
  0x000001a89c973bca: addq   $0x1,0x428(%r8)
  0x000001a89c973bd2: mov    0x40(%rsp),%r8d
  0x000001a89c973bd7: mov    0x58(%rsp),%rdi
  0x000001a89c973bdc: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a89c973be6: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152

  0x000001a89c973beb: xchg   %ax,%ax
  0x000001a89c973bed: movabs $0xffffffffffffffff,%rax
  0x000001a89c973bf7: callq  0x000001a89c407280  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152
                                                ;   {virtual_call}
  0x000001a89c973bfc: movsbl 0x398(%r15),%r8d
  0x000001a89c973c04: cmp    $0x0,%r8d
  0x000001a89c973c08: mov    0x88(%rsp),%rsi
  0x000001a89c973c10: jne    0x000001a89c9740ba
  0x000001a89c973c16: mov    %rax,%r10
  0x000001a89c973c19: shr    $0x3,%r10
  0x000001a89c973c1d: mov    %r10d,0x18(%rsi)
  0x000001a89c973c21: mov    %rsi,%r8
  0x000001a89c973c24: xor    %rax,%r8
  0x000001a89c973c27: shr    $0x14,%r8
  0x000001a89c973c2b: cmp    $0x0,%r8
  0x000001a89c973c2f: jne    0x000001a89c9740da  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155

  0x000001a89c973c35: mov    0x78(%rsp),%edi
  0x000001a89c973c39: cmp    $0x7,%edi
  0x000001a89c973c3c: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973c46: movabs $0x470,%r9
  0x000001a89c973c50: jge    0x000001a89c973c60
  0x000001a89c973c56: movabs $0x460,%r9
  0x000001a89c973c60: mov    (%r8,%r9,1),%rdx
  0x000001a89c973c64: lea    0x1(%rdx),%rdx
  0x000001a89c973c68: mov    %rdx,(%r8,%r9,1)
  0x000001a89c973c6c: jge    0x000001a89c973c7f  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162

  0x000001a89c973c72: mov    0x80(%rsp),%rax
  0x000001a89c973c7a: jmpq   0x000001a89c973ce6  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x000001a89c973c7f: mov    0x68(%rsp),%rbx
  0x000001a89c973c84: mov    0x40(%rsp),%r9d
  0x000001a89c973c89: mov    0x48(%rsp),%rdx
  0x000001a89c973c8e: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973c98: addq   $0x1,0x480(%r8)
  0x000001a89c973ca0: mov    %rbx,%r8
  0x000001a89c973ca3: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169

  0x000001a89c973ca8: nopl   0x0(%rax)
  0x000001a89c973caf: callq  0x000001a89c407000  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169
                                                ;   {optimized virtual_call}
  0x000001a89c973cb4: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973cbe: incl   0x4b8(%r8)
  0x000001a89c973cc5: mov    0x80(%rsp),%rax
  0x000001a89c973ccd: jmpq   0x000001a89c973ce6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172

  0x000001a89c973cd2: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973cdc: incl   0x310(%r8)
  0x000001a89c973ce3: mov    %rsi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101

  0x000001a89c973ce6: cmp    $0x0,%rax
  0x000001a89c973cea: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973cf4: movabs $0x5c8,%rdx
  0x000001a89c973cfe: jne    0x000001a89c973d0e
  0x000001a89c973d04: movabs $0x5b8,%rdx
  0x000001a89c973d0e: mov    (%r8,%rdx,1),%rsi
  0x000001a89c973d12: lea    0x1(%rsi),%rsi
  0x000001a89c973d16: mov    %rsi,(%r8,%rdx,1)
  0x000001a89c973d1a: jne    0x000001a89c973d80  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224

  0x000001a89c973d20: mov    0x48(%rsp),%rdx
  0x000001a89c973d25: mov    0x18(%rdx),%r8d    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261

  0x000001a89c973d29: inc    %r8d
  0x000001a89c973d2c: mov    %r8d,0x18(%rdx)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266

  0x000001a89c973d30: mov    0x14(%rdx),%r8d    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271

  0x000001a89c973d34: inc    %r8d
  0x000001a89c973d37: mov    %r8d,0x14(%rdx)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277

  0x000001a89c973d3b: mov    0x1c(%rdx),%esi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281

  0x000001a89c973d3e: cmp    %esi,%r8d
  0x000001a89c973d41: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973d4b: movabs $0x660,%rsi
  0x000001a89c973d55: jg     0x000001a89c973d65
  0x000001a89c973d5b: movabs $0x650,%rsi
  0x000001a89c973d65: mov    (%r8,%rsi,1),%rdi
  0x000001a89c973d69: lea    0x1(%rdi),%rdi
  0x000001a89c973d6d: mov    %rdi,(%r8,%rsi,1)
  0x000001a89c973d71: jg     0x000001a89c973efc  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284

  0x000001a89c973d77: mov    0x60(%rsp),%ecx
  0x000001a89c973d7b: jmpq   0x000001a89c973f25  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292

  0x000001a89c973d80: mov    0x44(%rsp),%esi
  0x000001a89c973d84: mov    0x48(%rsp),%rdx
  0x000001a89c973d89: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000001a89c9740f2
  0x000001a89c973d8c: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229

  0x000001a89c973d90: cmp    $0x0,%esi
  0x000001a89c973d93: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973d9d: movabs $0x5d8,%rsi
  0x000001a89c973da7: je     0x000001a89c973db7
  0x000001a89c973dad: movabs $0x5e8,%rsi
  0x000001a89c973db7: mov    (%r8,%rsi,1),%rbx
  0x000001a89c973dbb: lea    0x1(%rbx),%rbx
  0x000001a89c973dbf: mov    %rbx,(%r8,%rsi,1)
  0x000001a89c973dc3: je     0x000001a89c973e03  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236

  0x000001a89c973dc9: cmp    $0x0,%rdi
  0x000001a89c973dcd: movabs $0x1a8b73e8910,%r8  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973dd7: movabs $0x5f8,%rsi
  0x000001a89c973de1: jne    0x000001a89c973df1
  0x000001a89c973de7: movabs $0x608,%rsi
  0x000001a89c973df1: mov    (%r8,%rsi,1),%rbx
  0x000001a89c973df5: lea    0x1(%rbx),%rbx
  0x000001a89c973df9: mov    %rbx,(%r8,%rsi,1)
  0x000001a89c973dfd: jne    0x000001a89c973e38  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241

  0x000001a89c973e03: mov    0x58(%rsp),%r8
  0x000001a89c973e08: movsbl 0x398(%r15),%esi
  0x000001a89c973e10: cmp    $0x0,%esi
  0x000001a89c973e13: jne    0x000001a89c9740f7
  0x000001a89c973e19: mov    %r8,%r10
  0x000001a89c973e1c: shr    $0x3,%r10
  0x000001a89c973e20: mov    %r10d,0x14(%rax)
  0x000001a89c973e24: mov    %rax,%rsi
  0x000001a89c973e27: xor    %r8,%rsi
  0x000001a89c973e2a: shr    $0x14,%rsi
  0x000001a89c973e2e: cmp    $0x0,%rsi
  0x000001a89c973e32: jne    0x000001a89c974116  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247

  0x000001a89c973e38: mov    %rdi,0x90(%rsp)
  0x000001a89c973e40: mov    %rdx,%r8
  0x000001a89c973e43: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973e4d: mov    0x8(%r8),%r8d
  0x000001a89c973e51: shl    $0x3,%r8
  0x000001a89c973e55: cmp    0x628(%rsi),%r8
  0x000001a89c973e5c: jne    0x000001a89c973e6b
  0x000001a89c973e5e: addq   $0x1,0x630(%rsi)
  0x000001a89c973e66: jmpq   0x000001a89c973ed1
  0x000001a89c973e6b: cmp    0x638(%rsi),%r8
  0x000001a89c973e72: jne    0x000001a89c973e81
  0x000001a89c973e74: addq   $0x1,0x640(%rsi)
  0x000001a89c973e7c: jmpq   0x000001a89c973ed1
  0x000001a89c973e81: cmpq   $0x0,0x628(%rsi)
  0x000001a89c973e8c: jne    0x000001a89c973ea5
  0x000001a89c973e8e: mov    %r8,0x628(%rsi)
  0x000001a89c973e95: movq   $0x1,0x630(%rsi)
  0x000001a89c973ea0: jmpq   0x000001a89c973ed1
  0x000001a89c973ea5: cmpq   $0x0,0x638(%rsi)
  0x000001a89c973eb0: jne    0x000001a89c973ec9
  0x000001a89c973eb2: mov    %r8,0x638(%rsi)
  0x000001a89c973eb9: movq   $0x1,0x640(%rsi)
  0x000001a89c973ec4: jmpq   0x000001a89c973ed1
  0x000001a89c973ec9: addq   $0x1,0x618(%rsi)
  0x000001a89c973ed1: mov    %rax,%r8           ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253

  0x000001a89c973ed4: nop
  0x000001a89c973ed5: movabs $0xffffffffffffffff,%rax
  0x000001a89c973edf: callq  0x000001a89c407280  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253
                                                ;   {virtual_call}
  0x000001a89c973ee4: mov    0x90(%rsp),%rax
  0x000001a89c973eec: add    $0xa0,%rsp
  0x000001a89c973ef3: pop    %rbp
  0x000001a89c973ef4: mov    0x70(%r15),%r10
  0x000001a89c973ef8: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c973efb: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258

  0x000001a89c973efc: mov    %rdx,%rsi
  0x000001a89c973eff: movabs $0x1a8b73e8910,%rdi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973f09: addq   $0x1,0x670(%rdi)
  0x000001a89c973f11: mov    %rdx,%rsi
  0x000001a89c973f14: mov    %rsi,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288

  0x000001a89c973f17: callq  0x000001a89c407000  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288
                                                ;   {optimized virtual_call}
  0x000001a89c973f1c: mov    0x60(%rsp),%ecx
  0x000001a89c973f20: mov    0x48(%rsp),%rdx
  0x000001a89c973f25: mov    %rdx,%r8
  0x000001a89c973f28: movabs $0x1a8b73e8910,%rsi  ;   {metadata(method data for {method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973f32: mov    0x8(%r8),%r8d
  0x000001a89c973f36: shl    $0x3,%r8
  0x000001a89c973f3a: cmp    0x6b8(%rsi),%r8
  0x000001a89c973f41: jne    0x000001a89c973f50
  0x000001a89c973f43: addq   $0x1,0x6c0(%rsi)
  0x000001a89c973f4b: jmpq   0x000001a89c973fb6
  0x000001a89c973f50: cmp    0x6c8(%rsi),%r8
  0x000001a89c973f57: jne    0x000001a89c973f66
  0x000001a89c973f59: addq   $0x1,0x6d0(%rsi)
  0x000001a89c973f61: jmpq   0x000001a89c973fb6
  0x000001a89c973f66: cmpq   $0x0,0x6b8(%rsi)
  0x000001a89c973f71: jne    0x000001a89c973f8a
  0x000001a89c973f73: mov    %r8,0x6b8(%rsi)
  0x000001a89c973f7a: movq   $0x1,0x6c0(%rsi)
  0x000001a89c973f85: jmpq   0x000001a89c973fb6
  0x000001a89c973f8a: cmpq   $0x0,0x6c8(%rsi)
  0x000001a89c973f95: jne    0x000001a89c973fae
  0x000001a89c973f97: mov    %r8,0x6c8(%rsi)
  0x000001a89c973f9e: movq   $0x1,0x6d0(%rsi)
  0x000001a89c973fa9: jmpq   0x000001a89c973fb6
  0x000001a89c973fae: addq   $0x1,0x6a8(%rsi)
  0x000001a89c973fb6: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295

  0x000001a89c973fb9: nopl   0x0(%rax)
  0x000001a89c973fbd: movabs $0xffffffffffffffff,%rax
  0x000001a89c973fc7: callq  0x000001a89c408c60  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295
                                                ;   {virtual_call}
  0x000001a89c973fcc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c973fd6: add    $0xa0,%rsp
  0x000001a89c973fdd: pop    %rbp
  0x000001a89c973fde: mov    0x70(%r15),%r10
  0x000001a89c973fe2: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c973fe5: retq   
  0x000001a89c973fe6: movabs $0x1a8b7279a70,%r10  ;   {metadata({method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c973ff0: mov    %r10,0x8(%rsp)
  0x000001a89c973ff5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c973ffd: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c974002: jmpq   0x000001a89c9730c6
  0x000001a89c974007: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97400c: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974011: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974016: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97401b: mov    %rax,(%rsp)
  0x000001a89c97401f: callq  0x000001a89c43eda0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c974024: mov    %r8,(%rsp)
  0x000001a89c974028: callq  0x000001a89c43eda0  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c97402d: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974032: mov    %rax,(%rsp)
  0x000001a89c974036: callq  0x000001a89c4cea20  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000001a89c97403b: mov    (%rdx),%r8d
  0x000001a89c97403e: shl    $0x3,%r8
  0x000001a89c974042: cmp    $0x0,%r8
  0x000001a89c974046: je     0x000001a89c9733eb
  0x000001a89c97404c: mov    %r8,(%rsp)
  0x000001a89c974050: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c974055: jmpq   0x000001a89c9733eb
  0x000001a89c97405a: cmp    $0x0,%rax
  0x000001a89c97405e: je     0x000001a89c973409
  0x000001a89c974064: mov    %rdx,(%rsp)
  0x000001a89c974068: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c97406d: jmpq   0x000001a89c973409
  0x000001a89c974072: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974077: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97407c: mov    %rsi,(%rsp)
  0x000001a89c974080: callq  0x000001a89c4ceca0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c974085: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97408a: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97408f: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974094: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c974099: movabs $0x1a8b7279a70,%r10  ;   {metadata({method} {0x000001a8b7279a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a89c9740a3: mov    %r10,0x8(%rsp)
  0x000001a89c9740a8: movq   $0xdb,(%rsp)
  0x000001a89c9740b0: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9740b5: jmpq   0x000001a89c973ae8
  0x000001a89c9740ba: mov    0x18(%rsi),%r8d
  0x000001a89c9740be: shl    $0x3,%r8
  0x000001a89c9740c2: cmp    $0x0,%r8
  0x000001a89c9740c6: je     0x000001a89c973c16
  0x000001a89c9740cc: mov    %r8,(%rsp)
  0x000001a89c9740d0: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c9740d5: jmpq   0x000001a89c973c16
  0x000001a89c9740da: cmp    $0x0,%rax
  0x000001a89c9740de: je     0x000001a89c973c35
  0x000001a89c9740e4: mov    %rsi,(%rsp)
  0x000001a89c9740e8: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c9740ed: jmpq   0x000001a89c973c35
  0x000001a89c9740f2: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9740f7: mov    0x14(%rax),%esi
  0x000001a89c9740fa: shl    $0x3,%rsi
  0x000001a89c9740fe: cmp    $0x0,%rsi
  0x000001a89c974102: je     0x000001a89c973e19
  0x000001a89c974108: mov    %rsi,(%rsp)
  0x000001a89c97410c: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c974111: jmpq   0x000001a89c973e19
  0x000001a89c974116: cmp    $0x0,%r8
  0x000001a89c97411a: je     0x000001a89c973e38
  0x000001a89c974120: mov    %rax,(%rsp)
  0x000001a89c974124: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c974129: jmpq   0x000001a89c973e38
  0x000001a89c97412e: nop
  0x000001a89c97412f: nop
  0x000001a89c974130: mov    0x350(%r15),%rax
  0x000001a89c974137: movabs $0x0,%r10
  0x000001a89c974141: mov    %r10,0x350(%r15)
  0x000001a89c974148: movabs $0x0,%r10
  0x000001a89c974152: mov    %r10,0x358(%r15)
  0x000001a89c974159: add    $0xa0,%rsp
  0x000001a89c974160: pop    %rbp
  0x000001a89c974161: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c974166: hlt    
  0x000001a89c974167: hlt    
  0x000001a89c974168: hlt    
  0x000001a89c974169: hlt    
  0x000001a89c97416a: hlt    
  0x000001a89c97416b: hlt    
  0x000001a89c97416c: hlt    
  0x000001a89c97416d: hlt    
  0x000001a89c97416e: hlt    
  0x000001a89c97416f: hlt    
  0x000001a89c974170: hlt    
  0x000001a89c974171: hlt    
  0x000001a89c974172: hlt    
  0x000001a89c974173: hlt    
  0x000001a89c974174: hlt    
  0x000001a89c974175: hlt    
  0x000001a89c974176: hlt    
  0x000001a89c974177: hlt    
  0x000001a89c974178: hlt    
  0x000001a89c974179: hlt    
  0x000001a89c97417a: hlt    
  0x000001a89c97417b: hlt    
  0x000001a89c97417c: hlt    
  0x000001a89c97417d: hlt    
  0x000001a89c97417e: hlt    
  0x000001a89c97417f: hlt    
[Stub Code]
  0x000001a89c974180: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c974185: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97418f: jmpq   0x000001a89c97418f  ;   {runtime_call}
  0x000001a89c974194: nop
  0x000001a89c974195: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97419f: jmpq   0x000001a89c97419f  ;   {runtime_call}
  0x000001a89c9741a4: nop
  0x000001a89c9741a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741af: jmpq   0x000001a89c9741af  ;   {runtime_call}
  0x000001a89c9741b4: nop
  0x000001a89c9741b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741bf: jmpq   0x000001a89c9741bf  ;   {runtime_call}
  0x000001a89c9741c4: nop
  0x000001a89c9741c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741cf: jmpq   0x000001a89c9741cf  ;   {runtime_call}
  0x000001a89c9741d4: nop
  0x000001a89c9741d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741df: jmpq   0x000001a89c9741df  ;   {runtime_call}
  0x000001a89c9741e4: nop
  0x000001a89c9741e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741ef: jmpq   0x000001a89c9741ef  ;   {runtime_call}
  0x000001a89c9741f4: nop
  0x000001a89c9741f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9741ff: jmpq   0x000001a89c9741ff  ;   {runtime_call}
  0x000001a89c974204: nop
  0x000001a89c974205: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97420f: jmpq   0x000001a89c97420f  ;   {runtime_call}
  0x000001a89c974214: nop
  0x000001a89c974215: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97421f: jmpq   0x000001a89c97421f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c974224: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c974229: mov    %rsp,-0x28(%rsp)
  0x000001a89c97422e: sub    $0x80,%rsp
  0x000001a89c974235: mov    %rax,0x78(%rsp)
  0x000001a89c97423a: mov    %rcx,0x70(%rsp)
  0x000001a89c97423f: mov    %rdx,0x68(%rsp)
  0x000001a89c974244: mov    %rbx,0x60(%rsp)
  0x000001a89c974249: mov    %rbp,0x50(%rsp)
  0x000001a89c97424e: mov    %rsi,0x48(%rsp)
  0x000001a89c974253: mov    %rdi,0x40(%rsp)
  0x000001a89c974258: mov    %r8,0x38(%rsp)
  0x000001a89c97425d: mov    %r9,0x30(%rsp)
  0x000001a89c974262: mov    %r10,0x28(%rsp)
  0x000001a89c974267: mov    %r11,0x20(%rsp)
  0x000001a89c97426c: mov    %r12,0x18(%rsp)
  0x000001a89c974271: mov    %r13,0x10(%rsp)
  0x000001a89c974276: mov    %r14,0x8(%rsp)
  0x000001a89c97427b: mov    %r15,(%rsp)
  0x000001a89c97427f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c974289: movabs $0x1a89c974229,%rdx  ;   {internal_word}
  0x000001a89c974293: mov    %rsp,%r8
  0x000001a89c974296: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97429a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9742a4: callq  *%r10
  0x000001a89c9742a7: hlt    
[Deopt Handler Code]
  0x000001a89c9742a8: movabs $0x1a89c9742a8,%r10  ;   {section_word}
  0x000001a89c9742b2: push   %r10
  0x000001a89c9742b4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9742b9: hlt    
  0x000001a89c9742ba: hlt    
  0x000001a89c9742bb: hlt    
  0x000001a89c9742bc: hlt    
  0x000001a89c9742bd: hlt    
  0x000001a89c9742be: hlt    
  0x000001a89c9742bf: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 596 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }pc offsets: 1348 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2116 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 2588 2700 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 2972 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3156 
ImmutableOopMap{[144]=Oop }pc offsets: 3716 
ImmutableOopMap{[72]=Oop }pc offsets: 3772 
ImmutableOopMap{}pc offsets: 3948 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }pc offsets: 4002 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }pc offsets: 4012 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }pc offsets: 4017 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 4022 4027 4036 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4045 
ImmutableOopMap{[72]=Oop rax=Oop }pc offsets: 4050 4059 
ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4119 
ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }pc offsets: 4124 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }pc offsets: 4133 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }pc offsets: 4138 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }pc offsets: 4143 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }pc offsets: 4148 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }pc offsets: 4153 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 4181 
ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4247 Compiled method (c1)     238   44       3       java.util.HashMap::newNode (13 bytes)
 total in heap  [0x000001a89c974d10,0x000001a89c9753f0] = 1760
 relocation     [0x000001a89c974e88,0x000001a89c974ed0] = 72
 main code      [0x000001a89c974ee0,0x000001a89c975200] = 800
 stub code      [0x000001a89c975200,0x000001a89c975298] = 152
 metadata       [0x000001a89c975298,0x000001a89c9752b0] = 24
 scopes data    [0x000001a89c9752b0,0x000001a89c975338] = 136
 scopes pcs     [0x000001a89c975338,0x000001a89c9753e8] = 176
 dependencies   [0x000001a89c9753e8,0x000001a89c9753f0] = 8
----------------------------------------------------------------------
java/util/HashMap.newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;  [0x000001a89c974ee0, 0x000001a89c975298]  952 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b727b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/util/HashMap$Node'
  #           [sp+0x70]  (sp of caller)
  0x000001a89c974ee0: mov    0x8(%rdx),%r10d
  0x000001a89c974ee4: shl    $0x3,%r10
  0x000001a89c974ee8: cmp    %rax,%r10
  0x000001a89c974eeb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c974ef1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c974efc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c974f00: mov    %eax,-0x7000(%rsp)
  0x000001a89c974f07: push   %rbp
  0x000001a89c974f08: sub    $0x60,%rsp
  0x000001a89c974f0c: mov    %rdi,%rbx
  0x000001a89c974f0f: mov    %rsi,%r11
  0x000001a89c974f12: movabs $0x1a8b73e9208,%rsi  ;   {metadata(method data for {method} {0x000001a8b727b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000001a89c974f1c: mov    0xfc(%rsi),%edi
  0x000001a89c974f22: add    $0x8,%edi
  0x000001a89c974f25: mov    %edi,0xfc(%rsi)
  0x000001a89c974f2b: and    $0x1ff8,%edi
  0x000001a89c974f31: cmp    $0x0,%edi
  0x000001a89c974f34: je     0x000001a89c9750a3
  0x000001a89c974f3a: movabs $0x7c0021678,%rdx  ;   {metadata('java/util/HashMap$Node')}
  0x000001a89c974f44: mov    0x80(%r15),%rax
  0x000001a89c974f4b: lea    0x20(%rax),%rdi
  0x000001a89c974f4f: cmp    0x90(%r15),%rdi
  0x000001a89c974f56: ja     0x000001a89c9750c4
  0x000001a89c974f5c: mov    %rdi,0x80(%r15)
  0x000001a89c974f63: mov    0xb0(%rdx),%rcx
  0x000001a89c974f6a: mov    %rcx,(%rax)
  0x000001a89c974f6d: mov    %rdx,%rcx
  0x000001a89c974f70: shr    $0x3,%rcx
  0x000001a89c974f74: mov    %ecx,0x8(%rax)
  0x000001a89c974f77: xor    %rcx,%rcx
  0x000001a89c974f7a: mov    %ecx,0xc(%rax)
  0x000001a89c974f7d: xor    %rcx,%rcx
  0x000001a89c974f80: mov    %rcx,0x10(%rax)
  0x000001a89c974f84: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0

  0x000001a89c974f88: mov    %rax,%rsi
  0x000001a89c974f8b: movabs $0x1a8b73e9208,%rdi  ;   {metadata(method data for {method} {0x000001a8b727b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000001a89c974f95: addq   $0x1,0x138(%rdi)
  0x000001a89c974f9d: movabs $0x1a8b73e9070,%rsi  ;   {metadata(method data for {method} {0x000001a8b72d8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000001a89c974fa7: mov    0xfc(%rsi),%edi
  0x000001a89c974fad: add    $0x8,%edi
  0x000001a89c974fb0: mov    %edi,0xfc(%rsi)
  0x000001a89c974fb6: and    $0x7ffff8,%edi
  0x000001a89c974fbc: cmp    $0x0,%edi
  0x000001a89c974fbf: je     0x000001a89c9750d1
  0x000001a89c974fc5: mov    %rax,%rsi
  0x000001a89c974fc8: movabs $0x1a8b73e9070,%rdi  ;   {metadata(method data for {method} {0x000001a8b72d8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000001a89c974fd2: addq   $0x1,0x138(%rdi)
  0x000001a89c974fda: movabs $0x1a8b73432f0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c974fe4: mov    0xfc(%rsi),%edi
  0x000001a89c974fea: add    $0x8,%edi
  0x000001a89c974fed: mov    %edi,0xfc(%rsi)
  0x000001a89c974ff3: and    $0x7ffff8,%edi
  0x000001a89c974ff9: cmp    $0x0,%edi
  0x000001a89c974ffc: je     0x000001a89c9750f2
  0x000001a89c975002: mov    %r8d,0xc(%rax)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@6
                                                ; - java.util.HashMap::newNode@9

  0x000001a89c975006: movsbl 0x398(%r15),%esi
  0x000001a89c97500e: cmp    $0x0,%esi
  0x000001a89c975011: jne    0x000001a89c975113
  0x000001a89c975017: mov    %r9,%r10
  0x000001a89c97501a: shr    $0x3,%r10
  0x000001a89c97501e: mov    %r10d,0x10(%rax)
  0x000001a89c975022: mov    %rax,%rsi
  0x000001a89c975025: xor    %r9,%rsi
  0x000001a89c975028: shr    $0x14,%rsi
  0x000001a89c97502c: cmp    $0x0,%rsi
  0x000001a89c975030: jne    0x000001a89c975132  ;*putfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@11
                                                ; - java.util.HashMap::newNode@9

  0x000001a89c975036: movsbl 0x398(%r15),%esi
  0x000001a89c97503e: cmp    $0x0,%esi
  0x000001a89c975041: jne    0x000001a89c97514a
  0x000001a89c975047: mov    %rbx,%r10
  0x000001a89c97504a: shr    $0x3,%r10
  0x000001a89c97504e: mov    %r10d,0x14(%rax)
  0x000001a89c975052: mov    %rax,%rsi
  0x000001a89c975055: xor    %rbx,%rsi
  0x000001a89c975058: shr    $0x14,%rsi
  0x000001a89c97505c: cmp    $0x0,%rsi
  0x000001a89c975060: jne    0x000001a89c975169  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@16
                                                ; - java.util.HashMap::newNode@9

  0x000001a89c975066: movsbl 0x398(%r15),%esi
  0x000001a89c97506e: cmp    $0x0,%esi
  0x000001a89c975071: jne    0x000001a89c975181
  0x000001a89c975077: mov    %r11,%r10
  0x000001a89c97507a: shr    $0x3,%r10
  0x000001a89c97507e: mov    %r10d,0x18(%rax)
  0x000001a89c975082: mov    %rax,%rsi
  0x000001a89c975085: xor    %r11,%rsi
  0x000001a89c975088: shr    $0x14,%rsi
  0x000001a89c97508c: cmp    $0x0,%rsi
  0x000001a89c975090: jne    0x000001a89c9751a0  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap$Node::<init>@22
                                                ; - java.util.HashMap::newNode@9

  0x000001a89c975096: add    $0x60,%rsp
  0x000001a89c97509a: pop    %rbp
  0x000001a89c97509b: mov    0x70(%r15),%r10
  0x000001a89c97509f: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9750a2: retq   
  0x000001a89c9750a3: movabs $0x1a8b727b588,%r10  ;   {metadata({method} {0x000001a8b727b590} 'newNode' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000001a89c9750ad: mov    %r10,0x8(%rsp)
  0x000001a89c9750b2: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9750ba: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r9=Oop rbx=Oop r11=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9750bf: jmpq   0x000001a89c974f3a
  0x000001a89c9750c4: mov    %rdx,%rdx
  0x000001a89c9750c7: callq  0x000001a89c4cd400  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::newNode@0
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c9750cc: jmpq   0x000001a89c974f88
  0x000001a89c9750d1: movabs $0x1a8b72d8bc0,%r10  ;   {metadata({method} {0x000001a8b72d8bc8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' in 'java/util/HashMap$Node')}
  0x000001a89c9750db: mov    %r10,0x8(%rsp)
  0x000001a89c9750e0: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9750e8: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::<init>@-1
                                                ; - java.util.HashMap::newNode@9
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9750ed: jmpq   0x000001a89c974fc5
  0x000001a89c9750f2: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c9750fc: mov    %r10,0x8(%rsp)
  0x000001a89c975101: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c975109: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.HashMap$Node::<init>@1
                                                ; - java.util.HashMap::newNode@9
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97510e: jmpq   0x000001a89c975002
  0x000001a89c975113: mov    0x10(%rax),%esi
  0x000001a89c975116: shl    $0x3,%rsi
  0x000001a89c97511a: cmp    $0x0,%rsi
  0x000001a89c97511e: je     0x000001a89c975017
  0x000001a89c975124: mov    %rsi,(%rsp)
  0x000001a89c975128: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c97512d: jmpq   0x000001a89c975017
  0x000001a89c975132: cmp    $0x0,%r9
  0x000001a89c975136: je     0x000001a89c975036
  0x000001a89c97513c: mov    %rax,(%rsp)
  0x000001a89c975140: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c975145: jmpq   0x000001a89c975036
  0x000001a89c97514a: mov    0x14(%rax),%esi
  0x000001a89c97514d: shl    $0x3,%rsi
  0x000001a89c975151: cmp    $0x0,%rsi
  0x000001a89c975155: je     0x000001a89c975047
  0x000001a89c97515b: mov    %rsi,(%rsp)
  0x000001a89c97515f: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c975164: jmpq   0x000001a89c975047
  0x000001a89c975169: cmp    $0x0,%rbx
  0x000001a89c97516d: je     0x000001a89c975066
  0x000001a89c975173: mov    %rax,(%rsp)
  0x000001a89c975177: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c97517c: jmpq   0x000001a89c975066
  0x000001a89c975181: mov    0x18(%rax),%esi
  0x000001a89c975184: shl    $0x3,%rsi
  0x000001a89c975188: cmp    $0x0,%rsi
  0x000001a89c97518c: je     0x000001a89c975077
  0x000001a89c975192: mov    %rsi,(%rsp)
  0x000001a89c975196: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c97519b: jmpq   0x000001a89c975077
  0x000001a89c9751a0: cmp    $0x0,%r11
  0x000001a89c9751a4: je     0x000001a89c975096
  0x000001a89c9751aa: mov    %rax,(%rsp)
  0x000001a89c9751ae: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c9751b3: jmpq   0x000001a89c975096
  0x000001a89c9751b8: nop
  0x000001a89c9751b9: nop
  0x000001a89c9751ba: mov    0x350(%r15),%rax
  0x000001a89c9751c1: movabs $0x0,%r10
  0x000001a89c9751cb: mov    %r10,0x350(%r15)
  0x000001a89c9751d2: movabs $0x0,%r10
  0x000001a89c9751dc: mov    %r10,0x358(%r15)
  0x000001a89c9751e3: add    $0x60,%rsp
  0x000001a89c9751e7: pop    %rbp
  0x000001a89c9751e8: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9751ed: hlt    
  0x000001a89c9751ee: hlt    
  0x000001a89c9751ef: hlt    
  0x000001a89c9751f0: hlt    
  0x000001a89c9751f1: hlt    
  0x000001a89c9751f2: hlt    
  0x000001a89c9751f3: hlt    
  0x000001a89c9751f4: hlt    
  0x000001a89c9751f5: hlt    
  0x000001a89c9751f6: hlt    
  0x000001a89c9751f7: hlt    
  0x000001a89c9751f8: hlt    
  0x000001a89c9751f9: hlt    
  0x000001a89c9751fa: hlt    
  0x000001a89c9751fb: hlt    
  0x000001a89c9751fc: hlt    
  0x000001a89c9751fd: hlt    
  0x000001a89c9751fe: hlt    
  0x000001a89c9751ff: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c975200: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c975205: mov    %rsp,-0x28(%rsp)
  0x000001a89c97520a: sub    $0x80,%rsp
  0x000001a89c975211: mov    %rax,0x78(%rsp)
  0x000001a89c975216: mov    %rcx,0x70(%rsp)
  0x000001a89c97521b: mov    %rdx,0x68(%rsp)
  0x000001a89c975220: mov    %rbx,0x60(%rsp)
  0x000001a89c975225: mov    %rbp,0x50(%rsp)
  0x000001a89c97522a: mov    %rsi,0x48(%rsp)
  0x000001a89c97522f: mov    %rdi,0x40(%rsp)
  0x000001a89c975234: mov    %r8,0x38(%rsp)
  0x000001a89c975239: mov    %r9,0x30(%rsp)
  0x000001a89c97523e: mov    %r10,0x28(%rsp)
  0x000001a89c975243: mov    %r11,0x20(%rsp)
  0x000001a89c975248: mov    %r12,0x18(%rsp)
  0x000001a89c97524d: mov    %r13,0x10(%rsp)
  0x000001a89c975252: mov    %r14,0x8(%rsp)
  0x000001a89c975257: mov    %r15,(%rsp)
  0x000001a89c97525b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c975265: movabs $0x1a89c975205,%rdx  ;   {internal_word}
  0x000001a89c97526f: mov    %rsp,%r8
  0x000001a89c975272: and    $0xfffffffffffffff0,%rsp
  0x000001a89c975276: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c975280: callq  *%r10
  0x000001a89c975283: hlt    
[Deopt Handler Code]
  0x000001a89c975284: movabs $0x1a89c975284,%r10  ;   {section_word}
  0x000001a89c97528e: push   %r10
  0x000001a89c975290: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c975295: hlt    
  0x000001a89c975296: hlt    
  0x000001a89c975297: hlt    

ImmutableOopMap{rdx=Oop r9=Oop rbx=Oop r11=Oop }pc offsets: 479 
ImmutableOopMap{r9=Oop rbx=Oop r11=Oop }pc offsets: 492 
ImmutableOopMap{r9=Oop rbx=Oop r11=Oop rax=Oop }pc offsets: 525 558 Compiled method (c1)     242   45       3       java.util.HashMap::afterNodeInsertion (1 bytes)
 total in heap  [0x000001a89c975410,0x000001a89c975780] = 880
 relocation     [0x000001a89c975588,0x000001a89c9755b0] = 40
 main code      [0x000001a89c9755c0,0x000001a89c975680] = 192
 stub code      [0x000001a89c975680,0x000001a89c975718] = 152
 metadata       [0x000001a89c975718,0x000001a89c975720] = 8
 scopes data    [0x000001a89c975720,0x000001a89c975738] = 24
 scopes pcs     [0x000001a89c975738,0x000001a89c975778] = 64
 dependencies   [0x000001a89c975778,0x000001a89c975780] = 8
----------------------------------------------------------------------
java/util/HashMap.afterNodeInsertion(Z)V  [0x000001a89c9755c0, 0x000001a89c975718]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b727b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = boolean
  #           [sp+0x40]  (sp of caller)
  0x000001a89c9755c0: mov    0x8(%rdx),%r10d
  0x000001a89c9755c4: shl    $0x3,%r10
  0x000001a89c9755c8: cmp    %rax,%r10
  0x000001a89c9755cb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c9755d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c9755dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c9755e0: mov    %eax,-0x7000(%rsp)
  0x000001a89c9755e7: push   %rbp
  0x000001a89c9755e8: sub    $0x30,%rsp
  0x000001a89c9755ec: movabs $0x1a8b73e9390,%rsi  ;   {metadata(method data for {method} {0x000001a8b727b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x000001a89c9755f6: mov    0xfc(%rsi),%edi
  0x000001a89c9755fc: add    $0x8,%edi
  0x000001a89c9755ff: mov    %edi,0xfc(%rsi)
  0x000001a89c975605: and    $0x1ff8,%edi
  0x000001a89c97560b: cmp    $0x0,%edi
  0x000001a89c97560e: je     0x000001a89c975621  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::afterNodeInsertion@0

  0x000001a89c975614: add    $0x30,%rsp
  0x000001a89c975618: pop    %rbp
  0x000001a89c975619: mov    0x70(%r15),%r10
  0x000001a89c97561d: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c975620: retq   
  0x000001a89c975621: movabs $0x1a8b727b960,%r10  ;   {metadata({method} {0x000001a8b727b968} 'afterNodeInsertion' '(Z)V' in 'java/util/HashMap')}
  0x000001a89c97562b: mov    %r10,0x8(%rsp)
  0x000001a89c975630: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c975638: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97563d: jmp    0x000001a89c975614
  0x000001a89c97563f: nop
  0x000001a89c975640: nop
  0x000001a89c975641: mov    0x350(%r15),%rax
  0x000001a89c975648: movabs $0x0,%r10
  0x000001a89c975652: mov    %r10,0x350(%r15)
  0x000001a89c975659: movabs $0x0,%r10
  0x000001a89c975663: mov    %r10,0x358(%r15)
  0x000001a89c97566a: add    $0x30,%rsp
  0x000001a89c97566e: pop    %rbp
  0x000001a89c97566f: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c975674: hlt    
  0x000001a89c975675: hlt    
  0x000001a89c975676: hlt    
  0x000001a89c975677: hlt    
  0x000001a89c975678: hlt    
  0x000001a89c975679: hlt    
  0x000001a89c97567a: hlt    
  0x000001a89c97567b: hlt    
  0x000001a89c97567c: hlt    
  0x000001a89c97567d: hlt    
  0x000001a89c97567e: hlt    
  0x000001a89c97567f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c975680: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c975685: mov    %rsp,-0x28(%rsp)
  0x000001a89c97568a: sub    $0x80,%rsp
  0x000001a89c975691: mov    %rax,0x78(%rsp)
  0x000001a89c975696: mov    %rcx,0x70(%rsp)
  0x000001a89c97569b: mov    %rdx,0x68(%rsp)
  0x000001a89c9756a0: mov    %rbx,0x60(%rsp)
  0x000001a89c9756a5: mov    %rbp,0x50(%rsp)
  0x000001a89c9756aa: mov    %rsi,0x48(%rsp)
  0x000001a89c9756af: mov    %rdi,0x40(%rsp)
  0x000001a89c9756b4: mov    %r8,0x38(%rsp)
  0x000001a89c9756b9: mov    %r9,0x30(%rsp)
  0x000001a89c9756be: mov    %r10,0x28(%rsp)
  0x000001a89c9756c3: mov    %r11,0x20(%rsp)
  0x000001a89c9756c8: mov    %r12,0x18(%rsp)
  0x000001a89c9756cd: mov    %r13,0x10(%rsp)
  0x000001a89c9756d2: mov    %r14,0x8(%rsp)
  0x000001a89c9756d7: mov    %r15,(%rsp)
  0x000001a89c9756db: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9756e5: movabs $0x1a89c975685,%rdx  ;   {internal_word}
  0x000001a89c9756ef: mov    %rsp,%r8
  0x000001a89c9756f2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9756f6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c975700: callq  *%r10
  0x000001a89c975703: hlt    
[Deopt Handler Code]
  0x000001a89c975704: movabs $0x1a89c975704,%r10  ;   {section_word}
  0x000001a89c97570e: push   %r10
  0x000001a89c975710: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c975715: hlt    
  0x000001a89c975716: hlt    
  0x000001a89c975717: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 125 Compiled method (c1)     244   47       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a8a3ea1210,0x000001a8a3ea1540] = 816
 relocation     [0x000001a8a3ea1388,0x000001a8a3ea13b0] = 40
 main code      [0x000001a8a3ea13c0,0x000001a8a3ea1440] = 128
 stub code      [0x000001a8a3ea1440,0x000001a8a3ea14d8] = 152
 metadata       [0x000001a8a3ea14d8,0x000001a8a3ea14e0] = 8
 scopes data    [0x000001a8a3ea14e0,0x000001a8a3ea14f8] = 24
 scopes pcs     [0x000001a8a3ea14f8,0x000001a8a3ea1538] = 64
 dependencies   [0x000001a8a3ea1538,0x000001a8a3ea1540] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a8a3ea13c0, 0x000001a8a3ea14d8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000001a8a3ea13c0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea13c4: shl    $0x3,%r10
  0x000001a8a3ea13c8: cmp    %rax,%r10
  0x000001a8a3ea13cb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea13d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a8a3ea13dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea13e0: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea13e7: push   %rbp
  0x000001a8a3ea13e8: sub    $0x50,%rsp
  0x000001a8a3ea13ec: mov    %rdx,%rcx          ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a8a3ea13ef: mov    %rdx,0x40(%rsp)
  0x000001a8a3ea13f4: callq  0x000001a89c4cce00  ; ImmutableOopMap{[64]=Oop }
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0
                                                ;   {runtime_call register_finalizer Runtime1 stub}
  0x000001a8a3ea13f9: add    $0x50,%rsp
  0x000001a8a3ea13fd: pop    %rbp
  0x000001a8a3ea13fe: mov    0x70(%r15),%r10
  0x000001a8a3ea1402: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea1405: retq   
  0x000001a8a3ea1406: nop
  0x000001a8a3ea1407: nop
  0x000001a8a3ea1408: mov    0x350(%r15),%rax
  0x000001a8a3ea140f: movabs $0x0,%r10
  0x000001a8a3ea1419: mov    %r10,0x350(%r15)
  0x000001a8a3ea1420: movabs $0x0,%r10
  0x000001a8a3ea142a: mov    %r10,0x358(%r15)
  0x000001a8a3ea1431: add    $0x50,%rsp
  0x000001a8a3ea1435: pop    %rbp
  0x000001a8a3ea1436: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a8a3ea143b: hlt    
  0x000001a8a3ea143c: hlt    
  0x000001a8a3ea143d: hlt    
  0x000001a8a3ea143e: hlt    
  0x000001a8a3ea143f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea1440: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a8a3ea1445: mov    %rsp,-0x28(%rsp)
  0x000001a8a3ea144a: sub    $0x80,%rsp
  0x000001a8a3ea1451: mov    %rax,0x78(%rsp)
  0x000001a8a3ea1456: mov    %rcx,0x70(%rsp)
  0x000001a8a3ea145b: mov    %rdx,0x68(%rsp)
  0x000001a8a3ea1460: mov    %rbx,0x60(%rsp)
  0x000001a8a3ea1465: mov    %rbp,0x50(%rsp)
  0x000001a8a3ea146a: mov    %rsi,0x48(%rsp)
  0x000001a8a3ea146f: mov    %rdi,0x40(%rsp)
  0x000001a8a3ea1474: mov    %r8,0x38(%rsp)
  0x000001a8a3ea1479: mov    %r9,0x30(%rsp)
  0x000001a8a3ea147e: mov    %r10,0x28(%rsp)
  0x000001a8a3ea1483: mov    %r11,0x20(%rsp)
  0x000001a8a3ea1488: mov    %r12,0x18(%rsp)
  0x000001a8a3ea148d: mov    %r13,0x10(%rsp)
  0x000001a8a3ea1492: mov    %r14,0x8(%rsp)
  0x000001a8a3ea1497: mov    %r15,(%rsp)
  0x000001a8a3ea149b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a8a3ea14a5: movabs $0x1a8a3ea1445,%rdx  ;   {internal_word}
  0x000001a8a3ea14af: mov    %rsp,%r8
  0x000001a8a3ea14b2: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea14b6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a8a3ea14c0: callq  *%r10
  0x000001a8a3ea14c3: hlt    
[Deopt Handler Code]
  0x000001a8a3ea14c4: movabs $0x1a8a3ea14c4,%r10  ;   {section_word}
  0x000001a8a3ea14ce: push   %r10
  0x000001a8a3ea14d0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea14d5: hlt    
  0x000001a8a3ea14d6: hlt    
  0x000001a8a3ea14d7: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 57 Compiled method (c1)     245    3       3       java.lang.String::coder (15 bytes)
 total in heap  [0x000001a89c975790,0x000001a89c975b60] = 976
 relocation     [0x000001a89c975908,0x000001a89c975938] = 48
 main code      [0x000001a89c975940,0x000001a89c975a20] = 224
 stub code      [0x000001a89c975a20,0x000001a89c975ab8] = 152
 metadata       [0x000001a89c975ab8,0x000001a89c975ac0] = 8
 scopes data    [0x000001a89c975ac0,0x000001a89c975ae8] = 40
 scopes pcs     [0x000001a89c975ae8,0x000001a89c975b58] = 112
 dependencies   [0x000001a89c975b58,0x000001a89c975b60] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x000001a89c975940, 0x000001a89c975ab8]  376 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c975940: mov    0x8(%rdx),%r10d
  0x000001a89c975944: shl    $0x3,%r10
  0x000001a89c975948: cmp    %rax,%r10
  0x000001a89c97594b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c975951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97595c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c975960: mov    %eax,-0x7000(%rsp)
  0x000001a89c975967: push   %rbp
  0x000001a89c975968: sub    $0x30,%rsp
  0x000001a89c97596c: movabs $0x1a8b7393c08,%rax  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c975976: mov    0xfc(%rax),%esi
  0x000001a89c97597c: add    $0x8,%esi
  0x000001a89c97597f: mov    %esi,0xfc(%rax)
  0x000001a89c975985: and    $0x1ff8,%esi
  0x000001a89c97598b: cmp    $0x0,%esi
  0x000001a89c97598e: je     0x000001a89c9759cb  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0

  0x000001a89c975994: movabs $0x1a8b7393c08,%rax  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97599e: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3

  0x000001a89c9759a4: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7

  0x000001a89c9759a8: movabs $0x1a8b7393c08,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c9759b2: incl   0x158(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10

  0x000001a89c9759b8: shl    $0x18,%eax
  0x000001a89c9759bb: sar    $0x18,%eax
  0x000001a89c9759be: add    $0x30,%rsp
  0x000001a89c9759c2: pop    %rbp
  0x000001a89c9759c3: mov    0x70(%r15),%r10
  0x000001a89c9759c7: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9759ca: retq   
  0x000001a89c9759cb: movabs $0x1a8b7177dc8,%r10  ;   {metadata({method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c9759d5: mov    %r10,0x8(%rsp)
  0x000001a89c9759da: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9759e2: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9759e7: jmp    0x000001a89c975994
  0x000001a89c9759e9: nop
  0x000001a89c9759ea: nop
  0x000001a89c9759eb: mov    0x350(%r15),%rax
  0x000001a89c9759f2: movabs $0x0,%r10
  0x000001a89c9759fc: mov    %r10,0x350(%r15)
  0x000001a89c975a03: movabs $0x0,%r10
  0x000001a89c975a0d: mov    %r10,0x358(%r15)
  0x000001a89c975a14: add    $0x30,%rsp
  0x000001a89c975a18: pop    %rbp
  0x000001a89c975a19: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c975a1e: hlt    
  0x000001a89c975a1f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c975a20: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c975a25: mov    %rsp,-0x28(%rsp)
  0x000001a89c975a2a: sub    $0x80,%rsp
  0x000001a89c975a31: mov    %rax,0x78(%rsp)
  0x000001a89c975a36: mov    %rcx,0x70(%rsp)
  0x000001a89c975a3b: mov    %rdx,0x68(%rsp)
  0x000001a89c975a40: mov    %rbx,0x60(%rsp)
  0x000001a89c975a45: mov    %rbp,0x50(%rsp)
  0x000001a89c975a4a: mov    %rsi,0x48(%rsp)
  0x000001a89c975a4f: mov    %rdi,0x40(%rsp)
  0x000001a89c975a54: mov    %r8,0x38(%rsp)
  0x000001a89c975a59: mov    %r9,0x30(%rsp)
  0x000001a89c975a5e: mov    %r10,0x28(%rsp)
  0x000001a89c975a63: mov    %r11,0x20(%rsp)
  0x000001a89c975a68: mov    %r12,0x18(%rsp)
  0x000001a89c975a6d: mov    %r13,0x10(%rsp)
  0x000001a89c975a72: mov    %r14,0x8(%rsp)
  0x000001a89c975a77: mov    %r15,(%rsp)
  0x000001a89c975a7b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c975a85: movabs $0x1a89c975a25,%rdx  ;   {internal_word}
  0x000001a89c975a8f: mov    %rsp,%r8
  0x000001a89c975a92: and    $0xfffffffffffffff0,%rsp
  0x000001a89c975a96: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c975aa0: callq  *%r10
  0x000001a89c975aa3: hlt    
[Deopt Handler Code]
  0x000001a89c975aa4: movabs $0x1a89c975aa4,%r10  ;   {section_word}
  0x000001a89c975aae: push   %r10
  0x000001a89c975ab0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c975ab5: hlt    
  0x000001a89c975ab6: hlt    
  0x000001a89c975ab7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 167 Compiled method (c1)     249   27   !   3       java.util.concurrent.ConcurrentHashMap::putVal (433 bytes)
 total in heap  [0x000001a89c975b90,0x000001a89c9793e0] = 14416
 relocation     [0x000001a89c975d08,0x000001a89c975f18] = 528
 main code      [0x000001a89c975f20,0x000001a89c977fa0] = 8320
 stub code      [0x000001a89c977fa0,0x000001a89c9780e0] = 320
 oops           [0x000001a89c9780e0,0x000001a89c9780e8] = 8
 metadata       [0x000001a89c9780e8,0x000001a89c978128] = 64
 scopes data    [0x000001a89c978128,0x000001a89c978970] = 2120
 scopes pcs     [0x000001a89c978970,0x000001a89c979270] = 2304
 dependencies   [0x000001a89c979270,0x000001a89c979278] = 8
 handler table  [0x000001a89c979278,0x000001a89c9793b0] = 312
 nul chk table  [0x000001a89c9793b0,0x000001a89c9793e0] = 48
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x000001a89c975f20, 0x000001a89c9780e0]  8640 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi       = boolean
  #           [sp+0x140]  (sp of caller)
  0x000001a89c975f20: mov    0x8(%rdx),%r10d
  0x000001a89c975f24: shl    $0x3,%r10
  0x000001a89c975f28: cmp    %rax,%r10
  0x000001a89c975f2b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c975f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c975f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c975f40: mov    %eax,-0x7000(%rsp)
  0x000001a89c975f47: push   %rbp
  0x000001a89c975f48: sub    $0x130,%rsp
  0x000001a89c975f4f: mov    %rdx,0xa8(%rsp)
  0x000001a89c975f57: mov    %r8,0xb0(%rsp)
  0x000001a89c975f5f: mov    %r9,0xb8(%rsp)
  0x000001a89c975f67: mov    %edi,0xc0(%rsp)
  0x000001a89c975f6e: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c975f78: mov    0xfc(%rsi),%ebx
  0x000001a89c975f7e: add    $0x8,%ebx
  0x000001a89c975f81: mov    %ebx,0xfc(%rsi)
  0x000001a89c975f87: and    $0x1ff8,%ebx
  0x000001a89c975f8d: cmp    $0x0,%ebx
  0x000001a89c975f90: je     0x000001a89c977aab  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0

  0x000001a89c975f96: cmp    $0x0,%r8
  0x000001a89c975f9a: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c975fa4: movabs $0x138,%rbx
  0x000001a89c975fae: je     0x000001a89c975fbe
  0x000001a89c975fb4: movabs $0x148,%rbx
  0x000001a89c975fbe: mov    (%rsi,%rbx,1),%rax
  0x000001a89c975fc2: lea    0x1(%rax),%rax
  0x000001a89c975fc6: mov    %rax,(%rsi,%rbx,1)
  0x000001a89c975fca: je     0x000001a89c9779c4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1

  0x000001a89c975fd0: cmp    $0x0,%r9
  0x000001a89c975fd4: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c975fde: movabs $0x168,%rbx
  0x000001a89c975fe8: je     0x000001a89c975ff8
  0x000001a89c975fee: movabs $0x158,%rbx
  0x000001a89c975ff8: mov    (%rsi,%rbx,1),%rax
  0x000001a89c975ffc: lea    0x1(%rax),%rax
  0x000001a89c976000: mov    %rax,(%rsi,%rbx,1)
  0x000001a89c976004: je     0x000001a89c9779c4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5

  0x000001a89c97600a: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000001a89c977acc
  0x000001a89c97600d: mov    %r8,%rsi
  0x000001a89c976010: movabs $0x1a8b73ddce0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97601a: mov    0x8(%rsi),%esi
  0x000001a89c97601d: shl    $0x3,%rsi
  0x000001a89c976021: cmp    0x198(%rbx),%rsi
  0x000001a89c976028: jne    0x000001a89c976037
  0x000001a89c97602a: addq   $0x1,0x1a0(%rbx)
  0x000001a89c976032: jmpq   0x000001a89c97609d
  0x000001a89c976037: cmp    0x1a8(%rbx),%rsi
  0x000001a89c97603e: jne    0x000001a89c97604d
  0x000001a89c976040: addq   $0x1,0x1b0(%rbx)
  0x000001a89c976048: jmpq   0x000001a89c97609d
  0x000001a89c97604d: cmpq   $0x0,0x198(%rbx)
  0x000001a89c976058: jne    0x000001a89c976071
  0x000001a89c97605a: mov    %rsi,0x198(%rbx)
  0x000001a89c976061: movq   $0x1,0x1a0(%rbx)
  0x000001a89c97606c: jmpq   0x000001a89c97609d
  0x000001a89c976071: cmpq   $0x0,0x1a8(%rbx)
  0x000001a89c97607c: jne    0x000001a89c976095
  0x000001a89c97607e: mov    %rsi,0x1a8(%rbx)
  0x000001a89c976085: movq   $0x1,0x1b0(%rbx)
  0x000001a89c976090: jmpq   0x000001a89c97609d
  0x000001a89c976095: addq   $0x1,0x188(%rbx)
  0x000001a89c97609d: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17

  0x000001a89c9760a0: nopl   0x0(%rax,%rax,1)
  0x000001a89c9760a5: movabs $0xffffffffffffffff,%rax
  0x000001a89c9760af: callq  0x000001a89c407280  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {virtual_call}
  0x000001a89c9760b4: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9760be: addq   $0x1,0x1c0(%rdx)
  0x000001a89c9760c6: movabs $0x1a8b73ddb88,%rdx  ;   {metadata(method data for {method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9760d0: mov    0xfc(%rdx),%esi
  0x000001a89c9760d6: add    $0x8,%esi
  0x000001a89c9760d9: mov    %esi,0xfc(%rdx)
  0x000001a89c9760df: and    $0x7ffff8,%esi
  0x000001a89c9760e5: cmp    $0x0,%esi
  0x000001a89c9760e8: je     0x000001a89c977ad1
  0x000001a89c9760ee: mov    %rax,%rdx
  0x000001a89c9760f1: shr    $0x10,%edx
  0x000001a89c9760f4: xor    %rax,%rdx
  0x000001a89c9760f7: and    $0x7fffffff,%edx
  0x000001a89c9760fd: mov    %edx,0xc8(%rsp)
  0x000001a89c976104: mov    0xa8(%rsp),%rsi
  0x000001a89c97610c: mov    0x28(%rsi),%edi
  0x000001a89c97610f: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29

  0x000001a89c976113: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34

  0x000001a89c976118: mov    %ebx,0xc4(%rsp)
  0x000001a89c97611f: nop
  0x000001a89c976120: cmp    $0x0,%rdi
  0x000001a89c976124: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97612e: movabs $0x1d0,%r11
  0x000001a89c976138: je     0x000001a89c976148
  0x000001a89c97613e: movabs $0x1e0,%r11
  0x000001a89c976148: mov    (%rcx,%r11,1),%r13
  0x000001a89c97614c: lea    0x1(%r13),%r13
  0x000001a89c976150: mov    %r13,(%rcx,%r11,1)
  0x000001a89c976154: je     0x000001a89c976196  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36

  0x000001a89c97615a: mov    0xc(%rdi),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ; implicit exception: dispatches to 0x000001a89c977af2
  0x000001a89c97615d: cmp    $0x0,%ecx
  0x000001a89c976160: movabs $0x1a8b73ddce0,%r11  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97616a: movabs $0x1f0,%r13
  0x000001a89c976174: jne    0x000001a89c976184
  0x000001a89c97617a: movabs $0x200,%r13
  0x000001a89c976184: mov    (%r11,%r13,1),%r14
  0x000001a89c976188: lea    0x1(%r14),%r14
  0x000001a89c97618c: mov    %r14,(%r11,%r13,1)
  0x000001a89c976190: jne    0x000001a89c9761df  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45

  0x000001a89c976196: mov    %rsi,%rax
  0x000001a89c976199: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9761a3: addq   $0x1,0x210(%rcx)
  0x000001a89c9761ab: mov    %rsi,%rdx          ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49

  0x000001a89c9761ae: nop
  0x000001a89c9761af: callq  0x000001a89c407000  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49
                                                ;   {optimized virtual_call}
  0x000001a89c9761b4: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9761be: incl   0x220(%rcx)
  0x000001a89c9761c4: mov    0xc4(%rsp),%ebx
  0x000001a89c9761cb: mov    0xc0(%rsp),%edi
  0x000001a89c9761d2: mov    0xb8(%rsp),%r9
  0x000001a89c9761da: jmpq   0x000001a89c9777a1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54

  0x000001a89c9761df: dec    %ecx
  0x000001a89c9761e1: and    0xc8(%rsp),%ecx
  0x000001a89c9761e8: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9761f2: addq   $0x1,0x238(%rdx)
  0x000001a89c9761fa: movabs $0x1a8b73dd7a0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976204: mov    0xfc(%rdx),%esi
  0x000001a89c97620a: add    $0x8,%esi
  0x000001a89c97620d: mov    %esi,0xfc(%rdx)
  0x000001a89c976213: and    $0x7ffff8,%esi
  0x000001a89c976219: cmp    $0x0,%esi
  0x000001a89c97621c: je     0x000001a89c977af7
  0x000001a89c976222: movslq %ecx,%rdx
  0x000001a89c976225: mov    %ecx,0xe8(%rsp)
  0x000001a89c97622c: mov    $0x2,%ecx
  0x000001a89c976231: shl    %cl,%rdx
  0x000001a89c976234: movabs $0x10,%r10
  0x000001a89c97623e: add    %r10,%rdx
  0x000001a89c976241: movabs $0x1a8b73dd7a0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97624b: lea    0x170(%rsi),%rsi
  0x000001a89c976252: mov    %rdi,%rax
  0x000001a89c976255: mov    0x8(%rax),%eax
  0x000001a89c976258: shl    $0x3,%rax
  0x000001a89c97625c: xor    0x8(%rsi),%rax
  0x000001a89c976260: test   $0xfffffffffffffffc,%rax
  0x000001a89c976266: je     0x000001a89c976278
  0x000001a89c976268: test   $0x2,%rax
  0x000001a89c97626e: jne    0x000001a89c976278
  0x000001a89c976270: orq    $0x2,0x8(%rsi)
  0x000001a89c976278: movabs $0x6d1708638,%rsi  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a89c976282: movabs $0x1a8b73dd7a0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97628c: addq   $0x1,0x138(%rax)
  0x000001a89c976294: movabs $0x1a8b73dd9a8,%rsi  ;   {metadata(method data for {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c97629e: mov    0xfc(%rsi),%eax
  0x000001a89c9762a4: add    $0x8,%eax
  0x000001a89c9762a7: mov    %eax,0xfc(%rsi)
  0x000001a89c9762ad: and    $0x7ffff8,%eax
  0x000001a89c9762b3: cmp    $0x0,%eax
  0x000001a89c9762b6: je     0x000001a89c977b18
  0x000001a89c9762bc: mov    (%rdi,%rdx,1),%esi
  0x000001a89c9762bf: shl    $0x3,%rsi
  0x000001a89c9762c3: movabs $0xc,%rax
  0x000001a89c9762cd: cmp    %rax,%rdx
  0x000001a89c9762d0: jne    0x000001a89c976308
  0x000001a89c9762d6: cmp    $0x0,%rdi
  0x000001a89c9762da: je     0x000001a89c976308
  0x000001a89c9762e0: mov    0x8(%rdi),%eax
  0x000001a89c9762e3: shl    $0x3,%rax
  0x000001a89c9762e7: movsbl 0x16b(%rax),%eax
  0x000001a89c9762ee: cmp    $0x0,%eax
  0x000001a89c9762f1: je     0x000001a89c976308
  0x000001a89c9762f7: movsbl 0x398(%r15),%eax
  0x000001a89c9762ff: cmp    $0x0,%eax
  0x000001a89c976302: jne    0x000001a89c977b39
  0x000001a89c976308: cmp    $0x0,%rsi
  0x000001a89c97630c: jne    0x000001a89c976327
  0x000001a89c97630e: movabs $0x1a8b73dd7a0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976318: orl    $0x100,0x180(%rcx)
  0x000001a89c976322: jmpq   0x000001a89c9763e9
  0x000001a89c976327: movabs $0x7c001acb8,%r8   ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c976331: mov    0x8(%rsi),%ecx
  0x000001a89c976334: shl    $0x3,%rcx
  0x000001a89c976338: cmp    0x30(%rcx),%r8
  0x000001a89c97633c: jne    0x000001a89c9763cd
  0x000001a89c976342: movabs $0x1a8b73dd7a0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97634c: mov    0x8(%rsi),%r8d
  0x000001a89c976350: shl    $0x3,%r8
  0x000001a89c976354: cmp    0x198(%rcx),%r8
  0x000001a89c97635b: jne    0x000001a89c97636a
  0x000001a89c97635d: addq   $0x1,0x1a0(%rcx)
  0x000001a89c976365: jmpq   0x000001a89c9763e9
  0x000001a89c97636a: cmp    0x1a8(%rcx),%r8
  0x000001a89c976371: jne    0x000001a89c976380
  0x000001a89c976373: addq   $0x1,0x1b0(%rcx)
  0x000001a89c97637b: jmpq   0x000001a89c9763e9
  0x000001a89c976380: cmpq   $0x0,0x198(%rcx)
  0x000001a89c97638b: jne    0x000001a89c9763a4
  0x000001a89c97638d: mov    %r8,0x198(%rcx)
  0x000001a89c976394: movq   $0x1,0x1a0(%rcx)
  0x000001a89c97639f: jmpq   0x000001a89c9763e9
  0x000001a89c9763a4: cmpq   $0x0,0x1a8(%rcx)
  0x000001a89c9763af: jne    0x000001a89c9763c8
  0x000001a89c9763b1: mov    %r8,0x1a8(%rcx)
  0x000001a89c9763b8: movq   $0x1,0x1b0(%rcx)
  0x000001a89c9763c3: jmpq   0x000001a89c9763e9
  0x000001a89c9763c8: jmpq   0x000001a89c9763e9
  0x000001a89c9763cd: movabs $0x1a8b73dd7a0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9763d7: subq   $0x1,0x188(%rcx)
  0x000001a89c9763df: jmpq   0x000001a89c977b51
  0x000001a89c9763e4: jmpq   0x000001a89c9763e9  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69

  0x000001a89c9763e9: mov    %rsi,0xd0(%rsp)
  0x000001a89c9763f1: cmp    $0x0,%rsi
  0x000001a89c9763f5: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9763ff: movabs $0x248,%rcx
  0x000001a89c976409: jne    0x000001a89c976419
  0x000001a89c97640f: movabs $0x258,%rcx
  0x000001a89c976419: mov    (%rax,%rcx,1),%r8
  0x000001a89c97641d: lea    0x1(%r8),%r8
  0x000001a89c976421: mov    %r8,(%rax,%rcx,1)
  0x000001a89c976425: mov    %rdx,%r11
  0x000001a89c976428: jne    0x000001a89c97665f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75

  0x000001a89c97642e: mov    0xc8(%rsp),%edx
  0x000001a89c976435: mov    0xb8(%rsp),%r9
  0x000001a89c97643d: mov    0xb0(%rsp),%r8
  0x000001a89c976445: mov    %rdx,%r13
  0x000001a89c976448: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c976452: mov    %rdi,%r14
  0x000001a89c976455: mov    0x80(%r15),%rax
  0x000001a89c97645c: lea    0x20(%rax),%rdi
  0x000001a89c976460: cmp    0x90(%r15),%rdi
  0x000001a89c976467: ja     0x000001a89c977b5a
  0x000001a89c97646d: mov    %rdi,0x80(%r15)
  0x000001a89c976474: mov    0xb0(%rdx),%rcx
  0x000001a89c97647b: mov    %rcx,(%rax)
  0x000001a89c97647e: mov    %rdx,%rcx
  0x000001a89c976481: shr    $0x3,%rcx
  0x000001a89c976485: mov    %ecx,0x8(%rax)
  0x000001a89c976488: xor    %rcx,%rcx
  0x000001a89c97648b: mov    %ecx,0xc(%rax)
  0x000001a89c97648e: xor    %rcx,%rcx
  0x000001a89c976491: mov    %rcx,0x10(%rax)
  0x000001a89c976495: mov    %rcx,0x18(%rax)
  0x000001a89c976499: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83

  0x000001a89c97649c: mov    %rdx,%rax
  0x000001a89c97649f: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9764a9: addq   $0x1,0x268(%rsi)
  0x000001a89c9764b1: movabs $0x1a8b73deb68,%rax  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c9764bb: mov    0xfc(%rax),%esi
  0x000001a89c9764c1: add    $0x8,%esi
  0x000001a89c9764c4: mov    %esi,0xfc(%rax)
  0x000001a89c9764ca: and    $0x7ffff8,%esi
  0x000001a89c9764d0: cmp    $0x0,%esi
  0x000001a89c9764d3: je     0x000001a89c977b67
  0x000001a89c9764d9: mov    %rdx,%rax
  0x000001a89c9764dc: movabs $0x1a8b73deb68,%rsi  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c9764e6: addq   $0x1,0x138(%rsi)
  0x000001a89c9764ee: movabs $0x1a8b73432f0,%rax  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c9764f8: mov    0xfc(%rax),%esi
  0x000001a89c9764fe: add    $0x8,%esi
  0x000001a89c976501: mov    %esi,0xfc(%rax)
  0x000001a89c976507: and    $0x7ffff8,%esi
  0x000001a89c97650d: cmp    $0x0,%esi
  0x000001a89c976510: je     0x000001a89c977b88
  0x000001a89c976516: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x000001a89c97651a: movsbl 0x398(%r15),%eax
  0x000001a89c976522: cmp    $0x0,%eax
  0x000001a89c976525: jne    0x000001a89c977ba9
  0x000001a89c97652b: mov    %r8,%r10
  0x000001a89c97652e: shr    $0x3,%r10
  0x000001a89c976532: mov    %r10d,0x10(%rdx)
  0x000001a89c976536: mov    %rdx,%rax
  0x000001a89c976539: xor    %r8,%rax
  0x000001a89c97653c: shr    $0x14,%rax
  0x000001a89c976540: cmp    $0x0,%rax
  0x000001a89c976544: jne    0x000001a89c977bc8
  0x000001a89c97654a: movsbl 0x398(%r15),%eax
  0x000001a89c976552: cmp    $0x0,%eax
  0x000001a89c976555: jne    0x000001a89c977be0
  0x000001a89c97655b: mov    %r9,%r10
  0x000001a89c97655e: shr    $0x3,%r10
  0x000001a89c976562: mov    %r10d,0x14(%rdx)
  0x000001a89c976566: mov    %rdx,%rax
  0x000001a89c976569: xor    %r9,%rax
  0x000001a89c97656c: shr    $0x14,%rax
  0x000001a89c976570: cmp    $0x0,%rax
  0x000001a89c976574: jne    0x000001a89c977bff
  0x000001a89c97657a: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x000001a89c976580: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97658a: addq   $0x1,0x278(%rax)
  0x000001a89c976592: movabs $0x1a8b73df3b8,%rax  ;   {metadata(method data for {method} {0x000001a8b7283300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97659c: mov    0xfc(%rax),%esi
  0x000001a89c9765a2: add    $0x8,%esi
  0x000001a89c9765a5: mov    %esi,0xfc(%rax)
  0x000001a89c9765ab: and    $0x7ffff8,%esi
  0x000001a89c9765b1: cmp    $0x0,%esi
  0x000001a89c9765b4: je     0x000001a89c977c17
  0x000001a89c9765ba: lea    (%r14,%r11,1),%rsi
  0x000001a89c9765be: movsbl 0x398(%r15),%eax
  0x000001a89c9765c6: cmp    $0x0,%eax
  0x000001a89c9765c9: jne    0x000001a89c977c38
  0x000001a89c9765cf: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c9765d9: shr    $0x3,%rax
  0x000001a89c9765dd: mov    %rdx,%r10
  0x000001a89c9765e0: shr    $0x3,%r10
  0x000001a89c9765e4: lock cmpxchg %r10d,(%rsi)
  0x000001a89c9765e9: mov    $0x1,%edi
  0x000001a89c9765ee: je     0x000001a89c9765f9
  0x000001a89c9765f4: mov    $0x0,%edi
  0x000001a89c9765f9: mov    %rsi,%rbx
  0x000001a89c9765fc: xor    %rdx,%rbx
  0x000001a89c9765ff: shr    $0x14,%rbx
  0x000001a89c976603: cmp    $0x0,%rbx
  0x000001a89c976607: jne    0x000001a89c977c56  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94

  0x000001a89c97660d: and    $0x1,%edi
  0x000001a89c976610: cmp    $0x0,%edi
  0x000001a89c976613: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97661d: movabs $0x298,%rsi
  0x000001a89c976627: jne    0x000001a89c976637
  0x000001a89c97662d: movabs $0x288,%rsi
  0x000001a89c976637: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c97663b: lea    0x1(%rdi),%rdi
  0x000001a89c97663f: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c976643: jne    0x000001a89c977900  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97

  0x000001a89c976649: mov    %r14,%rax
  0x000001a89c97664c: mov    0xc4(%rsp),%ebx
  0x000001a89c976653: mov    0xc0(%rsp),%edi
  0x000001a89c97665a: jmpq   0x000001a89c9777a1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a89c97665f: mov    %rdi,%r14
  0x000001a89c976662: mov    0xc8(%rsp),%r13d
  0x000001a89c97666a: mov    0xb8(%rsp),%r9
  0x000001a89c976672: mov    0xb0(%rsp),%r8
  0x000001a89c97667a: mov    0xc(%rsi),%edi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ; implicit exception: dispatches to 0x000001a89c977c6e
  0x000001a89c97667d: cmp    $0xffffffff,%edi
  0x000001a89c976680: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97668a: movabs $0x2c0,%rax
  0x000001a89c976694: jne    0x000001a89c9766a4
  0x000001a89c97669a: movabs $0x2d0,%rax
  0x000001a89c9766a4: mov    (%rdx,%rax,1),%rcx
  0x000001a89c9766a8: lea    0x1(%rcx),%rcx
  0x000001a89c9766ac: mov    %rcx,(%rdx,%rax,1)
  0x000001a89c9766b0: jne    0x000001a89c976710  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112

  0x000001a89c9766b6: mov    0xa8(%rsp),%rdi
  0x000001a89c9766be: movabs $0x1a8b73ddce0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9766c8: addq   $0x1,0x2e0(%rbx)
  0x000001a89c9766d0: mov    %r14,%r8
  0x000001a89c9766d3: mov    %rsi,%r9
  0x000001a89c9766d6: mov    0xa8(%rsp),%rdx    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120

  0x000001a89c9766de: nop
  0x000001a89c9766df: callq  0x000001a89c407000  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120
                                                ;   {optimized virtual_call}
  0x000001a89c9766e4: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9766ee: incl   0x318(%r8)
  0x000001a89c9766f5: mov    0xc4(%rsp),%ebx
  0x000001a89c9766fc: mov    0xc0(%rsp),%edi
  0x000001a89c976703: mov    0xb8(%rsp),%r9
  0x000001a89c97670b: jmpq   0x000001a89c9777a1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125

  0x000001a89c976710: mov    0xc0(%rsp),%eax
  0x000001a89c976717: cmp    $0x0,%eax
  0x000001a89c97671a: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976724: movabs $0x340,%rdx
  0x000001a89c97672e: jne    0x000001a89c97673e
  0x000001a89c976734: movabs $0x330,%rdx
  0x000001a89c97673e: mov    (%r8,%rdx,1),%rcx
  0x000001a89c976742: lea    0x1(%rcx),%rcx
  0x000001a89c976746: mov    %rcx,(%r8,%rdx,1)
  0x000001a89c97674a: jne    0x000001a89c97676c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129

  0x000001a89c976750: mov    %edi,0xcc(%rsp)
  0x000001a89c976757: mov    %r11,0xe0(%rsp)
  0x000001a89c97675f: mov    %r14,0xd8(%rsp)
  0x000001a89c976767: jmpq   0x000001a89c9769a6  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x000001a89c97676c: cmp    0xc8(%rsp),%edi
  0x000001a89c976773: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97677d: movabs $0x360,%rdx
  0x000001a89c976787: je     0x000001a89c976797
  0x000001a89c97678d: movabs $0x350,%rdx
  0x000001a89c976797: mov    (%r8,%rdx,1),%rcx
  0x000001a89c97679b: lea    0x1(%rcx),%rcx
  0x000001a89c97679f: mov    %rcx,(%r8,%rdx,1)
  0x000001a89c9767a3: je     0x000001a89c9767c5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136

  0x000001a89c9767a9: mov    %edi,0xcc(%rsp)
  0x000001a89c9767b0: mov    %r11,0xe0(%rsp)
  0x000001a89c9767b8: mov    %r14,0xd8(%rsp)
  0x000001a89c9767c0: jmpq   0x000001a89c9769a6  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x000001a89c9767c5: mov    0xb0(%rsp),%r8
  0x000001a89c9767cd: mov    0x10(%rsi),%edx
  0x000001a89c9767d0: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141

  0x000001a89c9767d4: cmp    %r8,%rdx
  0x000001a89c9767d7: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9767e1: movabs $0x380,%r9
  0x000001a89c9767eb: jne    0x000001a89c9767fb
  0x000001a89c9767f1: movabs $0x370,%r9
  0x000001a89c9767fb: mov    (%rcx,%r9,1),%r13
  0x000001a89c9767ff: lea    0x1(%r13),%r13
  0x000001a89c976803: mov    %r13,(%rcx,%r9,1)
  0x000001a89c976807: jne    0x000001a89c976829  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148

  0x000001a89c97680d: mov    %edi,0xcc(%rsp)
  0x000001a89c976814: mov    %r11,0xe0(%rsp)
  0x000001a89c97681c: mov    %r14,0xd8(%rsp)
  0x000001a89c976824: jmpq   0x000001a89c976965  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165

  0x000001a89c976829: cmp    $0x0,%rdx
  0x000001a89c97682d: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976837: movabs $0x390,%r9
  0x000001a89c976841: je     0x000001a89c976851
  0x000001a89c976847: movabs $0x3a0,%r9
  0x000001a89c976851: mov    (%rcx,%r9,1),%r13
  0x000001a89c976855: lea    0x1(%r13),%r13
  0x000001a89c976859: mov    %r13,(%rcx,%r9,1)
  0x000001a89c97685d: mov    %edi,0xcc(%rsp)
  0x000001a89c976864: mov    %r11,0xe0(%rsp)
  0x000001a89c97686c: mov    %r14,0xd8(%rsp)
  0x000001a89c976874: je     0x000001a89c9769a6  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153

  0x000001a89c97687a: mov    %r8,%r11
  0x000001a89c97687d: movabs $0x1a8b73ddce0,%r13  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976887: mov    0x8(%r11),%r11d
  0x000001a89c97688b: shl    $0x3,%r11
  0x000001a89c97688f: cmp    0x3c0(%r13),%r11
  0x000001a89c976896: jne    0x000001a89c9768a5
  0x000001a89c976898: addq   $0x1,0x3c8(%r13)
  0x000001a89c9768a0: jmpq   0x000001a89c97690b
  0x000001a89c9768a5: cmp    0x3d0(%r13),%r11
  0x000001a89c9768ac: jne    0x000001a89c9768bb
  0x000001a89c9768ae: addq   $0x1,0x3d8(%r13)
  0x000001a89c9768b6: jmpq   0x000001a89c97690b
  0x000001a89c9768bb: cmpq   $0x0,0x3c0(%r13)
  0x000001a89c9768c6: jne    0x000001a89c9768df
  0x000001a89c9768c8: mov    %r11,0x3c0(%r13)
  0x000001a89c9768cf: movq   $0x1,0x3c8(%r13)
  0x000001a89c9768da: jmpq   0x000001a89c97690b
  0x000001a89c9768df: cmpq   $0x0,0x3d0(%r13)
  0x000001a89c9768ea: jne    0x000001a89c976903
  0x000001a89c9768ec: mov    %r11,0x3d0(%r13)
  0x000001a89c9768f3: movq   $0x1,0x3d8(%r13)
  0x000001a89c9768fe: jmpq   0x000001a89c97690b
  0x000001a89c976903: addq   $0x1,0x3b0(%r13)
  0x000001a89c97690b: mov    %r8,%r11
  0x000001a89c97690e: mov    %rdx,%r8
  0x000001a89c976911: mov    %r11,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159

  0x000001a89c976914: nop
  0x000001a89c976915: movabs $0xffffffffffffffff,%rax
  0x000001a89c97691f: callq  0x000001a89c407280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159
                                                ;   {virtual_call}
  0x000001a89c976924: cmp    $0x0,%eax
  0x000001a89c976927: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976931: movabs $0x3e8,%r8
  0x000001a89c97693b: je     0x000001a89c97694b
  0x000001a89c976941: movabs $0x3f8,%r8
  0x000001a89c97694b: mov    (%rax,%r8,1),%rdx
  0x000001a89c97694f: lea    0x1(%rdx),%rdx
  0x000001a89c976953: mov    %rdx,(%rax,%r8,1)
  0x000001a89c976957: mov    0xd0(%rsp),%rsi
  0x000001a89c97695f: je     0x000001a89c9769a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162

  0x000001a89c976965: mov    0x14(%rsi),%edi
  0x000001a89c976968: shl    $0x3,%rdi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167

  0x000001a89c97696c: cmp    $0x0,%rdi
  0x000001a89c976970: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97697a: movabs $0x418,%r8
  0x000001a89c976984: jne    0x000001a89c976994
  0x000001a89c97698a: movabs $0x408,%r8
  0x000001a89c976994: mov    (%rax,%r8,1),%rdx
  0x000001a89c976998: lea    0x1(%rdx),%rdx
  0x000001a89c97699c: mov    %rdx,(%rax,%r8,1)
  0x000001a89c9769a0: jne    0x000001a89c9778ed  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173

  0x000001a89c9769a6: lea    0x118(%rsp),%r8
  0x000001a89c9769ae: mov    %rsi,0x8(%r8)
  0x000001a89c9769b2: mov    (%rsi),%rax
  0x000001a89c9769b5: mov    %rax,%rdx
  0x000001a89c9769b8: and    $0x7,%rdx
  0x000001a89c9769bc: cmp    $0x5,%rdx
  0x000001a89c9769c0: jne    0x000001a89c976a47
  0x000001a89c9769c6: mov    0x8(%rsi),%edx
  0x000001a89c9769c9: shl    $0x3,%rdx
  0x000001a89c9769cd: mov    0xb0(%rdx),%rdx
  0x000001a89c9769d4: or     %r15,%rdx
  0x000001a89c9769d7: xor    %rax,%rdx
  0x000001a89c9769da: and    $0xffffffffffffff87,%rdx
  0x000001a89c9769de: je     0x000001a89c976a6f
  0x000001a89c9769e4: test   $0x7,%rdx
  0x000001a89c9769eb: jne    0x000001a89c976a34
  0x000001a89c9769ed: test   $0x300,%rdx
  0x000001a89c9769f4: jne    0x000001a89c976a13
  0x000001a89c9769f6: and    $0x37f,%rax
  0x000001a89c9769fd: mov    %rax,%rdx
  0x000001a89c976a00: or     %r15,%rdx
  0x000001a89c976a03: lock cmpxchg %rdx,(%rsi)
  0x000001a89c976a08: jne    0x000001a89c977c73
  0x000001a89c976a0e: jmpq   0x000001a89c976a6f
  0x000001a89c976a13: mov    0x8(%rsi),%edx
  0x000001a89c976a16: shl    $0x3,%rdx
  0x000001a89c976a1a: mov    0xb0(%rdx),%rdx
  0x000001a89c976a21: or     %r15,%rdx
  0x000001a89c976a24: lock cmpxchg %rdx,(%rsi)
  0x000001a89c976a29: jne    0x000001a89c977c73
  0x000001a89c976a2f: jmpq   0x000001a89c976a6f
  0x000001a89c976a34: mov    0x8(%rsi),%edx
  0x000001a89c976a37: shl    $0x3,%rdx
  0x000001a89c976a3b: mov    0xb0(%rdx),%rdx
  0x000001a89c976a42: lock cmpxchg %rdx,(%rsi)
  0x000001a89c976a47: mov    (%rsi),%rax
  0x000001a89c976a4a: or     $0x1,%rax
  0x000001a89c976a4e: mov    %rax,(%r8)
  0x000001a89c976a51: lock cmpxchg %r8,(%rsi)
  0x000001a89c976a56: je     0x000001a89c976a6f
  0x000001a89c976a5c: sub    %rsp,%rax
  0x000001a89c976a5f: and    $0xfffffffffffff007,%rax
  0x000001a89c976a66: mov    %rax,(%r8)
  0x000001a89c976a69: jne    0x000001a89c977c73  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187

  0x000001a89c976a6f: mov    0xe0(%rsp),%rdx
  0x000001a89c976a77: mov    0xd8(%rsp),%rdi
  0x000001a89c976a7f: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976a89: addq   $0x1,0x428(%r8)
  0x000001a89c976a91: movabs $0x1a8b73dd7a0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976a9b: mov    0xfc(%r8),%ebx
  0x000001a89c976aa2: add    $0x8,%ebx
  0x000001a89c976aa5: mov    %ebx,0xfc(%r8)
  0x000001a89c976aac: and    $0x7ffff8,%ebx
  0x000001a89c976ab2: cmp    $0x0,%ebx
  0x000001a89c976ab5: je     0x000001a89c977c86
  0x000001a89c976abb: movabs $0x1a8b73dd7a0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976ac5: lea    0x170(%r8),%r8
  0x000001a89c976acc: mov    %rdi,%rbx
  0x000001a89c976acf: mov    0x8(%rbx),%ebx
  0x000001a89c976ad2: shl    $0x3,%rbx
  0x000001a89c976ad6: xor    0x8(%r8),%rbx
  0x000001a89c976ada: test   $0xfffffffffffffffc,%rbx
  0x000001a89c976ae1: je     0x000001a89c976af4
  0x000001a89c976ae3: test   $0x2,%rbx
  0x000001a89c976aea: jne    0x000001a89c976af4
  0x000001a89c976aec: orq    $0x2,0x8(%r8)
  0x000001a89c976af4: movabs $0x6d1708638,%r8   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a89c976afe: movabs $0x1a8b73dd7a0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976b08: addq   $0x1,0x138(%rbx)
  0x000001a89c976b10: movabs $0x1a8b73dd9a8,%r8  ;   {metadata(method data for {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c976b1a: mov    0xfc(%r8),%ebx
  0x000001a89c976b21: add    $0x8,%ebx
  0x000001a89c976b24: mov    %ebx,0xfc(%r8)
  0x000001a89c976b2b: and    $0x7ffff8,%ebx
  0x000001a89c976b31: cmp    $0x0,%ebx
  0x000001a89c976b34: je     0x000001a89c977ca7
  0x000001a89c976b3a: mov    (%rdi,%rdx,1),%r8d
  0x000001a89c976b3e: shl    $0x3,%r8
  0x000001a89c976b42: movabs $0xc,%rbx
  0x000001a89c976b4c: cmp    %rbx,%rdx
  0x000001a89c976b4f: jne    0x000001a89c976b87
  0x000001a89c976b55: cmp    $0x0,%rdi
  0x000001a89c976b59: je     0x000001a89c976b87
  0x000001a89c976b5f: mov    0x8(%rdi),%edx
  0x000001a89c976b62: shl    $0x3,%rdx
  0x000001a89c976b66: movsbl 0x16b(%rdx),%edx
  0x000001a89c976b6d: cmp    $0x0,%edx
  0x000001a89c976b70: je     0x000001a89c976b87
  0x000001a89c976b76: movsbl 0x398(%r15),%edx
  0x000001a89c976b7e: cmp    $0x0,%edx
  0x000001a89c976b81: jne    0x000001a89c977cc8
  0x000001a89c976b87: cmp    $0x0,%r8
  0x000001a89c976b8b: jne    0x000001a89c976ba6
  0x000001a89c976b8d: movabs $0x1a8b73dd7a0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976b97: orl    $0x100,0x180(%rbx)
  0x000001a89c976ba1: jmpq   0x000001a89c976c69
  0x000001a89c976ba6: movabs $0x7c001acb8,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c976bb0: mov    0x8(%r8),%ebx
  0x000001a89c976bb4: shl    $0x3,%rbx
  0x000001a89c976bb8: cmp    0x30(%rbx),%rax
  0x000001a89c976bbc: jne    0x000001a89c976c4d
  0x000001a89c976bc2: movabs $0x1a8b73dd7a0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976bcc: mov    0x8(%r8),%eax
  0x000001a89c976bd0: shl    $0x3,%rax
  0x000001a89c976bd4: cmp    0x198(%rbx),%rax
  0x000001a89c976bdb: jne    0x000001a89c976bea
  0x000001a89c976bdd: addq   $0x1,0x1a0(%rbx)
  0x000001a89c976be5: jmpq   0x000001a89c976c69
  0x000001a89c976bea: cmp    0x1a8(%rbx),%rax
  0x000001a89c976bf1: jne    0x000001a89c976c00
  0x000001a89c976bf3: addq   $0x1,0x1b0(%rbx)
  0x000001a89c976bfb: jmpq   0x000001a89c976c69
  0x000001a89c976c00: cmpq   $0x0,0x198(%rbx)
  0x000001a89c976c0b: jne    0x000001a89c976c24
  0x000001a89c976c0d: mov    %rax,0x198(%rbx)
  0x000001a89c976c14: movq   $0x1,0x1a0(%rbx)
  0x000001a89c976c1f: jmpq   0x000001a89c976c69
  0x000001a89c976c24: cmpq   $0x0,0x1a8(%rbx)
  0x000001a89c976c2f: jne    0x000001a89c976c48
  0x000001a89c976c31: mov    %rax,0x1a8(%rbx)
  0x000001a89c976c38: movq   $0x1,0x1b0(%rbx)
  0x000001a89c976c43: jmpq   0x000001a89c976c69
  0x000001a89c976c48: jmpq   0x000001a89c976c69
  0x000001a89c976c4d: movabs $0x1a8b73dd7a0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976c57: subq   $0x1,0x188(%rbx)
  0x000001a89c976c5f: jmpq   0x000001a89c977ce0
  0x000001a89c976c64: jmpq   0x000001a89c976c69  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192

  0x000001a89c976c69: cmp    %rsi,%r8
  0x000001a89c976c6c: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976c76: movabs $0x448,%rdx
  0x000001a89c976c80: je     0x000001a89c976c90
  0x000001a89c976c86: movabs $0x438,%rdx
  0x000001a89c976c90: mov    (%r8,%rdx,1),%rbx
  0x000001a89c976c94: lea    0x1(%rbx),%rbx
  0x000001a89c976c98: mov    %rbx,(%r8,%rdx,1)
  0x000001a89c976c9c: je     0x000001a89c976ccf  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197

  0x000001a89c976ca2: mov    0xc4(%rsp),%ebx
  0x000001a89c976ca9: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a89c976cb3: mov    %rdi,0xd8(%rsp)
  0x000001a89c976cbb: mov    0xc0(%rsp),%edi
  0x000001a89c976cc2: mov    0xb8(%rsp),%r9
  0x000001a89c976cca: jmpq   0x000001a89c97771b  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379

  0x000001a89c976ccf: mov    0xcc(%rsp),%r8d
  0x000001a89c976cd7: cmp    $0x0,%r8d
  0x000001a89c976cdb: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976ce5: movabs $0x458,%rdx
  0x000001a89c976cef: jl     0x000001a89c976cff
  0x000001a89c976cf5: movabs $0x468,%rdx
  0x000001a89c976cff: mov    (%r8,%rdx,1),%rbx
  0x000001a89c976d03: lea    0x1(%rbx),%rbx
  0x000001a89c976d07: mov    %rbx,(%r8,%rdx,1)
  0x000001a89c976d0b: jl     0x000001a89c97722a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202

  0x000001a89c976d11: mov    %rsi,%rbx
  0x000001a89c976d14: mov    $0x1,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212

  0x000001a89c976d19: mov    %eax,0xec(%rsp)
  0x000001a89c976d20: mov    %rdi,0xd8(%rsp)
  0x000001a89c976d28: mov    0xc8(%rsp),%edx
  0x000001a89c976d2f: mov    0xb0(%rsp),%r8
  0x000001a89c976d37: mov    0xc(%rbx),%ecx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ; implicit exception: dispatches to 0x000001a89c977ce9
  0x000001a89c976d3a: cmp    %edx,%ecx
  0x000001a89c976d3c: movabs $0x1a8b73ddce0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976d46: movabs $0x478,%r9
  0x000001a89c976d50: jne    0x000001a89c976d60
  0x000001a89c976d56: movabs $0x488,%r9
  0x000001a89c976d60: mov    (%rcx,%r9,1),%r11
  0x000001a89c976d64: lea    0x1(%r11),%r11
  0x000001a89c976d68: mov    %r11,(%rcx,%r9,1)
  0x000001a89c976d6c: jne    0x000001a89c976ee5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219

  0x000001a89c976d72: mov    0x10(%rbx),%ecx
  0x000001a89c976d75: shl    $0x3,%rcx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224

  0x000001a89c976d79: cmp    %r8,%rcx
  0x000001a89c976d7c: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976d86: movabs $0x498,%r11
  0x000001a89c976d90: je     0x000001a89c976da0
  0x000001a89c976d96: movabs $0x4a8,%r11
  0x000001a89c976da0: mov    (%r9,%r11,1),%r13
  0x000001a89c976da4: lea    0x1(%r13),%r13
  0x000001a89c976da8: mov    %r13,(%r9,%r11,1)
  0x000001a89c976dac: je     0x000001a89c976f95  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231

  0x000001a89c976db2: cmp    $0x0,%rcx
  0x000001a89c976db6: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976dc0: movabs $0x4b8,%r11
  0x000001a89c976dca: je     0x000001a89c976dda
  0x000001a89c976dd0: movabs $0x4c8,%r11
  0x000001a89c976dda: mov    (%r9,%r11,1),%r13
  0x000001a89c976dde: lea    0x1(%r13),%r13
  0x000001a89c976de2: mov    %r13,(%r9,%r11,1)
  0x000001a89c976de6: je     0x000001a89c976ee5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236

  0x000001a89c976dec: mov    %rbx,0xf0(%rsp)
  0x000001a89c976df4: mov    %r8,%r9
  0x000001a89c976df7: movabs $0x1a8b73ddce0,%r11  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976e01: mov    0x8(%r9),%r9d
  0x000001a89c976e05: shl    $0x3,%r9
  0x000001a89c976e09: cmp    0x4e8(%r11),%r9
  0x000001a89c976e10: jne    0x000001a89c976e1f
  0x000001a89c976e12: addq   $0x1,0x4f0(%r11)
  0x000001a89c976e1a: jmpq   0x000001a89c976e85
  0x000001a89c976e1f: cmp    0x4f8(%r11),%r9
  0x000001a89c976e26: jne    0x000001a89c976e35
  0x000001a89c976e28: addq   $0x1,0x500(%r11)
  0x000001a89c976e30: jmpq   0x000001a89c976e85
  0x000001a89c976e35: cmpq   $0x0,0x4e8(%r11)
  0x000001a89c976e40: jne    0x000001a89c976e59
  0x000001a89c976e42: mov    %r9,0x4e8(%r11)
  0x000001a89c976e49: movq   $0x1,0x4f0(%r11)
  0x000001a89c976e54: jmpq   0x000001a89c976e85
  0x000001a89c976e59: cmpq   $0x0,0x4f8(%r11)
  0x000001a89c976e64: jne    0x000001a89c976e7d
  0x000001a89c976e66: mov    %r9,0x4f8(%r11)
  0x000001a89c976e6d: movq   $0x1,0x500(%r11)
  0x000001a89c976e78: jmpq   0x000001a89c976e85
  0x000001a89c976e7d: addq   $0x1,0x4d8(%r11)
  0x000001a89c976e85: mov    %r8,%r9
  0x000001a89c976e88: mov    %rcx,%r8
  0x000001a89c976e8b: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242

  0x000001a89c976e8e: nopl   0x0(%rax)
  0x000001a89c976e95: movabs $0xffffffffffffffff,%rax
  0x000001a89c976e9f: callq  0x000001a89c407280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242
                                                ;   {virtual_call}
  0x000001a89c976ea4: cmp    $0x0,%eax
  0x000001a89c976ea7: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976eb1: movabs $0x520,%rsi
  0x000001a89c976ebb: jne    0x000001a89c976ecb
  0x000001a89c976ec1: movabs $0x510,%rsi
  0x000001a89c976ecb: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c976ecf: lea    0x1(%rdi),%rdi
  0x000001a89c976ed3: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c976ed7: mov    0xf0(%rsp),%rbx
  0x000001a89c976edf: jne    0x000001a89c976f81  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245

  0x000001a89c976ee5: mov    0x18(%rbx),%edx
  0x000001a89c976ee8: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274

  0x000001a89c976eec: cmp    $0x0,%rdx
  0x000001a89c976ef0: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976efa: movabs $0x578,%rdi
  0x000001a89c976f04: je     0x000001a89c976f14
  0x000001a89c976f0a: movabs $0x568,%rdi
  0x000001a89c976f14: mov    (%rsi,%rdi,1),%rax
  0x000001a89c976f18: lea    0x1(%rax),%rax
  0x000001a89c976f1c: mov    %rax,(%rsi,%rdi,1)
  0x000001a89c976f20: je     0x000001a89c977064  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280

  0x000001a89c976f26: mov    0xec(%rsp),%eax
  0x000001a89c976f2d: inc    %eax
  0x000001a89c976f2f: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976f39: mov    0x100(%rsi),%edi
  0x000001a89c976f3f: add    $0x8,%edi
  0x000001a89c976f42: mov    %edi,0x100(%rsi)
  0x000001a89c976f48: and    $0xfff8,%edi
  0x000001a89c976f4e: cmp    $0x0,%edi
  0x000001a89c976f51: je     0x000001a89c977cee  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a89c976f57: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a89c976f5b: test   %eax,(%r10)        ;   {poll}
  0x000001a89c976f5e: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976f68: incl   0x5b0(%rsi)
  0x000001a89c976f6e: mov    %rdx,%rbx
  0x000001a89c976f71: mov    %rax,%r8
  0x000001a89c976f74: mov    %r8d,0xec(%rsp)
  0x000001a89c976f7c: jmpq   0x000001a89c976d28  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a89c976f81: mov    0xec(%rsp),%r8d
  0x000001a89c976f89: mov    0xc0(%rsp),%edi
  0x000001a89c976f90: jmpq   0x000001a89c976fa4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@248

  0x000001a89c976f95: mov    0xc0(%rsp),%edi
  0x000001a89c976f9c: mov    0xec(%rsp),%r8d
  0x000001a89c976fa4: mov    0x14(%rbx),%edx
  0x000001a89c976fa7: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250

  0x000001a89c976fab: cmp    $0x0,%edi
  0x000001a89c976fae: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c976fb8: movabs $0x540,%rax
  0x000001a89c976fc2: je     0x000001a89c976fd2
  0x000001a89c976fc8: movabs $0x530,%rax
  0x000001a89c976fd2: mov    (%rsi,%rax,1),%rcx
  0x000001a89c976fd6: lea    0x1(%rcx),%rcx
  0x000001a89c976fda: mov    %rcx,(%rsi,%rax,1)
  0x000001a89c976fde: je     0x000001a89c977001  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256

  0x000001a89c976fe4: mov    0xc8(%rsp),%r13d
  0x000001a89c976fec: mov    0xb8(%rsp),%r9
  0x000001a89c976ff4: mov    0xb0(%rsp),%r11
  0x000001a89c976ffc: jmpq   0x000001a89c977208  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x000001a89c977001: mov    0xb8(%rsp),%r9
  0x000001a89c977009: movsbl 0x398(%r15),%esi
  0x000001a89c977011: cmp    $0x0,%esi
  0x000001a89c977014: jne    0x000001a89c977d0f
  0x000001a89c97701a: mov    %r9,%r10
  0x000001a89c97701d: shr    $0x3,%r10
  0x000001a89c977021: mov    %r10d,0x14(%rbx)
  0x000001a89c977025: mov    %rbx,%rsi
  0x000001a89c977028: xor    %r9,%rsi
  0x000001a89c97702b: shr    $0x14,%rsi
  0x000001a89c97702f: cmp    $0x0,%rsi
  0x000001a89c977033: jne    0x000001a89c977d2e
  0x000001a89c977039: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262

  0x000001a89c97703f: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977049: incl   0x550(%rsi)
  0x000001a89c97704f: mov    0xc8(%rsp),%r13d
  0x000001a89c977057: mov    0xb0(%rsp),%r11
  0x000001a89c97705f: jmpq   0x000001a89c977208  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265

  0x000001a89c977064: mov    0xec(%rsp),%r8d
  0x000001a89c97706c: mov    0xc8(%rsp),%edx
  0x000001a89c977073: mov    0xb8(%rsp),%r9
  0x000001a89c97707b: mov    0xb0(%rsp),%r11
  0x000001a89c977083: mov    %rdx,%r13
  0x000001a89c977086: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c977090: mov    0x80(%r15),%rax
  0x000001a89c977097: lea    0x20(%rax),%rdi
  0x000001a89c97709b: cmp    0x90(%r15),%rdi
  0x000001a89c9770a2: ja     0x000001a89c977d46
  0x000001a89c9770a8: mov    %rdi,0x80(%r15)
  0x000001a89c9770af: mov    0xb0(%rdx),%rcx
  0x000001a89c9770b6: mov    %rcx,(%rax)
  0x000001a89c9770b9: mov    %rdx,%rcx
  0x000001a89c9770bc: shr    $0x3,%rcx
  0x000001a89c9770c0: mov    %ecx,0x8(%rax)
  0x000001a89c9770c3: xor    %rcx,%rcx
  0x000001a89c9770c6: mov    %ecx,0xc(%rax)
  0x000001a89c9770c9: xor    %rcx,%rcx
  0x000001a89c9770cc: mov    %rcx,0x10(%rax)
  0x000001a89c9770d0: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285

  0x000001a89c9770d4: mov    %rax,%rdi
  0x000001a89c9770d7: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9770e1: addq   $0x1,0x588(%rdx)
  0x000001a89c9770e9: movabs $0x1a8b73deb68,%rdi  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c9770f3: mov    0xfc(%rdi),%edx
  0x000001a89c9770f9: add    $0x8,%edx
  0x000001a89c9770fc: mov    %edx,0xfc(%rdi)
  0x000001a89c977102: and    $0x7ffff8,%edx
  0x000001a89c977108: cmp    $0x0,%edx
  0x000001a89c97710b: je     0x000001a89c977d53
  0x000001a89c977111: mov    %rax,%rdi
  0x000001a89c977114: movabs $0x1a8b73deb68,%rdx  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c97711e: addq   $0x1,0x138(%rdx)
  0x000001a89c977126: movabs $0x1a8b73432f0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c977130: mov    0xfc(%rdi),%edx
  0x000001a89c977136: add    $0x8,%edx
  0x000001a89c977139: mov    %edx,0xfc(%rdi)
  0x000001a89c97713f: and    $0x7ffff8,%edx
  0x000001a89c977145: cmp    $0x0,%edx
  0x000001a89c977148: je     0x000001a89c977d74
  0x000001a89c97714e: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293

  0x000001a89c977152: movsbl 0x398(%r15),%edi
  0x000001a89c97715a: cmp    $0x0,%edi
  0x000001a89c97715d: jne    0x000001a89c977d95
  0x000001a89c977163: mov    %r11,%r10
  0x000001a89c977166: shr    $0x3,%r10
  0x000001a89c97716a: mov    %r10d,0x10(%rax)
  0x000001a89c97716e: mov    %rax,%rdi
  0x000001a89c977171: xor    %r11,%rdi
  0x000001a89c977174: shr    $0x14,%rdi
  0x000001a89c977178: cmp    $0x0,%rdi
  0x000001a89c97717c: jne    0x000001a89c977db4
  0x000001a89c977182: movsbl 0x398(%r15),%edi
  0x000001a89c97718a: cmp    $0x0,%edi
  0x000001a89c97718d: jne    0x000001a89c977dcc
  0x000001a89c977193: mov    %r9,%r10
  0x000001a89c977196: shr    $0x3,%r10
  0x000001a89c97719a: mov    %r10d,0x14(%rax)
  0x000001a89c97719e: mov    %rax,%rdi
  0x000001a89c9771a1: xor    %r9,%rdi
  0x000001a89c9771a4: shr    $0x14,%rdi
  0x000001a89c9771a8: cmp    $0x0,%rdi
  0x000001a89c9771ac: jne    0x000001a89c977deb
  0x000001a89c9771b2: lock addl $0x0,-0x40(%rsp)
  0x000001a89c9771b8: movsbl 0x398(%r15),%edi
  0x000001a89c9771c0: cmp    $0x0,%edi
  0x000001a89c9771c3: jne    0x000001a89c977e03
  0x000001a89c9771c9: mov    %rax,%r10
  0x000001a89c9771cc: shr    $0x3,%r10
  0x000001a89c9771d0: mov    %r10d,0x18(%rbx)
  0x000001a89c9771d4: mov    %rbx,%rdi
  0x000001a89c9771d7: xor    %rax,%rdi
  0x000001a89c9771da: shr    $0x14,%rdi
  0x000001a89c9771de: cmp    $0x0,%rdi
  0x000001a89c9771e2: jne    0x000001a89c977e22
  0x000001a89c9771e8: lock addl $0x0,-0x40(%rsp)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296

  0x000001a89c9771ee: movabs $0x1a8b73ddce0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9771f8: incl   0x598(%rdi)
  0x000001a89c9771fe: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299
                                                ;   {oop(NULL)}
  0x000001a89c977208: movabs $0x1a8b73ddce0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977212: incl   0x5c8(%rdi)
  0x000001a89c977218: mov    %rdx,%rsi
  0x000001a89c97721b: mov    %r8,%rbx
  0x000001a89c97721e: mov    0xc0(%rsp),%edi
  0x000001a89c977225: jmpq   0x000001a89c97771b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x000001a89c97722a: mov    %rdi,0xd8(%rsp)
  0x000001a89c977232: mov    0xc8(%rsp),%r13d
  0x000001a89c97723a: mov    0xb8(%rsp),%r9
  0x000001a89c977242: mov    0xb0(%rsp),%r11
  0x000001a89c97724a: cmp    $0x0,%rsi
  0x000001a89c97724e: jne    0x000001a89c977269
  0x000001a89c977250: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97725a: orl    $0x100,0x5d8(%rdx)
  0x000001a89c977264: jmpq   0x000001a89c977358
  0x000001a89c977269: nopl   0x0(%rax)
  0x000001a89c977270: jmpq   0x000001a89c977e49  ;   {no_reloc}
  0x000001a89c977275: add    %al,(%rax)
  0x000001a89c977277: add    %al,(%rax)
  0x000001a89c977279: add    %cl,-0x3eb7f7aa(%rbx)
  0x000001a89c97727f: loop   0x000001a89c977284
  0x000001a89c977281: cmp    %rbx,%rdx
  0x000001a89c977284: je     0x000001a89c9772b2
  0x000001a89c97728a: mov    0xc(%rbx),%edi
  0x000001a89c97728d: cmp    (%rdx,%rdi,1),%rbx
  0x000001a89c977291: je     0x000001a89c9772b2
  0x000001a89c977297: cmp    $0x18,%edi
  0x000001a89c97729a: jne    0x000001a89c97733c
  0x000001a89c9772a0: push   %rdx
  0x000001a89c9772a1: push   %rbx
  0x000001a89c9772a2: callq  0x000001a89c4cf180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a89c9772a7: pop    %rdx
  0x000001a89c9772a8: pop    %rbx
  0x000001a89c9772a9: cmp    $0x0,%ebx
  0x000001a89c9772ac: je     0x000001a89c97733c
  0x000001a89c9772b2: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9772bc: mov    0x8(%rsi),%ebx
  0x000001a89c9772bf: shl    $0x3,%rbx
  0x000001a89c9772c3: cmp    0x5f0(%rdx),%rbx
  0x000001a89c9772ca: jne    0x000001a89c9772d9
  0x000001a89c9772cc: addq   $0x1,0x5f8(%rdx)
  0x000001a89c9772d4: jmpq   0x000001a89c97735d
  0x000001a89c9772d9: cmp    0x600(%rdx),%rbx
  0x000001a89c9772e0: jne    0x000001a89c9772ef
  0x000001a89c9772e2: addq   $0x1,0x608(%rdx)
  0x000001a89c9772ea: jmpq   0x000001a89c97735d
  0x000001a89c9772ef: cmpq   $0x0,0x5f0(%rdx)
  0x000001a89c9772fa: jne    0x000001a89c977313
  0x000001a89c9772fc: mov    %rbx,0x5f0(%rdx)
  0x000001a89c977303: movq   $0x1,0x5f8(%rdx)
  0x000001a89c97730e: jmpq   0x000001a89c97735d
  0x000001a89c977313: cmpq   $0x0,0x600(%rdx)
  0x000001a89c97731e: jne    0x000001a89c977337
  0x000001a89c977320: mov    %rbx,0x600(%rdx)
  0x000001a89c977327: movq   $0x1,0x608(%rdx)
  0x000001a89c977332: jmpq   0x000001a89c97735d
  0x000001a89c977337: jmpq   0x000001a89c97735d
  0x000001a89c97733c: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977346: subq   $0x1,0x5e0(%rdx)
  0x000001a89c97734e: jmpq   0x000001a89c977358
  0x000001a89c977353: jmpq   0x000001a89c97735d
  0x000001a89c977358: xor    %r8,%r8
  0x000001a89c97735b: jmp    0x000001a89c977367
  0x000001a89c97735d: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313

  0x000001a89c977367: cmp    $0x0,%r8d
  0x000001a89c97736b: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977375: movabs $0x618,%rdi
  0x000001a89c97737f: je     0x000001a89c97738f
  0x000001a89c977385: movabs $0x628,%rdi
  0x000001a89c97738f: mov    (%r8,%rdi,1),%rdx
  0x000001a89c977393: lea    0x1(%rdx),%rdx
  0x000001a89c977397: mov    %rdx,(%r8,%rdi,1)
  0x000001a89c97739b: je     0x000001a89c9775db  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316

  0x000001a89c9773a1: cmp    $0x0,%rsi
  0x000001a89c9773a5: jne    0x000001a89c9773c0
  0x000001a89c9773a7: movabs $0x1a8b73ddce0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9773b1: orl    $0x100,0x630(%rbx)
  0x000001a89c9773bb: jmpq   0x000001a89c9774aa
  0x000001a89c9773c0: jmpq   0x000001a89c977e62  ;   {no_reloc}
  0x000001a89c9773c5: add    %al,(%rax)
  0x000001a89c9773c7: add    %al,(%rax)
  0x000001a89c9773c9: add    %cl,-0x3eb7f7a2(%rbx)
  0x000001a89c9773cf: jrcxz  0x000001a89c9773d4
  0x000001a89c9773d1: cmp    %rax,%rbx
  0x000001a89c9773d4: je     0x000001a89c977404
  0x000001a89c9773da: mov    0xc(%rax),%r8d
  0x000001a89c9773de: cmp    (%rbx,%r8,1),%rax
  0x000001a89c9773e2: je     0x000001a89c977404
  0x000001a89c9773e8: cmp    $0x18,%r8d
  0x000001a89c9773ec: jne    0x000001a89c97748e
  0x000001a89c9773f2: push   %rbx
  0x000001a89c9773f3: push   %rax
  0x000001a89c9773f4: callq  0x000001a89c4cf180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a89c9773f9: pop    %rbx
  0x000001a89c9773fa: pop    %rax
  0x000001a89c9773fb: cmp    $0x0,%eax
  0x000001a89c9773fe: je     0x000001a89c97748e
  0x000001a89c977404: movabs $0x1a8b73ddce0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97740e: mov    0x8(%rsi),%eax
  0x000001a89c977411: shl    $0x3,%rax
  0x000001a89c977415: cmp    0x648(%rbx),%rax
  0x000001a89c97741c: jne    0x000001a89c97742b
  0x000001a89c97741e: addq   $0x1,0x650(%rbx)
  0x000001a89c977426: jmpq   0x000001a89c9774aa
  0x000001a89c97742b: cmp    0x658(%rbx),%rax
  0x000001a89c977432: jne    0x000001a89c977441
  0x000001a89c977434: addq   $0x1,0x660(%rbx)
  0x000001a89c97743c: jmpq   0x000001a89c9774aa
  0x000001a89c977441: cmpq   $0x0,0x648(%rbx)
  0x000001a89c97744c: jne    0x000001a89c977465
  0x000001a89c97744e: mov    %rax,0x648(%rbx)
  0x000001a89c977455: movq   $0x1,0x650(%rbx)
  0x000001a89c977460: jmpq   0x000001a89c9774aa
  0x000001a89c977465: cmpq   $0x0,0x658(%rbx)
  0x000001a89c977470: jne    0x000001a89c977489
  0x000001a89c977472: mov    %rax,0x658(%rbx)
  0x000001a89c977479: movq   $0x1,0x660(%rbx)
  0x000001a89c977484: jmpq   0x000001a89c9774aa
  0x000001a89c977489: jmpq   0x000001a89c9774aa
  0x000001a89c97748e: movabs $0x1a8b73ddce0,%rbx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977498: subq   $0x1,0x638(%rbx)
  0x000001a89c9774a0: jmpq   0x000001a89c977e6c
  0x000001a89c9774a5: jmpq   0x000001a89c9774aa
  0x000001a89c9774aa: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324

  0x000001a89c9774ad: mov    %r13,%r8
  0x000001a89c9774b0: mov    %r9,%rbx
  0x000001a89c9774b3: mov    %r11,%r9
  0x000001a89c9774b6: mov    %rbx,%rdi          ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331

  0x000001a89c9774b9: nopl   0x0(%rax)
  0x000001a89c9774bd: movabs $0xffffffffffffffff,%rax
  0x000001a89c9774c7: callq  0x000001a89c407280  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331
                                                ;   {virtual_call}
  0x000001a89c9774cc: cmp    $0x0,%rax
  0x000001a89c9774d0: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9774da: movabs $0x6b8,%r9
  0x000001a89c9774e4: jne    0x000001a89c9774f4
  0x000001a89c9774ea: movabs $0x6a8,%r9
  0x000001a89c9774f4: mov    (%r8,%r9,1),%rdx
  0x000001a89c9774f8: lea    0x1(%rdx),%rdx
  0x000001a89c9774fc: mov    %rdx,(%r8,%r9,1)
  0x000001a89c977500: jne    0x000001a89c977524  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337

  0x000001a89c977506: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c977510: mov    0xc0(%rsp),%edi
  0x000001a89c977517: mov    0xb8(%rsp),%r9
  0x000001a89c97751f: jmpq   0x000001a89c9775bd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a89c977524: mov    0xc0(%rsp),%edi
  0x000001a89c97752b: mov    0x14(%rax),%r8d    ; implicit exception: dispatches to 0x000001a89c977e75
  0x000001a89c97752f: shl    $0x3,%r8           ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342

  0x000001a89c977533: cmp    $0x0,%edi
  0x000001a89c977536: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977540: movabs $0x6d8,%rdx
  0x000001a89c97754a: je     0x000001a89c97755a
  0x000001a89c977550: movabs $0x6c8,%rdx
  0x000001a89c97755a: mov    (%r9,%rdx,1),%rsi
  0x000001a89c97755e: lea    0x1(%rsi),%rsi
  0x000001a89c977562: mov    %rsi,(%r9,%rdx,1)
  0x000001a89c977566: je     0x000001a89c97757c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348

  0x000001a89c97756c: mov    %r8,%rax
  0x000001a89c97756f: mov    0xb8(%rsp),%r9
  0x000001a89c977577: jmpq   0x000001a89c9775bd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a89c97757c: mov    0xb8(%rsp),%r9
  0x000001a89c977584: movsbl 0x398(%r15),%edx
  0x000001a89c97758c: cmp    $0x0,%edx
  0x000001a89c97758f: jne    0x000001a89c977e7a
  0x000001a89c977595: mov    %r9,%r10
  0x000001a89c977598: shr    $0x3,%r10
  0x000001a89c97759c: mov    %r10d,0x14(%rax)
  0x000001a89c9775a0: mov    %rax,%rdx
  0x000001a89c9775a3: xor    %r9,%rdx
  0x000001a89c9775a6: shr    $0x14,%rdx
  0x000001a89c9775aa: cmp    $0x0,%rdx
  0x000001a89c9775ae: jne    0x000001a89c977e99
  0x000001a89c9775b4: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354

  0x000001a89c9775ba: mov    %r8,%rax
  0x000001a89c9775bd: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9775c7: incl   0x6e8(%r8)
  0x000001a89c9775ce: mov    %rax,%rsi
  0x000001a89c9775d1: mov    $0x2,%ebx
  0x000001a89c9775d6: jmpq   0x000001a89c97771b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a89c9775db: mov    0xc0(%rsp),%edi
  0x000001a89c9775e2: cmp    $0x0,%rsi
  0x000001a89c9775e6: jne    0x000001a89c977601
  0x000001a89c9775e8: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9775f2: orl    $0x100,0x6f8(%rdx)
  0x000001a89c9775fc: jmpq   0x000001a89c9776c2
  0x000001a89c977601: movabs $0x7c004c300,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$ReservationNode')}
  0x000001a89c97760b: mov    0x8(%rsi),%r8d
  0x000001a89c97760f: shl    $0x3,%r8
  0x000001a89c977613: cmp    %r8,%rbx
  0x000001a89c977616: jne    0x000001a89c9776a6
  0x000001a89c97761c: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977626: mov    0x8(%rsi),%ebx
  0x000001a89c977629: shl    $0x3,%rbx
  0x000001a89c97762d: cmp    0x710(%rdx),%rbx
  0x000001a89c977634: jne    0x000001a89c977643
  0x000001a89c977636: addq   $0x1,0x718(%rdx)
  0x000001a89c97763e: jmpq   0x000001a89c9776c7
  0x000001a89c977643: cmp    0x720(%rdx),%rbx
  0x000001a89c97764a: jne    0x000001a89c977659
  0x000001a89c97764c: addq   $0x1,0x728(%rdx)
  0x000001a89c977654: jmpq   0x000001a89c9776c7
  0x000001a89c977659: cmpq   $0x0,0x710(%rdx)
  0x000001a89c977664: jne    0x000001a89c97767d
  0x000001a89c977666: mov    %rbx,0x710(%rdx)
  0x000001a89c97766d: movq   $0x1,0x718(%rdx)
  0x000001a89c977678: jmpq   0x000001a89c9776c7
  0x000001a89c97767d: cmpq   $0x0,0x720(%rdx)
  0x000001a89c977688: jne    0x000001a89c9776a1
  0x000001a89c97768a: mov    %rbx,0x720(%rdx)
  0x000001a89c977691: movq   $0x1,0x728(%rdx)
  0x000001a89c97769c: jmpq   0x000001a89c9776c7
  0x000001a89c9776a1: jmpq   0x000001a89c9776c7
  0x000001a89c9776a6: movabs $0x1a8b73ddce0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9776b0: subq   $0x1,0x700(%rdx)
  0x000001a89c9776b8: jmpq   0x000001a89c9776c2
  0x000001a89c9776bd: jmpq   0x000001a89c9776c7
  0x000001a89c9776c2: xor    %rax,%rax
  0x000001a89c9776c5: jmp    0x000001a89c9776d1
  0x000001a89c9776c7: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362

  0x000001a89c9776d1: cmp    $0x0,%eax
  0x000001a89c9776d4: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9776de: movabs $0x748,%r8
  0x000001a89c9776e8: jne    0x000001a89c9776f8
  0x000001a89c9776ee: movabs $0x738,%r8
  0x000001a89c9776f8: mov    (%rax,%r8,1),%rdx
  0x000001a89c9776fc: lea    0x1(%rdx),%rdx
  0x000001a89c977700: mov    %rdx,(%rax,%r8,1)
  0x000001a89c977704: jne    0x000001a89c977966  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365

  0x000001a89c97770a: mov    0xc4(%rsp),%ebx
  0x000001a89c977711: movabs $0x0,%rsi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379
                                                ;   {oop(NULL)}
  0x000001a89c97771b: lea    0x118(%rsp),%rax
  0x000001a89c977723: mov    0x8(%rax),%rdx
  0x000001a89c977727: mov    (%rdx),%r8
  0x000001a89c97772a: and    $0x7,%r8
  0x000001a89c97772e: cmp    $0x5,%r8
  0x000001a89c977732: je     0x000001a89c97774f
  0x000001a89c977738: mov    (%rax),%r8
  0x000001a89c97773b: test   %r8,%r8
  0x000001a89c97773e: je     0x000001a89c97774f
  0x000001a89c977744: lock cmpxchg %r8,(%rdx)
  0x000001a89c977749: jne    0x000001a89c977eb1  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381

  0x000001a89c97774f: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977759: incl   0x768(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@382

  0x000001a89c977760: cmp    $0x0,%ebx
  0x000001a89c977763: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97776d: movabs $0x790,%rdx
  0x000001a89c977777: jne    0x000001a89c977787
  0x000001a89c97777d: movabs $0x780,%rdx
  0x000001a89c977787: mov    (%r8,%rdx,1),%rax
  0x000001a89c97778b: lea    0x1(%rax),%rax
  0x000001a89c97778f: mov    %rax,(%r8,%rdx,1)
  0x000001a89c977793: jne    0x000001a89c9777fd  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@395

  0x000001a89c977799: mov    0xd8(%rsp),%rax
  0x000001a89c9777a1: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9777ab: mov    0x100(%r8),%edx
  0x000001a89c9777b2: add    $0x8,%edx
  0x000001a89c9777b5: mov    %edx,0x100(%r8)
  0x000001a89c9777bc: and    $0xfff8,%edx
  0x000001a89c9777c2: cmp    $0x0,%edx
  0x000001a89c9777c5: je     0x000001a89c977ec7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a89c9777cb: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a89c9777cf: test   %eax,(%r10)        ;   {poll}
  0x000001a89c9777d2: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9777dc: incl   0x7f0(%r8)
  0x000001a89c9777e3: mov    %rax,%r8
  0x000001a89c9777e6: mov    %ebx,0xc4(%rsp)
  0x000001a89c9777ed: mov    0xa8(%rsp),%rsi
  0x000001a89c9777f5: mov    %r8,%rdi
  0x000001a89c9777f8: jmpq   0x000001a89c976120  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a89c9777fd: mov    0xd8(%rsp),%r8
  0x000001a89c977805: cmp    $0x8,%ebx
  0x000001a89c977808: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977812: movabs $0x7b0,%rdx
  0x000001a89c97781c: jge    0x000001a89c97782c
  0x000001a89c977822: movabs $0x7a0,%rdx
  0x000001a89c97782c: mov    (%r9,%rdx,1),%rdi
  0x000001a89c977830: lea    0x1(%rdi),%rdi
  0x000001a89c977834: mov    %rdi,(%r9,%rdx,1)
  0x000001a89c977838: jge    0x000001a89c97784a  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@402

  0x000001a89c97783e: mov    %ebx,0x100(%rsp)
  0x000001a89c977845: jmpq   0x000001a89c977894  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@413

  0x000001a89c97784a: mov    %rsi,0xf8(%rsp)
  0x000001a89c977852: mov    %ebx,0x100(%rsp)
  0x000001a89c977859: mov    0xe8(%rsp),%ecx
  0x000001a89c977860: mov    0xa8(%rsp),%rdx
  0x000001a89c977868: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977872: addq   $0x1,0x7c0(%r9)
  0x000001a89c97787a: mov    %rcx,%r9
  0x000001a89c97787d: mov    0xa8(%rsp),%rdx    ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410

  0x000001a89c977885: xchg   %ax,%ax
  0x000001a89c977887: callq  0x000001a89c407000  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410
                                                ;   {optimized virtual_call}
  0x000001a89c97788c: mov    0xf8(%rsp),%rsi
  0x000001a89c977894: cmp    $0x0,%rsi
  0x000001a89c977898: movabs $0x1a8b73ddce0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9778a2: movabs $0x7e0,%r8
  0x000001a89c9778ac: jne    0x000001a89c9778bc
  0x000001a89c9778b2: movabs $0x7d0,%r8
  0x000001a89c9778bc: mov    (%rax,%r8,1),%r9
  0x000001a89c9778c0: lea    0x1(%r9),%r9
  0x000001a89c9778c4: mov    %r9,(%rax,%r8,1)
  0x000001a89c9778c8: jne    0x000001a89c9778da  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@415

  0x000001a89c9778ce: mov    0x100(%rsp),%ebx
  0x000001a89c9778d5: jmpq   0x000001a89c977918  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@424

  0x000001a89c9778da: mov    %rsi,%rax
  0x000001a89c9778dd: add    $0x130,%rsp
  0x000001a89c9778e4: pop    %rbp
  0x000001a89c9778e5: mov    0x70(%r15),%r10
  0x000001a89c9778e9: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9778ec: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420

  0x000001a89c9778ed: mov    %rdi,%rax
  0x000001a89c9778f0: add    $0x130,%rsp
  0x000001a89c9778f7: pop    %rbp
  0x000001a89c9778f8: mov    0x70(%r15),%r10
  0x000001a89c9778fc: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9778ff: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178

  0x000001a89c977900: mov    0xc4(%rsp),%ebx
  0x000001a89c977907: movabs $0x1a8b73ddce0,%r8  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977911: incl   0x2a8(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100

  0x000001a89c977918: mov    0xa8(%rsp),%rdx
  0x000001a89c977920: mov    %rdx,%r8
  0x000001a89c977923: movabs $0x1a8b73ddce0,%r9  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97792d: addq   $0x1,0x808(%r9)
  0x000001a89c977935: movabs $0x1,%r8
  0x000001a89c97793f: mov    %rbx,%r9           ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428

  0x000001a89c977942: nopl   0x0(%rax,%rax,1)
  0x000001a89c977947: callq  0x000001a89c978015  ; ImmutableOopMap{}
                                                ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428
                                                ;   {optimized virtual_call}
  0x000001a89c97794c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c977956: add    $0x130,%rsp
  0x000001a89c97795d: pop    %rbp
  0x000001a89c97795e: mov    0x70(%r15),%r10
  0x000001a89c977962: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c977965: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@432

  0x000001a89c977966: xchg   %ax,%ax
  0x000001a89c977968: jmpq   0x000001a89c977ef7  ;   {no_reloc}
  0x000001a89c97796d: add    %al,(%rax)
  0x000001a89c97796f: add    %al,(%rax)
  0x000001a89c977971: add    %ch,%cl
  0x000001a89c977973: mov    -0x74b40000(%rip),%al        # 0x000001a827e37979
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368

  0x000001a89c977979: rorb   $0xe0,-0x46(%rax)  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97797d: fdivrl 0x1a8b7(%rip)        # 0x000001a89c99223a
  0x000001a89c977983: add    %cl,-0x7d(%rax)
  0x000001a89c977986: (bad)  
  0x000001a89c977987: pop    %rax
  0x000001a89c977988: (bad)  
  0x000001a89c977989: add    %al,(%rax)
  0x000001a89c97798b: add    %ecx,-0x48(%rcx)   ;   {oop("Recursive update"{0x00000006d168fdf0})}
  0x000001a89c97798e: lock std 
  0x000001a89c977990: pushq  $0x6d1
  0x000001a89c977995: add    %cl,-0x75(%rax)
  0x000001a89c977998: rorb   -0x77(%rax)        ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375

  0x000001a89c97799b: test   %ah,(%rax,%rcx,1)
  0x000001a89c97799e: add    %eax,(%rax)
  0x000001a89c9779a0: add    %ah,0xf(%rsi)
  0x000001a89c9779a3: (bad)  
  0x000001a89c9779a4: add    %r8b,(%rax)
  0x000001a89c9779a7: callq  0x000001a89c407000  ; ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375
                                                ;   {optimized virtual_call}
  0x000001a89c9779ac: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x000001a89c9779b4: movabs $0x1a89c9779b4,%rdx  ;   {section_word}
  0x000001a89c9779be: callq  0x000001a89c4ce300  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000001a89c9779c3: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x000001a89c9779c4: nopl   0x0(%rax)
  0x000001a89c9779c8: jmpq   0x000001a89c977f1d  ;   {no_reloc}
  0x000001a89c9779cd: add    %al,(%rax)
  0x000001a89c9779cf: add    %al,(%rax)
  0x000001a89c9779d1: add    %cl,-0x75(%rcx)
  0x000001a89c9779d4: xchg   %eax,0x48000000(%rax)
  0x000001a89c9779da: lea    0x28(%rax),%edi
  0x000001a89c9779dd: cmp    0x90(%r15),%rdi
  0x000001a89c9779e4: ja     0x000001a89c977f27
  0x000001a89c9779ea: mov    %rdi,0x80(%r15)
  0x000001a89c9779f1: mov    0xb0(%rdx),%rcx
  0x000001a89c9779f8: mov    %rcx,(%rax)
  0x000001a89c9779fb: mov    %rdx,%rcx
  0x000001a89c9779fe: shr    $0x3,%rcx
  0x000001a89c977a02: mov    %ecx,0x8(%rax)
  0x000001a89c977a05: xor    %rcx,%rcx
  0x000001a89c977a08: mov    %ecx,0xc(%rax)
  0x000001a89c977a0b: xor    %rcx,%rcx
  0x000001a89c977a0e: mov    %rcx,0x10(%rax)
  0x000001a89c977a12: mov    %rcx,0x18(%rax)
  0x000001a89c977a16: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8

  0x000001a89c977a1a: mov    %rax,%rdx
  0x000001a89c977a1d: movabs $0x1a8b73ddce0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977a27: addq   $0x1,0x178(%rsi)
  0x000001a89c977a2f: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12

  0x000001a89c977a32: mov    %rax,0x110(%rsp)
  0x000001a89c977a3a: nopl   0x0(%rax,%rax,1)
  0x000001a89c977a3f: callq  0x000001a89c407000  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12
                                                ;   {optimized virtual_call}
  0x000001a89c977a44: mov    0x110(%rsp),%rax
  0x000001a89c977a4c: jmpq   0x000001a89c977f75  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15

  0x000001a89c977a51: mov    0x350(%r15),%rax
  0x000001a89c977a58: xor    %r10,%r10
  0x000001a89c977a5b: mov    %r10,0x350(%r15)
  0x000001a89c977a62: xor    %r10,%r10
  0x000001a89c977a65: mov    %r10,0x358(%r15)
  0x000001a89c977a6c: mov    %rax,%rsi
  0x000001a89c977a6f: lea    0x118(%rsp),%rax
  0x000001a89c977a77: mov    0x8(%rax),%rbx
  0x000001a89c977a7b: mov    (%rbx),%rdi
  0x000001a89c977a7e: and    $0x7,%rdi
  0x000001a89c977a82: cmp    $0x5,%rdi
  0x000001a89c977a86: je     0x000001a89c977aa3
  0x000001a89c977a8c: mov    (%rax),%rdi
  0x000001a89c977a8f: test   %rdi,%rdi
  0x000001a89c977a92: je     0x000001a89c977aa3
  0x000001a89c977a98: lock cmpxchg %rdi,(%rbx)
  0x000001a89c977a9d: jne    0x000001a89c977f34  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@389

  0x000001a89c977aa3: mov    %rsi,%rax
  0x000001a89c977aa6: jmpq   0x000001a89c977f75
  0x000001a89c977aab: movabs $0x1a8b7283e18,%r10  ;   {metadata({method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977ab5: mov    %r10,0x8(%rsp)
  0x000001a89c977aba: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977ac2: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977ac7: jmpq   0x000001a89c975f96
  0x000001a89c977acc: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c977ad1: movabs $0x1a8b7282f28,%r10  ;   {metadata({method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977adb: mov    %r10,0x8(%rsp)
  0x000001a89c977ae0: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977ae8: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977aed: jmpq   0x000001a89c9760ee
  0x000001a89c977af2: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c977af7: movabs $0x1a8b7283250,%r10  ;   {metadata({method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977b01: mov    %r10,0x8(%rsp)
  0x000001a89c977b06: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977b0e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977b13: jmpq   0x000001a89c976222
  0x000001a89c977b18: movabs $0x1a8b720e6a0,%r10  ;   {metadata({method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c977b22: mov    %r10,0x8(%rsp)
  0x000001a89c977b27: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977b2f: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977b34: jmpq   0x000001a89c9762bc
  0x000001a89c977b39: cmp    $0x0,%rsi
  0x000001a89c977b3d: je     0x000001a89c976308
  0x000001a89c977b43: mov    %rsi,(%rsp)
  0x000001a89c977b47: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977b4c: jmpq   0x000001a89c976308
  0x000001a89c977b51: mov    %rsi,(%rsp)
  0x000001a89c977b55: callq  0x000001a89c4ceca0  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c977b5a: mov    %rdx,%rdx
  0x000001a89c977b5d: callq  0x000001a89c4cd400  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c977b62: jmpq   0x000001a89c976499
  0x000001a89c977b67: movabs $0x1a8b72918f0,%r10  ;   {metadata({method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c977b71: mov    %r10,0x8(%rsp)
  0x000001a89c977b76: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977b7e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977b83: jmpq   0x000001a89c9764d9
  0x000001a89c977b88: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c977b92: mov    %r10,0x8(%rsp)
  0x000001a89c977b97: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977b9f: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977ba4: jmpq   0x000001a89c976516
  0x000001a89c977ba9: mov    0x10(%rdx),%eax
  0x000001a89c977bac: shl    $0x3,%rax
  0x000001a89c977bb0: cmp    $0x0,%rax
  0x000001a89c977bb4: je     0x000001a89c97652b
  0x000001a89c977bba: mov    %rax,(%rsp)
  0x000001a89c977bbe: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977bc3: jmpq   0x000001a89c97652b
  0x000001a89c977bc8: cmp    $0x0,%r8
  0x000001a89c977bcc: je     0x000001a89c97654a
  0x000001a89c977bd2: mov    %rdx,(%rsp)
  0x000001a89c977bd6: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977bdb: jmpq   0x000001a89c97654a
  0x000001a89c977be0: mov    0x14(%rdx),%eax
  0x000001a89c977be3: shl    $0x3,%rax
  0x000001a89c977be7: cmp    $0x0,%rax
  0x000001a89c977beb: je     0x000001a89c97655b
  0x000001a89c977bf1: mov    %rax,(%rsp)
  0x000001a89c977bf5: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977bfa: jmpq   0x000001a89c97655b
  0x000001a89c977bff: cmp    $0x0,%r9
  0x000001a89c977c03: je     0x000001a89c97657a
  0x000001a89c977c09: mov    %rdx,(%rsp)
  0x000001a89c977c0d: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977c12: jmpq   0x000001a89c97657a
  0x000001a89c977c17: movabs $0x1a8b72832f8,%r10  ;   {metadata({method} {0x000001a8b7283300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977c21: mov    %r10,0x8(%rsp)
  0x000001a89c977c26: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977c2e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977c33: jmpq   0x000001a89c9765ba
  0x000001a89c977c38: mov    (%rsi),%eax
  0x000001a89c977c3a: shl    $0x3,%rax
  0x000001a89c977c3e: cmp    $0x0,%rax
  0x000001a89c977c42: je     0x000001a89c9765cf
  0x000001a89c977c48: mov    %rax,(%rsp)
  0x000001a89c977c4c: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977c51: jmpq   0x000001a89c9765cf
  0x000001a89c977c56: cmp    $0x0,%rdx
  0x000001a89c977c5a: je     0x000001a89c97660d
  0x000001a89c977c60: mov    %rsi,(%rsp)
  0x000001a89c977c64: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977c69: jmpq   0x000001a89c97660d
  0x000001a89c977c6e: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c977c73: mov    %rsi,0x8(%rsp)
  0x000001a89c977c78: mov    %r8,(%rsp)
  0x000001a89c977c7c: callq  0x000001a89c4cf680  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000001a89c977c81: jmpq   0x000001a89c976a6f
  0x000001a89c977c86: movabs $0x1a8b7283250,%r10  ;   {metadata({method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977c90: mov    %r10,0x8(%rsp)
  0x000001a89c977c95: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977c9d: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977ca2: jmpq   0x000001a89c976abb
  0x000001a89c977ca7: movabs $0x1a8b720e6a0,%r10  ;   {metadata({method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c977cb1: mov    %r10,0x8(%rsp)
  0x000001a89c977cb6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977cbe: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977cc3: jmpq   0x000001a89c976b3a
  0x000001a89c977cc8: cmp    $0x0,%r8
  0x000001a89c977ccc: je     0x000001a89c976b87
  0x000001a89c977cd2: mov    %r8,(%rsp)
  0x000001a89c977cd6: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977cdb: jmpq   0x000001a89c976b87
  0x000001a89c977ce0: mov    %r8,(%rsp)
  0x000001a89c977ce4: callq  0x000001a89c4ceca0  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c977ce9: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c977cee: movabs $0x1a8b7283e18,%r10  ;   {metadata({method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977cf8: mov    %r10,0x8(%rsp)
  0x000001a89c977cfd: movq   $0x131,(%rsp)
  0x000001a89c977d05: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977d0a: jmpq   0x000001a89c976f57
  0x000001a89c977d0f: mov    0x14(%rbx),%esi
  0x000001a89c977d12: shl    $0x3,%rsi
  0x000001a89c977d16: cmp    $0x0,%rsi
  0x000001a89c977d1a: je     0x000001a89c97701a
  0x000001a89c977d20: mov    %rsi,(%rsp)
  0x000001a89c977d24: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977d29: jmpq   0x000001a89c97701a
  0x000001a89c977d2e: cmp    $0x0,%r9
  0x000001a89c977d32: je     0x000001a89c977039
  0x000001a89c977d38: mov    %rbx,(%rsp)
  0x000001a89c977d3c: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977d41: jmpq   0x000001a89c977039
  0x000001a89c977d46: mov    %rdx,%rdx
  0x000001a89c977d49: callq  0x000001a89c4cd400  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c977d4e: jmpq   0x000001a89c9770d4
  0x000001a89c977d53: movabs $0x1a8b72918f0,%r10  ;   {metadata({method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c977d5d: mov    %r10,0x8(%rsp)
  0x000001a89c977d62: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977d6a: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977d6f: jmpq   0x000001a89c977111
  0x000001a89c977d74: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c977d7e: mov    %r10,0x8(%rsp)
  0x000001a89c977d83: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c977d8b: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977d90: jmpq   0x000001a89c97714e
  0x000001a89c977d95: mov    0x10(%rax),%edi
  0x000001a89c977d98: shl    $0x3,%rdi
  0x000001a89c977d9c: cmp    $0x0,%rdi
  0x000001a89c977da0: je     0x000001a89c977163
  0x000001a89c977da6: mov    %rdi,(%rsp)
  0x000001a89c977daa: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977daf: jmpq   0x000001a89c977163
  0x000001a89c977db4: cmp    $0x0,%r11
  0x000001a89c977db8: je     0x000001a89c977182
  0x000001a89c977dbe: mov    %rax,(%rsp)
  0x000001a89c977dc2: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977dc7: jmpq   0x000001a89c977182
  0x000001a89c977dcc: mov    0x14(%rax),%edi
  0x000001a89c977dcf: shl    $0x3,%rdi
  0x000001a89c977dd3: cmp    $0x0,%rdi
  0x000001a89c977dd7: je     0x000001a89c977193
  0x000001a89c977ddd: mov    %rdi,(%rsp)
  0x000001a89c977de1: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977de6: jmpq   0x000001a89c977193
  0x000001a89c977deb: cmp    $0x0,%r9
  0x000001a89c977def: je     0x000001a89c9771b2
  0x000001a89c977df5: mov    %rax,(%rsp)
  0x000001a89c977df9: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977dfe: jmpq   0x000001a89c9771b2
  0x000001a89c977e03: mov    0x18(%rbx),%edi
  0x000001a89c977e06: shl    $0x3,%rdi
  0x000001a89c977e0a: cmp    $0x0,%rdi
  0x000001a89c977e0e: je     0x000001a89c9771c9
  0x000001a89c977e14: mov    %rdi,(%rsp)
  0x000001a89c977e18: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977e1d: jmpq   0x000001a89c9771c9
  0x000001a89c977e22: cmp    $0x0,%rax
  0x000001a89c977e26: je     0x000001a89c9771e8
  0x000001a89c977e2c: mov    %rbx,(%rsp)
  0x000001a89c977e30: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977e35: jmpq   0x000001a89c9771e8
  0x000001a89c977e3a: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x000001a89c977e44: mov    $0xa050f00,%eax
  0x000001a89c977e49: callq  0x000001a89c4d0a00  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c977e4e: jmpq   0x000001a89c977270
  0x000001a89c977e53: movabs $0x0,%rax          ;   {metadata(NULL)}
  0x000001a89c977e5d: mov    $0xa050f00,%eax
  0x000001a89c977e62: callq  0x000001a89c4d0a00  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c977e67: jmpq   0x000001a89c9773c0
  0x000001a89c977e6c: mov    %rsi,(%rsp)
  0x000001a89c977e70: callq  0x000001a89c4ceca0  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c977e75: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c977e7a: mov    0x14(%rax),%edx
  0x000001a89c977e7d: shl    $0x3,%rdx
  0x000001a89c977e81: cmp    $0x0,%rdx
  0x000001a89c977e85: je     0x000001a89c977595
  0x000001a89c977e8b: mov    %rdx,(%rsp)
  0x000001a89c977e8f: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c977e94: jmpq   0x000001a89c977595
  0x000001a89c977e99: cmp    $0x0,%r9
  0x000001a89c977e9d: je     0x000001a89c9775b4
  0x000001a89c977ea3: mov    %rax,(%rsp)
  0x000001a89c977ea7: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c977eac: jmpq   0x000001a89c9775b4
  0x000001a89c977eb1: lea    0x118(%rsp),%rax
  0x000001a89c977eb9: mov    %rax,(%rsp)
  0x000001a89c977ebd: callq  0x000001a89c4cfe00  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000001a89c977ec2: jmpq   0x000001a89c97774f
  0x000001a89c977ec7: movabs $0x1a8b7283e18,%r10  ;   {metadata({method} {0x000001a8b7283e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c977ed1: mov    %r10,0x8(%rsp)
  0x000001a89c977ed6: movq   $0x1a5,(%rsp)
  0x000001a89c977ede: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c977ee3: jmpq   0x000001a89c9777cb
  0x000001a89c977ee8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c977ef2: mov    $0xa050f00,%eax
  0x000001a89c977ef7: callq  0x000001a89c4d0a00  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c977efc: jmpq   0x000001a89c977968
  0x000001a89c977f01: mov    %rdx,%rdx
  0x000001a89c977f04: callq  0x000001a89c4cd100  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000001a89c977f09: jmpq   0x000001a89c977977
  0x000001a89c977f0e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c977f18: mov    $0xa050f00,%eax
  0x000001a89c977f1d: callq  0x000001a89c4d0a00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c977f22: jmpq   0x000001a89c9779c8
  0x000001a89c977f27: mov    %rdx,%rdx
  0x000001a89c977f2a: callq  0x000001a89c4cd400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c977f2f: jmpq   0x000001a89c977a1a
  0x000001a89c977f34: lea    0x118(%rsp),%rax
  0x000001a89c977f3c: mov    %rax,(%rsp)
  0x000001a89c977f40: callq  0x000001a89c4cfe00  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000001a89c977f45: jmpq   0x000001a89c977aa3
  0x000001a89c977f4a: nop
  0x000001a89c977f4b: nop
  0x000001a89c977f4c: mov    0x350(%r15),%rax
  0x000001a89c977f53: movabs $0x0,%r10
  0x000001a89c977f5d: mov    %r10,0x350(%r15)
  0x000001a89c977f64: movabs $0x0,%r10
  0x000001a89c977f6e: mov    %r10,0x358(%r15)
  0x000001a89c977f75: add    $0x130,%rsp
  0x000001a89c977f7c: pop    %rbp
  0x000001a89c977f7d: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c977f82: hlt    
  0x000001a89c977f83: hlt    
  0x000001a89c977f84: hlt    
  0x000001a89c977f85: hlt    
  0x000001a89c977f86: hlt    
  0x000001a89c977f87: hlt    
  0x000001a89c977f88: hlt    
  0x000001a89c977f89: hlt    
  0x000001a89c977f8a: hlt    
  0x000001a89c977f8b: hlt    
  0x000001a89c977f8c: hlt    
  0x000001a89c977f8d: hlt    
  0x000001a89c977f8e: hlt    
  0x000001a89c977f8f: hlt    
  0x000001a89c977f90: hlt    
  0x000001a89c977f91: hlt    
  0x000001a89c977f92: hlt    
  0x000001a89c977f93: hlt    
  0x000001a89c977f94: hlt    
  0x000001a89c977f95: hlt    
  0x000001a89c977f96: hlt    
  0x000001a89c977f97: hlt    
  0x000001a89c977f98: hlt    
  0x000001a89c977f99: hlt    
  0x000001a89c977f9a: hlt    
  0x000001a89c977f9b: hlt    
  0x000001a89c977f9c: hlt    
  0x000001a89c977f9d: hlt    
  0x000001a89c977f9e: hlt    
  0x000001a89c977f9f: hlt    
[Stub Code]
  0x000001a89c977fa0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c977fa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c977faf: jmpq   0x000001a89c977faf  ;   {runtime_call}
  0x000001a89c977fb4: nop
  0x000001a89c977fb5: movabs $0x1a8b7286580,%rbx  ;   {static_stub}
  0x000001a89c977fbf: jmpq   0x000001a89c407d50  ;   {runtime_call I2C/C2I adapters}
  0x000001a89c977fc4: nop
  0x000001a89c977fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c977fcf: jmpq   0x000001a89c977fcf  ;   {runtime_call}
  0x000001a89c977fd4: nop
  0x000001a89c977fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c977fdf: jmpq   0x000001a89c977fdf  ;   {runtime_call}
  0x000001a89c977fe4: nop
  0x000001a89c977fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c977fef: jmpq   0x000001a89c977fef  ;   {runtime_call}
  0x000001a89c977ff4: nop
  0x000001a89c977ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c977fff: jmpq   0x000001a89c977fff  ;   {runtime_call}
  0x000001a89c978004: nop
  0x000001a89c978005: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97800f: jmpq   0x000001a89c97800f  ;   {runtime_call}
  0x000001a89c978014: nop
  0x000001a89c978015: movabs $0x1a8b7286738,%rbx  ;   {static_stub}
  0x000001a89c97801f: jmpq   0x000001a89c4077d8  ;   {runtime_call I2C/C2I adapters}
  0x000001a89c978024: nop
  0x000001a89c978025: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97802f: jmpq   0x000001a89c97802f  ;   {runtime_call}
  0x000001a89c978034: nop
  0x000001a89c978035: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97803f: jmpq   0x000001a89c97803f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c978044: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c978049: mov    %rsp,-0x28(%rsp)
  0x000001a89c97804e: sub    $0x80,%rsp
  0x000001a89c978055: mov    %rax,0x78(%rsp)
  0x000001a89c97805a: mov    %rcx,0x70(%rsp)
  0x000001a89c97805f: mov    %rdx,0x68(%rsp)
  0x000001a89c978064: mov    %rbx,0x60(%rsp)
  0x000001a89c978069: mov    %rbp,0x50(%rsp)
  0x000001a89c97806e: mov    %rsi,0x48(%rsp)
  0x000001a89c978073: mov    %rdi,0x40(%rsp)
  0x000001a89c978078: mov    %r8,0x38(%rsp)
  0x000001a89c97807d: mov    %r9,0x30(%rsp)
  0x000001a89c978082: mov    %r10,0x28(%rsp)
  0x000001a89c978087: mov    %r11,0x20(%rsp)
  0x000001a89c97808c: mov    %r12,0x18(%rsp)
  0x000001a89c978091: mov    %r13,0x10(%rsp)
  0x000001a89c978096: mov    %r14,0x8(%rsp)
  0x000001a89c97809b: mov    %r15,(%rsp)
  0x000001a89c97809f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9780a9: movabs $0x1a89c978049,%rdx  ;   {internal_word}
  0x000001a89c9780b3: mov    %rsp,%r8
  0x000001a89c9780b6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9780ba: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9780c4: callq  *%r10
  0x000001a89c9780c7: hlt    
[Deopt Handler Code]
  0x000001a89c9780c8: movabs $0x1a89c9780c8,%r10  ;   {section_word}
  0x000001a89c9780d2: push   %r10
  0x000001a89c9780d4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9780d9: hlt    
  0x000001a89c9780da: hlt    
  0x000001a89c9780db: hlt    
  0x000001a89c9780dc: hlt    
  0x000001a89c9780dd: hlt    
  0x000001a89c9780de: hlt    
  0x000001a89c9780df: hlt    

ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 404 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 660 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 1988 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }pc offsets: 2564 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }pc offsets: 3972 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4155 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }pc offsets: 5548 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 6319 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6508 
ImmutableOopMap{}pc offsets: 6700 
ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }pc offsets: 6796 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 6804 
ImmutableOopMap{[272]=Oop }pc offsets: 6948 
ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }pc offsets: 7079 
ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }pc offsets: 7089 
ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 7117 
ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }pc offsets: 7127 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }pc offsets: 7155 7188 7226 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }pc offsets: 7234 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }pc offsets: 7267 7300 7443 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }pc offsets: 7507 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 7521 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }pc offsets: 7554 7587 7625 
ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }pc offsets: 7630 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 7658 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 7726 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }pc offsets: 7759 7792 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 7982 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }pc offsets: 8007 8021 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8026 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 8131 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8156 8169 
ImmutableOopMap{}pc offsets: 8194 8207 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea19a0, 0x000001a8a3ea19c8]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74c3358} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/invoke/MemberName'  (sp of caller)
  0x000001a8a3ea19a0: mov    0x8(%rsp),%rbx
  0x000001a8a3ea19a5: mov    0x24(%rbx),%ebx
  0x000001a8a3ea19a8: shl    $0x3,%rbx
  0x000001a8a3ea19ac: mov    0x10(%rbx),%rbx
  0x000001a8a3ea19b0: test   %rbx,%rbx
  0x000001a8a3ea19b3: je     0x000001a8a3ea19bc
  0x000001a8a3ea19b9: jmpq   *0x38(%rbx)
  0x000001a8a3ea19bc: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea19c1: hlt    
  0x000001a8a3ea19c2: hlt    
  0x000001a8a3ea19c3: hlt    
  0x000001a8a3ea19c4: hlt    
  0x000001a8a3ea19c5: hlt    
  0x000001a8a3ea19c6: hlt    
  0x000001a8a3ea19c7: hlt    
Compiled method (c2)     281   48       4       java.lang.String::isLatin1 (19 bytes)
 total in heap  [0x000001a8a3ea1590,0x000001a8a3ea17f8] = 616
 relocation     [0x000001a8a3ea1708,0x000001a8a3ea1718] = 16
 main code      [0x000001a8a3ea1720,0x000001a8a3ea1780] = 96
 stub code      [0x000001a8a3ea1780,0x000001a8a3ea1798] = 24
 metadata       [0x000001a8a3ea1798,0x000001a8a3ea17a0] = 8
 scopes data    [0x000001a8a3ea17a0,0x000001a8a3ea17b0] = 16
 scopes pcs     [0x000001a8a3ea17b0,0x000001a8a3ea17f0] = 64
 dependencies   [0x000001a8a3ea17f0,0x000001a8a3ea17f8] = 8
----------------------------------------------------------------------
java/lang/String.isLatin1()Z  [0x000001a8a3ea1720, 0x000001a8a3ea1798]  120 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x000001a8a3ea1720: mov    0x8(%rdx),%r10d
  0x000001a8a3ea1724: shl    $0x3,%r10
  0x000001a8a3ea1728: cmp    %r10,%rax
  0x000001a8a3ea172b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea1731: data16 xchg %ax,%ax
  0x000001a8a3ea1734: nopl   0x0(%rax,%rax,1)
  0x000001a8a3ea173c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea1740: sub    $0x18,%rsp
  0x000001a8a3ea1747: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1

  0x000001a8a3ea174c: movsbl 0x14(%rdx),%r11d
  0x000001a8a3ea1751: test   %r11d,%r11d
  0x000001a8a3ea1754: setne  %al
  0x000001a8a3ea1757: movzbl %al,%eax
  0x000001a8a3ea175a: xor    $0x1,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18

  0x000001a8a3ea175d: add    $0x10,%rsp
  0x000001a8a3ea1761: pop    %rbp
  0x000001a8a3ea1762: mov    0x70(%r15),%r10
  0x000001a8a3ea1766: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea1769: retq   
  0x000001a8a3ea176a: hlt    
  0x000001a8a3ea176b: hlt    
  0x000001a8a3ea176c: hlt    
  0x000001a8a3ea176d: hlt    
  0x000001a8a3ea176e: hlt    
  0x000001a8a3ea176f: hlt    
  0x000001a8a3ea1770: hlt    
  0x000001a8a3ea1771: hlt    
  0x000001a8a3ea1772: hlt    
  0x000001a8a3ea1773: hlt    
  0x000001a8a3ea1774: hlt    
  0x000001a8a3ea1775: hlt    
  0x000001a8a3ea1776: hlt    
  0x000001a8a3ea1777: hlt    
  0x000001a8a3ea1778: hlt    
  0x000001a8a3ea1779: hlt    
  0x000001a8a3ea177a: hlt    
  0x000001a8a3ea177b: hlt    
  0x000001a8a3ea177c: hlt    
  0x000001a8a3ea177d: hlt    
  0x000001a8a3ea177e: hlt    
  0x000001a8a3ea177f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea1780: jmpq   0x000001a89c43f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a8a3ea1785: callq  0x000001a8a3ea178a
  0x000001a8a3ea178a: subq   $0x5,(%rsp)
  0x000001a8a3ea178f: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea1794: hlt    
  0x000001a8a3ea1795: hlt    
  0x000001a8a3ea1796: hlt    
  0x000001a8a3ea1797: hlt    
Compiled method (c1)     281   49       3       java.lang.String::charAt (25 bytes)
 total in heap  [0x000001a89c979410,0x000001a89c979f60] = 2896
 relocation     [0x000001a89c979588,0x000001a89c979610] = 136
 main code      [0x000001a89c979620,0x000001a89c979ae0] = 1216
 stub code      [0x000001a89c979ae0,0x000001a89c979ba0] = 192
 metadata       [0x000001a89c979ba0,0x000001a89c979bd0] = 48
 scopes data    [0x000001a89c979bd0,0x000001a89c979d20] = 336
 scopes pcs     [0x000001a89c979d20,0x000001a89c979f40] = 544
 dependencies   [0x000001a89c979f40,0x000001a89c979f48] = 8
 nul chk table  [0x000001a89c979f48,0x000001a89c979f60] = 24
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x000001a89c979620, 0x000001a89c979ba0]  1408 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  #           [sp+0x90]  (sp of caller)
  0x000001a89c979620: mov    0x8(%rdx),%r10d
  0x000001a89c979624: shl    $0x3,%r10
  0x000001a89c979628: cmp    %rax,%r10
  0x000001a89c97962b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c979631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97963c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c979640: mov    %eax,-0x7000(%rsp)
  0x000001a89c979647: push   %rbp
  0x000001a89c979648: sub    $0x80,%rsp
  0x000001a89c97964f: movabs $0x1a8b73c44f8,%rax  ;   {metadata(method data for {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c979659: mov    0xfc(%rax),%esi
  0x000001a89c97965f: add    $0x8,%esi
  0x000001a89c979662: mov    %esi,0xfc(%rax)
  0x000001a89c979668: and    $0x1ff8,%esi
  0x000001a89c97966e: cmp    $0x0,%esi
  0x000001a89c979671: je     0x000001a89c979996  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@0

  0x000001a89c979677: mov    %rdx,%rax
  0x000001a89c97967a: movabs $0x1a8b73c44f8,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c979684: addq   $0x1,0x138(%rsi)
  0x000001a89c97968c: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c979696: mov    0xfc(%rax),%esi
  0x000001a89c97969c: add    $0x8,%esi
  0x000001a89c97969f: mov    %esi,0xfc(%rax)
  0x000001a89c9796a5: and    $0x7ffff8,%esi
  0x000001a89c9796ab: cmp    $0x0,%esi
  0x000001a89c9796ae: je     0x000001a89c9799b7
  0x000001a89c9796b4: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9796be: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::charAt@1

  0x000001a89c9796c4: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::charAt@1

  0x000001a89c9796c8: cmp    $0x0,%eax
  0x000001a89c9796cb: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9796d5: movabs $0x158,%rsi
  0x000001a89c9796df: jne    0x000001a89c9796ef
  0x000001a89c9796e5: movabs $0x168,%rsi
  0x000001a89c9796ef: mov    (%rax,%rsi,1),%rdi
  0x000001a89c9796f3: lea    0x1(%rdi),%rdi
  0x000001a89c9796f7: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c9796fb: jne    0x000001a89c97971b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::charAt@1

  0x000001a89c979701: movabs $0x1a8b733eea8,%rax  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97970b: incl   0x178(%rax)
  0x000001a89c979711: mov    $0x1,%eax
  0x000001a89c979716: jmpq   0x000001a89c979720  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::charAt@1

  0x000001a89c97971b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::charAt@1

  0x000001a89c979720: and    $0x1,%eax
  0x000001a89c979723: cmp    $0x0,%eax
  0x000001a89c979726: movabs $0x1a8b73c44f8,%rax  ;   {metadata(method data for {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c979730: movabs $0x148,%rsi
  0x000001a89c97973a: je     0x000001a89c97974a
  0x000001a89c979740: movabs $0x158,%rsi
  0x000001a89c97974a: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97974e: lea    0x1(%rdi),%rdi
  0x000001a89c979752: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c979756: je     0x000001a89c97983e  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4

  0x000001a89c97975c: mov    0xc(%rdx),%eax
  0x000001a89c97975f: shl    $0x3,%rax          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8

  0x000001a89c979763: movabs $0x1a8b73c44f8,%rdx  ;   {metadata(method data for {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c97976d: addq   $0x1,0x168(%rdx)
  0x000001a89c979775: movabs $0x1a8b73c46c8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97977f: mov    0xfc(%rdx),%esi
  0x000001a89c979785: add    $0x8,%esi
  0x000001a89c979788: mov    %esi,0xfc(%rdx)
  0x000001a89c97978e: and    $0x7ffff8,%esi
  0x000001a89c979794: cmp    $0x0,%esi
  0x000001a89c979797: je     0x000001a89c9799d8
  0x000001a89c97979d: cmp    $0x0,%r8d
  0x000001a89c9797a1: movabs $0x1a8b73c46c8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c9797ab: movabs $0x138,%rsi
  0x000001a89c9797b5: jl     0x000001a89c9797c5
  0x000001a89c9797bb: movabs $0x148,%rsi
  0x000001a89c9797c5: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c9797c9: lea    0x1(%rdi),%rdi
  0x000001a89c9797cd: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c9797d1: jl     0x000001a89c979953  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12

  0x000001a89c9797d7: mov    0xc(%rax),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; - java.lang.String::charAt@12
                                                ; implicit exception: dispatches to 0x000001a89c9799f9
  0x000001a89c9797da: cmp    %edx,%r8d
  0x000001a89c9797dd: movabs $0x1a8b73c46c8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c9797e7: movabs $0x168,%rsi
  0x000001a89c9797f1: jge    0x000001a89c979801
  0x000001a89c9797f7: movabs $0x158,%rsi
  0x000001a89c979801: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c979805: lea    0x1(%rdi),%rdi
  0x000001a89c979809: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c97980d: jge    0x000001a89c979953  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7
                                                ; - java.lang.String::charAt@12

  0x000001a89c979813: movslq %r8d,%r8
  0x000001a89c979816: movsbl 0x10(%rax,%r8,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21
                                                ; - java.lang.String::charAt@12

  0x000001a89c97981c: and    $0xff,%eax
  0x000001a89c979822: and    $0xffff,%eax
  0x000001a89c979828: and    $0xffff,%eax
  0x000001a89c97982e: add    $0x80,%rsp
  0x000001a89c979835: pop    %rbp
  0x000001a89c979836: mov    0x70(%r15),%r10
  0x000001a89c97983a: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97983d: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@15

  0x000001a89c97983e: mov    0xc(%rdx),%esi
  0x000001a89c979841: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@17

  0x000001a89c979845: movabs $0x1a8b73c44f8,%rdx  ;   {metadata(method data for {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c97984f: addq   $0x1,0x178(%rdx)
  0x000001a89c979857: movabs $0x1a8b74c33b8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72e78a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x000001a89c979861: mov    0xfc(%rdx),%edi
  0x000001a89c979867: add    $0x8,%edi
  0x000001a89c97986a: mov    %edi,0xfc(%rdx)
  0x000001a89c979870: and    $0x7ffff8,%edi
  0x000001a89c979876: cmp    $0x0,%edi
  0x000001a89c979879: je     0x000001a89c9799fe
  0x000001a89c97987f: movabs $0x1a8b74c33b8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72e78a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x000001a89c979889: addq   $0x1,0x138(%rdx)
  0x000001a89c979891: movabs $0x1a8b74c3558,%rdx  ;   {metadata(method data for {method} {0x000001a8b72e8040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x000001a89c97989b: mov    0xfc(%rdx),%edi
  0x000001a89c9798a1: add    $0x8,%edi
  0x000001a89c9798a4: mov    %edi,0xfc(%rdx)
  0x000001a89c9798aa: and    $0x7ffff8,%edi
  0x000001a89c9798b0: cmp    $0x0,%edi
  0x000001a89c9798b3: je     0x000001a89c979a1f
  0x000001a89c9798b9: movabs $0x1a8b74c3558,%rdx  ;   {metadata(method data for {method} {0x000001a8b72e8040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x000001a89c9798c3: addq   $0x1,0x138(%rdx)
  0x000001a89c9798cb: movabs $0x1a8b74c36f8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72e4538} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a89c9798d5: mov    0xfc(%rdx),%edi
  0x000001a89c9798db: add    $0x8,%edi
  0x000001a89c9798de: mov    %edi,0xfc(%rdx)
  0x000001a89c9798e4: and    $0x7ffff8,%edi
  0x000001a89c9798ea: cmp    $0x0,%edi
  0x000001a89c9798ed: je     0x000001a89c979a40
  0x000001a89c9798f3: mov    0xc(%rsi),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ; implicit exception: dispatches to 0x000001a89c979a61
  0x000001a89c9798f6: movabs $0x1a8b74c3558,%rdi  ;   {metadata(method data for {method} {0x000001a8b72e8040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x000001a89c979900: addq   $0x1,0x148(%rdi)
  0x000001a89c979908: mov    %rdx,%rdi
  0x000001a89c97990b: sar    %edi
  0x000001a89c97990d: mov    %r8,%rdx
  0x000001a89c979910: mov    %r8d,0x60(%rsp)
  0x000001a89c979915: mov    %rdi,%r8           ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21

  0x000001a89c979918: mov    %rsi,0x68(%rsp)
  0x000001a89c97991d: xchg   %ax,%ax
  0x000001a89c97991f: callq  0x000001a89c407500  ; ImmutableOopMap{[104]=Oop }
                                                ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::checkIndex@5
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {static_call}
  0x000001a89c979924: mov    0x60(%rsp),%r8d
  0x000001a89c979929: movslq %r8d,%r8
  0x000001a89c97992c: mov    0x68(%rsp),%rsi
  0x000001a89c979931: movzwl 0x10(%rsi,%r8,2),%eax  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::charAt@7
                                                ; - java.lang.String::charAt@21

  0x000001a89c979937: and    $0xffff,%eax
  0x000001a89c97993d: and    $0xffff,%eax
  0x000001a89c979943: add    $0x80,%rsp
  0x000001a89c97994a: pop    %rbp
  0x000001a89c97994b: mov    0x70(%r15),%r10
  0x000001a89c97994f: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c979952: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@24

  0x000001a89c979953: nopl   0x0(%rax,%rax,1)
  0x000001a89c979958: jmpq   0x000001a89c979a75  ;   {no_reloc}
  0x000001a89c97995d: add    %al,(%rax)
  0x000001a89c97995f: add    %al,(%rax)
  0x000001a89c979961: add    %ch,%cl
  0x000001a89c979963: sbb    %al,(%rcx)
  0x000001a89c979965: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12

  0x000001a89c979967: mov    %rax,%rdx
  0x000001a89c97996a: movabs $0x1a8b73c46c8,%rsi  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c979974: addq   $0x1,0x178(%rsi)
  0x000001a89c97997c: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ; - java.lang.String::charAt@12

  0x000001a89c97997f: mov    %rax,0x70(%rsp)
  0x000001a89c979984: data16 xchg %ax,%ax
  0x000001a89c979987: callq  0x000001a89c407000  ; ImmutableOopMap{[112]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ; - java.lang.String::charAt@12
                                                ;   {optimized virtual_call}
  0x000001a89c97998c: mov    0x70(%rsp),%rax
  0x000001a89c979991: jmpq   0x000001a89c979ab7
  0x000001a89c979996: movabs $0x1a8b71745f8,%r10  ;   {metadata({method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String')}
  0x000001a89c9799a0: mov    %r10,0x8(%rsp)
  0x000001a89c9799a5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9799ad: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9799b2: jmpq   0x000001a89c979677
  0x000001a89c9799b7: movabs $0x1a8b7177f08,%r10  ;   {metadata({method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9799c1: mov    %r10,0x8(%rsp)
  0x000001a89c9799c6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9799ce: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::charAt@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9799d3: jmpq   0x000001a89c9796b4
  0x000001a89c9799d8: movabs $0x1a8b72647c8,%r10  ;   {metadata({method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c9799e2: mov    %r10,0x8(%rsp)
  0x000001a89c9799e7: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9799ef: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9799f4: jmpq   0x000001a89c97979d
  0x000001a89c9799f9: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9799fe: movabs $0x1a8b72e78a0,%r10  ;   {metadata({method} {0x000001a8b72e78a8} 'charAt' '([BI)C' in 'java/lang/StringUTF16')}
  0x000001a89c979a08: mov    %r10,0x8(%rsp)
  0x000001a89c979a0d: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c979a15: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::charAt@-1
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c979a1a: jmpq   0x000001a89c97987f
  0x000001a89c979a1f: movabs $0x1a8b72e8038,%r10  ;   {metadata({method} {0x000001a8b72e8040} 'checkIndex' '(I[B)V' in 'java/lang/StringUTF16')}
  0x000001a89c979a29: mov    %r10,0x8(%rsp)
  0x000001a89c979a2e: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c979a36: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::checkIndex@-1
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c979a3b: jmpq   0x000001a89c9798b9
  0x000001a89c979a40: movabs $0x1a8b72e4530,%r10  ;   {metadata({method} {0x000001a8b72e4538} 'length' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a89c979a4a: mov    %r10,0x8(%rsp)
  0x000001a89c979a4f: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c979a57: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::length@-1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c979a5c: jmpq   0x000001a89c9798f3
  0x000001a89c979a61: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::length@1
                                                ; - java.lang.StringUTF16::checkIndex@2
                                                ; - java.lang.StringUTF16::charAt@2
                                                ; - java.lang.String::charAt@21
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c979a66: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c979a70: mov    $0xa050f00,%eax
  0x000001a89c979a75: callq  0x000001a89c4d0a00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c979a7a: jmpq   0x000001a89c979958
  0x000001a89c979a7f: mov    %rdx,%rdx
  0x000001a89c979a82: callq  0x000001a89c4cd100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000001a89c979a87: jmpq   0x000001a89c979967
  0x000001a89c979a8c: nop
  0x000001a89c979a8d: nop
  0x000001a89c979a8e: mov    0x350(%r15),%rax
  0x000001a89c979a95: movabs $0x0,%r10
  0x000001a89c979a9f: mov    %r10,0x350(%r15)
  0x000001a89c979aa6: movabs $0x0,%r10
  0x000001a89c979ab0: mov    %r10,0x358(%r15)
  0x000001a89c979ab7: add    $0x80,%rsp
  0x000001a89c979abe: pop    %rbp
  0x000001a89c979abf: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c979ac4: hlt    
  0x000001a89c979ac5: hlt    
  0x000001a89c979ac6: hlt    
  0x000001a89c979ac7: hlt    
  0x000001a89c979ac8: hlt    
  0x000001a89c979ac9: hlt    
  0x000001a89c979aca: hlt    
  0x000001a89c979acb: hlt    
  0x000001a89c979acc: hlt    
  0x000001a89c979acd: hlt    
  0x000001a89c979ace: hlt    
  0x000001a89c979acf: hlt    
  0x000001a89c979ad0: hlt    
  0x000001a89c979ad1: hlt    
  0x000001a89c979ad2: hlt    
  0x000001a89c979ad3: hlt    
  0x000001a89c979ad4: hlt    
  0x000001a89c979ad5: hlt    
  0x000001a89c979ad6: hlt    
  0x000001a89c979ad7: hlt    
  0x000001a89c979ad8: hlt    
  0x000001a89c979ad9: hlt    
  0x000001a89c979ada: hlt    
  0x000001a89c979adb: hlt    
  0x000001a89c979adc: hlt    
  0x000001a89c979add: hlt    
  0x000001a89c979ade: hlt    
  0x000001a89c979adf: hlt    
[Stub Code]
  0x000001a89c979ae0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c979ae5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c979aef: jmpq   0x000001a89c979aef  ;   {runtime_call}
  0x000001a89c979af4: nop
  0x000001a89c979af5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c979aff: jmpq   0x000001a89c979aff  ;   {runtime_call}
[Exception Handler]
  0x000001a89c979b04: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c979b09: mov    %rsp,-0x28(%rsp)
  0x000001a89c979b0e: sub    $0x80,%rsp
  0x000001a89c979b15: mov    %rax,0x78(%rsp)
  0x000001a89c979b1a: mov    %rcx,0x70(%rsp)
  0x000001a89c979b1f: mov    %rdx,0x68(%rsp)
  0x000001a89c979b24: mov    %rbx,0x60(%rsp)
  0x000001a89c979b29: mov    %rbp,0x50(%rsp)
  0x000001a89c979b2e: mov    %rsi,0x48(%rsp)
  0x000001a89c979b33: mov    %rdi,0x40(%rsp)
  0x000001a89c979b38: mov    %r8,0x38(%rsp)
  0x000001a89c979b3d: mov    %r9,0x30(%rsp)
  0x000001a89c979b42: mov    %r10,0x28(%rsp)
  0x000001a89c979b47: mov    %r11,0x20(%rsp)
  0x000001a89c979b4c: mov    %r12,0x18(%rsp)
  0x000001a89c979b51: mov    %r13,0x10(%rsp)
  0x000001a89c979b56: mov    %r14,0x8(%rsp)
  0x000001a89c979b5b: mov    %r15,(%rsp)
  0x000001a89c979b5f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c979b69: movabs $0x1a89c979b09,%rdx  ;   {internal_word}
  0x000001a89c979b73: mov    %rsp,%r8
  0x000001a89c979b76: and    $0xfffffffffffffff0,%rsp
  0x000001a89c979b7a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c979b84: callq  *%r10
  0x000001a89c979b87: hlt    
[Deopt Handler Code]
  0x000001a89c979b88: movabs $0x1a89c979b88,%r10  ;   {section_word}
  0x000001a89c979b92: push   %r10
  0x000001a89c979b94: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c979b99: hlt    
  0x000001a89c979b9a: hlt    
  0x000001a89c979b9b: hlt    
  0x000001a89c979b9c: hlt    
  0x000001a89c979b9d: hlt    
  0x000001a89c979b9e: hlt    
  0x000001a89c979b9f: hlt    

ImmutableOopMap{[104]=Oop }pc offsets: 772 
ImmutableOopMap{[112]=Oop }pc offsets: 876 
ImmutableOopMap{rdx=Oop }pc offsets: 914 947 
ImmutableOopMap{rax=Oop }pc offsets: 980 990 
ImmutableOopMap{rsi=Oop }pc offsets: 1018 1051 1084 1094 
ImmutableOopMap{}pc offsets: 1114 1127 ----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x000001a8a3ea1bc0, 0x000001a8a3ea1e10]  592 bytes
[Entry Point]
  # {method} {0x000001a8b7170708} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000001a8a3ea1bc0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea1bc4: shl    $0x3,%r10
  0x000001a8a3ea1bc8: cmp    %r10,%rax
  0x000001a8a3ea1bcb: je     0x000001a8a3ea1bd8
  0x000001a8a3ea1bd1: jmpq   0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea1bd6: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea1bd8: mov    (%rdx),%rax
  0x000001a8a3ea1bdb: test   $0x1,%rax
  0x000001a8a3ea1be1: je     0x000001a8a3ea1c05
  0x000001a8a3ea1be7: test   $0x4,%rax
  0x000001a8a3ea1bed: jne    0x000001a8a3ea1c05
  0x000001a8a3ea1bf3: shr    $0x8,%rax
  0x000001a8a3ea1bf7: and    $0x7fffffff,%rax
  0x000001a8a3ea1bfe: je     0x000001a8a3ea1c05
  0x000001a8a3ea1c04: retq   
  0x000001a8a3ea1c05: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea1c0c: push   %rbp
  0x000001a8a3ea1c0d: mov    %rsp,%rbp
  0x000001a8a3ea1c10: sub    $0x60,%rsp
  0x000001a8a3ea1c14: mov    %rdx,0x20(%rsp)
  0x000001a8a3ea1c19: cmp    $0x0,%rdx
  0x000001a8a3ea1c1d: lea    0x20(%rsp),%rdx
  0x000001a8a3ea1c22: cmove  0x20(%rsp),%rdx    ; ImmutableOopMap{[32]=Oop }
  0x000001a8a3ea1c28: vzeroupper 
  0x000001a8a3ea1c2b: movabs $0x1a8a3ea1c28,%r10  ;   {internal_word}
  0x000001a8a3ea1c35: mov    %r10,0x258(%r15)
  0x000001a8a3ea1c3c: mov    %rsp,0x250(%r15)
  0x000001a8a3ea1c43: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea1c4d: cmpb   $0x0,(%r10)
  0x000001a8a3ea1c51: je     0x000001a8a3ea1ca1
  0x000001a8a3ea1c57: push   %rdx
  0x000001a8a3ea1c58: movabs $0x1a8b7170700,%rdx  ;   {metadata({method} {0x000001a8b7170708} 'hashCode' '()I' in 'java/lang/Object')}
  0x000001a8a3ea1c62: mov    %r15,%rcx
  0x000001a8a3ea1c65: sub    $0x20,%rsp
  0x000001a8a3ea1c69: test   $0xf,%esp
  0x000001a8a3ea1c6f: je     0x000001a8a3ea1c8f
  0x000001a8a3ea1c75: sub    $0x8,%rsp
  0x000001a8a3ea1c79: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea1c83: callq  *%r10
  0x000001a8a3ea1c86: add    $0x8,%rsp
  0x000001a8a3ea1c8a: jmpq   0x000001a8a3ea1c9c
  0x000001a8a3ea1c8f: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea1c99: callq  *%r10
  0x000001a8a3ea1c9c: add    $0x20,%rsp
  0x000001a8a3ea1ca0: pop    %rdx
  0x000001a8a3ea1ca1: lea    0x270(%r15),%rcx
  0x000001a8a3ea1ca8: movl   $0x4,0x2e8(%r15)
  0x000001a8a3ea1cb3: movabs $0x7ff8f176019e,%r10  ;   {runtime_call}
  0x000001a8a3ea1cbd: callq  *%r10
  0x000001a8a3ea1cc0: vzeroupper 
  0x000001a8a3ea1cc3: movl   $0x5,0x2e8(%r15)
  0x000001a8a3ea1cce: lock addl $0x0,-0x40(%rsp)
  0x000001a8a3ea1cd4: testb  $0x8,0x70(%r15)
  0x000001a8a3ea1cd9: jne    0x000001a8a3ea1ced
  0x000001a8a3ea1cdf: cmpl   $0x0,0x48(%r15)
  0x000001a8a3ea1ce7: je     0x000001a8a3ea1d19
  0x000001a8a3ea1ced: vzeroupper 
  0x000001a8a3ea1cf0: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea1cf4: mov    %r15,%rcx
  0x000001a8a3ea1cf7: mov    %rsp,%r12
  0x000001a8a3ea1cfa: sub    $0x20,%rsp
  0x000001a8a3ea1cfe: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea1d02: movabs $0x540c4790,%r10   ;   {runtime_call}
  0x000001a8a3ea1d0c: callq  *%r10
  0x000001a8a3ea1d0f: mov    %r12,%rsp
  0x000001a8a3ea1d12: xor    %r12,%r12
  0x000001a8a3ea1d15: mov    -0x8(%rbp),%rax
  0x000001a8a3ea1d19: movl   $0x8,0x2e8(%r15)
  0x000001a8a3ea1d24: cmpl   $0x2,0x338(%r15)
  0x000001a8a3ea1d2f: je     0x000001a8a3ea1de1
  0x000001a8a3ea1d35: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea1d3f: cmpb   $0x0,(%r10)
  0x000001a8a3ea1d43: je     0x000001a8a3ea1d99
  0x000001a8a3ea1d49: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea1d4d: movabs $0x1a8b7170700,%rdx  ;   {metadata({method} {0x000001a8b7170708} 'hashCode' '()I' in 'java/lang/Object')}
  0x000001a8a3ea1d57: mov    %r15,%rcx
  0x000001a8a3ea1d5a: sub    $0x20,%rsp
  0x000001a8a3ea1d5e: test   $0xf,%esp
  0x000001a8a3ea1d64: je     0x000001a8a3ea1d84
  0x000001a8a3ea1d6a: sub    $0x8,%rsp
  0x000001a8a3ea1d6e: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea1d78: callq  *%r10
  0x000001a8a3ea1d7b: add    $0x8,%rsp
  0x000001a8a3ea1d7f: jmpq   0x000001a8a3ea1d91
  0x000001a8a3ea1d84: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea1d8e: callq  *%r10
  0x000001a8a3ea1d91: add    $0x20,%rsp
  0x000001a8a3ea1d95: mov    -0x8(%rbp),%rax
  0x000001a8a3ea1d99: movabs $0x0,%r10
  0x000001a8a3ea1da3: mov    %r10,0x250(%r15)
  0x000001a8a3ea1daa: movabs $0x0,%r10
  0x000001a8a3ea1db4: mov    %r10,0x258(%r15)
  0x000001a8a3ea1dbb: vzeroupper 
  0x000001a8a3ea1dbe: mov    0x50(%r15),%rcx
  0x000001a8a3ea1dc2: movl   $0x0,0x100(%rcx)
  0x000001a8a3ea1dcc: leaveq 
  0x000001a8a3ea1dcd: cmpq   $0x0,0x8(%r15)
  0x000001a8a3ea1dd5: jne    0x000001a8a3ea1ddc
  0x000001a8a3ea1ddb: retq   
  0x000001a8a3ea1ddc: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a8a3ea1de1: vzeroupper 
  0x000001a8a3ea1de4: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea1de8: mov    %rsp,%r12
  0x000001a8a3ea1deb: sub    $0x20,%rsp
  0x000001a8a3ea1def: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea1df3: movabs $0x5404c310,%r10   ;   {runtime_call}
  0x000001a8a3ea1dfd: callq  *%r10
  0x000001a8a3ea1e00: mov    %r12,%rsp
  0x000001a8a3ea1e03: xor    %r12,%r12
  0x000001a8a3ea1e06: mov    -0x8(%rbp),%rax
  0x000001a8a3ea1e0a: jmpq   0x000001a8a3ea1d35
  0x000001a8a3ea1e0f: hlt    
Compiled method (c1)     289   50       3       java.lang.StringLatin1::charAt (28 bytes)
 total in heap  [0x000001a89c979f90,0x000001a89c97a520] = 1424
 relocation     [0x000001a89c97a108,0x000001a89c97a150] = 72
 main code      [0x000001a89c97a160,0x000001a89c97a300] = 416
 stub code      [0x000001a89c97a300,0x000001a89c97a3b0] = 176
 metadata       [0x000001a89c97a3b0,0x000001a89c97a3b8] = 8
 scopes data    [0x000001a89c97a3b8,0x000001a89c97a418] = 96
 scopes pcs     [0x000001a89c97a418,0x000001a89c97a508] = 240
 dependencies   [0x000001a89c97a508,0x000001a89c97a510] = 8
 nul chk table  [0x000001a89c97a510,0x000001a89c97a520] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.charAt([BI)C  [0x000001a89c97a160, 0x000001a89c97a3b0]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97a160: mov    %eax,-0x7000(%rsp)
  0x000001a89c97a167: push   %rbp
  0x000001a89c97a168: sub    $0x30,%rsp
  0x000001a89c97a16c: movabs $0x1a8b73c46c8,%rax  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97a176: mov    0xfc(%rax),%esi
  0x000001a89c97a17c: add    $0x8,%esi
  0x000001a89c97a17f: mov    %esi,0xfc(%rax)
  0x000001a89c97a185: and    $0x1ff8,%esi
  0x000001a89c97a18b: cmp    $0x0,%esi
  0x000001a89c97a18e: je     0x000001a89c97a26e  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@0

  0x000001a89c97a194: cmp    $0x0,%r8d
  0x000001a89c97a198: movabs $0x1a8b73c46c8,%rax  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97a1a2: movabs $0x138,%rsi
  0x000001a89c97a1ac: jl     0x000001a89c97a1bc
  0x000001a89c97a1b2: movabs $0x148,%rsi
  0x000001a89c97a1bc: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97a1c0: lea    0x1(%rdi),%rdi
  0x000001a89c97a1c4: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97a1c8: jl     0x000001a89c97a22c  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1

  0x000001a89c97a1ce: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ; implicit exception: dispatches to 0x000001a89c97a28f
  0x000001a89c97a1d1: cmp    %eax,%r8d
  0x000001a89c97a1d4: movabs $0x1a8b73c46c8,%rax  ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97a1de: movabs $0x168,%rsi
  0x000001a89c97a1e8: jge    0x000001a89c97a1f8
  0x000001a89c97a1ee: movabs $0x158,%rsi
  0x000001a89c97a1f8: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97a1fc: lea    0x1(%rdi),%rdi
  0x000001a89c97a200: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97a204: jge    0x000001a89c97a22c  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@7

  0x000001a89c97a20a: movslq %r8d,%r8
  0x000001a89c97a20d: movsbl 0x10(%rdx,%r8,1),%eax  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@21

  0x000001a89c97a213: and    $0xff,%eax
  0x000001a89c97a219: and    $0xffff,%eax
  0x000001a89c97a21f: add    $0x30,%rsp
  0x000001a89c97a223: pop    %rbp
  0x000001a89c97a224: mov    0x70(%r15),%r10
  0x000001a89c97a228: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97a22b: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@27

  0x000001a89c97a22c: nopl   0x0(%rax)
  0x000001a89c97a230: jmpq   0x000001a89c97a2a3  ;   {no_reloc}
  0x000001a89c97a235: add    %al,(%rax)
  0x000001a89c97a237: add    %al,(%rax)
  0x000001a89c97a239: add    %ch,%cl
  0x000001a89c97a23b: outsb  %ds:(%rsi),(%dx)
  0x000001a89c97a23c: add    %al,(%rax)
  0x000001a89c97a23e: add    %cl,-0x75(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10

  0x000001a89c97a241: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97a244: enterq $0x3c46,$0xb7
  0x000001a89c97a248: test   $0x1,%al
  0x000001a89c97a24a: add    %al,(%rax)
  0x000001a89c97a24c: addq   $0x1,0x178(%rsi)
  0x000001a89c97a254: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15

  0x000001a89c97a257: mov    %rax,0x20(%rsp)
  0x000001a89c97a25c: data16 xchg %ax,%ax
  0x000001a89c97a25f: callq  0x000001a89c407000  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@15
                                                ;   {optimized virtual_call}
  0x000001a89c97a264: mov    0x20(%rsp),%rax
  0x000001a89c97a269: jmpq   0x000001a89c97a2e2
  0x000001a89c97a26e: movabs $0x1a8b72647c8,%r10  ;   {metadata({method} {0x000001a8b72647d0} 'charAt' '([BI)C' in 'java/lang/StringLatin1')}
  0x000001a89c97a278: mov    %r10,0x8(%rsp)
  0x000001a89c97a27d: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97a285: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::charAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97a28a: jmpq   0x000001a89c97a194
  0x000001a89c97a28f: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@6
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97a294: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c97a29e: mov    $0xa050f00,%eax
  0x000001a89c97a2a3: callq  0x000001a89c4d0a00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c97a2a8: jmp    0x000001a89c97a230
  0x000001a89c97a2aa: nop
  0x000001a89c97a2ab: nop
  0x000001a89c97a2ac: nop
  0x000001a89c97a2ad: mov    %rdx,%rdx
  0x000001a89c97a2b0: callq  0x000001a89c4cd100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@10
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000001a89c97a2b5: jmp    0x000001a89c97a23f
  0x000001a89c97a2b7: nop
  0x000001a89c97a2b8: nop
  0x000001a89c97a2b9: mov    0x350(%r15),%rax
  0x000001a89c97a2c0: movabs $0x0,%r10
  0x000001a89c97a2ca: mov    %r10,0x350(%r15)
  0x000001a89c97a2d1: movabs $0x0,%r10
  0x000001a89c97a2db: mov    %r10,0x358(%r15)
  0x000001a89c97a2e2: add    $0x30,%rsp
  0x000001a89c97a2e6: pop    %rbp
  0x000001a89c97a2e7: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97a2ec: hlt    
  0x000001a89c97a2ed: hlt    
  0x000001a89c97a2ee: hlt    
  0x000001a89c97a2ef: hlt    
  0x000001a89c97a2f0: hlt    
  0x000001a89c97a2f1: hlt    
  0x000001a89c97a2f2: hlt    
  0x000001a89c97a2f3: hlt    
  0x000001a89c97a2f4: hlt    
  0x000001a89c97a2f5: hlt    
  0x000001a89c97a2f6: hlt    
  0x000001a89c97a2f7: hlt    
  0x000001a89c97a2f8: hlt    
  0x000001a89c97a2f9: hlt    
  0x000001a89c97a2fa: hlt    
  0x000001a89c97a2fb: hlt    
  0x000001a89c97a2fc: hlt    
  0x000001a89c97a2fd: hlt    
  0x000001a89c97a2fe: hlt    
  0x000001a89c97a2ff: hlt    
[Stub Code]
  0x000001a89c97a300: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97a305: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97a30f: jmpq   0x000001a89c97a30f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97a314: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97a319: mov    %rsp,-0x28(%rsp)
  0x000001a89c97a31e: sub    $0x80,%rsp
  0x000001a89c97a325: mov    %rax,0x78(%rsp)
  0x000001a89c97a32a: mov    %rcx,0x70(%rsp)
  0x000001a89c97a32f: mov    %rdx,0x68(%rsp)
  0x000001a89c97a334: mov    %rbx,0x60(%rsp)
  0x000001a89c97a339: mov    %rbp,0x50(%rsp)
  0x000001a89c97a33e: mov    %rsi,0x48(%rsp)
  0x000001a89c97a343: mov    %rdi,0x40(%rsp)
  0x000001a89c97a348: mov    %r8,0x38(%rsp)
  0x000001a89c97a34d: mov    %r9,0x30(%rsp)
  0x000001a89c97a352: mov    %r10,0x28(%rsp)
  0x000001a89c97a357: mov    %r11,0x20(%rsp)
  0x000001a89c97a35c: mov    %r12,0x18(%rsp)
  0x000001a89c97a361: mov    %r13,0x10(%rsp)
  0x000001a89c97a366: mov    %r14,0x8(%rsp)
  0x000001a89c97a36b: mov    %r15,(%rsp)
  0x000001a89c97a36f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97a379: movabs $0x1a89c97a319,%rdx  ;   {internal_word}
  0x000001a89c97a383: mov    %rsp,%r8
  0x000001a89c97a386: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97a38a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97a394: callq  *%r10
  0x000001a89c97a397: hlt    
[Deopt Handler Code]
  0x000001a89c97a398: movabs $0x1a89c97a398,%r10  ;   {section_word}
  0x000001a89c97a3a2: push   %r10
  0x000001a89c97a3a4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97a3a9: hlt    
  0x000001a89c97a3aa: hlt    
  0x000001a89c97a3ab: hlt    
  0x000001a89c97a3ac: hlt    
  0x000001a89c97a3ad: hlt    
  0x000001a89c97a3ae: hlt    
  0x000001a89c97a3af: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 260 
ImmutableOopMap{rdx=Oop }pc offsets: 298 308 
ImmutableOopMap{}pc offsets: 328 341 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea2020, 0x000001a8a3ea2040]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74daba8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea2020: cmp    (%rdx),%rax
  0x000001a8a3ea2023: mov    0x24(%r8),%ebx
  0x000001a8a3ea2027: shl    $0x3,%rbx
  0x000001a8a3ea202b: mov    0x10(%rbx),%rbx
  0x000001a8a3ea202f: test   %rbx,%rbx
  0x000001a8a3ea2032: je     0x000001a8a3ea203b
  0x000001a8a3ea2038: jmpq   *0x38(%rbx)
  0x000001a8a3ea203b: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)     293   28       3       java.util.concurrent.ConcurrentHashMap::addCount (289 bytes)
 total in heap  [0x000001a89c97a590,0x000001a89c97b8d8] = 4936
 relocation     [0x000001a89c97a708,0x000001a89c97a7e0] = 216
 main code      [0x000001a89c97a7e0,0x000001a89c97b0c0] = 2272
 stub code      [0x000001a89c97b0c0,0x000001a89c97b1d0] = 272
 metadata       [0x000001a89c97b1d0,0x000001a89c97b1e8] = 24
 scopes data    [0x000001a89c97b1e8,0x000001a89c97b470] = 648
 scopes pcs     [0x000001a89c97b470,0x000001a89c97b8b0] = 1088
 dependencies   [0x000001a89c97b8b0,0x000001a89c97b8b8] = 8
 nul chk table  [0x000001a89c97b8b8,0x000001a89c97b8d8] = 32
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.addCount(JI)V  [0x000001a89c97a7e0, 0x000001a89c97b1d0]  2544 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = long
  # parm1:    r9        = int
  #           [sp+0xc0]  (sp of caller)
  0x000001a89c97a7e0: mov    0x8(%rdx),%r10d
  0x000001a89c97a7e4: shl    $0x3,%r10
  0x000001a89c97a7e8: cmp    %rax,%r10
  0x000001a89c97a7eb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97a7f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97a7fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97a800: mov    %eax,-0x7000(%rsp)
  0x000001a89c97a807: push   %rbp
  0x000001a89c97a808: sub    $0xb0,%rsp
  0x000001a89c97a80f: mov    %rdx,0x88(%rsp)
  0x000001a89c97a817: mov    %r9d,0x74(%rsp)
  0x000001a89c97a81c: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a826: mov    0xfc(%rax),%ebx
  0x000001a89c97a82c: add    $0x8,%ebx
  0x000001a89c97a82f: mov    %ebx,0xfc(%rax)
  0x000001a89c97a835: and    $0x1ff8,%ebx
  0x000001a89c97a83b: cmp    $0x0,%ebx
  0x000001a89c97a83e: je     0x000001a89c97affc  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@0

  0x000001a89c97a844: mov    0x30(%rdx),%esi
  0x000001a89c97a847: shl    $0x3,%rsi          ;*getfield counterCells {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@1

  0x000001a89c97a84b: cmp    $0x0,%rsi
  0x000001a89c97a84f: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a859: movabs $0x138,%rbx
  0x000001a89c97a863: jne    0x000001a89c97a873
  0x000001a89c97a869: movabs $0x148,%rbx
  0x000001a89c97a873: mov    (%rax,%rbx,1),%rdi
  0x000001a89c97a877: lea    0x1(%rdi),%rdi
  0x000001a89c97a87b: mov    %rdi,(%rax,%rbx,1)
  0x000001a89c97a87f: jne    0x000001a89c97a8ea  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@7

  0x000001a89c97a885: vmovsd 0x18(%rdx),%xmm0
  0x000001a89c97a88a: vmovq  %xmm0,%rax         ;*getfield baseCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@18

  0x000001a89c97a88f: mov    %rax,%rdi
  0x000001a89c97a892: add    %r8,%rdi
  0x000001a89c97a895: lea    0x18(%rdx),%rcx
  0x000001a89c97a899: mov    %rdi,%rbx
  0x000001a89c97a89c: lock cmpxchg %rbx,(%rcx)
  0x000001a89c97a8a1: mov    $0x1,%ebx
  0x000001a89c97a8a6: je     0x000001a89c97a8b1
  0x000001a89c97a8ac: mov    $0x0,%ebx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@31

  0x000001a89c97a8b1: cmp    $0x0,%ebx
  0x000001a89c97a8b4: movabs $0x1a8b73de568,%rbx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a8be: movabs $0x190,%rax
  0x000001a89c97a8c8: jne    0x000001a89c97a8d8
  0x000001a89c97a8ce: movabs $0x1a0,%rax
  0x000001a89c97a8d8: mov    (%rbx,%rax,1),%rcx
  0x000001a89c97a8dc: lea    0x1(%rcx),%rcx
  0x000001a89c97a8e0: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c97a8e4: jne    0x000001a89c97aaf4  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@34

  0x000001a89c97a8ea: cmp    $0x0,%rsi
  0x000001a89c97a8ee: movabs $0x1a8b73de568,%rdi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a8f8: movabs $0x1c0,%rbx
  0x000001a89c97a902: jne    0x000001a89c97a912
  0x000001a89c97a908: movabs $0x1b0,%rbx
  0x000001a89c97a912: mov    (%rdi,%rbx,1),%rax
  0x000001a89c97a916: lea    0x1(%rax),%rax
  0x000001a89c97a91a: mov    %rax,(%rdi,%rbx,1)
  0x000001a89c97a91e: jne    0x000001a89c97a92e  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@42

  0x000001a89c97a924: mov    $0x1,%esi
  0x000001a89c97a929: jmpq   0x000001a89c97afca  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x000001a89c97a92e: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47
                                                ; implicit exception: dispatches to 0x000001a89c97b01d
  0x000001a89c97a931: dec    %edi
  0x000001a89c97a933: cmp    $0x0,%edi
  0x000001a89c97a936: movabs $0x1a8b73de568,%rbx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a940: movabs $0x1e0,%rax
  0x000001a89c97a94a: jge    0x000001a89c97a95a
  0x000001a89c97a950: movabs $0x1d0,%rax
  0x000001a89c97a95a: mov    (%rbx,%rax,1),%rcx
  0x000001a89c97a95e: lea    0x1(%rcx),%rcx
  0x000001a89c97a962: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c97a966: jge    0x000001a89c97a976  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@53

  0x000001a89c97a96c: mov    $0x1,%esi
  0x000001a89c97a971: jmpq   0x000001a89c97afca  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x000001a89c97a976: mov    %edi,0x70(%rsp)
  0x000001a89c97a97a: mov    %rsi,0x78(%rsp)
  0x000001a89c97a97f: mov    %r8,0x80(%rsp)
  0x000001a89c97a987: callq  0x000001a89c407500  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*invokestatic getProbe {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@58
                                                ;   {static_call}
  0x000001a89c97a98c: and    0x70(%rsp),%eax
  0x000001a89c97a990: movslq %eax,%rbx
  0x000001a89c97a993: mov    0x78(%rsp),%rsi
  0x000001a89c97a998: cmp    0xc(%rsi),%eax
  0x000001a89c97a99b: jae    0x000001a89c97b022
  0x000001a89c97a9a1: mov    0x10(%rsi,%rbx,4),%eax
  0x000001a89c97a9a5: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64

  0x000001a89c97a9a9: cmp    $0x0,%rax
  0x000001a89c97a9ad: movabs $0x1a8b73de568,%rbx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97a9b7: movabs $0x210,%rdx
  0x000001a89c97a9c1: jne    0x000001a89c97a9d1
  0x000001a89c97a9c7: movabs $0x200,%rdx
  0x000001a89c97a9d1: mov    (%rbx,%rdx,1),%rsi
  0x000001a89c97a9d5: lea    0x1(%rsi),%rsi
  0x000001a89c97a9d9: mov    %rsi,(%rbx,%rdx,1)
  0x000001a89c97a9dd: jne    0x000001a89c97a9fd  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@68

  0x000001a89c97a9e3: mov    $0x1,%esi
  0x000001a89c97a9e8: mov    0x80(%rsp),%r8
  0x000001a89c97a9f0: mov    0x88(%rsp),%rdx
  0x000001a89c97a9f8: jmpq   0x000001a89c97afca  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x000001a89c97a9fd: mov    0x80(%rsp),%r8
  0x000001a89c97aa05: vmovsd 0x90(%rax),%xmm0   ; implicit exception: dispatches to 0x000001a89c97b02b
  0x000001a89c97aa0d: vmovq  %xmm0,%rbx         ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81

  0x000001a89c97aa12: mov    %rbx,%rdx
  0x000001a89c97aa15: add    %r8,%rdx
  0x000001a89c97aa18: lea    0x90(%rax),%rsi
  0x000001a89c97aa1f: mov    %rbx,%rax
  0x000001a89c97aa22: mov    %rdx,%rbx
  0x000001a89c97aa25: lock cmpxchg %rbx,(%rsi)
  0x000001a89c97aa2a: mov    $0x1,%edx
  0x000001a89c97aa2f: je     0x000001a89c97aa3a
  0x000001a89c97aa35: mov    $0x0,%edx          ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@91

  0x000001a89c97aa3a: cmp    $0x0,%edx
  0x000001a89c97aa3d: movabs $0x1a8b73de568,%rsi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97aa47: movabs $0x258,%rdi
  0x000001a89c97aa51: jne    0x000001a89c97aa61
  0x000001a89c97aa57: movabs $0x268,%rdi
  0x000001a89c97aa61: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97aa65: lea    0x1(%rbx),%rbx
  0x000001a89c97aa69: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97aa6d: jne    0x000001a89c97aa83  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@97

  0x000001a89c97aa73: mov    %rdx,%rsi
  0x000001a89c97aa76: mov    0x88(%rsp),%rdx
  0x000001a89c97aa7e: jmpq   0x000001a89c97afca  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@100

  0x000001a89c97aa83: mov    0x74(%rsp),%r9d
  0x000001a89c97aa88: cmp    $0x1,%r9d
  0x000001a89c97aa8c: movabs $0x1a8b73de568,%rdx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97aa96: movabs $0x298,%rsi
  0x000001a89c97aaa0: jle    0x000001a89c97aab0
  0x000001a89c97aaa6: movabs $0x288,%rsi
  0x000001a89c97aab0: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c97aab4: lea    0x1(%rdi),%rdi
  0x000001a89c97aab8: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c97aabc: jle    0x000001a89c97afba  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@110

  0x000001a89c97aac2: mov    0x88(%rsp),%rdx
  0x000001a89c97aaca: movabs $0x1a8b73de568,%rsi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97aad4: addq   $0x1,0x2a8(%rsi)
  0x000001a89c97aadc: mov    0x88(%rsp),%rdx    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115

  0x000001a89c97aae4: data16 xchg %ax,%ax
  0x000001a89c97aae7: callq  0x000001a89c407000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@115
                                                ;   {optimized virtual_call}
  0x000001a89c97aaec: mov    %rax,%rdi          ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@120

  0x000001a89c97aaef: mov    0x74(%rsp),%r9d
  0x000001a89c97aaf4: cmp    $0x0,%r9d
  0x000001a89c97aaf8: movabs $0x1a8b73de568,%rdx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ab02: movabs $0x2e0,%rsi
  0x000001a89c97ab0c: jl     0x000001a89c97ab1c
  0x000001a89c97ab12: movabs $0x2f0,%rsi
  0x000001a89c97ab1c: mov    (%rdx,%rsi,1),%rbx
  0x000001a89c97ab20: lea    0x1(%rbx),%rbx
  0x000001a89c97ab24: mov    %rbx,(%rdx,%rsi,1)
  0x000001a89c97ab28: jl     0x000001a89c97afaa  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@121

  0x000001a89c97ab2e: xchg   %ax,%ax
  0x000001a89c97ab30: mov    0x88(%rsp),%rdx
  0x000001a89c97ab38: mov    0x14(%rdx),%esi    ;*getfield sizeCtl {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@127

  0x000001a89c97ab3b: movslq %esi,%rbx
  0x000001a89c97ab3e: cmp    %rbx,%rdi
  0x000001a89c97ab41: movabs $0x1a8b73de568,%rdi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ab4b: movabs $0x300,%rbx
  0x000001a89c97ab55: jl     0x000001a89c97ab65
  0x000001a89c97ab5b: movabs $0x310,%rbx
  0x000001a89c97ab65: mov    (%rdi,%rbx,1),%rax
  0x000001a89c97ab69: lea    0x1(%rax),%rax
  0x000001a89c97ab6d: mov    %rax,(%rdi,%rbx,1)
  0x000001a89c97ab71: jl     0x000001a89c97afaa  ;*lcmp {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@134

  0x000001a89c97ab77: mov    0x28(%rdx),%edi
  0x000001a89c97ab7a: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@139

  0x000001a89c97ab7e: cmp    $0x0,%rdi
  0x000001a89c97ab82: movabs $0x1a8b73de568,%rbx  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ab8c: movabs $0x320,%rax
  0x000001a89c97ab96: je     0x000001a89c97aba6
  0x000001a89c97ab9c: movabs $0x330,%rax
  0x000001a89c97aba6: mov    (%rbx,%rax,1),%rcx
  0x000001a89c97abaa: lea    0x1(%rcx),%rcx
  0x000001a89c97abae: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c97abb2: je     0x000001a89c97afaa  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@145

  0x000001a89c97abb8: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150
                                                ; implicit exception: dispatches to 0x000001a89c97b030
  0x000001a89c97abbb: cmp    $0x40000000,%ebx
  0x000001a89c97abc1: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97abcb: movabs $0x340,%rcx
  0x000001a89c97abd5: jge    0x000001a89c97abe5
  0x000001a89c97abdb: movabs $0x350,%rcx
  0x000001a89c97abe5: mov    (%rax,%rcx,1),%r8
  0x000001a89c97abe9: lea    0x1(%r8),%r8
  0x000001a89c97abed: mov    %r8,(%rax,%rcx,1)
  0x000001a89c97abf1: jge    0x000001a89c97afaa  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@156

  0x000001a89c97abf7: mov    %rdi,0x98(%rsp)
  0x000001a89c97abff: mov    %esi,0x90(%rsp)
  0x000001a89c97ac06: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ac10: addq   $0x1,0x360(%rax)
  0x000001a89c97ac18: movabs $0x1a8b74dadf8,%rax  ;   {metadata(method data for {method} {0x000001a8b7286470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ac22: mov    0xfc(%rax),%ecx
  0x000001a89c97ac28: add    $0x8,%ecx
  0x000001a89c97ac2b: mov    %ecx,0xfc(%rax)
  0x000001a89c97ac31: and    $0x7ffff8,%ecx
  0x000001a89c97ac37: cmp    $0x0,%ecx
  0x000001a89c97ac3a: je     0x000001a89c97b035
  0x000001a89c97ac40: movabs $0x1a8b74dadf8,%rax  ;   {metadata(method data for {method} {0x000001a8b7286470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ac4a: addq   $0x1,0x138(%rax)
  0x000001a89c97ac52: mov    %rbx,%rdx          ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161

  0x000001a89c97ac55: xchg   %ax,%ax
  0x000001a89c97ac57: callq  0x000001a89c407500  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*invokestatic numberOfLeadingZeros {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161
                                                ;   {static_call}
  0x000001a89c97ac5c: or     $0x8000,%eax
  0x000001a89c97ac62: mov    0x90(%rsp),%esi
  0x000001a89c97ac69: cmp    $0x0,%esi
  0x000001a89c97ac6c: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ac76: movabs $0x370,%r9
  0x000001a89c97ac80: jge    0x000001a89c97ac90
  0x000001a89c97ac86: movabs $0x380,%r9
  0x000001a89c97ac90: mov    (%r8,%r9,1),%rdx
  0x000001a89c97ac94: lea    0x1(%rdx),%rdx
  0x000001a89c97ac98: mov    %rdx,(%r8,%r9,1)
  0x000001a89c97ac9c: jge    0x000001a89c97ae81  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@168

  0x000001a89c97aca2: mov    %rsi,%r8
  0x000001a89c97aca5: shr    $0x10,%r8d
  0x000001a89c97aca9: cmp    %eax,%r8d
  0x000001a89c97acac: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97acb6: movabs $0x390,%r9
  0x000001a89c97acc0: jne    0x000001a89c97acd0
  0x000001a89c97acc6: movabs $0x3a0,%r9
  0x000001a89c97acd0: mov    (%r8,%r9,1),%rdx
  0x000001a89c97acd4: lea    0x1(%rdx),%rdx
  0x000001a89c97acd8: mov    %rdx,(%r8,%r9,1)
  0x000001a89c97acdc: jne    0x000001a89c97afaa  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@178

  0x000001a89c97ace2: mov    %rax,%r8
  0x000001a89c97ace5: inc    %r8d
  0x000001a89c97ace8: cmp    %r8d,%esi
  0x000001a89c97aceb: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97acf5: movabs $0x3b0,%r9
  0x000001a89c97acff: je     0x000001a89c97ad0f
  0x000001a89c97ad05: movabs $0x3c0,%r9
  0x000001a89c97ad0f: mov    (%r8,%r9,1),%rdx
  0x000001a89c97ad13: lea    0x1(%rdx),%rdx
  0x000001a89c97ad17: mov    %rdx,(%r8,%r9,1)
  0x000001a89c97ad1b: je     0x000001a89c97afaa  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@187

  0x000001a89c97ad21: add    $0xffff,%eax
  0x000001a89c97ad27: cmp    %eax,%esi
  0x000001a89c97ad29: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ad33: movabs $0x3d0,%r8
  0x000001a89c97ad3d: je     0x000001a89c97ad4d
  0x000001a89c97ad43: movabs $0x3e0,%r8
  0x000001a89c97ad4d: mov    (%rax,%r8,1),%r9
  0x000001a89c97ad51: lea    0x1(%r9),%r9
  0x000001a89c97ad55: mov    %r9,(%rax,%r8,1)
  0x000001a89c97ad59: je     0x000001a89c97afaa  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@197

  0x000001a89c97ad5f: mov    0x88(%rsp),%rdx
  0x000001a89c97ad67: mov    0x2c(%rdx),%r9d
  0x000001a89c97ad6b: shl    $0x3,%r9           ;*getfield nextTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@201

  0x000001a89c97ad6f: cmp    $0x0,%r9
  0x000001a89c97ad73: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ad7d: movabs $0x3f0,%r8
  0x000001a89c97ad87: je     0x000001a89c97ad97
  0x000001a89c97ad8d: movabs $0x400,%r8
  0x000001a89c97ad97: mov    (%rax,%r8,1),%rdi
  0x000001a89c97ad9b: lea    0x1(%rdi),%rdi
  0x000001a89c97ad9f: mov    %rdi,(%rax,%r8,1)
  0x000001a89c97ada3: je     0x000001a89c97afaa  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@207

  0x000001a89c97ada9: mov    0x20(%rdx),%eax    ;*getfield transferIndex {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@211

  0x000001a89c97adac: cmp    $0x0,%eax
  0x000001a89c97adaf: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97adb9: movabs $0x420,%r8
  0x000001a89c97adc3: jle    0x000001a89c97add3
  0x000001a89c97adc9: movabs $0x410,%r8
  0x000001a89c97add3: mov    (%rax,%r8,1),%rdi
  0x000001a89c97add7: lea    0x1(%rdi),%rdi
  0x000001a89c97addb: mov    %rdi,(%rax,%r8,1)
  0x000001a89c97addf: jle    0x000001a89c97af99  ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@214

  0x000001a89c97ade5: mov    %rsi,%r8
  0x000001a89c97ade8: inc    %r8d
  0x000001a89c97adeb: lea    0x14(%rdx),%rdi
  0x000001a89c97adef: mov    %rsi,%rax
  0x000001a89c97adf2: lock cmpxchg %r8d,(%rdi)
  0x000001a89c97adf7: mov    $0x1,%r8d
  0x000001a89c97adfd: je     0x000001a89c97ae09
  0x000001a89c97ae03: mov    $0x0,%r8d          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@233

  0x000001a89c97ae09: cmp    $0x0,%r8d
  0x000001a89c97ae0d: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ae17: movabs $0x480,%rsi
  0x000001a89c97ae21: je     0x000001a89c97ae31
  0x000001a89c97ae27: movabs $0x490,%rsi
  0x000001a89c97ae31: mov    (%r8,%rsi,1),%rdi
  0x000001a89c97ae35: lea    0x1(%rdi),%rdi
  0x000001a89c97ae39: mov    %rdi,(%r8,%rsi,1)
  0x000001a89c97ae3d: je     0x000001a89c97af24  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@236

  0x000001a89c97ae43: mov    %rdx,%r8
  0x000001a89c97ae46: movabs $0x1a8b73de568,%rsi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ae50: addq   $0x1,0x4a0(%rsi)
  0x000001a89c97ae58: mov    0x98(%rsp),%r8
  0x000001a89c97ae60: mov    %rdx,%rsi
  0x000001a89c97ae63: mov    %rsi,%rdx          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244

  0x000001a89c97ae66: nop
  0x000001a89c97ae67: callq  0x000001a89c407000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@244
                                                ;   {optimized virtual_call}
  0x000001a89c97ae6c: movabs $0x1a8b73de568,%rax  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97ae76: incl   0x4b0(%rax)
  0x000001a89c97ae7c: jmpq   0x000001a89c97af24  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@247

  0x000001a89c97ae81: mov    0x88(%rsp),%rdx
  0x000001a89c97ae89: shl    $0x10,%eax
  0x000001a89c97ae8c: mov    %rax,%r8
  0x000001a89c97ae8f: add    $0x2,%r8d
  0x000001a89c97ae93: lea    0x14(%rdx),%r9
  0x000001a89c97ae97: mov    %rsi,%rax
  0x000001a89c97ae9a: lock cmpxchg %r8d,(%r9)
  0x000001a89c97ae9f: mov    $0x1,%r8d
  0x000001a89c97aea5: je     0x000001a89c97aeb1
  0x000001a89c97aeab: mov    $0x0,%r8d          ;*invokevirtual compareAndSetInt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@266

  0x000001a89c97aeb1: cmp    $0x0,%r8d
  0x000001a89c97aeb5: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97aebf: movabs $0x500,%r9
  0x000001a89c97aec9: je     0x000001a89c97aed9
  0x000001a89c97aecf: movabs $0x510,%r9
  0x000001a89c97aed9: mov    (%r8,%r9,1),%rsi
  0x000001a89c97aedd: lea    0x1(%rsi),%rsi
  0x000001a89c97aee1: mov    %rsi,(%r8,%r9,1)
  0x000001a89c97aee5: je     0x000001a89c97af24  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@269

  0x000001a89c97aeeb: mov    0x98(%rsp),%rdi
  0x000001a89c97aef3: mov    %rdx,%r8
  0x000001a89c97aef6: movabs $0x1a8b73de568,%r9  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97af00: addq   $0x1,0x520(%r9)
  0x000001a89c97af08: mov    %rdi,%r8
  0x000001a89c97af0b: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000001a89c97af15: mov    %rdx,%rsi
  0x000001a89c97af18: mov    %rsi,%rdx          ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276

  0x000001a89c97af1b: nopl   0x0(%rax)
  0x000001a89c97af1f: callq  0x000001a89c407000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokespecial transfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@276
                                                ;   {optimized virtual_call}
  0x000001a89c97af24: mov    0x88(%rsp),%rdx
  0x000001a89c97af2c: movabs $0x1a8b73de568,%rsi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97af36: addq   $0x1,0x530(%rsi)
  0x000001a89c97af3e: mov    0x88(%rsp),%rdx    ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280

  0x000001a89c97af46: nop
  0x000001a89c97af47: callq  0x000001a89c407000  ; ImmutableOopMap{[136]=Oop }
                                                ;*invokevirtual sumCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@280
                                                ;   {optimized virtual_call}
  0x000001a89c97af4c: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97af56: mov    0x100(%r8),%r9d
  0x000001a89c97af5d: add    $0x8,%r9d
  0x000001a89c97af61: mov    %r9d,0x100(%r8)
  0x000001a89c97af68: and    $0xfff8,%r9d
  0x000001a89c97af6f: cmp    $0x0,%r9d
  0x000001a89c97af73: je     0x000001a89c97b056  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x000001a89c97af79: mov    0x70(%r15),%r10    ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x000001a89c97af7d: test   %eax,(%r10)        ;   {poll}
  0x000001a89c97af80: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97af8a: incl   0x568(%r8)
  0x000001a89c97af91: mov    %rax,%rdi
  0x000001a89c97af94: jmpq   0x000001a89c97ab30  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285

  0x000001a89c97af99: movabs $0x1a8b73de568,%r8  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97afa3: incl   0x430(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@217

  0x000001a89c97afaa: add    $0xb0,%rsp
  0x000001a89c97afb1: pop    %rbp
  0x000001a89c97afb2: mov    0x70(%r15),%r10
  0x000001a89c97afb6: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97afb9: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@288

  0x000001a89c97afba: add    $0xb0,%rsp
  0x000001a89c97afc1: pop    %rbp
  0x000001a89c97afc2: mov    0x70(%r15),%r10
  0x000001a89c97afc6: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97afc9: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@113

  0x000001a89c97afca: mov    %rdx,%r9
  0x000001a89c97afcd: movabs $0x1a8b73de568,%rdi  ;   {metadata(method data for {method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97afd7: addq   $0x1,0x278(%rdi)
  0x000001a89c97afdf: mov    %rsi,%r9           ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104

  0x000001a89c97afe2: nopl   0x0(%rax,%rax,1)
  0x000001a89c97afe7: callq  0x000001a89c407000  ; ImmutableOopMap{}
                                                ;*invokespecial fullAddCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@104
                                                ;   {optimized virtual_call}
  0x000001a89c97afec: add    $0xb0,%rsp
  0x000001a89c97aff3: pop    %rbp
  0x000001a89c97aff4: mov    0x70(%r15),%r10
  0x000001a89c97aff8: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97affb: retq   
  0x000001a89c97affc: movabs $0x1a8b7286738,%r10  ;   {metadata({method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97b006: mov    %r10,0x8(%rsp)
  0x000001a89c97b00b: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97b013: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97b018: jmpq   0x000001a89c97a844
  0x000001a89c97b01d: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop [136]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@47
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97b022: mov    %rax,(%rsp)
  0x000001a89c97b026: callq  0x000001a89c43eda0  ; ImmutableOopMap{[136]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@64
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c97b02b: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[136]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@81
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97b030: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@150
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97b035: movabs $0x1a8b7286468,%r10  ;   {metadata({method} {0x000001a8b7286470} 'resizeStamp' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97b03f: mov    %r10,0x8(%rsp)
  0x000001a89c97b044: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97b04c: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop [152]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::resizeStamp@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@161
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97b051: jmpq   0x000001a89c97ac40
  0x000001a89c97b056: movabs $0x1a8b7286738,%r10  ;   {metadata({method} {0x000001a8b7286740} 'addCount' '(JI)V' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97b060: mov    %r10,0x8(%rsp)
  0x000001a89c97b065: movq   $0x11d,(%rsp)
  0x000001a89c97b06d: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::addCount@285
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97b072: jmpq   0x000001a89c97af79
  0x000001a89c97b077: nop
  0x000001a89c97b078: nop
  0x000001a89c97b079: mov    0x350(%r15),%rax
  0x000001a89c97b080: movabs $0x0,%r10
  0x000001a89c97b08a: mov    %r10,0x350(%r15)
  0x000001a89c97b091: movabs $0x0,%r10
  0x000001a89c97b09b: mov    %r10,0x358(%r15)
  0x000001a89c97b0a2: add    $0xb0,%rsp
  0x000001a89c97b0a9: pop    %rbp
  0x000001a89c97b0aa: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97b0af: hlt    
  0x000001a89c97b0b0: hlt    
  0x000001a89c97b0b1: hlt    
  0x000001a89c97b0b2: hlt    
  0x000001a89c97b0b3: hlt    
  0x000001a89c97b0b4: hlt    
  0x000001a89c97b0b5: hlt    
  0x000001a89c97b0b6: hlt    
  0x000001a89c97b0b7: hlt    
  0x000001a89c97b0b8: hlt    
  0x000001a89c97b0b9: hlt    
  0x000001a89c97b0ba: hlt    
  0x000001a89c97b0bb: hlt    
  0x000001a89c97b0bc: hlt    
  0x000001a89c97b0bd: hlt    
  0x000001a89c97b0be: hlt    
  0x000001a89c97b0bf: hlt    
[Stub Code]
  0x000001a89c97b0c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97b0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b0cf: jmpq   0x000001a89c97b0cf  ;   {runtime_call}
  0x000001a89c97b0d4: nop
  0x000001a89c97b0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b0df: jmpq   0x000001a89c97b0df  ;   {runtime_call}
  0x000001a89c97b0e4: nop
  0x000001a89c97b0e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b0ef: jmpq   0x000001a89c97b0ef  ;   {runtime_call}
  0x000001a89c97b0f4: nop
  0x000001a89c97b0f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b0ff: jmpq   0x000001a89c97b0ff  ;   {runtime_call}
  0x000001a89c97b104: nop
  0x000001a89c97b105: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b10f: jmpq   0x000001a89c97b10f  ;   {runtime_call}
  0x000001a89c97b114: nop
  0x000001a89c97b115: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b11f: jmpq   0x000001a89c97b11f  ;   {runtime_call}
  0x000001a89c97b124: nop
  0x000001a89c97b125: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97b12f: jmpq   0x000001a89c97b12f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97b134: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97b139: mov    %rsp,-0x28(%rsp)
  0x000001a89c97b13e: sub    $0x80,%rsp
  0x000001a89c97b145: mov    %rax,0x78(%rsp)
  0x000001a89c97b14a: mov    %rcx,0x70(%rsp)
  0x000001a89c97b14f: mov    %rdx,0x68(%rsp)
  0x000001a89c97b154: mov    %rbx,0x60(%rsp)
  0x000001a89c97b159: mov    %rbp,0x50(%rsp)
  0x000001a89c97b15e: mov    %rsi,0x48(%rsp)
  0x000001a89c97b163: mov    %rdi,0x40(%rsp)
  0x000001a89c97b168: mov    %r8,0x38(%rsp)
  0x000001a89c97b16d: mov    %r9,0x30(%rsp)
  0x000001a89c97b172: mov    %r10,0x28(%rsp)
  0x000001a89c97b177: mov    %r11,0x20(%rsp)
  0x000001a89c97b17c: mov    %r12,0x18(%rsp)
  0x000001a89c97b181: mov    %r13,0x10(%rsp)
  0x000001a89c97b186: mov    %r14,0x8(%rsp)
  0x000001a89c97b18b: mov    %r15,(%rsp)
  0x000001a89c97b18f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97b199: movabs $0x1a89c97b139,%rdx  ;   {internal_word}
  0x000001a89c97b1a3: mov    %rsp,%r8
  0x000001a89c97b1a6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97b1aa: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97b1b4: callq  *%r10
  0x000001a89c97b1b7: hlt    
[Deopt Handler Code]
  0x000001a89c97b1b8: movabs $0x1a89c97b1b8,%r10  ;   {section_word}
  0x000001a89c97b1c2: push   %r10
  0x000001a89c97b1c4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97b1c9: hlt    
  0x000001a89c97b1ca: hlt    
  0x000001a89c97b1cb: hlt    
  0x000001a89c97b1cc: hlt    
  0x000001a89c97b1cd: hlt    
  0x000001a89c97b1ce: hlt    
  0x000001a89c97b1cf: hlt    

ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 428 
ImmutableOopMap{[136]=Oop }pc offsets: 780 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 1148 
ImmutableOopMap{[136]=Oop }pc offsets: 1676 1860 1900 1949 
ImmutableOopMap{}pc offsets: 2060 
ImmutableOopMap{rdx=Oop [136]=Oop }pc offsets: 2104 
ImmutableOopMap{rdx=Oop [136]=Oop rsi=Oop }pc offsets: 2114 
ImmutableOopMap{[136]=Oop rsi=Oop }pc offsets: 2123 
ImmutableOopMap{[136]=Oop rax=Oop }pc offsets: 2128 
ImmutableOopMap{rdx=Oop [136]=Oop rdi=Oop }pc offsets: 2133 
ImmutableOopMap{[136]=Oop [152]=Oop }pc offsets: 2161 
ImmutableOopMap{[136]=Oop }pc offsets: 2194 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea2220, 0x000001a8a3ea2250]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74dfe20} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  # parm5:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  0x000001a8a3ea2220: mov    0x14(%rdx),%ebx
  0x000001a8a3ea2223: shl    $0x3,%rbx
  0x000001a8a3ea2227: mov    0x28(%rbx),%ebx
  0x000001a8a3ea222a: shl    $0x3,%rbx
  0x000001a8a3ea222e: mov    0x24(%rbx),%ebx
  0x000001a8a3ea2231: shl    $0x3,%rbx
  0x000001a8a3ea2235: mov    0x10(%rbx),%rbx
  0x000001a8a3ea2239: test   %rbx,%rbx
  0x000001a8a3ea223c: je     0x000001a8a3ea2245
  0x000001a8a3ea2242: jmpq   *0x38(%rbx)
  0x000001a8a3ea2245: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea224a: hlt    
  0x000001a8a3ea224b: hlt    
  0x000001a8a3ea224c: hlt    
  0x000001a8a3ea224d: hlt    
  0x000001a8a3ea224e: hlt    
  0x000001a8a3ea224f: hlt    
Compiled method (c1)     305   14       3       java.util.Objects::requireNonNull (14 bytes)
 total in heap  [0x000001a89c97b910,0x000001a89c97be10] = 1280
 relocation     [0x000001a89c97ba88,0x000001a89c97bac8] = 64
 main code      [0x000001a89c97bae0,0x000001a89c97bc60] = 384
 stub code      [0x000001a89c97bc60,0x000001a89c97bd10] = 176
 metadata       [0x000001a89c97bd10,0x000001a89c97bd18] = 8
 scopes data    [0x000001a89c97bd18,0x000001a89c97bd58] = 64
 scopes pcs     [0x000001a89c97bd58,0x000001a89c97be08] = 176
 dependencies   [0x000001a89c97be08,0x000001a89c97be10] = 8
----------------------------------------------------------------------
java/util/Objects.requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a89c97bae0, 0x000001a89c97bd10]  560 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7271d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97bae0: mov    %eax,-0x7000(%rsp)
  0x000001a89c97bae7: push   %rbp
  0x000001a89c97bae8: sub    $0x30,%rsp
  0x000001a89c97baec: movabs $0x1a8b73a1198,%rax  ;   {metadata(method data for {method} {0x000001a8b7271d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000001a89c97baf6: mov    0xfc(%rax),%esi
  0x000001a89c97bafc: add    $0x8,%esi
  0x000001a89c97baff: mov    %esi,0xfc(%rax)
  0x000001a89c97bb05: and    $0x1ff8,%esi
  0x000001a89c97bb0b: cmp    $0x0,%esi
  0x000001a89c97bb0e: je     0x000001a89c97bbde  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@0

  0x000001a89c97bb14: cmp    $0x0,%rdx
  0x000001a89c97bb18: movabs $0x1a8b73a1198,%rax  ;   {metadata(method data for {method} {0x000001a8b7271d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000001a89c97bb22: movabs $0x148,%rsi
  0x000001a89c97bb2c: je     0x000001a89c97bb3c
  0x000001a89c97bb32: movabs $0x138,%rsi
  0x000001a89c97bb3c: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97bb40: lea    0x1(%rdi),%rdi
  0x000001a89c97bb44: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97bb48: je     0x000001a89c97bb5e  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@1

  0x000001a89c97bb4e: mov    %rdx,%rax
  0x000001a89c97bb51: add    $0x30,%rsp
  0x000001a89c97bb55: pop    %rbp
  0x000001a89c97bb56: mov    0x70(%r15),%r10
  0x000001a89c97bb5a: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97bb5d: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@13

  0x000001a89c97bb5e: xchg   %ax,%ax
  0x000001a89c97bb60: jmpq   0x000001a89c97bc0e  ;   {no_reloc}
  0x000001a89c97bb65: add    %al,(%rax)
  0x000001a89c97bb67: add    %al,(%rax)
  0x000001a89c97bb69: add    %cl,-0x75(%rcx)
  0x000001a89c97bb6c: xchg   %eax,0x48000000(%rax)
  0x000001a89c97bb72: lea    0x28(%rax),%edi
  0x000001a89c97bb75: cmp    0x90(%r15),%rdi
  0x000001a89c97bb7c: ja     0x000001a89c97bc18
  0x000001a89c97bb82: mov    %rdi,0x80(%r15)
  0x000001a89c97bb89: mov    0xb0(%rdx),%rcx
  0x000001a89c97bb90: mov    %rcx,(%rax)
  0x000001a89c97bb93: mov    %rdx,%rcx
  0x000001a89c97bb96: shr    $0x3,%rcx
  0x000001a89c97bb9a: mov    %ecx,0x8(%rax)
  0x000001a89c97bb9d: xor    %rcx,%rcx
  0x000001a89c97bba0: mov    %ecx,0xc(%rax)
  0x000001a89c97bba3: xor    %rcx,%rcx
  0x000001a89c97bba6: mov    %rcx,0x10(%rax)
  0x000001a89c97bbaa: mov    %rcx,0x18(%rax)
  0x000001a89c97bbae: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4

  0x000001a89c97bbb2: mov    %rax,%rdx
  0x000001a89c97bbb5: movabs $0x1a8b73a1198,%rsi  ;   {metadata(method data for {method} {0x000001a8b7271d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000001a89c97bbbf: addq   $0x1,0x158(%rsi)
  0x000001a89c97bbc7: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8

  0x000001a89c97bbca: mov    %rax,0x20(%rsp)
  0x000001a89c97bbcf: callq  0x000001a89c407000  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@8
                                                ;   {optimized virtual_call}
  0x000001a89c97bbd4: mov    0x20(%rsp),%rax
  0x000001a89c97bbd9: jmpq   0x000001a89c97bc4d
  0x000001a89c97bbde: movabs $0x1a8b7271d60,%r10  ;   {metadata({method} {0x000001a8b7271d68} 'requireNonNull' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/Objects')}
  0x000001a89c97bbe8: mov    %r10,0x8(%rsp)
  0x000001a89c97bbed: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97bbf5: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::requireNonNull@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97bbfa: jmpq   0x000001a89c97bb14
  0x000001a89c97bbff: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c97bc09: mov    $0xa050f00,%eax
  0x000001a89c97bc0e: callq  0x000001a89c4d0a00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c97bc13: jmpq   0x000001a89c97bb60
  0x000001a89c97bc18: mov    %rdx,%rdx
  0x000001a89c97bc1b: callq  0x000001a89c4cd400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::requireNonNull@4
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c97bc20: jmp    0x000001a89c97bbb2
  0x000001a89c97bc22: nop
  0x000001a89c97bc23: nop
  0x000001a89c97bc24: mov    0x350(%r15),%rax
  0x000001a89c97bc2b: movabs $0x0,%r10
  0x000001a89c97bc35: mov    %r10,0x350(%r15)
  0x000001a89c97bc3c: movabs $0x0,%r10
  0x000001a89c97bc46: mov    %r10,0x358(%r15)
  0x000001a89c97bc4d: add    $0x30,%rsp
  0x000001a89c97bc51: pop    %rbp
  0x000001a89c97bc52: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97bc57: hlt    
  0x000001a89c97bc58: hlt    
  0x000001a89c97bc59: hlt    
  0x000001a89c97bc5a: hlt    
  0x000001a89c97bc5b: hlt    
  0x000001a89c97bc5c: hlt    
  0x000001a89c97bc5d: hlt    
  0x000001a89c97bc5e: hlt    
  0x000001a89c97bc5f: hlt    
[Stub Code]
  0x000001a89c97bc60: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97bc65: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97bc6f: jmpq   0x000001a89c97bc6f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97bc74: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97bc79: mov    %rsp,-0x28(%rsp)
  0x000001a89c97bc7e: sub    $0x80,%rsp
  0x000001a89c97bc85: mov    %rax,0x78(%rsp)
  0x000001a89c97bc8a: mov    %rcx,0x70(%rsp)
  0x000001a89c97bc8f: mov    %rdx,0x68(%rsp)
  0x000001a89c97bc94: mov    %rbx,0x60(%rsp)
  0x000001a89c97bc99: mov    %rbp,0x50(%rsp)
  0x000001a89c97bc9e: mov    %rsi,0x48(%rsp)
  0x000001a89c97bca3: mov    %rdi,0x40(%rsp)
  0x000001a89c97bca8: mov    %r8,0x38(%rsp)
  0x000001a89c97bcad: mov    %r9,0x30(%rsp)
  0x000001a89c97bcb2: mov    %r10,0x28(%rsp)
  0x000001a89c97bcb7: mov    %r11,0x20(%rsp)
  0x000001a89c97bcbc: mov    %r12,0x18(%rsp)
  0x000001a89c97bcc1: mov    %r13,0x10(%rsp)
  0x000001a89c97bcc6: mov    %r14,0x8(%rsp)
  0x000001a89c97bccb: mov    %r15,(%rsp)
  0x000001a89c97bccf: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97bcd9: movabs $0x1a89c97bc79,%rdx  ;   {internal_word}
  0x000001a89c97bce3: mov    %rsp,%r8
  0x000001a89c97bce6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97bcea: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97bcf4: callq  *%r10
  0x000001a89c97bcf7: hlt    
[Deopt Handler Code]
  0x000001a89c97bcf8: movabs $0x1a89c97bcf8,%r10  ;   {section_word}
  0x000001a89c97bd02: push   %r10
  0x000001a89c97bd04: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97bd09: hlt    
  0x000001a89c97bd0a: hlt    
  0x000001a89c97bd0b: hlt    
  0x000001a89c97bd0c: hlt    
  0x000001a89c97bd0d: hlt    
  0x000001a89c97bd0e: hlt    
  0x000001a89c97bd0f: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 244 
ImmutableOopMap{rdx=Oop }pc offsets: 282 
ImmutableOopMap{}pc offsets: 307 320 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea2420, 0x000001a8a3ea2448]  40 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74dffd8} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/Object'
  # parm6:    [sp+0x0]   = 'java/lang/Object'  (sp of caller)
  # parm7:    [sp+0x8]   = 'java/lang/invoke/MemberName'
  0x000001a8a3ea2420: mov    0x10(%rsp),%rbx
  0x000001a8a3ea2425: cmp    (%rdx),%rax
  0x000001a8a3ea2428: mov    0x24(%rbx),%ebx
  0x000001a8a3ea242b: shl    $0x3,%rbx
  0x000001a8a3ea242f: mov    0x10(%rbx),%rbx
  0x000001a8a3ea2433: test   %rbx,%rbx
  0x000001a8a3ea2436: je     0x000001a8a3ea243f
  0x000001a8a3ea243c: jmpq   *0x38(%rbx)
  0x000001a8a3ea243f: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea2444: hlt    
  0x000001a8a3ea2445: hlt    
  0x000001a8a3ea2446: hlt    
  0x000001a8a3ea2447: hlt    
Compiled method (c1)     309   20       3       java.util.Objects::equals (23 bytes)
 total in heap  [0x000001a89c97be90,0x000001a89c97c458] = 1480
 relocation     [0x000001a89c97c008,0x000001a89c97c048] = 64
 main code      [0x000001a89c97c060,0x000001a89c97c280] = 544
 stub code      [0x000001a89c97c280,0x000001a89c97c330] = 176
 metadata       [0x000001a89c97c330,0x000001a89c97c338] = 8
 scopes data    [0x000001a89c97c338,0x000001a89c97c380] = 72
 scopes pcs     [0x000001a89c97c380,0x000001a89c97c440] = 192
 dependencies   [0x000001a89c97c440,0x000001a89c97c448] = 8
 nul chk table  [0x000001a89c97c448,0x000001a89c97c458] = 16
----------------------------------------------------------------------
java/util/Objects.equals(Ljava/lang/Object;Ljava/lang/Object;)Z  [0x000001a89c97c060, 0x000001a89c97c330]  720 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97c060: mov    %eax,-0x7000(%rsp)
  0x000001a89c97c067: push   %rbp
  0x000001a89c97c068: sub    $0x30,%rsp
  0x000001a89c97c06c: movabs $0x1a8b73dac78,%rsi  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c076: mov    0xfc(%rsi),%edi
  0x000001a89c97c07c: add    $0x8,%edi
  0x000001a89c97c07f: mov    %edi,0xfc(%rsi)
  0x000001a89c97c085: and    $0x1ff8,%edi
  0x000001a89c97c08b: cmp    $0x0,%edi
  0x000001a89c97c08e: je     0x000001a89c97c214  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@0

  0x000001a89c97c094: cmp    %r8,%rdx
  0x000001a89c97c097: movabs $0x1a8b73dac78,%rsi  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c0a1: movabs $0x138,%rdi
  0x000001a89c97c0ab: je     0x000001a89c97c0bb
  0x000001a89c97c0b1: movabs $0x148,%rdi
  0x000001a89c97c0bb: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97c0bf: lea    0x1(%rbx),%rbx
  0x000001a89c97c0c3: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97c0c7: je     0x000001a89c97c1ef  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@2

  0x000001a89c97c0cd: cmp    $0x0,%rdx
  0x000001a89c97c0d1: movabs $0x1a8b73dac78,%rsi  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c0db: movabs $0x158,%rdi
  0x000001a89c97c0e5: je     0x000001a89c97c0f5
  0x000001a89c97c0eb: movabs $0x168,%rdi
  0x000001a89c97c0f5: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97c0f9: lea    0x1(%rbx),%rbx
  0x000001a89c97c0fd: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97c101: je     0x000001a89c97c1e5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@6

  0x000001a89c97c107: cmp    (%rdx),%rax        ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11
                                                ; implicit exception: dispatches to 0x000001a89c97c235
  0x000001a89c97c10a: mov    %rdx,%rsi
  0x000001a89c97c10d: movabs $0x1a8b73dac78,%rdi  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c117: mov    0x8(%rsi),%esi
  0x000001a89c97c11a: shl    $0x3,%rsi
  0x000001a89c97c11e: cmp    0x188(%rdi),%rsi
  0x000001a89c97c125: jne    0x000001a89c97c134
  0x000001a89c97c127: addq   $0x1,0x190(%rdi)
  0x000001a89c97c12f: jmpq   0x000001a89c97c19a
  0x000001a89c97c134: cmp    0x198(%rdi),%rsi
  0x000001a89c97c13b: jne    0x000001a89c97c14a
  0x000001a89c97c13d: addq   $0x1,0x1a0(%rdi)
  0x000001a89c97c145: jmpq   0x000001a89c97c19a
  0x000001a89c97c14a: cmpq   $0x0,0x188(%rdi)
  0x000001a89c97c155: jne    0x000001a89c97c16e
  0x000001a89c97c157: mov    %rsi,0x188(%rdi)
  0x000001a89c97c15e: movq   $0x1,0x190(%rdi)
  0x000001a89c97c169: jmpq   0x000001a89c97c19a
  0x000001a89c97c16e: cmpq   $0x0,0x198(%rdi)
  0x000001a89c97c179: jne    0x000001a89c97c192
  0x000001a89c97c17b: mov    %rsi,0x198(%rdi)
  0x000001a89c97c182: movq   $0x1,0x1a0(%rdi)
  0x000001a89c97c18d: jmpq   0x000001a89c97c19a
  0x000001a89c97c192: addq   $0x1,0x178(%rdi)
  0x000001a89c97c19a: data16 xchg %ax,%ax
  0x000001a89c97c19d: movabs $0xffffffffffffffff,%rax
  0x000001a89c97c1a7: callq  0x000001a89c407280  ; ImmutableOopMap{}
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11
                                                ;   {virtual_call}
  0x000001a89c97c1ac: cmp    $0x0,%eax
  0x000001a89c97c1af: movabs $0x1a8b73dac78,%rax  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c1b9: movabs $0x1c0,%rsi
  0x000001a89c97c1c3: jne    0x000001a89c97c1d3
  0x000001a89c97c1c9: movabs $0x1b0,%rsi
  0x000001a89c97c1d3: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97c1d7: lea    0x1(%rdi),%rdi
  0x000001a89c97c1db: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97c1df: jne    0x000001a89c97c1ef  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@14

  0x000001a89c97c1e5: mov    $0x0,%eax
  0x000001a89c97c1ea: jmpq   0x000001a89c97c204  ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@22

  0x000001a89c97c1ef: movabs $0x1a8b73dac78,%rax  ;   {metadata(method data for {method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c1f9: incl   0x1d0(%rax)
  0x000001a89c97c1ff: mov    $0x1,%eax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@18

  0x000001a89c97c204: and    $0x1,%eax
  0x000001a89c97c207: add    $0x30,%rsp
  0x000001a89c97c20b: pop    %rbp
  0x000001a89c97c20c: mov    0x70(%r15),%r10
  0x000001a89c97c210: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97c213: retq   
  0x000001a89c97c214: movabs $0x1a8b7271900,%r10  ;   {metadata({method} {0x000001a8b7271908} 'equals' '(Ljava/lang/Object;Ljava/lang/Object;)Z' in 'java/util/Objects')}
  0x000001a89c97c21e: mov    %r10,0x8(%rsp)
  0x000001a89c97c223: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97c22b: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Objects::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97c230: jmpq   0x000001a89c97c094
  0x000001a89c97c235: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Objects::equals@11
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97c23a: nop
  0x000001a89c97c23b: nop
  0x000001a89c97c23c: mov    0x350(%r15),%rax
  0x000001a89c97c243: movabs $0x0,%r10
  0x000001a89c97c24d: mov    %r10,0x350(%r15)
  0x000001a89c97c254: movabs $0x0,%r10
  0x000001a89c97c25e: mov    %r10,0x358(%r15)
  0x000001a89c97c265: add    $0x30,%rsp
  0x000001a89c97c269: pop    %rbp
  0x000001a89c97c26a: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97c26f: hlt    
  0x000001a89c97c270: hlt    
  0x000001a89c97c271: hlt    
  0x000001a89c97c272: hlt    
  0x000001a89c97c273: hlt    
  0x000001a89c97c274: hlt    
  0x000001a89c97c275: hlt    
  0x000001a89c97c276: hlt    
  0x000001a89c97c277: hlt    
  0x000001a89c97c278: hlt    
  0x000001a89c97c279: hlt    
  0x000001a89c97c27a: hlt    
  0x000001a89c97c27b: hlt    
  0x000001a89c97c27c: hlt    
  0x000001a89c97c27d: hlt    
  0x000001a89c97c27e: hlt    
  0x000001a89c97c27f: hlt    
[Stub Code]
  0x000001a89c97c280: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97c285: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97c28f: jmpq   0x000001a89c97c28f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97c294: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97c299: mov    %rsp,-0x28(%rsp)
  0x000001a89c97c29e: sub    $0x80,%rsp
  0x000001a89c97c2a5: mov    %rax,0x78(%rsp)
  0x000001a89c97c2aa: mov    %rcx,0x70(%rsp)
  0x000001a89c97c2af: mov    %rdx,0x68(%rsp)
  0x000001a89c97c2b4: mov    %rbx,0x60(%rsp)
  0x000001a89c97c2b9: mov    %rbp,0x50(%rsp)
  0x000001a89c97c2be: mov    %rsi,0x48(%rsp)
  0x000001a89c97c2c3: mov    %rdi,0x40(%rsp)
  0x000001a89c97c2c8: mov    %r8,0x38(%rsp)
  0x000001a89c97c2cd: mov    %r9,0x30(%rsp)
  0x000001a89c97c2d2: mov    %r10,0x28(%rsp)
  0x000001a89c97c2d7: mov    %r11,0x20(%rsp)
  0x000001a89c97c2dc: mov    %r12,0x18(%rsp)
  0x000001a89c97c2e1: mov    %r13,0x10(%rsp)
  0x000001a89c97c2e6: mov    %r14,0x8(%rsp)
  0x000001a89c97c2eb: mov    %r15,(%rsp)
  0x000001a89c97c2ef: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97c2f9: movabs $0x1a89c97c299,%rdx  ;   {internal_word}
  0x000001a89c97c303: mov    %rsp,%r8
  0x000001a89c97c306: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97c30a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97c314: callq  *%r10
  0x000001a89c97c317: hlt    
[Deopt Handler Code]
  0x000001a89c97c318: movabs $0x1a89c97c318,%r10  ;   {section_word}
  0x000001a89c97c322: push   %r10
  0x000001a89c97c324: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97c329: hlt    
  0x000001a89c97c32a: hlt    
  0x000001a89c97c32b: hlt    
  0x000001a89c97c32c: hlt    
  0x000001a89c97c32d: hlt    
  0x000001a89c97c32e: hlt    
  0x000001a89c97c32f: hlt    

ImmutableOopMap{}pc offsets: 332 
ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 464 
ImmutableOopMap{r8=Oop rdx=Oop }pc offsets: 474 Compiled method (c2)     311   58       4       java.lang.String::coder (15 bytes)
 total in heap  [0x000001a8a3ea2690,0x000001a8a3ea28d8] = 584
 relocation     [0x000001a8a3ea2808,0x000001a8a3ea2818] = 16
 main code      [0x000001a8a3ea2820,0x000001a8a3ea2860] = 64
 stub code      [0x000001a8a3ea2860,0x000001a8a3ea2878] = 24
 metadata       [0x000001a8a3ea2878,0x000001a8a3ea2880] = 8
 scopes data    [0x000001a8a3ea2880,0x000001a8a3ea2890] = 16
 scopes pcs     [0x000001a8a3ea2890,0x000001a8a3ea28d0] = 64
 dependencies   [0x000001a8a3ea28d0,0x000001a8a3ea28d8] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x000001a8a3ea2820, 0x000001a8a3ea2878]  88 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x000001a8a3ea2820: mov    0x8(%rdx),%r10d
  0x000001a8a3ea2824: shl    $0x3,%r10
  0x000001a8a3ea2828: cmp    %r10,%rax
  0x000001a8a3ea282b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea2831: data16 xchg %ax,%ax
  0x000001a8a3ea2834: nopl   0x0(%rax,%rax,1)
  0x000001a8a3ea283c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea2840: sub    $0x18,%rsp
  0x000001a8a3ea2847: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::coder@-1

  0x000001a8a3ea284c: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7

  0x000001a8a3ea2850: add    $0x10,%rsp
  0x000001a8a3ea2854: pop    %rbp
  0x000001a8a3ea2855: mov    0x70(%r15),%r10
  0x000001a8a3ea2859: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea285c: retq   
  0x000001a8a3ea285d: hlt    
  0x000001a8a3ea285e: hlt    
  0x000001a8a3ea285f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea2860: jmpq   0x000001a89c43f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a8a3ea2865: callq  0x000001a8a3ea286a
  0x000001a8a3ea286a: subq   $0x5,(%rsp)
  0x000001a8a3ea286f: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea2874: hlt    
  0x000001a8a3ea2875: hlt    
  0x000001a8a3ea2876: hlt    
  0x000001a8a3ea2877: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea2620, 0x000001a8a3ea2640]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74f7670} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea2620: mov    0x24(%r9),%ebx
  0x000001a8a3ea2624: shl    $0x3,%rbx
  0x000001a8a3ea2628: mov    0x10(%rbx),%rbx
  0x000001a8a3ea262c: test   %rbx,%rbx
  0x000001a8a3ea262f: je     0x000001a8a3ea2638
  0x000001a8a3ea2635: jmpq   *0x38(%rbx)
  0x000001a8a3ea2638: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea263d: hlt    
  0x000001a8a3ea263e: hlt    
  0x000001a8a3ea263f: hlt    
Compiled method (c1)     312    2       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000001a89c97c490,0x000001a89c97ca28] = 1432
 relocation     [0x000001a89c97c608,0x000001a89c97c648] = 64
 main code      [0x000001a89c97c660,0x000001a89c97c8c0] = 608
 stub code      [0x000001a89c97c8c0,0x000001a89c97c958] = 152
 oops           [0x000001a89c97c958,0x000001a89c97c960] = 8
 metadata       [0x000001a89c97c960,0x000001a89c97c970] = 16
 scopes data    [0x000001a89c97c970,0x000001a89c97c9b0] = 64
 scopes pcs     [0x000001a89c97c9b0,0x000001a89c97ca20] = 112
 dependencies   [0x000001a89c97ca20,0x000001a89c97ca28] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x000001a89c97c660, 0x000001a89c97c958]  760 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000001a89c97c660: mov    %eax,-0x7000(%rsp)
  0x000001a89c97c667: push   %rbp
  0x000001a89c97c668: sub    $0x70,%rsp
  0x000001a89c97c66c: movabs $0x1a8b73dd7a0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c676: mov    0xfc(%rcx),%eax
  0x000001a89c97c67c: add    $0x8,%eax
  0x000001a89c97c67f: mov    %eax,0xfc(%rcx)
  0x000001a89c97c685: and    $0x1ff8,%eax
  0x000001a89c97c68b: cmp    $0x0,%eax
  0x000001a89c97c68e: je     0x000001a89c97c82b  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x000001a89c97c694: movabs $0x1a8b73dd7a0,%rcx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c69e: lea    0x170(%rcx),%rcx
  0x000001a89c97c6a5: mov    %rdx,%rax
  0x000001a89c97c6a8: test   %rax,%rax
  0x000001a89c97c6ab: jne    0x000001a89c97c6b7
  0x000001a89c97c6ad: orq    $0x1,0x8(%rcx)
  0x000001a89c97c6b5: jmp    0x000001a89c97c6da
  0x000001a89c97c6b7: mov    0x8(%rax),%eax
  0x000001a89c97c6ba: shl    $0x3,%rax
  0x000001a89c97c6be: xor    0x8(%rcx),%rax
  0x000001a89c97c6c2: test   $0xfffffffffffffffc,%rax
  0x000001a89c97c6c8: je     0x000001a89c97c6da
  0x000001a89c97c6ca: test   $0x2,%rax
  0x000001a89c97c6d0: jne    0x000001a89c97c6da
  0x000001a89c97c6d2: orq    $0x2,0x8(%rcx)
  0x000001a89c97c6da: movabs $0x6d1708638,%rcx  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a89c97c6e4: movabs $0x1a8b73dd7a0,%rax  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c6ee: addq   $0x1,0x138(%rax)
  0x000001a89c97c6f6: movslq %r8d,%r8
  0x000001a89c97c6f9: mov    $0x2,%ecx
  0x000001a89c97c6fe: shl    %cl,%r8
  0x000001a89c97c701: movabs $0x10,%r10
  0x000001a89c97c70b: add    %r10,%r8
  0x000001a89c97c70e: movabs $0x1a8b73dd9a8,%rax  ;   {metadata(method data for {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c97c718: mov    0xfc(%rax),%esi
  0x000001a89c97c71e: add    $0x8,%esi
  0x000001a89c97c721: mov    %esi,0xfc(%rax)
  0x000001a89c97c727: and    $0x7ffff8,%esi
  0x000001a89c97c72d: cmp    $0x0,%esi
  0x000001a89c97c730: je     0x000001a89c97c84c
  0x000001a89c97c736: mov    (%rdx,%r8,1),%eax
  0x000001a89c97c73a: shl    $0x3,%rax
  0x000001a89c97c73e: cmp    $0x0,%rax
  0x000001a89c97c742: jne    0x000001a89c97c75d
  0x000001a89c97c744: movabs $0x1a8b73dd7a0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c74e: orl    $0x100,0x180(%rdi)
  0x000001a89c97c758: jmpq   0x000001a89c97c81e
  0x000001a89c97c75d: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c97c767: mov    0x8(%rax),%edi
  0x000001a89c97c76a: shl    $0x3,%rdi
  0x000001a89c97c76e: cmp    0x30(%rdi),%rbx
  0x000001a89c97c772: jne    0x000001a89c97c802
  0x000001a89c97c778: movabs $0x1a8b73dd7a0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c782: mov    0x8(%rax),%ebx
  0x000001a89c97c785: shl    $0x3,%rbx
  0x000001a89c97c789: cmp    0x198(%rdi),%rbx
  0x000001a89c97c790: jne    0x000001a89c97c79f
  0x000001a89c97c792: addq   $0x1,0x1a0(%rdi)
  0x000001a89c97c79a: jmpq   0x000001a89c97c81e
  0x000001a89c97c79f: cmp    0x1a8(%rdi),%rbx
  0x000001a89c97c7a6: jne    0x000001a89c97c7b5
  0x000001a89c97c7a8: addq   $0x1,0x1b0(%rdi)
  0x000001a89c97c7b0: jmpq   0x000001a89c97c81e
  0x000001a89c97c7b5: cmpq   $0x0,0x198(%rdi)
  0x000001a89c97c7c0: jne    0x000001a89c97c7d9
  0x000001a89c97c7c2: mov    %rbx,0x198(%rdi)
  0x000001a89c97c7c9: movq   $0x1,0x1a0(%rdi)
  0x000001a89c97c7d4: jmpq   0x000001a89c97c81e
  0x000001a89c97c7d9: cmpq   $0x0,0x1a8(%rdi)
  0x000001a89c97c7e4: jne    0x000001a89c97c7fd
  0x000001a89c97c7e6: mov    %rbx,0x1a8(%rdi)
  0x000001a89c97c7ed: movq   $0x1,0x1b0(%rdi)
  0x000001a89c97c7f8: jmpq   0x000001a89c97c81e
  0x000001a89c97c7fd: jmpq   0x000001a89c97c81e
  0x000001a89c97c802: movabs $0x1a8b73dd7a0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c80c: subq   $0x1,0x188(%rdi)
  0x000001a89c97c814: jmpq   0x000001a89c97c86d
  0x000001a89c97c819: jmpq   0x000001a89c97c81e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18

  0x000001a89c97c81e: add    $0x70,%rsp
  0x000001a89c97c822: pop    %rbp
  0x000001a89c97c823: mov    0x70(%r15),%r10
  0x000001a89c97c827: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97c82a: retq   
  0x000001a89c97c82b: movabs $0x1a8b7283250,%r10  ;   {metadata({method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97c835: mov    %r10,0x8(%rsp)
  0x000001a89c97c83a: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97c842: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97c847: jmpq   0x000001a89c97c694
  0x000001a89c97c84c: movabs $0x1a8b720e6a0,%r10  ;   {metadata({method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c97c856: mov    %r10,0x8(%rsp)
  0x000001a89c97c85b: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97c863: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97c868: jmpq   0x000001a89c97c736
  0x000001a89c97c86d: mov    %rax,(%rsp)
  0x000001a89c97c871: callq  0x000001a89c4ceca0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c97c876: nop
  0x000001a89c97c877: nop
  0x000001a89c97c878: mov    0x350(%r15),%rax
  0x000001a89c97c87f: movabs $0x0,%r10
  0x000001a89c97c889: mov    %r10,0x350(%r15)
  0x000001a89c97c890: movabs $0x0,%r10
  0x000001a89c97c89a: mov    %r10,0x358(%r15)
  0x000001a89c97c8a1: add    $0x70,%rsp
  0x000001a89c97c8a5: pop    %rbp
  0x000001a89c97c8a6: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97c8ab: hlt    
  0x000001a89c97c8ac: hlt    
  0x000001a89c97c8ad: hlt    
  0x000001a89c97c8ae: hlt    
  0x000001a89c97c8af: hlt    
  0x000001a89c97c8b0: hlt    
  0x000001a89c97c8b1: hlt    
  0x000001a89c97c8b2: hlt    
  0x000001a89c97c8b3: hlt    
  0x000001a89c97c8b4: hlt    
  0x000001a89c97c8b5: hlt    
  0x000001a89c97c8b6: hlt    
  0x000001a89c97c8b7: hlt    
  0x000001a89c97c8b8: hlt    
  0x000001a89c97c8b9: hlt    
  0x000001a89c97c8ba: hlt    
  0x000001a89c97c8bb: hlt    
  0x000001a89c97c8bc: hlt    
  0x000001a89c97c8bd: hlt    
  0x000001a89c97c8be: hlt    
  0x000001a89c97c8bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97c8c0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97c8c5: mov    %rsp,-0x28(%rsp)
  0x000001a89c97c8ca: sub    $0x80,%rsp
  0x000001a89c97c8d1: mov    %rax,0x78(%rsp)
  0x000001a89c97c8d6: mov    %rcx,0x70(%rsp)
  0x000001a89c97c8db: mov    %rdx,0x68(%rsp)
  0x000001a89c97c8e0: mov    %rbx,0x60(%rsp)
  0x000001a89c97c8e5: mov    %rbp,0x50(%rsp)
  0x000001a89c97c8ea: mov    %rsi,0x48(%rsp)
  0x000001a89c97c8ef: mov    %rdi,0x40(%rsp)
  0x000001a89c97c8f4: mov    %r8,0x38(%rsp)
  0x000001a89c97c8f9: mov    %r9,0x30(%rsp)
  0x000001a89c97c8fe: mov    %r10,0x28(%rsp)
  0x000001a89c97c903: mov    %r11,0x20(%rsp)
  0x000001a89c97c908: mov    %r12,0x18(%rsp)
  0x000001a89c97c90d: mov    %r13,0x10(%rsp)
  0x000001a89c97c912: mov    %r14,0x8(%rsp)
  0x000001a89c97c917: mov    %r15,(%rsp)
  0x000001a89c97c91b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97c925: movabs $0x1a89c97c8c5,%rdx  ;   {internal_word}
  0x000001a89c97c92f: mov    %rsp,%r8
  0x000001a89c97c932: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97c936: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97c940: callq  *%r10
  0x000001a89c97c943: hlt    
[Deopt Handler Code]
  0x000001a89c97c944: movabs $0x1a89c97c944,%r10  ;   {section_word}
  0x000001a89c97c94e: push   %r10
  0x000001a89c97c950: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97c955: hlt    
  0x000001a89c97c956: hlt    
  0x000001a89c97c957: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 487 520 
ImmutableOopMap{}pc offsets: 534 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea2aa0, 0x000001a8a3ea2ac0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b74f8dd8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea2aa0: mov    0x24(%rdi),%ebx
  0x000001a8a3ea2aa3: shl    $0x3,%rbx
  0x000001a8a3ea2aa7: mov    0x10(%rbx),%rbx
  0x000001a8a3ea2aab: test   %rbx,%rbx
  0x000001a8a3ea2aae: je     0x000001a8a3ea2ab7
  0x000001a8a3ea2ab4: jmpq   *0x38(%rbx)
  0x000001a8a3ea2ab7: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea2abc: hlt    
  0x000001a8a3ea2abd: hlt    
  0x000001a8a3ea2abe: hlt    
  0x000001a8a3ea2abf: hlt    
Compiled method (c1)     316   22       3       jdk.internal.misc.Unsafe::getObjectAcquire (7 bytes)
 total in heap  [0x000001a89c97ca90,0x000001a89c97ce60] = 976
 relocation     [0x000001a89c97cc08,0x000001a89c97cc38] = 48
 main code      [0x000001a89c97cc40,0x000001a89c97cd60] = 288
 stub code      [0x000001a89c97cd60,0x000001a89c97cdf8] = 152
 metadata       [0x000001a89c97cdf8,0x000001a89c97ce00] = 8
 scopes data    [0x000001a89c97ce00,0x000001a89c97ce18] = 24
 scopes pcs     [0x000001a89c97ce18,0x000001a89c97ce58] = 64
 dependencies   [0x000001a89c97ce58,0x000001a89c97ce60] = 8
----------------------------------------------------------------------
jdk/internal/misc/Unsafe.getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;  [0x000001a89c97cc40, 0x000001a89c97cdf8]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97cc40: mov    0x8(%rdx),%r10d
  0x000001a89c97cc44: shl    $0x3,%r10
  0x000001a89c97cc48: cmp    %rax,%r10
  0x000001a89c97cc4b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97cc51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97cc5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97cc60: mov    %eax,-0x7000(%rsp)
  0x000001a89c97cc67: push   %rbp
  0x000001a89c97cc68: sub    $0x30,%rsp
  0x000001a89c97cc6c: movabs $0x1a8b73dd9a8,%rax  ;   {metadata(method data for {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c97cc76: mov    0xfc(%rax),%esi
  0x000001a89c97cc7c: add    $0x8,%esi
  0x000001a89c97cc7f: mov    %esi,0xfc(%rax)
  0x000001a89c97cc85: and    $0x1ff8,%esi
  0x000001a89c97cc8b: cmp    $0x0,%esi
  0x000001a89c97cc8e: je     0x000001a89c97ccef  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@0

  0x000001a89c97cc94: mov    (%r8,%r9,1),%eax
  0x000001a89c97cc98: shl    $0x3,%rax
  0x000001a89c97cc9c: movabs $0xc,%rsi
  0x000001a89c97cca6: cmp    %rsi,%r9
  0x000001a89c97cca9: jne    0x000001a89c97cce2
  0x000001a89c97ccaf: cmp    $0x0,%r8
  0x000001a89c97ccb3: je     0x000001a89c97cce2
  0x000001a89c97ccb9: mov    0x8(%r8),%esi
  0x000001a89c97ccbd: shl    $0x3,%rsi
  0x000001a89c97ccc1: movsbl 0x16b(%rsi),%esi
  0x000001a89c97ccc8: cmp    $0x0,%esi
  0x000001a89c97cccb: je     0x000001a89c97cce2
  0x000001a89c97ccd1: movsbl 0x398(%r15),%esi
  0x000001a89c97ccd9: cmp    $0x0,%esi
  0x000001a89c97ccdc: jne    0x000001a89c97cd0d
  0x000001a89c97cce2: add    $0x30,%rsp
  0x000001a89c97cce6: pop    %rbp
  0x000001a89c97cce7: mov    0x70(%r15),%r10
  0x000001a89c97cceb: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97ccee: retq   
  0x000001a89c97ccef: movabs $0x1a8b720e6a0,%r10  ;   {metadata({method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c97ccf9: mov    %r10,0x8(%rsp)
  0x000001a89c97ccfe: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97cd06: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97cd0b: jmp    0x000001a89c97cc94
  0x000001a89c97cd0d: cmp    $0x0,%rax
  0x000001a89c97cd11: je     0x000001a89c97cce2
  0x000001a89c97cd13: mov    %rax,(%rsp)
  0x000001a89c97cd17: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c97cd1c: jmp    0x000001a89c97cce2
  0x000001a89c97cd1e: nop
  0x000001a89c97cd1f: nop
  0x000001a89c97cd20: mov    0x350(%r15),%rax
  0x000001a89c97cd27: movabs $0x0,%r10
  0x000001a89c97cd31: mov    %r10,0x350(%r15)
  0x000001a89c97cd38: movabs $0x0,%r10
  0x000001a89c97cd42: mov    %r10,0x358(%r15)
  0x000001a89c97cd49: add    $0x30,%rsp
  0x000001a89c97cd4d: pop    %rbp
  0x000001a89c97cd4e: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97cd53: hlt    
  0x000001a89c97cd54: hlt    
  0x000001a89c97cd55: hlt    
  0x000001a89c97cd56: hlt    
  0x000001a89c97cd57: hlt    
  0x000001a89c97cd58: hlt    
  0x000001a89c97cd59: hlt    
  0x000001a89c97cd5a: hlt    
  0x000001a89c97cd5b: hlt    
  0x000001a89c97cd5c: hlt    
  0x000001a89c97cd5d: hlt    
  0x000001a89c97cd5e: hlt    
  0x000001a89c97cd5f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97cd60: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97cd65: mov    %rsp,-0x28(%rsp)
  0x000001a89c97cd6a: sub    $0x80,%rsp
  0x000001a89c97cd71: mov    %rax,0x78(%rsp)
  0x000001a89c97cd76: mov    %rcx,0x70(%rsp)
  0x000001a89c97cd7b: mov    %rdx,0x68(%rsp)
  0x000001a89c97cd80: mov    %rbx,0x60(%rsp)
  0x000001a89c97cd85: mov    %rbp,0x50(%rsp)
  0x000001a89c97cd8a: mov    %rsi,0x48(%rsp)
  0x000001a89c97cd8f: mov    %rdi,0x40(%rsp)
  0x000001a89c97cd94: mov    %r8,0x38(%rsp)
  0x000001a89c97cd99: mov    %r9,0x30(%rsp)
  0x000001a89c97cd9e: mov    %r10,0x28(%rsp)
  0x000001a89c97cda3: mov    %r11,0x20(%rsp)
  0x000001a89c97cda8: mov    %r12,0x18(%rsp)
  0x000001a89c97cdad: mov    %r13,0x10(%rsp)
  0x000001a89c97cdb2: mov    %r14,0x8(%rsp)
  0x000001a89c97cdb7: mov    %r15,(%rsp)
  0x000001a89c97cdbb: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97cdc5: movabs $0x1a89c97cd65,%rdx  ;   {internal_word}
  0x000001a89c97cdcf: mov    %rsp,%r8
  0x000001a89c97cdd2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97cdd6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97cde0: callq  *%r10
  0x000001a89c97cde3: hlt    
[Deopt Handler Code]
  0x000001a89c97cde4: movabs $0x1a89c97cde4,%r10  ;   {section_word}
  0x000001a89c97cdee: push   %r10
  0x000001a89c97cdf0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97cdf5: hlt    
  0x000001a89c97cdf6: hlt    
  0x000001a89c97cdf7: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 203 ----------------------------------------------------------------------
java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V  [0x000001a8a3ea2cc0, 0x000001a8a3ea2f18]  600 bytes
[Entry Point]
  # {method} {0x000001a8b718cfe8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x000001a8a3ea2cc0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea2cc4: shl    $0x3,%r10
  0x000001a8a3ea2cc8: cmp    %r10,%rax
  0x000001a8a3ea2ccb: je     0x000001a8a3ea2cd8
  0x000001a8a3ea2cd1: jmpq   0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea2cd6: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea2cd8: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea2cdf: push   %rbp
  0x000001a8a3ea2ce0: mov    %rsp,%rbp
  0x000001a8a3ea2ce3: sub    $0x80,%rsp
  0x000001a8a3ea2cea: mov    %rsi,0x30(%rsp)
  0x000001a8a3ea2cef: mov    %rdi,0x28(%rsp)
  0x000001a8a3ea2cf4: mov    %r9,0x48(%rsp)
  0x000001a8a3ea2cf9: cmp    $0x0,%r9
  0x000001a8a3ea2cfd: lea    0x48(%rsp),%rax
  0x000001a8a3ea2d02: cmove  0x48(%rsp),%rax
  0x000001a8a3ea2d08: mov    %rax,0x20(%rsp)
  0x000001a8a3ea2d0d: mov    %r8,%r9
  0x000001a8a3ea2d10: mov    %rdx,0x38(%rsp)
  0x000001a8a3ea2d15: cmp    $0x0,%rdx
  0x000001a8a3ea2d19: lea    0x38(%rsp),%r8
  0x000001a8a3ea2d1e: cmove  0x38(%rsp),%r8
  0x000001a8a3ea2d24: movabs $0x6d1700d60,%r14  ;   {oop(a 'java/lang/Class'{0x00000006d1700d60} = 'java/lang/System')}
  0x000001a8a3ea2d2e: mov    %r14,0x68(%rsp)
  0x000001a8a3ea2d33: lea    0x68(%rsp),%r14
  0x000001a8a3ea2d38: mov    %r14,%rdx          ; ImmutableOopMap{[72]=Oop [56]=Oop [104]=Oop }
  0x000001a8a3ea2d3b: vzeroupper 
  0x000001a8a3ea2d3e: movabs $0x1a8a3ea2d3b,%r10  ;   {internal_word}
  0x000001a8a3ea2d48: mov    %r10,0x258(%r15)
  0x000001a8a3ea2d4f: mov    %rsp,0x250(%r15)
  0x000001a8a3ea2d56: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea2d60: cmpb   $0x0,(%r10)
  0x000001a8a3ea2d64: je     0x000001a8a3ea2dbc
  0x000001a8a3ea2d6a: push   %rdx
  0x000001a8a3ea2d6b: push   %r8
  0x000001a8a3ea2d6d: push   %r9
  0x000001a8a3ea2d6f: movabs $0x1a8b718cfe0,%rdx  ;   {metadata({method} {0x000001a8b718cfe8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000001a8a3ea2d79: mov    %r15,%rcx
  0x000001a8a3ea2d7c: sub    $0x20,%rsp
  0x000001a8a3ea2d80: test   $0xf,%esp
  0x000001a8a3ea2d86: je     0x000001a8a3ea2da6
  0x000001a8a3ea2d8c: sub    $0x8,%rsp
  0x000001a8a3ea2d90: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea2d9a: callq  *%r10
  0x000001a8a3ea2d9d: add    $0x8,%rsp
  0x000001a8a3ea2da1: jmpq   0x000001a8a3ea2db3
  0x000001a8a3ea2da6: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea2db0: callq  *%r10
  0x000001a8a3ea2db3: add    $0x20,%rsp
  0x000001a8a3ea2db7: pop    %r9
  0x000001a8a3ea2db9: pop    %r8
  0x000001a8a3ea2dbb: pop    %rdx
  0x000001a8a3ea2dbc: lea    0x270(%r15),%rcx
  0x000001a8a3ea2dc3: movl   $0x4,0x2e8(%r15)
  0x000001a8a3ea2dce: movabs $0x7ff8f1760246,%r10  ;   {runtime_call}
  0x000001a8a3ea2dd8: callq  *%r10
  0x000001a8a3ea2ddb: vzeroupper 
  0x000001a8a3ea2dde: movl   $0x5,0x2e8(%r15)
  0x000001a8a3ea2de9: lock addl $0x0,-0x40(%rsp)
  0x000001a8a3ea2def: testb  $0x8,0x70(%r15)
  0x000001a8a3ea2df4: jne    0x000001a8a3ea2e08
  0x000001a8a3ea2dfa: cmpl   $0x0,0x48(%r15)
  0x000001a8a3ea2e02: je     0x000001a8a3ea2e2c
  0x000001a8a3ea2e08: vzeroupper 
  0x000001a8a3ea2e0b: mov    %r15,%rcx
  0x000001a8a3ea2e0e: mov    %rsp,%r12
  0x000001a8a3ea2e11: sub    $0x20,%rsp
  0x000001a8a3ea2e15: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea2e19: movabs $0x540c4790,%r10   ;   {runtime_call}
  0x000001a8a3ea2e23: callq  *%r10
  0x000001a8a3ea2e26: mov    %r12,%rsp
  0x000001a8a3ea2e29: xor    %r12,%r12
  0x000001a8a3ea2e2c: movl   $0x8,0x2e8(%r15)
  0x000001a8a3ea2e37: cmpl   $0x2,0x338(%r15)
  0x000001a8a3ea2e42: je     0x000001a8a3ea2eec
  0x000001a8a3ea2e48: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea2e52: cmpb   $0x0,(%r10)
  0x000001a8a3ea2e56: je     0x000001a8a3ea2ea4
  0x000001a8a3ea2e5c: movabs $0x1a8b718cfe0,%rdx  ;   {metadata({method} {0x000001a8b718cfe8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000001a8a3ea2e66: mov    %r15,%rcx
  0x000001a8a3ea2e69: sub    $0x20,%rsp
  0x000001a8a3ea2e6d: test   $0xf,%esp
  0x000001a8a3ea2e73: je     0x000001a8a3ea2e93
  0x000001a8a3ea2e79: sub    $0x8,%rsp
  0x000001a8a3ea2e7d: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea2e87: callq  *%r10
  0x000001a8a3ea2e8a: add    $0x8,%rsp
  0x000001a8a3ea2e8e: jmpq   0x000001a8a3ea2ea0
  0x000001a8a3ea2e93: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea2e9d: callq  *%r10
  0x000001a8a3ea2ea0: add    $0x20,%rsp
  0x000001a8a3ea2ea4: movabs $0x0,%r10
  0x000001a8a3ea2eae: mov    %r10,0x250(%r15)
  0x000001a8a3ea2eb5: movabs $0x0,%r10
  0x000001a8a3ea2ebf: mov    %r10,0x258(%r15)
  0x000001a8a3ea2ec6: vzeroupper 
  0x000001a8a3ea2ec9: mov    0x50(%r15),%rcx
  0x000001a8a3ea2ecd: movl   $0x0,0x100(%rcx)
  0x000001a8a3ea2ed7: leaveq 
  0x000001a8a3ea2ed8: cmpq   $0x0,0x8(%r15)
  0x000001a8a3ea2ee0: jne    0x000001a8a3ea2ee7
  0x000001a8a3ea2ee6: retq   
  0x000001a8a3ea2ee7: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a8a3ea2eec: vzeroupper 
  0x000001a8a3ea2eef: mov    %rsp,%r12
  0x000001a8a3ea2ef2: sub    $0x20,%rsp
  0x000001a8a3ea2ef6: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea2efa: movabs $0x5404c310,%r10   ;   {runtime_call}
  0x000001a8a3ea2f04: callq  *%r10
  0x000001a8a3ea2f07: mov    %r12,%rsp
  0x000001a8a3ea2f0a: xor    %r12,%r12
  0x000001a8a3ea2f0d: jmpq   0x000001a8a3ea2e48
  0x000001a8a3ea2f12: hlt    
  0x000001a8a3ea2f13: hlt    
  0x000001a8a3ea2f14: hlt    
  0x000001a8a3ea2f15: hlt    
  0x000001a8a3ea2f16: hlt    
  0x000001a8a3ea2f17: hlt    
Compiled method (c1)     320   25       3       java.util.concurrent.ConcurrentHashMap::spread (10 bytes)
 total in heap  [0x000001a89c97ce90,0x000001a89c97d1f8] = 872
 relocation     [0x000001a89c97d008,0x000001a89c97d030] = 40
 main code      [0x000001a89c97d040,0x000001a89c97d100] = 192
 stub code      [0x000001a89c97d100,0x000001a89c97d198] = 152
 metadata       [0x000001a89c97d198,0x000001a89c97d1a0] = 8
 scopes data    [0x000001a89c97d1a0,0x000001a89c97d1b0] = 16
 scopes pcs     [0x000001a89c97d1b0,0x000001a89c97d1f0] = 64
 dependencies   [0x000001a89c97d1f0,0x000001a89c97d1f8] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.spread(I)I  [0x000001a89c97d040, 0x000001a89c97d198]  344 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97d040: mov    %eax,-0x7000(%rsp)
  0x000001a89c97d047: push   %rbp
  0x000001a89c97d048: sub    $0x30,%rsp
  0x000001a89c97d04c: movabs $0x1a8b73ddb88,%rax  ;   {metadata(method data for {method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97d056: mov    0xfc(%rax),%esi
  0x000001a89c97d05c: add    $0x8,%esi
  0x000001a89c97d05f: mov    %esi,0xfc(%rax)
  0x000001a89c97d065: and    $0x1ff8,%esi
  0x000001a89c97d06b: cmp    $0x0,%esi
  0x000001a89c97d06e: je     0x000001a89c97d090  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@0

  0x000001a89c97d074: mov    %rdx,%rax
  0x000001a89c97d077: shr    $0x10,%eax
  0x000001a89c97d07a: xor    %rdx,%rax
  0x000001a89c97d07d: and    $0x7fffffff,%eax
  0x000001a89c97d083: add    $0x30,%rsp
  0x000001a89c97d087: pop    %rbp
  0x000001a89c97d088: mov    0x70(%r15),%r10
  0x000001a89c97d08c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97d08f: retq   
  0x000001a89c97d090: movabs $0x1a8b7282f28,%r10  ;   {metadata({method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c97d09a: mov    %r10,0x8(%rsp)
  0x000001a89c97d09f: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97d0a7: callq  0x000001a89c4d1f80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97d0ac: jmp    0x000001a89c97d074
  0x000001a89c97d0ae: nop
  0x000001a89c97d0af: nop
  0x000001a89c97d0b0: mov    0x350(%r15),%rax
  0x000001a89c97d0b7: movabs $0x0,%r10
  0x000001a89c97d0c1: mov    %r10,0x350(%r15)
  0x000001a89c97d0c8: movabs $0x0,%r10
  0x000001a89c97d0d2: mov    %r10,0x358(%r15)
  0x000001a89c97d0d9: add    $0x30,%rsp
  0x000001a89c97d0dd: pop    %rbp
  0x000001a89c97d0de: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97d0e3: hlt    
  0x000001a89c97d0e4: hlt    
  0x000001a89c97d0e5: hlt    
  0x000001a89c97d0e6: hlt    
  0x000001a89c97d0e7: hlt    
  0x000001a89c97d0e8: hlt    
  0x000001a89c97d0e9: hlt    
  0x000001a89c97d0ea: hlt    
  0x000001a89c97d0eb: hlt    
  0x000001a89c97d0ec: hlt    
  0x000001a89c97d0ed: hlt    
  0x000001a89c97d0ee: hlt    
  0x000001a89c97d0ef: hlt    
  0x000001a89c97d0f0: hlt    
  0x000001a89c97d0f1: hlt    
  0x000001a89c97d0f2: hlt    
  0x000001a89c97d0f3: hlt    
  0x000001a89c97d0f4: hlt    
  0x000001a89c97d0f5: hlt    
  0x000001a89c97d0f6: hlt    
  0x000001a89c97d0f7: hlt    
  0x000001a89c97d0f8: hlt    
  0x000001a89c97d0f9: hlt    
  0x000001a89c97d0fa: hlt    
  0x000001a89c97d0fb: hlt    
  0x000001a89c97d0fc: hlt    
  0x000001a89c97d0fd: hlt    
  0x000001a89c97d0fe: hlt    
  0x000001a89c97d0ff: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97d100: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97d105: mov    %rsp,-0x28(%rsp)
  0x000001a89c97d10a: sub    $0x80,%rsp
  0x000001a89c97d111: mov    %rax,0x78(%rsp)
  0x000001a89c97d116: mov    %rcx,0x70(%rsp)
  0x000001a89c97d11b: mov    %rdx,0x68(%rsp)
  0x000001a89c97d120: mov    %rbx,0x60(%rsp)
  0x000001a89c97d125: mov    %rbp,0x50(%rsp)
  0x000001a89c97d12a: mov    %rsi,0x48(%rsp)
  0x000001a89c97d12f: mov    %rdi,0x40(%rsp)
  0x000001a89c97d134: mov    %r8,0x38(%rsp)
  0x000001a89c97d139: mov    %r9,0x30(%rsp)
  0x000001a89c97d13e: mov    %r10,0x28(%rsp)
  0x000001a89c97d143: mov    %r11,0x20(%rsp)
  0x000001a89c97d148: mov    %r12,0x18(%rsp)
  0x000001a89c97d14d: mov    %r13,0x10(%rsp)
  0x000001a89c97d152: mov    %r14,0x8(%rsp)
  0x000001a89c97d157: mov    %r15,(%rsp)
  0x000001a89c97d15b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97d165: movabs $0x1a89c97d105,%rdx  ;   {internal_word}
  0x000001a89c97d16f: mov    %rsp,%r8
  0x000001a89c97d172: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97d176: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97d180: callq  *%r10
  0x000001a89c97d183: hlt    
[Deopt Handler Code]
  0x000001a89c97d184: movabs $0x1a89c97d184,%r10  ;   {section_word}
  0x000001a89c97d18e: push   %r10
  0x000001a89c97d190: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97d195: hlt    
  0x000001a89c97d196: hlt    
  0x000001a89c97d197: hlt    

ImmutableOopMap{}pc offsets: 108 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea3120, 0x000001a8a3ea3140]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7504588} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea3120: cmp    (%rdx),%rax
  0x000001a8a3ea3123: mov    0x24(%r9),%ebx
  0x000001a8a3ea3127: shl    $0x3,%rbx
  0x000001a8a3ea312b: mov    0x10(%rbx),%rbx
  0x000001a8a3ea312f: test   %rbx,%rbx
  0x000001a8a3ea3132: je     0x000001a8a3ea313b
  0x000001a8a3ea3138: jmpq   *0x38(%rbx)
  0x000001a8a3ea313b: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
Compiled method (c1)     322   12       3       java.lang.String::equals (65 bytes)
 total in heap  [0x000001a89c97d210,0x000001a89c97de58] = 3144
 relocation     [0x000001a89c97d388,0x000001a89c97d418] = 144
 main code      [0x000001a89c97d420,0x000001a89c97da20] = 1536
 stub code      [0x000001a89c97da20,0x000001a89c97dae0] = 192
 metadata       [0x000001a89c97dae0,0x000001a89c97daf8] = 24
 scopes data    [0x000001a89c97daf8,0x000001a89c97dc10] = 280
 scopes pcs     [0x000001a89c97dc10,0x000001a89c97de40] = 560
 dependencies   [0x000001a89c97de40,0x000001a89c97de48] = 8
 nul chk table  [0x000001a89c97de48,0x000001a89c97de58] = 16
----------------------------------------------------------------------
java/lang/String.equals(Ljava/lang/Object;)Z  [0x000001a89c97d420, 0x000001a89c97dae0]  1728 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97d420: mov    0x8(%rdx),%r10d
  0x000001a89c97d424: shl    $0x3,%r10
  0x000001a89c97d428: cmp    %rax,%r10
  0x000001a89c97d42b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97d431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97d43c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97d440: mov    %eax,-0x7000(%rsp)
  0x000001a89c97d447: push   %rbp
  0x000001a89c97d448: sub    $0x30,%rsp
  0x000001a89c97d44c: movabs $0x1a8b73a0a48,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d456: mov    0xfc(%rsi),%edi
  0x000001a89c97d45c: add    $0x8,%edi
  0x000001a89c97d45f: mov    %edi,0xfc(%rsi)
  0x000001a89c97d465: and    $0x1ff8,%edi
  0x000001a89c97d46b: cmp    $0x0,%edi
  0x000001a89c97d46e: je     0x000001a89c97d950  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@0

  0x000001a89c97d474: cmp    %r8,%rdx
  0x000001a89c97d477: movabs $0x1a8b73a0a48,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d481: movabs $0x148,%rdi
  0x000001a89c97d48b: je     0x000001a89c97d49b
  0x000001a89c97d491: movabs $0x138,%rdi
  0x000001a89c97d49b: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97d49f: lea    0x1(%rbx),%rbx
  0x000001a89c97d4a3: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97d4a7: je     0x000001a89c97d93e  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@2

  0x000001a89c97d4ad: cmp    $0x0,%r8
  0x000001a89c97d4b1: jne    0x000001a89c97d4cc
  0x000001a89c97d4b3: movabs $0x1a8b73a0a48,%rbx  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d4bd: orl    $0x100,0x150(%rbx)
  0x000001a89c97d4c7: jmpq   0x000001a89c97d58e
  0x000001a89c97d4cc: movabs $0x7c0001678,%rax  ;   {metadata('java/lang/String')}
  0x000001a89c97d4d6: mov    0x8(%r8),%edi
  0x000001a89c97d4da: shl    $0x3,%rdi
  0x000001a89c97d4de: cmp    %rdi,%rax
  0x000001a89c97d4e1: jne    0x000001a89c97d572
  0x000001a89c97d4e7: movabs $0x1a8b73a0a48,%rbx  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d4f1: mov    0x8(%r8),%eax
  0x000001a89c97d4f5: shl    $0x3,%rax
  0x000001a89c97d4f9: cmp    0x168(%rbx),%rax
  0x000001a89c97d500: jne    0x000001a89c97d50f
  0x000001a89c97d502: addq   $0x1,0x170(%rbx)
  0x000001a89c97d50a: jmpq   0x000001a89c97d593
  0x000001a89c97d50f: cmp    0x178(%rbx),%rax
  0x000001a89c97d516: jne    0x000001a89c97d525
  0x000001a89c97d518: addq   $0x1,0x180(%rbx)
  0x000001a89c97d520: jmpq   0x000001a89c97d593
  0x000001a89c97d525: cmpq   $0x0,0x168(%rbx)
  0x000001a89c97d530: jne    0x000001a89c97d549
  0x000001a89c97d532: mov    %rax,0x168(%rbx)
  0x000001a89c97d539: movq   $0x1,0x170(%rbx)
  0x000001a89c97d544: jmpq   0x000001a89c97d593
  0x000001a89c97d549: cmpq   $0x0,0x178(%rbx)
  0x000001a89c97d554: jne    0x000001a89c97d56d
  0x000001a89c97d556: mov    %rax,0x178(%rbx)
  0x000001a89c97d55d: movq   $0x1,0x180(%rbx)
  0x000001a89c97d568: jmpq   0x000001a89c97d593
  0x000001a89c97d56d: jmpq   0x000001a89c97d593
  0x000001a89c97d572: movabs $0x1a8b73a0a48,%rbx  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d57c: subq   $0x1,0x158(%rbx)
  0x000001a89c97d584: jmpq   0x000001a89c97d58e
  0x000001a89c97d589: jmpq   0x000001a89c97d593
  0x000001a89c97d58e: xor    %rsi,%rsi
  0x000001a89c97d591: jmp    0x000001a89c97d59d
  0x000001a89c97d593: movabs $0x1,%rsi          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@8

  0x000001a89c97d59d: cmp    $0x0,%esi
  0x000001a89c97d5a0: movabs $0x1a8b73a0a48,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d5aa: movabs $0x190,%rdi
  0x000001a89c97d5b4: je     0x000001a89c97d5c4
  0x000001a89c97d5ba: movabs $0x1a0,%rdi
  0x000001a89c97d5c4: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97d5c8: lea    0x1(%rbx),%rbx
  0x000001a89c97d5cc: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97d5d0: je     0x000001a89c97d92c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@11

  0x000001a89c97d5d6: cmp    $0x0,%r8
  0x000001a89c97d5da: jne    0x000001a89c97d5f5
  0x000001a89c97d5dc: movabs $0x1a8b73a0a48,%rdi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d5e6: orl    $0x100,0x1a8(%rdi)
  0x000001a89c97d5f0: jmpq   0x000001a89c97d6b7
  0x000001a89c97d5f5: movabs $0x7c0001678,%rbx  ;   {metadata('java/lang/String')}
  0x000001a89c97d5ff: mov    0x8(%r8),%esi
  0x000001a89c97d603: shl    $0x3,%rsi
  0x000001a89c97d607: cmp    %rsi,%rbx
  0x000001a89c97d60a: jne    0x000001a89c97d69b
  0x000001a89c97d610: movabs $0x1a8b73a0a48,%rdi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d61a: mov    0x8(%r8),%ebx
  0x000001a89c97d61e: shl    $0x3,%rbx
  0x000001a89c97d622: cmp    0x1c0(%rdi),%rbx
  0x000001a89c97d629: jne    0x000001a89c97d638
  0x000001a89c97d62b: addq   $0x1,0x1c8(%rdi)
  0x000001a89c97d633: jmpq   0x000001a89c97d6b7
  0x000001a89c97d638: cmp    0x1d0(%rdi),%rbx
  0x000001a89c97d63f: jne    0x000001a89c97d64e
  0x000001a89c97d641: addq   $0x1,0x1d8(%rdi)
  0x000001a89c97d649: jmpq   0x000001a89c97d6b7
  0x000001a89c97d64e: cmpq   $0x0,0x1c0(%rdi)
  0x000001a89c97d659: jne    0x000001a89c97d672
  0x000001a89c97d65b: mov    %rbx,0x1c0(%rdi)
  0x000001a89c97d662: movq   $0x1,0x1c8(%rdi)
  0x000001a89c97d66d: jmpq   0x000001a89c97d6b7
  0x000001a89c97d672: cmpq   $0x0,0x1d0(%rdi)
  0x000001a89c97d67d: jne    0x000001a89c97d696
  0x000001a89c97d67f: mov    %rbx,0x1d0(%rdi)
  0x000001a89c97d686: movq   $0x1,0x1d8(%rdi)
  0x000001a89c97d691: jmpq   0x000001a89c97d6b7
  0x000001a89c97d696: jmpq   0x000001a89c97d6b7
  0x000001a89c97d69b: movabs $0x1a8b73a0a48,%rdi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d6a5: subq   $0x1,0x1b0(%rdi)
  0x000001a89c97d6ad: jmpq   0x000001a89c97d971
  0x000001a89c97d6b2: jmpq   0x000001a89c97d6b7
  0x000001a89c97d6b7: mov    %r8,%rsi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15

  0x000001a89c97d6ba: mov    %rdx,%r8
  0x000001a89c97d6bd: movabs $0x1a8b73a0a48,%rdi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d6c7: addq   $0x1,0x1e8(%rdi)
  0x000001a89c97d6cf: movabs $0x1a8b7393c08,%r8  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d6d9: mov    0xfc(%r8),%edi
  0x000001a89c97d6e0: add    $0x8,%edi
  0x000001a89c97d6e3: mov    %edi,0xfc(%r8)
  0x000001a89c97d6ea: and    $0x7ffff8,%edi
  0x000001a89c97d6f0: cmp    $0x0,%edi
  0x000001a89c97d6f3: je     0x000001a89c97d97a
  0x000001a89c97d6f9: movabs $0x1a8b7393c08,%r8  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d703: incl   0x148(%r8)         ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3
                                                ; - java.lang.String::equals@20

  0x000001a89c97d70a: movsbl 0x14(%rdx),%r8d    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7
                                                ; - java.lang.String::equals@20

  0x000001a89c97d70f: movabs $0x1a8b7393c08,%rdi  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d719: incl   0x158(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10
                                                ; - java.lang.String::equals@20

  0x000001a89c97d71f: mov    %r8,%rdi
  0x000001a89c97d722: shl    $0x18,%edi
  0x000001a89c97d725: sar    $0x18,%edi
  0x000001a89c97d728: cmp    (%rsi),%rax        ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24
                                                ; implicit exception: dispatches to 0x000001a89c97d99b
  0x000001a89c97d72b: mov    %rsi,%rbx
  0x000001a89c97d72e: movabs $0x1a8b73a0a48,%rax  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d738: addq   $0x1,0x220(%rax)
  0x000001a89c97d740: movabs $0x1a8b7393c08,%rbx  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d74a: mov    0xfc(%rbx),%eax
  0x000001a89c97d750: add    $0x8,%eax
  0x000001a89c97d753: mov    %eax,0xfc(%rbx)
  0x000001a89c97d759: and    $0x7ffff8,%eax
  0x000001a89c97d75f: cmp    $0x0,%eax
  0x000001a89c97d762: je     0x000001a89c97d9a0
  0x000001a89c97d768: movabs $0x1a8b7393c08,%rbx  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d772: incl   0x148(%rbx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3
                                                ; - java.lang.String::equals@24

  0x000001a89c97d778: movsbl 0x14(%rsi),%ebx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7
                                                ; - java.lang.String::equals@24

  0x000001a89c97d77c: movabs $0x1a8b7393c08,%rax  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d786: incl   0x158(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10
                                                ; - java.lang.String::equals@24

  0x000001a89c97d78c: shl    $0x18,%ebx
  0x000001a89c97d78f: sar    $0x18,%ebx
  0x000001a89c97d792: cmp    %ebx,%edi
  0x000001a89c97d794: movabs $0x1a8b73a0a48,%rdi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d79e: movabs $0x258,%rbx
  0x000001a89c97d7a8: jne    0x000001a89c97d7b8
  0x000001a89c97d7ae: movabs $0x268,%rbx
  0x000001a89c97d7b8: mov    (%rdi,%rbx,1),%rax
  0x000001a89c97d7bc: lea    0x1(%rax),%rax
  0x000001a89c97d7c0: mov    %rax,(%rdi,%rbx,1)
  0x000001a89c97d7c4: jne    0x000001a89c97d92c  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@27

  0x000001a89c97d7ca: mov    %rdx,%rdi
  0x000001a89c97d7cd: movabs $0x1a8b73a0a48,%rbx  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d7d7: addq   $0x1,0x278(%rbx)
  0x000001a89c97d7df: movabs $0x1a8b733eea8,%rdi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97d7e9: mov    0xfc(%rdi),%ebx
  0x000001a89c97d7ef: add    $0x8,%ebx
  0x000001a89c97d7f2: mov    %ebx,0xfc(%rdi)
  0x000001a89c97d7f8: and    $0x7ffff8,%ebx
  0x000001a89c97d7fe: cmp    $0x0,%ebx
  0x000001a89c97d801: je     0x000001a89c97d9c1
  0x000001a89c97d807: movabs $0x1a8b733eea8,%rdi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97d811: incl   0x148(%rdi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::equals@31

  0x000001a89c97d817: cmp    $0x0,%r8d
  0x000001a89c97d81b: movabs $0x1a8b733eea8,%r8  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97d825: movabs $0x158,%rdi
  0x000001a89c97d82f: jne    0x000001a89c97d83f
  0x000001a89c97d835: movabs $0x168,%rdi
  0x000001a89c97d83f: mov    (%r8,%rdi,1),%rbx
  0x000001a89c97d843: lea    0x1(%rbx),%rbx
  0x000001a89c97d847: mov    %rbx,(%r8,%rdi,1)
  0x000001a89c97d84b: jne    0x000001a89c97d86d  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::equals@31

  0x000001a89c97d851: movabs $0x1a8b733eea8,%r8  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97d85b: incl   0x178(%r8)
  0x000001a89c97d862: mov    $0x1,%r8d
  0x000001a89c97d868: jmpq   0x000001a89c97d873  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::equals@31

  0x000001a89c97d86d: mov    $0x0,%r8d          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::equals@31

  0x000001a89c97d873: and    $0x1,%r8d
  0x000001a89c97d877: cmp    $0x0,%r8d
  0x000001a89c97d87b: movabs $0x1a8b73a0a48,%r8  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d885: movabs $0x288,%rdi
  0x000001a89c97d88f: je     0x000001a89c97d89f
  0x000001a89c97d895: movabs $0x298,%rdi
  0x000001a89c97d89f: mov    (%r8,%rdi,1),%rbx
  0x000001a89c97d8a3: lea    0x1(%rbx),%rbx
  0x000001a89c97d8a7: mov    %rbx,(%r8,%rdi,1)
  0x000001a89c97d8ab: je     0x000001a89c97d8f1  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@34

  0x000001a89c97d8b1: mov    0xc(%rdx),%edx
  0x000001a89c97d8b4: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@38

  0x000001a89c97d8b8: mov    0xc(%rsi),%r8d
  0x000001a89c97d8bc: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@42

  0x000001a89c97d8c0: movabs $0x1a8b73a0a48,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d8ca: addq   $0x1,0x2a8(%rsi)
  0x000001a89c97d8d2: nopl   0x0(%rax,%rax,1)
  0x000001a89c97d8d7: callq  0x000001a89c971de0  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@45
                                                ;   {static_call}
  0x000001a89c97d8dc: movabs $0x1a8b73a0a48,%rdx  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d8e6: incl   0x2b8(%rdx)
  0x000001a89c97d8ec: jmpq   0x000001a89c97d91c  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@48

  0x000001a89c97d8f1: mov    0xc(%rdx),%edx
  0x000001a89c97d8f4: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@52

  0x000001a89c97d8f8: mov    0xc(%rsi),%r8d
  0x000001a89c97d8fc: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@56

  0x000001a89c97d900: movabs $0x1a8b73a0a48,%rsi  ;   {metadata(method data for {method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d90a: addq   $0x1,0x2d0(%rsi)
  0x000001a89c97d912: nopl   0x0(%rax,%rax,1)
  0x000001a89c97d917: callq  0x000001a89c407500  ; ImmutableOopMap{}
                                                ;*invokestatic equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@59
                                                ;   {static_call}
  0x000001a89c97d91c: and    $0x1,%eax
  0x000001a89c97d91f: add    $0x30,%rsp
  0x000001a89c97d923: pop    %rbp
  0x000001a89c97d924: mov    0x70(%r15),%r10
  0x000001a89c97d928: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97d92b: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@62

  0x000001a89c97d92c: mov    $0x0,%eax
  0x000001a89c97d931: add    $0x30,%rsp
  0x000001a89c97d935: pop    %rbp
  0x000001a89c97d936: mov    0x70(%r15),%r10
  0x000001a89c97d93a: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97d93d: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@64

  0x000001a89c97d93e: mov    $0x1,%eax
  0x000001a89c97d943: add    $0x30,%rsp
  0x000001a89c97d947: pop    %rbp
  0x000001a89c97d948: mov    0x70(%r15),%r10
  0x000001a89c97d94c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97d94f: retq   
  0x000001a89c97d950: movabs $0x1a8b7174d88,%r10  ;   {metadata({method} {0x000001a8b7174d90} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000001a89c97d95a: mov    %r10,0x8(%rsp)
  0x000001a89c97d95f: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97d967: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97d96c: jmpq   0x000001a89c97d474
  0x000001a89c97d971: mov    %r8,(%rsp)
  0x000001a89c97d975: callq  0x000001a89c4ceca0  ; ImmutableOopMap{rdx=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@15
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c97d97a: movabs $0x1a8b7177dc8,%r10  ;   {metadata({method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d984: mov    %r10,0x8(%rsp)
  0x000001a89c97d989: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97d991: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ; - java.lang.String::equals@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97d996: jmpq   0x000001a89c97d6f9
  0x000001a89c97d99b: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*invokevirtual coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::equals@24
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97d9a0: movabs $0x1a8b7177dc8,%r10  ;   {metadata({method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97d9aa: mov    %r10,0x8(%rsp)
  0x000001a89c97d9af: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97d9b7: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ; - java.lang.String::equals@24
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97d9bc: jmpq   0x000001a89c97d768
  0x000001a89c97d9c1: movabs $0x1a8b7177f08,%r10  ;   {metadata({method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c97d9cb: mov    %r10,0x8(%rsp)
  0x000001a89c97d9d0: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97d9d8: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rsi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::equals@31
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97d9dd: jmpq   0x000001a89c97d807
  0x000001a89c97d9e2: nop
  0x000001a89c97d9e3: nop
  0x000001a89c97d9e4: mov    0x350(%r15),%rax
  0x000001a89c97d9eb: movabs $0x0,%r10
  0x000001a89c97d9f5: mov    %r10,0x350(%r15)
  0x000001a89c97d9fc: movabs $0x0,%r10
  0x000001a89c97da06: mov    %r10,0x358(%r15)
  0x000001a89c97da0d: add    $0x30,%rsp
  0x000001a89c97da11: pop    %rbp
  0x000001a89c97da12: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97da17: hlt    
  0x000001a89c97da18: hlt    
  0x000001a89c97da19: hlt    
  0x000001a89c97da1a: hlt    
  0x000001a89c97da1b: hlt    
  0x000001a89c97da1c: hlt    
  0x000001a89c97da1d: hlt    
  0x000001a89c97da1e: hlt    
  0x000001a89c97da1f: hlt    
[Stub Code]
  0x000001a89c97da20: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97da25: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97da2f: jmpq   0x000001a89c97da2f  ;   {runtime_call}
  0x000001a89c97da34: nop
  0x000001a89c97da35: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97da3f: jmpq   0x000001a89c97da3f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97da44: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97da49: mov    %rsp,-0x28(%rsp)
  0x000001a89c97da4e: sub    $0x80,%rsp
  0x000001a89c97da55: mov    %rax,0x78(%rsp)
  0x000001a89c97da5a: mov    %rcx,0x70(%rsp)
  0x000001a89c97da5f: mov    %rdx,0x68(%rsp)
  0x000001a89c97da64: mov    %rbx,0x60(%rsp)
  0x000001a89c97da69: mov    %rbp,0x50(%rsp)
  0x000001a89c97da6e: mov    %rsi,0x48(%rsp)
  0x000001a89c97da73: mov    %rdi,0x40(%rsp)
  0x000001a89c97da78: mov    %r8,0x38(%rsp)
  0x000001a89c97da7d: mov    %r9,0x30(%rsp)
  0x000001a89c97da82: mov    %r10,0x28(%rsp)
  0x000001a89c97da87: mov    %r11,0x20(%rsp)
  0x000001a89c97da8c: mov    %r12,0x18(%rsp)
  0x000001a89c97da91: mov    %r13,0x10(%rsp)
  0x000001a89c97da96: mov    %r14,0x8(%rsp)
  0x000001a89c97da9b: mov    %r15,(%rsp)
  0x000001a89c97da9f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97daa9: movabs $0x1a89c97da49,%rdx  ;   {internal_word}
  0x000001a89c97dab3: mov    %rsp,%r8
  0x000001a89c97dab6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97daba: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97dac4: callq  *%r10
  0x000001a89c97dac7: hlt    
[Deopt Handler Code]
  0x000001a89c97dac8: movabs $0x1a89c97dac8,%r10  ;   {section_word}
  0x000001a89c97dad2: push   %r10
  0x000001a89c97dad4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97dad9: hlt    
  0x000001a89c97dada: hlt    
  0x000001a89c97dadb: hlt    
  0x000001a89c97dadc: hlt    
  0x000001a89c97dadd: hlt    
  0x000001a89c97dade: hlt    
  0x000001a89c97dadf: hlt    

ImmutableOopMap{}pc offsets: 1212 1276 
ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 1356 
ImmutableOopMap{rdx=Oop }pc offsets: 1370 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 1398 1408 1436 
ImmutableOopMap{rsi=Oop rdx=Oop }pc offsets: 1469 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea3320, 0x000001a8a3ea3350]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b75049f8} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea3320: mov    0x14(%rdx),%ebx
  0x000001a8a3ea3323: shl    $0x3,%rbx
  0x000001a8a3ea3327: mov    0x28(%rbx),%ebx
  0x000001a8a3ea332a: shl    $0x3,%rbx
  0x000001a8a3ea332e: mov    0x24(%rbx),%ebx
  0x000001a8a3ea3331: shl    $0x3,%rbx
  0x000001a8a3ea3335: mov    0x10(%rbx),%rbx
  0x000001a8a3ea3339: test   %rbx,%rbx
  0x000001a8a3ea333c: je     0x000001a8a3ea3345
  0x000001a8a3ea3342: jmpq   *0x38(%rbx)
  0x000001a8a3ea3345: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea334a: hlt    
  0x000001a8a3ea334b: hlt    
  0x000001a8a3ea334c: hlt    
  0x000001a8a3ea334d: hlt    
  0x000001a8a3ea334e: hlt    
  0x000001a8a3ea334f: hlt    
Compiled method (c1)     328   32       3       java.util.HashMap::hash (20 bytes)
 total in heap  [0x000001a89c97de90,0x000001a89c97e390] = 1280
 relocation     [0x000001a89c97e008,0x000001a89c97e048] = 64
 main code      [0x000001a89c97e060,0x000001a89c97e200] = 416
 stub code      [0x000001a89c97e200,0x000001a89c97e2b0] = 176
 metadata       [0x000001a89c97e2b0,0x000001a89c97e2b8] = 8
 scopes data    [0x000001a89c97e2b8,0x000001a89c97e2e8] = 48
 scopes pcs     [0x000001a89c97e2e8,0x000001a89c97e378] = 144
 dependencies   [0x000001a89c97e378,0x000001a89c97e380] = 8
 nul chk table  [0x000001a89c97e380,0x000001a89c97e390] = 16
----------------------------------------------------------------------
java/util/HashMap.hash(Ljava/lang/Object;)I  [0x000001a89c97e060, 0x000001a89c97e2b0]  592 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97e060: mov    %eax,-0x7000(%rsp)
  0x000001a89c97e067: push   %rbp
  0x000001a89c97e068: sub    $0x30,%rsp
  0x000001a89c97e06c: movabs $0x1a8b73e5cc0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000001a89c97e076: mov    0xfc(%rsi),%edi
  0x000001a89c97e07c: add    $0x8,%edi
  0x000001a89c97e07f: mov    %edi,0xfc(%rsi)
  0x000001a89c97e085: and    $0x1ff8,%edi
  0x000001a89c97e08b: cmp    $0x0,%edi
  0x000001a89c97e08e: je     0x000001a89c97e1a5  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@0

  0x000001a89c97e094: cmp    $0x0,%rdx
  0x000001a89c97e098: movabs $0x1a8b73e5cc0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000001a89c97e0a2: movabs $0x138,%rdi
  0x000001a89c97e0ac: jne    0x000001a89c97e0bc
  0x000001a89c97e0b2: movabs $0x148,%rdi
  0x000001a89c97e0bc: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97e0c0: lea    0x1(%rbx),%rbx
  0x000001a89c97e0c4: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97e0c8: jne    0x000001a89c97e0e8  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@1

  0x000001a89c97e0ce: movabs $0x1a8b73e5cc0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000001a89c97e0d8: incl   0x158(%rdx)
  0x000001a89c97e0de: mov    $0x0,%esi
  0x000001a89c97e0e3: jmpq   0x000001a89c97e195  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@5

  0x000001a89c97e0e8: cmp    (%rdx),%rax        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ; implicit exception: dispatches to 0x000001a89c97e1c6
  0x000001a89c97e0eb: mov    %rdx,%rsi
  0x000001a89c97e0ee: movabs $0x1a8b73e5cc0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000001a89c97e0f8: mov    0x8(%rsi),%esi
  0x000001a89c97e0fb: shl    $0x3,%rsi
  0x000001a89c97e0ff: cmp    0x180(%rdi),%rsi
  0x000001a89c97e106: jne    0x000001a89c97e115
  0x000001a89c97e108: addq   $0x1,0x188(%rdi)
  0x000001a89c97e110: jmpq   0x000001a89c97e17b
  0x000001a89c97e115: cmp    0x190(%rdi),%rsi
  0x000001a89c97e11c: jne    0x000001a89c97e12b
  0x000001a89c97e11e: addq   $0x1,0x198(%rdi)
  0x000001a89c97e126: jmpq   0x000001a89c97e17b
  0x000001a89c97e12b: cmpq   $0x0,0x180(%rdi)
  0x000001a89c97e136: jne    0x000001a89c97e14f
  0x000001a89c97e138: mov    %rsi,0x180(%rdi)
  0x000001a89c97e13f: movq   $0x1,0x188(%rdi)
  0x000001a89c97e14a: jmpq   0x000001a89c97e17b
  0x000001a89c97e14f: cmpq   $0x0,0x190(%rdi)
  0x000001a89c97e15a: jne    0x000001a89c97e173
  0x000001a89c97e15c: mov    %rsi,0x190(%rdi)
  0x000001a89c97e163: movq   $0x1,0x198(%rdi)
  0x000001a89c97e16e: jmpq   0x000001a89c97e17b
  0x000001a89c97e173: addq   $0x1,0x170(%rdi)
  0x000001a89c97e17b: xchg   %ax,%ax
  0x000001a89c97e17d: movabs $0xffffffffffffffff,%rax
  0x000001a89c97e187: callq  0x000001a89c407280  ; ImmutableOopMap{}
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ;   {virtual_call}
  0x000001a89c97e18c: mov    %rax,%rsi
  0x000001a89c97e18f: shr    $0x10,%esi
  0x000001a89c97e192: xor    %rax,%rsi
  0x000001a89c97e195: mov    %rsi,%rax
  0x000001a89c97e198: add    $0x30,%rsp
  0x000001a89c97e19c: pop    %rbp
  0x000001a89c97e19d: mov    0x70(%r15),%r10
  0x000001a89c97e1a1: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97e1a4: retq   
  0x000001a89c97e1a5: movabs $0x1a8b7278dc8,%r10  ;   {metadata({method} {0x000001a8b7278dd0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000001a89c97e1af: mov    %r10,0x8(%rsp)
  0x000001a89c97e1b4: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97e1bc: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97e1c1: jmpq   0x000001a89c97e094
  0x000001a89c97e1c6: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::hash@9
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97e1cb: nop
  0x000001a89c97e1cc: nop
  0x000001a89c97e1cd: mov    0x350(%r15),%rax
  0x000001a89c97e1d4: movabs $0x0,%r10
  0x000001a89c97e1de: mov    %r10,0x350(%r15)
  0x000001a89c97e1e5: movabs $0x0,%r10
  0x000001a89c97e1ef: mov    %r10,0x358(%r15)
  0x000001a89c97e1f6: add    $0x30,%rsp
  0x000001a89c97e1fa: pop    %rbp
  0x000001a89c97e1fb: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000001a89c97e200: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c97e205: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c97e20f: jmpq   0x000001a89c97e20f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c97e214: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c97e219: mov    %rsp,-0x28(%rsp)
  0x000001a89c97e21e: sub    $0x80,%rsp
  0x000001a89c97e225: mov    %rax,0x78(%rsp)
  0x000001a89c97e22a: mov    %rcx,0x70(%rsp)
  0x000001a89c97e22f: mov    %rdx,0x68(%rsp)
  0x000001a89c97e234: mov    %rbx,0x60(%rsp)
  0x000001a89c97e239: mov    %rbp,0x50(%rsp)
  0x000001a89c97e23e: mov    %rsi,0x48(%rsp)
  0x000001a89c97e243: mov    %rdi,0x40(%rsp)
  0x000001a89c97e248: mov    %r8,0x38(%rsp)
  0x000001a89c97e24d: mov    %r9,0x30(%rsp)
  0x000001a89c97e252: mov    %r10,0x28(%rsp)
  0x000001a89c97e257: mov    %r11,0x20(%rsp)
  0x000001a89c97e25c: mov    %r12,0x18(%rsp)
  0x000001a89c97e261: mov    %r13,0x10(%rsp)
  0x000001a89c97e266: mov    %r14,0x8(%rsp)
  0x000001a89c97e26b: mov    %r15,(%rsp)
  0x000001a89c97e26f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97e279: movabs $0x1a89c97e219,%rdx  ;   {internal_word}
  0x000001a89c97e283: mov    %rsp,%r8
  0x000001a89c97e286: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97e28a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97e294: callq  *%r10
  0x000001a89c97e297: hlt    
[Deopt Handler Code]
  0x000001a89c97e298: movabs $0x1a89c97e298,%r10  ;   {section_word}
  0x000001a89c97e2a2: push   %r10
  0x000001a89c97e2a4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97e2a9: hlt    
  0x000001a89c97e2aa: hlt    
  0x000001a89c97e2ab: hlt    
  0x000001a89c97e2ac: hlt    
  0x000001a89c97e2ad: hlt    
  0x000001a89c97e2ae: hlt    
  0x000001a89c97e2af: hlt    

ImmutableOopMap{}pc offsets: 300 
ImmutableOopMap{rdx=Oop }pc offsets: 353 363 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea3520, 0x000001a8a3ea3540]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7504b10} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea3520: cmp    (%rdx),%rax
  0x000001a8a3ea3523: mov    0x24(%rdi),%ebx
  0x000001a8a3ea3526: shl    $0x3,%rbx
  0x000001a8a3ea352a: mov    0x10(%rbx),%rbx
  0x000001a8a3ea352e: test   %rbx,%rbx
  0x000001a8a3ea3531: je     0x000001a8a3ea353a
  0x000001a8a3ea3537: jmpq   *0x38(%rbx)
  0x000001a8a3ea353a: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea353f: hlt    
Compiled method (c1)     331   26       3       java.util.concurrent.ConcurrentHashMap$Node::<init> (20 bytes)
 total in heap  [0x000001a89c97e410,0x000001a89c97e920] = 1296
 relocation     [0x000001a89c97e588,0x000001a89c97e5c0] = 56
 main code      [0x000001a89c97e5c0,0x000001a89c97e7c0] = 512
 stub code      [0x000001a89c97e7c0,0x000001a89c97e858] = 152
 metadata       [0x000001a89c97e858,0x000001a89c97e870] = 24
 scopes data    [0x000001a89c97e870,0x000001a89c97e8a8] = 56
 scopes pcs     [0x000001a89c97e8a8,0x000001a89c97e918] = 112
 dependencies   [0x000001a89c97e918,0x000001a89c97e920] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap$Node.<init>(ILjava/lang/Object;Ljava/lang/Object;)V  [0x000001a89c97e5c0, 0x000001a89c97e858]  664 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap$Node'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97e5c0: mov    0x8(%rdx),%r10d
  0x000001a89c97e5c4: shl    $0x3,%r10
  0x000001a89c97e5c8: cmp    %rax,%r10
  0x000001a89c97e5cb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97e5d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97e5dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97e5e0: mov    %eax,-0x7000(%rsp)
  0x000001a89c97e5e7: push   %rbp
  0x000001a89c97e5e8: sub    $0x30,%rsp
  0x000001a89c97e5ec: movabs $0x1a8b73deb68,%rsi  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c97e5f6: mov    0xfc(%rsi),%ebx
  0x000001a89c97e5fc: add    $0x8,%ebx
  0x000001a89c97e5ff: mov    %ebx,0xfc(%rsi)
  0x000001a89c97e605: and    $0x1ff8,%ebx
  0x000001a89c97e60b: cmp    $0x0,%ebx
  0x000001a89c97e60e: je     0x000001a89c97e6c8  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@0

  0x000001a89c97e614: mov    %rdx,%rsi
  0x000001a89c97e617: movabs $0x1a8b73deb68,%rbx  ;   {metadata(method data for {method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c97e621: addq   $0x1,0x138(%rbx)
  0x000001a89c97e629: movabs $0x1a8b73432f0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c97e633: mov    0xfc(%rsi),%ebx
  0x000001a89c97e639: add    $0x8,%ebx
  0x000001a89c97e63c: mov    %ebx,0xfc(%rsi)
  0x000001a89c97e642: and    $0x7ffff8,%ebx
  0x000001a89c97e648: cmp    $0x0,%ebx
  0x000001a89c97e64b: je     0x000001a89c97e6e9
  0x000001a89c97e651: mov    %r8d,0xc(%rdx)     ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6

  0x000001a89c97e655: movsbl 0x398(%r15),%esi
  0x000001a89c97e65d: cmp    $0x0,%esi
  0x000001a89c97e660: jne    0x000001a89c97e70a
  0x000001a89c97e666: mov    %r9,%r10
  0x000001a89c97e669: shr    $0x3,%r10
  0x000001a89c97e66d: mov    %r10d,0x10(%rdx)
  0x000001a89c97e671: mov    %rdx,%rsi
  0x000001a89c97e674: xor    %r9,%rsi
  0x000001a89c97e677: shr    $0x14,%rsi
  0x000001a89c97e67b: cmp    $0x0,%rsi
  0x000001a89c97e67f: jne    0x000001a89c97e729
  0x000001a89c97e685: movsbl 0x398(%r15),%esi
  0x000001a89c97e68d: cmp    $0x0,%esi
  0x000001a89c97e690: jne    0x000001a89c97e741
  0x000001a89c97e696: mov    %rdi,%r10
  0x000001a89c97e699: shr    $0x3,%r10
  0x000001a89c97e69d: mov    %r10d,0x14(%rdx)
  0x000001a89c97e6a1: mov    %rdx,%rsi
  0x000001a89c97e6a4: xor    %rdi,%rsi
  0x000001a89c97e6a7: shr    $0x14,%rsi
  0x000001a89c97e6ab: cmp    $0x0,%rsi
  0x000001a89c97e6af: jne    0x000001a89c97e760
  0x000001a89c97e6b5: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16

  0x000001a89c97e6bb: add    $0x30,%rsp
  0x000001a89c97e6bf: pop    %rbp
  0x000001a89c97e6c0: mov    0x70(%r15),%r10
  0x000001a89c97e6c4: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97e6c7: retq   
  0x000001a89c97e6c8: movabs $0x1a8b72918f0,%r10  ;   {metadata({method} {0x000001a8b72918f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c97e6d2: mov    %r10,0x8(%rsp)
  0x000001a89c97e6d7: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97e6df: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97e6e4: jmpq   0x000001a89c97e614
  0x000001a89c97e6e9: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c97e6f3: mov    %r10,0x8(%rsp)
  0x000001a89c97e6f8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97e700: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97e705: jmpq   0x000001a89c97e651
  0x000001a89c97e70a: mov    0x10(%rdx),%esi
  0x000001a89c97e70d: shl    $0x3,%rsi
  0x000001a89c97e711: cmp    $0x0,%rsi
  0x000001a89c97e715: je     0x000001a89c97e666
  0x000001a89c97e71b: mov    %rsi,(%rsp)
  0x000001a89c97e71f: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c97e724: jmpq   0x000001a89c97e666
  0x000001a89c97e729: cmp    $0x0,%r9
  0x000001a89c97e72d: je     0x000001a89c97e685
  0x000001a89c97e733: mov    %rdx,(%rsp)
  0x000001a89c97e737: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c97e73c: jmpq   0x000001a89c97e685
  0x000001a89c97e741: mov    0x14(%rdx),%esi
  0x000001a89c97e744: shl    $0x3,%rsi
  0x000001a89c97e748: cmp    $0x0,%rsi
  0x000001a89c97e74c: je     0x000001a89c97e696
  0x000001a89c97e752: mov    %rsi,(%rsp)
  0x000001a89c97e756: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c97e75b: jmpq   0x000001a89c97e696
  0x000001a89c97e760: cmp    $0x0,%rdi
  0x000001a89c97e764: je     0x000001a89c97e6b5
  0x000001a89c97e76a: mov    %rdx,(%rsp)
  0x000001a89c97e76e: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c97e773: jmpq   0x000001a89c97e6b5
  0x000001a89c97e778: nop
  0x000001a89c97e779: nop
  0x000001a89c97e77a: mov    0x350(%r15),%rax
  0x000001a89c97e781: movabs $0x0,%r10
  0x000001a89c97e78b: mov    %r10,0x350(%r15)
  0x000001a89c97e792: movabs $0x0,%r10
  0x000001a89c97e79c: mov    %r10,0x358(%r15)
  0x000001a89c97e7a3: add    $0x30,%rsp
  0x000001a89c97e7a7: pop    %rbp
  0x000001a89c97e7a8: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97e7ad: hlt    
  0x000001a89c97e7ae: hlt    
  0x000001a89c97e7af: hlt    
  0x000001a89c97e7b0: hlt    
  0x000001a89c97e7b1: hlt    
  0x000001a89c97e7b2: hlt    
  0x000001a89c97e7b3: hlt    
  0x000001a89c97e7b4: hlt    
  0x000001a89c97e7b5: hlt    
  0x000001a89c97e7b6: hlt    
  0x000001a89c97e7b7: hlt    
  0x000001a89c97e7b8: hlt    
  0x000001a89c97e7b9: hlt    
  0x000001a89c97e7ba: hlt    
  0x000001a89c97e7bb: hlt    
  0x000001a89c97e7bc: hlt    
  0x000001a89c97e7bd: hlt    
  0x000001a89c97e7be: hlt    
  0x000001a89c97e7bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97e7c0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97e7c5: mov    %rsp,-0x28(%rsp)
  0x000001a89c97e7ca: sub    $0x80,%rsp
  0x000001a89c97e7d1: mov    %rax,0x78(%rsp)
  0x000001a89c97e7d6: mov    %rcx,0x70(%rsp)
  0x000001a89c97e7db: mov    %rdx,0x68(%rsp)
  0x000001a89c97e7e0: mov    %rbx,0x60(%rsp)
  0x000001a89c97e7e5: mov    %rbp,0x50(%rsp)
  0x000001a89c97e7ea: mov    %rsi,0x48(%rsp)
  0x000001a89c97e7ef: mov    %rdi,0x40(%rsp)
  0x000001a89c97e7f4: mov    %r8,0x38(%rsp)
  0x000001a89c97e7f9: mov    %r9,0x30(%rsp)
  0x000001a89c97e7fe: mov    %r10,0x28(%rsp)
  0x000001a89c97e803: mov    %r11,0x20(%rsp)
  0x000001a89c97e808: mov    %r12,0x18(%rsp)
  0x000001a89c97e80d: mov    %r13,0x10(%rsp)
  0x000001a89c97e812: mov    %r14,0x8(%rsp)
  0x000001a89c97e817: mov    %r15,(%rsp)
  0x000001a89c97e81b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97e825: movabs $0x1a89c97e7c5,%rdx  ;   {internal_word}
  0x000001a89c97e82f: mov    %rsp,%r8
  0x000001a89c97e832: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97e836: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97e840: callq  *%r10
  0x000001a89c97e843: hlt    
[Deopt Handler Code]
  0x000001a89c97e844: movabs $0x1a89c97e844,%r10  ;   {section_word}
  0x000001a89c97e84e: push   %r10
  0x000001a89c97e850: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97e855: hlt    
  0x000001a89c97e856: hlt    
  0x000001a89c97e857: hlt    

ImmutableOopMap{rdx=Oop r9=Oop rdi=Oop }pc offsets: 292 325 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea3720, 0x000001a8a3ea3740]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b750fdf0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea3720: mov    0x24(%rsi),%ebx
  0x000001a8a3ea3723: shl    $0x3,%rbx
  0x000001a8a3ea3727: mov    0x10(%rbx),%rbx
  0x000001a8a3ea372b: test   %rbx,%rbx
  0x000001a8a3ea372e: je     0x000001a8a3ea3737
  0x000001a8a3ea3734: jmpq   *0x38(%rbx)
  0x000001a8a3ea3737: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea373c: hlt    
  0x000001a8a3ea373d: hlt    
  0x000001a8a3ea373e: hlt    
  0x000001a8a3ea373f: hlt    
Compiled method (c1)     335   57       3       java.lang.String::length (11 bytes)
 total in heap  [0x000001a89c97e990,0x000001a89c97ee60] = 1232
 relocation     [0x000001a89c97eb08,0x000001a89c97eb40] = 56
 main code      [0x000001a89c97eb40,0x000001a89c97eca0] = 352
 stub code      [0x000001a89c97eca0,0x000001a89c97ed38] = 152
 metadata       [0x000001a89c97ed38,0x000001a89c97ed48] = 16
 scopes data    [0x000001a89c97ed48,0x000001a89c97ed98] = 80
 scopes pcs     [0x000001a89c97ed98,0x000001a89c97ee48] = 176
 dependencies   [0x000001a89c97ee48,0x000001a89c97ee50] = 8
 nul chk table  [0x000001a89c97ee50,0x000001a89c97ee60] = 16
----------------------------------------------------------------------
java/lang/String.length()I  [0x000001a89c97eb40, 0x000001a89c97ed38]  504 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b71744b0} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97eb40: mov    0x8(%rdx),%r10d
  0x000001a89c97eb44: shl    $0x3,%r10
  0x000001a89c97eb48: cmp    %rax,%r10
  0x000001a89c97eb4b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97eb51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97eb5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97eb60: mov    %eax,-0x7000(%rsp)
  0x000001a89c97eb67: push   %rbp
  0x000001a89c97eb68: sub    $0x30,%rsp
  0x000001a89c97eb6c: movabs $0x1a8b74175a8,%rcx  ;   {metadata(method data for {method} {0x000001a8b71744b0} 'length' '()I' in 'java/lang/String')}
  0x000001a89c97eb76: mov    0xfc(%rcx),%eax
  0x000001a89c97eb7c: add    $0x8,%eax
  0x000001a89c97eb7f: mov    %eax,0xfc(%rcx)
  0x000001a89c97eb85: and    $0x1ff8,%eax
  0x000001a89c97eb8b: cmp    $0x0,%eax
  0x000001a89c97eb8e: je     0x000001a89c97ec14  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@0

  0x000001a89c97eb94: mov    0xc(%rdx),%ecx
  0x000001a89c97eb97: shl    $0x3,%rcx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@1

  0x000001a89c97eb9b: mov    0xc(%rcx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4
                                                ; implicit exception: dispatches to 0x000001a89c97ec35
  0x000001a89c97eb9e: mov    %rdx,%rcx
  0x000001a89c97eba1: movabs $0x1a8b74175a8,%rsi  ;   {metadata(method data for {method} {0x000001a8b71744b0} 'length' '()I' in 'java/lang/String')}
  0x000001a89c97ebab: addq   $0x1,0x138(%rsi)
  0x000001a89c97ebb3: movabs $0x1a8b7393c08,%rcx  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97ebbd: mov    0xfc(%rcx),%esi
  0x000001a89c97ebc3: add    $0x8,%esi
  0x000001a89c97ebc6: mov    %esi,0xfc(%rcx)
  0x000001a89c97ebcc: and    $0x7ffff8,%esi
  0x000001a89c97ebd2: cmp    $0x0,%esi
  0x000001a89c97ebd5: je     0x000001a89c97ec3a
  0x000001a89c97ebdb: movabs $0x1a8b7393c08,%rcx  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97ebe5: incl   0x148(%rcx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@3
                                                ; - java.lang.String::length@6

  0x000001a89c97ebeb: movsbl 0x14(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7
                                                ; - java.lang.String::length@6

  0x000001a89c97ebef: movabs $0x1a8b7393c08,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97ebf9: incl   0x158(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@10
                                                ; - java.lang.String::length@6

  0x000001a89c97ebff: shl    $0x18,%ecx
  0x000001a89c97ec02: sar    $0x18,%ecx
  0x000001a89c97ec05: sar    %cl,%eax
  0x000001a89c97ec07: add    $0x30,%rsp
  0x000001a89c97ec0b: pop    %rbp
  0x000001a89c97ec0c: mov    0x70(%r15),%r10
  0x000001a89c97ec10: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97ec13: retq   
  0x000001a89c97ec14: movabs $0x1a8b71744a8,%r10  ;   {metadata({method} {0x000001a8b71744b0} 'length' '()I' in 'java/lang/String')}
  0x000001a89c97ec1e: mov    %r10,0x8(%rsp)
  0x000001a89c97ec23: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97ec2b: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97ec30: jmpq   0x000001a89c97eb94
  0x000001a89c97ec35: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::length@4
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97ec3a: movabs $0x1a8b7177dc8,%r10  ;   {metadata({method} {0x000001a8b7177dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a89c97ec44: mov    %r10,0x8(%rsp)
  0x000001a89c97ec49: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97ec51: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ; - java.lang.String::length@6
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97ec56: jmp    0x000001a89c97ebdb
  0x000001a89c97ec58: nop
  0x000001a89c97ec59: nop
  0x000001a89c97ec5a: mov    0x350(%r15),%rax
  0x000001a89c97ec61: movabs $0x0,%r10
  0x000001a89c97ec6b: mov    %r10,0x350(%r15)
  0x000001a89c97ec72: movabs $0x0,%r10
  0x000001a89c97ec7c: mov    %r10,0x358(%r15)
  0x000001a89c97ec83: add    $0x30,%rsp
  0x000001a89c97ec87: pop    %rbp
  0x000001a89c97ec88: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97ec8d: hlt    
  0x000001a89c97ec8e: hlt    
  0x000001a89c97ec8f: hlt    
  0x000001a89c97ec90: hlt    
  0x000001a89c97ec91: hlt    
  0x000001a89c97ec92: hlt    
  0x000001a89c97ec93: hlt    
  0x000001a89c97ec94: hlt    
  0x000001a89c97ec95: hlt    
  0x000001a89c97ec96: hlt    
  0x000001a89c97ec97: hlt    
  0x000001a89c97ec98: hlt    
  0x000001a89c97ec99: hlt    
  0x000001a89c97ec9a: hlt    
  0x000001a89c97ec9b: hlt    
  0x000001a89c97ec9c: hlt    
  0x000001a89c97ec9d: hlt    
  0x000001a89c97ec9e: hlt    
  0x000001a89c97ec9f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97eca0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97eca5: mov    %rsp,-0x28(%rsp)
  0x000001a89c97ecaa: sub    $0x80,%rsp
  0x000001a89c97ecb1: mov    %rax,0x78(%rsp)
  0x000001a89c97ecb6: mov    %rcx,0x70(%rsp)
  0x000001a89c97ecbb: mov    %rdx,0x68(%rsp)
  0x000001a89c97ecc0: mov    %rbx,0x60(%rsp)
  0x000001a89c97ecc5: mov    %rbp,0x50(%rsp)
  0x000001a89c97ecca: mov    %rsi,0x48(%rsp)
  0x000001a89c97eccf: mov    %rdi,0x40(%rsp)
  0x000001a89c97ecd4: mov    %r8,0x38(%rsp)
  0x000001a89c97ecd9: mov    %r9,0x30(%rsp)
  0x000001a89c97ecde: mov    %r10,0x28(%rsp)
  0x000001a89c97ece3: mov    %r11,0x20(%rsp)
  0x000001a89c97ece8: mov    %r12,0x18(%rsp)
  0x000001a89c97eced: mov    %r13,0x10(%rsp)
  0x000001a89c97ecf2: mov    %r14,0x8(%rsp)
  0x000001a89c97ecf7: mov    %r15,(%rsp)
  0x000001a89c97ecfb: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97ed05: movabs $0x1a89c97eca5,%rdx  ;   {internal_word}
  0x000001a89c97ed0f: mov    %rsp,%r8
  0x000001a89c97ed12: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97ed16: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97ed20: callq  *%r10
  0x000001a89c97ed23: hlt    
[Deopt Handler Code]
  0x000001a89c97ed24: movabs $0x1a89c97ed24,%r10  ;   {section_word}
  0x000001a89c97ed2e: push   %r10
  0x000001a89c97ed30: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97ed35: hlt    
  0x000001a89c97ed36: hlt    
  0x000001a89c97ed37: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 240 250 278 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea3920, 0x000001a8a3ea3950]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7510688} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea3920: mov    0x14(%rdx),%ebx
  0x000001a8a3ea3923: shl    $0x3,%rbx
  0x000001a8a3ea3927: mov    0x28(%rbx),%ebx
  0x000001a8a3ea392a: shl    $0x3,%rbx
  0x000001a8a3ea392e: mov    0x24(%rbx),%ebx
  0x000001a8a3ea3931: shl    $0x3,%rbx
  0x000001a8a3ea3935: mov    0x10(%rbx),%rbx
  0x000001a8a3ea3939: test   %rbx,%rbx
  0x000001a8a3ea393c: je     0x000001a8a3ea3945
  0x000001a8a3ea3942: jmpq   *0x38(%rbx)
  0x000001a8a3ea3945: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea394a: hlt    
  0x000001a8a3ea394b: hlt    
  0x000001a8a3ea394c: hlt    
  0x000001a8a3ea394d: hlt    
  0x000001a8a3ea394e: hlt    
  0x000001a8a3ea394f: hlt    
Compiled method (c1)     337   60       1       java.lang.Enum::ordinal (5 bytes)
 total in heap  [0x000001a8a3ea3990,0x000001a8a3ea3cb8] = 808
 relocation     [0x000001a8a3ea3b08,0x000001a8a3ea3b30] = 40
 main code      [0x000001a8a3ea3b40,0x000001a8a3ea3bc0] = 128
 stub code      [0x000001a8a3ea3bc0,0x000001a8a3ea3c58] = 152
 metadata       [0x000001a8a3ea3c58,0x000001a8a3ea3c60] = 8
 scopes data    [0x000001a8a3ea3c60,0x000001a8a3ea3c70] = 16
 scopes pcs     [0x000001a8a3ea3c70,0x000001a8a3ea3cb0] = 64
 dependencies   [0x000001a8a3ea3cb0,0x000001a8a3ea3cb8] = 8
----------------------------------------------------------------------
java/lang/Enum.ordinal()I  [0x000001a8a3ea3b40, 0x000001a8a3ea3c58]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b739cb88} 'ordinal' '()I' in 'java/lang/Enum'
  #           [sp+0x40]  (sp of caller)
  0x000001a8a3ea3b40: mov    0x8(%rdx),%r10d
  0x000001a8a3ea3b44: shl    $0x3,%r10
  0x000001a8a3ea3b48: cmp    %rax,%r10
  0x000001a8a3ea3b4b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea3b51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a8a3ea3b5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea3b60: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea3b67: push   %rbp
  0x000001a8a3ea3b68: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@0

  0x000001a8a3ea3b6c: mov    0xc(%rdx),%eax     ;*getfield ordinal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Enum::ordinal@1

  0x000001a8a3ea3b6f: add    $0x30,%rsp
  0x000001a8a3ea3b73: pop    %rbp
  0x000001a8a3ea3b74: mov    0x70(%r15),%r10
  0x000001a8a3ea3b78: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea3b7b: retq   
  0x000001a8a3ea3b7c: nop
  0x000001a8a3ea3b7d: nop
  0x000001a8a3ea3b7e: mov    0x350(%r15),%rax
  0x000001a8a3ea3b85: movabs $0x0,%r10
  0x000001a8a3ea3b8f: mov    %r10,0x350(%r15)
  0x000001a8a3ea3b96: movabs $0x0,%r10
  0x000001a8a3ea3ba0: mov    %r10,0x358(%r15)
  0x000001a8a3ea3ba7: add    $0x30,%rsp
  0x000001a8a3ea3bab: pop    %rbp
  0x000001a8a3ea3bac: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a8a3ea3bb1: hlt    
  0x000001a8a3ea3bb2: hlt    
  0x000001a8a3ea3bb3: hlt    
  0x000001a8a3ea3bb4: hlt    
  0x000001a8a3ea3bb5: hlt    
  0x000001a8a3ea3bb6: hlt    
  0x000001a8a3ea3bb7: hlt    
  0x000001a8a3ea3bb8: hlt    
  0x000001a8a3ea3bb9: hlt    
  0x000001a8a3ea3bba: hlt    
  0x000001a8a3ea3bbb: hlt    
  0x000001a8a3ea3bbc: hlt    
  0x000001a8a3ea3bbd: hlt    
  0x000001a8a3ea3bbe: hlt    
  0x000001a8a3ea3bbf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea3bc0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a8a3ea3bc5: mov    %rsp,-0x28(%rsp)
  0x000001a8a3ea3bca: sub    $0x80,%rsp
  0x000001a8a3ea3bd1: mov    %rax,0x78(%rsp)
  0x000001a8a3ea3bd6: mov    %rcx,0x70(%rsp)
  0x000001a8a3ea3bdb: mov    %rdx,0x68(%rsp)
  0x000001a8a3ea3be0: mov    %rbx,0x60(%rsp)
  0x000001a8a3ea3be5: mov    %rbp,0x50(%rsp)
  0x000001a8a3ea3bea: mov    %rsi,0x48(%rsp)
  0x000001a8a3ea3bef: mov    %rdi,0x40(%rsp)
  0x000001a8a3ea3bf4: mov    %r8,0x38(%rsp)
  0x000001a8a3ea3bf9: mov    %r9,0x30(%rsp)
  0x000001a8a3ea3bfe: mov    %r10,0x28(%rsp)
  0x000001a8a3ea3c03: mov    %r11,0x20(%rsp)
  0x000001a8a3ea3c08: mov    %r12,0x18(%rsp)
  0x000001a8a3ea3c0d: mov    %r13,0x10(%rsp)
  0x000001a8a3ea3c12: mov    %r14,0x8(%rsp)
  0x000001a8a3ea3c17: mov    %r15,(%rsp)
  0x000001a8a3ea3c1b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a8a3ea3c25: movabs $0x1a8a3ea3bc5,%rdx  ;   {internal_word}
  0x000001a8a3ea3c2f: mov    %rsp,%r8
  0x000001a8a3ea3c32: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea3c36: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a8a3ea3c40: callq  *%r10
  0x000001a8a3ea3c43: hlt    
[Deopt Handler Code]
  0x000001a8a3ea3c44: movabs $0x1a8a3ea3c44,%r10  ;   {section_word}
  0x000001a8a3ea3c4e: push   %r10
  0x000001a8a3ea3c50: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea3c55: hlt    
  0x000001a8a3ea3c56: hlt    
  0x000001a8a3ea3c57: hlt    
Compiled method (c1)     338   56       1       java.lang.Class::getClassLoader0 (5 bytes)
 total in heap  [0x000001a8a3ea3d10,0x000001a8a3ea4038] = 808
 relocation     [0x000001a8a3ea3e88,0x000001a8a3ea3eb0] = 40
 main code      [0x000001a8a3ea3ec0,0x000001a8a3ea3f40] = 128
 stub code      [0x000001a8a3ea3f40,0x000001a8a3ea3fd8] = 152
 metadata       [0x000001a8a3ea3fd8,0x000001a8a3ea3fe0] = 8
 scopes data    [0x000001a8a3ea3fe0,0x000001a8a3ea3ff0] = 16
 scopes pcs     [0x000001a8a3ea3ff0,0x000001a8a3ea4030] = 64
 dependencies   [0x000001a8a3ea4030,0x000001a8a3ea4038] = 8
----------------------------------------------------------------------
java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;  [0x000001a8a3ea3ec0, 0x000001a8a3ea3fd8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b717dd98} 'getClassLoader0' '()Ljava/lang/ClassLoader;' in 'java/lang/Class'
  #           [sp+0x40]  (sp of caller)
  0x000001a8a3ea3ec0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea3ec4: shl    $0x3,%r10
  0x000001a8a3ea3ec8: cmp    %rax,%r10
  0x000001a8a3ea3ecb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea3ed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a8a3ea3edc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea3ee0: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea3ee7: push   %rbp
  0x000001a8a3ea3ee8: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@0

  0x000001a8a3ea3eec: mov    0x1c(%rdx),%eax
  0x000001a8a3ea3eef: shl    $0x3,%rax          ;*getfield classLoader {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Class::getClassLoader0@1

  0x000001a8a3ea3ef3: add    $0x30,%rsp
  0x000001a8a3ea3ef7: pop    %rbp
  0x000001a8a3ea3ef8: mov    0x70(%r15),%r10
  0x000001a8a3ea3efc: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea3eff: retq   
  0x000001a8a3ea3f00: nop
  0x000001a8a3ea3f01: nop
  0x000001a8a3ea3f02: mov    0x350(%r15),%rax
  0x000001a8a3ea3f09: movabs $0x0,%r10
  0x000001a8a3ea3f13: mov    %r10,0x350(%r15)
  0x000001a8a3ea3f1a: movabs $0x0,%r10
  0x000001a8a3ea3f24: mov    %r10,0x358(%r15)
  0x000001a8a3ea3f2b: add    $0x30,%rsp
  0x000001a8a3ea3f2f: pop    %rbp
  0x000001a8a3ea3f30: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a8a3ea3f35: hlt    
  0x000001a8a3ea3f36: hlt    
  0x000001a8a3ea3f37: hlt    
  0x000001a8a3ea3f38: hlt    
  0x000001a8a3ea3f39: hlt    
  0x000001a8a3ea3f3a: hlt    
  0x000001a8a3ea3f3b: hlt    
  0x000001a8a3ea3f3c: hlt    
  0x000001a8a3ea3f3d: hlt    
  0x000001a8a3ea3f3e: hlt    
  0x000001a8a3ea3f3f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea3f40: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a8a3ea3f45: mov    %rsp,-0x28(%rsp)
  0x000001a8a3ea3f4a: sub    $0x80,%rsp
  0x000001a8a3ea3f51: mov    %rax,0x78(%rsp)
  0x000001a8a3ea3f56: mov    %rcx,0x70(%rsp)
  0x000001a8a3ea3f5b: mov    %rdx,0x68(%rsp)
  0x000001a8a3ea3f60: mov    %rbx,0x60(%rsp)
  0x000001a8a3ea3f65: mov    %rbp,0x50(%rsp)
  0x000001a8a3ea3f6a: mov    %rsi,0x48(%rsp)
  0x000001a8a3ea3f6f: mov    %rdi,0x40(%rsp)
  0x000001a8a3ea3f74: mov    %r8,0x38(%rsp)
  0x000001a8a3ea3f79: mov    %r9,0x30(%rsp)
  0x000001a8a3ea3f7e: mov    %r10,0x28(%rsp)
  0x000001a8a3ea3f83: mov    %r11,0x20(%rsp)
  0x000001a8a3ea3f88: mov    %r12,0x18(%rsp)
  0x000001a8a3ea3f8d: mov    %r13,0x10(%rsp)
  0x000001a8a3ea3f92: mov    %r14,0x8(%rsp)
  0x000001a8a3ea3f97: mov    %r15,(%rsp)
  0x000001a8a3ea3f9b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a8a3ea3fa5: movabs $0x1a8a3ea3f45,%rdx  ;   {internal_word}
  0x000001a8a3ea3faf: mov    %rsp,%r8
  0x000001a8a3ea3fb2: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea3fb6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a8a3ea3fc0: callq  *%r10
  0x000001a8a3ea3fc3: hlt    
[Deopt Handler Code]
  0x000001a8a3ea3fc4: movabs $0x1a8a3ea3fc4,%r10  ;   {section_word}
  0x000001a8a3ea3fce: push   %r10
  0x000001a8a3ea3fd0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea3fd5: hlt    
  0x000001a8a3ea3fd6: hlt    
  0x000001a8a3ea3fd7: hlt    
Compiled method (c1)     340   68       1       java.lang.invoke.MethodType::returnType (5 bytes)
 total in heap  [0x000001a8a3ea4090,0x000001a8a3ea43b8] = 808
 relocation     [0x000001a8a3ea4208,0x000001a8a3ea4230] = 40
 main code      [0x000001a8a3ea4240,0x000001a8a3ea42c0] = 128
 stub code      [0x000001a8a3ea42c0,0x000001a8a3ea4358] = 152
 metadata       [0x000001a8a3ea4358,0x000001a8a3ea4360] = 8
 scopes data    [0x000001a8a3ea4360,0x000001a8a3ea4370] = 16
 scopes pcs     [0x000001a8a3ea4370,0x000001a8a3ea43b0] = 64
 dependencies   [0x000001a8a3ea43b0,0x000001a8a3ea43b8] = 8
----------------------------------------------------------------------
java/lang/invoke/MethodType.returnType()Ljava/lang/Class;  [0x000001a8a3ea4240, 0x000001a8a3ea4358]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b71efba0} 'returnType' '()Ljava/lang/Class;' in 'java/lang/invoke/MethodType'
  #           [sp+0x40]  (sp of caller)
  0x000001a8a3ea4240: mov    0x8(%rdx),%r10d
  0x000001a8a3ea4244: shl    $0x3,%r10
  0x000001a8a3ea4248: cmp    %rax,%r10
  0x000001a8a3ea424b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea4251: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a8a3ea425c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea4260: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea4267: push   %rbp
  0x000001a8a3ea4268: sub    $0x30,%rsp         ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@0

  0x000001a8a3ea426c: mov    0xc(%rdx),%eax
  0x000001a8a3ea426f: shl    $0x3,%rax          ;*getfield rtype {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MethodType::returnType@1

  0x000001a8a3ea4273: add    $0x30,%rsp
  0x000001a8a3ea4277: pop    %rbp
  0x000001a8a3ea4278: mov    0x70(%r15),%r10
  0x000001a8a3ea427c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea427f: retq   
  0x000001a8a3ea4280: nop
  0x000001a8a3ea4281: nop
  0x000001a8a3ea4282: mov    0x350(%r15),%rax
  0x000001a8a3ea4289: movabs $0x0,%r10
  0x000001a8a3ea4293: mov    %r10,0x350(%r15)
  0x000001a8a3ea429a: movabs $0x0,%r10
  0x000001a8a3ea42a4: mov    %r10,0x358(%r15)
  0x000001a8a3ea42ab: add    $0x30,%rsp
  0x000001a8a3ea42af: pop    %rbp
  0x000001a8a3ea42b0: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a8a3ea42b5: hlt    
  0x000001a8a3ea42b6: hlt    
  0x000001a8a3ea42b7: hlt    
  0x000001a8a3ea42b8: hlt    
  0x000001a8a3ea42b9: hlt    
  0x000001a8a3ea42ba: hlt    
  0x000001a8a3ea42bb: hlt    
  0x000001a8a3ea42bc: hlt    
  0x000001a8a3ea42bd: hlt    
  0x000001a8a3ea42be: hlt    
  0x000001a8a3ea42bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea42c0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a8a3ea42c5: mov    %rsp,-0x28(%rsp)
  0x000001a8a3ea42ca: sub    $0x80,%rsp
  0x000001a8a3ea42d1: mov    %rax,0x78(%rsp)
  0x000001a8a3ea42d6: mov    %rcx,0x70(%rsp)
  0x000001a8a3ea42db: mov    %rdx,0x68(%rsp)
  0x000001a8a3ea42e0: mov    %rbx,0x60(%rsp)
  0x000001a8a3ea42e5: mov    %rbp,0x50(%rsp)
  0x000001a8a3ea42ea: mov    %rsi,0x48(%rsp)
  0x000001a8a3ea42ef: mov    %rdi,0x40(%rsp)
  0x000001a8a3ea42f4: mov    %r8,0x38(%rsp)
  0x000001a8a3ea42f9: mov    %r9,0x30(%rsp)
  0x000001a8a3ea42fe: mov    %r10,0x28(%rsp)
  0x000001a8a3ea4303: mov    %r11,0x20(%rsp)
  0x000001a8a3ea4308: mov    %r12,0x18(%rsp)
  0x000001a8a3ea430d: mov    %r13,0x10(%rsp)
  0x000001a8a3ea4312: mov    %r14,0x8(%rsp)
  0x000001a8a3ea4317: mov    %r15,(%rsp)
  0x000001a8a3ea431b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a8a3ea4325: movabs $0x1a8a3ea42c5,%rdx  ;   {internal_word}
  0x000001a8a3ea432f: mov    %rsp,%r8
  0x000001a8a3ea4332: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea4336: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a8a3ea4340: callq  *%r10
  0x000001a8a3ea4343: hlt    
[Deopt Handler Code]
  0x000001a8a3ea4344: movabs $0x1a8a3ea4344,%r10  ;   {section_word}
  0x000001a8a3ea434e: push   %r10
  0x000001a8a3ea4350: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea4355: hlt    
  0x000001a8a3ea4356: hlt    
  0x000001a8a3ea4357: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea45a0, 0x000001a8a3ea45d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7532e88} 'invokeBasic' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea45a0: mov    0x14(%rdx),%ebx
  0x000001a8a3ea45a3: shl    $0x3,%rbx
  0x000001a8a3ea45a7: mov    0x28(%rbx),%ebx
  0x000001a8a3ea45aa: shl    $0x3,%rbx
  0x000001a8a3ea45ae: mov    0x24(%rbx),%ebx
  0x000001a8a3ea45b1: shl    $0x3,%rbx
  0x000001a8a3ea45b5: mov    0x10(%rbx),%rbx
  0x000001a8a3ea45b9: test   %rbx,%rbx
  0x000001a8a3ea45bc: je     0x000001a8a3ea45c5
  0x000001a8a3ea45c2: jmpq   *0x38(%rbx)
  0x000001a8a3ea45c5: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea45ca: hlt    
  0x000001a8a3ea45cb: hlt    
  0x000001a8a3ea45cc: hlt    
  0x000001a8a3ea45cd: hlt    
  0x000001a8a3ea45ce: hlt    
  0x000001a8a3ea45cf: hlt    
Compiled method (c1)     342   70       3       java.lang.invoke.MemberName::testFlags (16 bytes)
 total in heap  [0x000001a89c97ee90,0x000001a89c97f2b8] = 1064
 relocation     [0x000001a89c97f008,0x000001a89c97f038] = 48
 main code      [0x000001a89c97f040,0x000001a89c97f160] = 288
 stub code      [0x000001a89c97f160,0x000001a89c97f1f8] = 152
 metadata       [0x000001a89c97f1f8,0x000001a89c97f200] = 8
 scopes data    [0x000001a89c97f200,0x000001a89c97f230] = 48
 scopes pcs     [0x000001a89c97f230,0x000001a89c97f2b0] = 128
 dependencies   [0x000001a89c97f2b0,0x000001a89c97f2b8] = 8
----------------------------------------------------------------------
java/lang/invoke/MemberName.testFlags(II)Z  [0x000001a89c97f040, 0x000001a89c97f1f8]  440 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b71ddcb0} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName'
  # this:     rdx:rdx   = 'java/lang/invoke/MemberName'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97f040: mov    0x8(%rdx),%r10d
  0x000001a89c97f044: shl    $0x3,%r10
  0x000001a89c97f048: cmp    %rax,%r10
  0x000001a89c97f04b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c97f051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c97f05c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c97f060: mov    %eax,-0x7000(%rsp)
  0x000001a89c97f067: push   %rbp
  0x000001a89c97f068: sub    $0x30,%rsp
  0x000001a89c97f06c: movabs $0x1a8b7532ee8,%rax  ;   {metadata(method data for {method} {0x000001a8b71ddcb0} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000001a89c97f076: mov    0xfc(%rax),%esi
  0x000001a89c97f07c: add    $0x8,%esi
  0x000001a89c97f07f: mov    %esi,0xfc(%rax)
  0x000001a89c97f085: and    $0x1ff8,%esi
  0x000001a89c97f08b: cmp    $0x0,%esi
  0x000001a89c97f08e: je     0x000001a89c97f102  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@0

  0x000001a89c97f094: mov    0xc(%rdx),%eax     ;*getfield flags {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@1

  0x000001a89c97f097: and    %r8,%rax
  0x000001a89c97f09a: cmp    %r9d,%eax
  0x000001a89c97f09d: movabs $0x1a8b7532ee8,%rax  ;   {metadata(method data for {method} {0x000001a8b71ddcb0} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000001a89c97f0a7: movabs $0x138,%rsi
  0x000001a89c97f0b1: jne    0x000001a89c97f0c1
  0x000001a89c97f0b7: movabs $0x148,%rsi
  0x000001a89c97f0c1: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97f0c5: lea    0x1(%rdi),%rdi
  0x000001a89c97f0c9: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97f0cd: jne    0x000001a89c97f0ed  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@7

  0x000001a89c97f0d3: movabs $0x1a8b7532ee8,%rax  ;   {metadata(method data for {method} {0x000001a8b71ddcb0} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000001a89c97f0dd: incl   0x158(%rax)
  0x000001a89c97f0e3: mov    $0x1,%eax
  0x000001a89c97f0e8: jmpq   0x000001a89c97f0f2  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@11

  0x000001a89c97f0ed: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.invoke.MemberName::testFlags@15

  0x000001a89c97f0f2: and    $0x1,%eax
  0x000001a89c97f0f5: add    $0x30,%rsp
  0x000001a89c97f0f9: pop    %rbp
  0x000001a89c97f0fa: mov    0x70(%r15),%r10
  0x000001a89c97f0fe: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97f101: retq   
  0x000001a89c97f102: movabs $0x1a8b71ddca8,%r10  ;   {metadata({method} {0x000001a8b71ddcb0} 'testFlags' '(II)Z' in 'java/lang/invoke/MemberName')}
  0x000001a89c97f10c: mov    %r10,0x8(%rsp)
  0x000001a89c97f111: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97f119: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.invoke.MemberName::testFlags@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97f11e: jmpq   0x000001a89c97f094
  0x000001a89c97f123: nop
  0x000001a89c97f124: nop
  0x000001a89c97f125: mov    0x350(%r15),%rax
  0x000001a89c97f12c: movabs $0x0,%r10
  0x000001a89c97f136: mov    %r10,0x350(%r15)
  0x000001a89c97f13d: movabs $0x0,%r10
  0x000001a89c97f147: mov    %r10,0x358(%r15)
  0x000001a89c97f14e: add    $0x30,%rsp
  0x000001a89c97f152: pop    %rbp
  0x000001a89c97f153: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97f158: hlt    
  0x000001a89c97f159: hlt    
  0x000001a89c97f15a: hlt    
  0x000001a89c97f15b: hlt    
  0x000001a89c97f15c: hlt    
  0x000001a89c97f15d: hlt    
  0x000001a89c97f15e: hlt    
  0x000001a89c97f15f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97f160: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97f165: mov    %rsp,-0x28(%rsp)
  0x000001a89c97f16a: sub    $0x80,%rsp
  0x000001a89c97f171: mov    %rax,0x78(%rsp)
  0x000001a89c97f176: mov    %rcx,0x70(%rsp)
  0x000001a89c97f17b: mov    %rdx,0x68(%rsp)
  0x000001a89c97f180: mov    %rbx,0x60(%rsp)
  0x000001a89c97f185: mov    %rbp,0x50(%rsp)
  0x000001a89c97f18a: mov    %rsi,0x48(%rsp)
  0x000001a89c97f18f: mov    %rdi,0x40(%rsp)
  0x000001a89c97f194: mov    %r8,0x38(%rsp)
  0x000001a89c97f199: mov    %r9,0x30(%rsp)
  0x000001a89c97f19e: mov    %r10,0x28(%rsp)
  0x000001a89c97f1a3: mov    %r11,0x20(%rsp)
  0x000001a89c97f1a8: mov    %r12,0x18(%rsp)
  0x000001a89c97f1ad: mov    %r13,0x10(%rsp)
  0x000001a89c97f1b2: mov    %r14,0x8(%rsp)
  0x000001a89c97f1b7: mov    %r15,(%rsp)
  0x000001a89c97f1bb: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97f1c5: movabs $0x1a89c97f165,%rdx  ;   {internal_word}
  0x000001a89c97f1cf: mov    %rsp,%r8
  0x000001a89c97f1d2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97f1d6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97f1e0: callq  *%r10
  0x000001a89c97f1e3: hlt    
[Deopt Handler Code]
  0x000001a89c97f1e4: movabs $0x1a89c97f1e4,%r10  ;   {section_word}
  0x000001a89c97f1ee: push   %r10
  0x000001a89c97f1f0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97f1f5: hlt    
  0x000001a89c97f1f6: hlt    
  0x000001a89c97f1f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 222 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea47a0, 0x000001a8a3ea47c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7534700} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/Object'
  # parm5:    rcx:rcx   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea47a0: mov    0x24(%rcx),%ebx
  0x000001a8a3ea47a3: shl    $0x3,%rbx
  0x000001a8a3ea47a7: mov    0x10(%rbx),%rbx
  0x000001a8a3ea47ab: test   %rbx,%rbx
  0x000001a8a3ea47ae: je     0x000001a8a3ea47b7
  0x000001a8a3ea47b4: jmpq   *0x38(%rbx)
  0x000001a8a3ea47b7: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea47bc: hlt    
  0x000001a8a3ea47bd: hlt    
  0x000001a8a3ea47be: hlt    
  0x000001a8a3ea47bf: hlt    
Compiled method (c1)     344   76       3       java.lang.StringLatin1::indexOf (61 bytes)
 total in heap  [0x000001a89c97f310,0x000001a89c97fb60] = 2128
 relocation     [0x000001a89c97f488,0x000001a89c97f4e0] = 88
 main code      [0x000001a89c97f4e0,0x000001a89c97f840] = 864
 stub code      [0x000001a89c97f840,0x000001a89c97f8d8] = 152
 metadata       [0x000001a89c97f8d8,0x000001a89c97f8e8] = 16
 scopes data    [0x000001a89c97f8e8,0x000001a89c97f9a8] = 192
 scopes pcs     [0x000001a89c97f9a8,0x000001a89c97fb48] = 416
 dependencies   [0x000001a89c97fb48,0x000001a89c97fb50] = 8
 nul chk table  [0x000001a89c97fb50,0x000001a89c97fb60] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.indexOf([BII)I  [0x000001a89c97f4e0, 0x000001a89c97f8d8]  1016 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x000001a89c97f4e0: mov    %eax,-0x7000(%rsp)
  0x000001a89c97f4e7: push   %rbp
  0x000001a89c97f4e8: sub    $0x40,%rsp
  0x000001a89c97f4ec: movabs $0x1a8b75335c0,%rax  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f4f6: mov    0xfc(%rax),%esi
  0x000001a89c97f4fc: add    $0x8,%esi
  0x000001a89c97f4ff: mov    %esi,0xfc(%rax)
  0x000001a89c97f505: and    $0x1ff8,%esi
  0x000001a89c97f50b: cmp    $0x0,%esi
  0x000001a89c97f50e: je     0x000001a89c97f799  ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@0

  0x000001a89c97f514: movabs $0x1a8b75335c0,%rax  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f51e: addq   $0x1,0x138(%rax)
  0x000001a89c97f526: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c97f530: mov    0xfc(%rax),%esi
  0x000001a89c97f536: add    $0x8,%esi
  0x000001a89c97f539: mov    %esi,0xfc(%rax)
  0x000001a89c97f53f: and    $0x7ffff8,%esi
  0x000001a89c97f545: cmp    $0x0,%esi
  0x000001a89c97f548: je     0x000001a89c97f7ba
  0x000001a89c97f54e: mov    %r8,%rax
  0x000001a89c97f551: shr    $0x8,%eax
  0x000001a89c97f554: cmp    $0x0,%eax
  0x000001a89c97f557: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c97f561: movabs $0x138,%rsi
  0x000001a89c97f56b: jne    0x000001a89c97f57b
  0x000001a89c97f571: movabs $0x148,%rsi
  0x000001a89c97f57b: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97f57f: lea    0x1(%rdi),%rdi
  0x000001a89c97f583: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97f587: jne    0x000001a89c97f5a7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4
                                                ; - java.lang.StringLatin1::indexOf@1

  0x000001a89c97f58d: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c97f597: incl   0x158(%rax)
  0x000001a89c97f59d: mov    $0x1,%eax
  0x000001a89c97f5a2: jmpq   0x000001a89c97f5ac  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8
                                                ; - java.lang.StringLatin1::indexOf@1

  0x000001a89c97f5a7: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12
                                                ; - java.lang.StringLatin1::indexOf@1

  0x000001a89c97f5ac: and    $0x1,%eax
  0x000001a89c97f5af: cmp    $0x0,%eax
  0x000001a89c97f5b2: movabs $0x1a8b75335c0,%rax  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f5bc: movabs $0x158,%rsi
  0x000001a89c97f5c6: je     0x000001a89c97f5d6
  0x000001a89c97f5cc: movabs $0x148,%rsi
  0x000001a89c97f5d6: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97f5da: lea    0x1(%rdi),%rdi
  0x000001a89c97f5de: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97f5e2: je     0x000001a89c97f787  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@4

  0x000001a89c97f5e8: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10
                                                ; implicit exception: dispatches to 0x000001a89c97f7db
  0x000001a89c97f5eb: cmp    $0x0,%r9d
  0x000001a89c97f5ef: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f5f9: movabs $0x168,%rdi
  0x000001a89c97f603: jge    0x000001a89c97f613
  0x000001a89c97f609: movabs $0x178,%rdi
  0x000001a89c97f613: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97f617: lea    0x1(%rbx),%rbx
  0x000001a89c97f61b: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97f61f: jge    0x000001a89c97f640  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@13

  0x000001a89c97f625: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f62f: incl   0x188(%rsi)
  0x000001a89c97f635: mov    $0x0,%r9d
  0x000001a89c97f63b: jmpq   0x000001a89c97f679  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@18

  0x000001a89c97f640: cmp    %eax,%r9d
  0x000001a89c97f643: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f64d: movabs $0x1b0,%rdi
  0x000001a89c97f657: jge    0x000001a89c97f667
  0x000001a89c97f65d: movabs $0x1a0,%rdi
  0x000001a89c97f667: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97f66b: lea    0x1(%rbx),%rbx
  0x000001a89c97f66f: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97f673: jge    0x000001a89c97f775  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@23

  0x000001a89c97f679: movsbl %r8b,%r8d
  0x000001a89c97f67d: jmpq   0x000001a89c97f715  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@35

  0x000001a89c97f682: nopw   0x0(%rax,%rax,1)
  0x000001a89c97f688: movslq %r9d,%rsi
  0x000001a89c97f68b: cmp    0xc(%rdx),%r9d
  0x000001a89c97f68f: jae    0x000001a89c97f7e0
  0x000001a89c97f695: movsbl 0x10(%rdx,%rsi,1),%esi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44

  0x000001a89c97f69a: cmp    %r8d,%esi
  0x000001a89c97f69d: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f6a7: movabs $0x1f0,%rdi
  0x000001a89c97f6b1: je     0x000001a89c97f6c1
  0x000001a89c97f6b7: movabs $0x1e0,%rdi
  0x000001a89c97f6c1: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97f6c5: lea    0x1(%rbx),%rbx
  0x000001a89c97f6c9: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97f6cd: je     0x000001a89c97f753  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@47

  0x000001a89c97f6d3: inc    %r9d
  0x000001a89c97f6d6: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f6e0: mov    0x100(%rsi),%edi
  0x000001a89c97f6e6: add    $0x8,%edi
  0x000001a89c97f6e9: mov    %edi,0x100(%rsi)
  0x000001a89c97f6ef: and    $0xfff8,%edi
  0x000001a89c97f6f5: cmp    $0x0,%edi
  0x000001a89c97f6f8: je     0x000001a89c97f7e9  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56

  0x000001a89c97f6fe: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56

  0x000001a89c97f702: test   %eax,(%r10)        ;   {poll}
  0x000001a89c97f705: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f70f: incl   0x200(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56

  0x000001a89c97f715: cmp    %eax,%r9d
  0x000001a89c97f718: movabs $0x1a8b75335c0,%rsi  ;   {metadata(method data for {method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f722: movabs $0x1c0,%rdi
  0x000001a89c97f72c: jge    0x000001a89c97f73c
  0x000001a89c97f732: movabs $0x1d0,%rdi
  0x000001a89c97f73c: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c97f740: lea    0x1(%rbx),%rbx
  0x000001a89c97f744: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c97f748: jge    0x000001a89c97f763
  0x000001a89c97f74e: jmpq   0x000001a89c97f688  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@38

  0x000001a89c97f753: mov    %r9,%rax
  0x000001a89c97f756: add    $0x40,%rsp
  0x000001a89c97f75a: pop    %rbp
  0x000001a89c97f75b: mov    0x70(%r15),%r10
  0x000001a89c97f75f: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97f762: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@52

  0x000001a89c97f763: mov    $0xffffffff,%eax
  0x000001a89c97f768: add    $0x40,%rsp
  0x000001a89c97f76c: pop    %rbp
  0x000001a89c97f76d: mov    0x70(%r15),%r10
  0x000001a89c97f771: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97f774: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@60

  0x000001a89c97f775: mov    $0xffffffff,%eax
  0x000001a89c97f77a: add    $0x40,%rsp
  0x000001a89c97f77e: pop    %rbp
  0x000001a89c97f77f: mov    0x70(%r15),%r10
  0x000001a89c97f783: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97f786: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@27

  0x000001a89c97f787: mov    $0xffffffff,%eax
  0x000001a89c97f78c: add    $0x40,%rsp
  0x000001a89c97f790: pop    %rbp
  0x000001a89c97f791: mov    0x70(%r15),%r10
  0x000001a89c97f795: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97f798: retq   
  0x000001a89c97f799: movabs $0x1a8b72653a0,%r10  ;   {metadata({method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f7a3: mov    %r10,0x8(%rsp)
  0x000001a89c97f7a8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97f7b0: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::indexOf@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97f7b5: jmpq   0x000001a89c97f514
  0x000001a89c97f7ba: movabs $0x1a8b7264868,%r10  ;   {metadata({method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c97f7c4: mov    %r10,0x8(%rsp)
  0x000001a89c97f7c9: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97f7d1: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1
                                                ; - java.lang.StringLatin1::indexOf@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97f7d6: jmpq   0x000001a89c97f54e
  0x000001a89c97f7db: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@10
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c97f7e0: mov    %r9,(%rsp)
  0x000001a89c97f7e4: callq  0x000001a89c43eda0  ; ImmutableOopMap{rdx=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@44
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c97f7e9: movabs $0x1a8b72653a0,%r10  ;   {metadata({method} {0x000001a8b72653a8} 'indexOf' '([BII)I' in 'java/lang/StringLatin1')}
  0x000001a89c97f7f3: mov    %r10,0x8(%rsp)
  0x000001a89c97f7f8: movq   $0x38,(%rsp)
  0x000001a89c97f800: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::indexOf@56
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97f805: jmpq   0x000001a89c97f6fe
  0x000001a89c97f80a: nop
  0x000001a89c97f80b: nop
  0x000001a89c97f80c: mov    0x350(%r15),%rax
  0x000001a89c97f813: movabs $0x0,%r10
  0x000001a89c97f81d: mov    %r10,0x350(%r15)
  0x000001a89c97f824: movabs $0x0,%r10
  0x000001a89c97f82e: mov    %r10,0x358(%r15)
  0x000001a89c97f835: add    $0x40,%rsp
  0x000001a89c97f839: pop    %rbp
  0x000001a89c97f83a: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97f83f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97f840: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97f845: mov    %rsp,-0x28(%rsp)
  0x000001a89c97f84a: sub    $0x80,%rsp
  0x000001a89c97f851: mov    %rax,0x78(%rsp)
  0x000001a89c97f856: mov    %rcx,0x70(%rsp)
  0x000001a89c97f85b: mov    %rdx,0x68(%rsp)
  0x000001a89c97f860: mov    %rbx,0x60(%rsp)
  0x000001a89c97f865: mov    %rbp,0x50(%rsp)
  0x000001a89c97f86a: mov    %rsi,0x48(%rsp)
  0x000001a89c97f86f: mov    %rdi,0x40(%rsp)
  0x000001a89c97f874: mov    %r8,0x38(%rsp)
  0x000001a89c97f879: mov    %r9,0x30(%rsp)
  0x000001a89c97f87e: mov    %r10,0x28(%rsp)
  0x000001a89c97f883: mov    %r11,0x20(%rsp)
  0x000001a89c97f888: mov    %r12,0x18(%rsp)
  0x000001a89c97f88d: mov    %r13,0x10(%rsp)
  0x000001a89c97f892: mov    %r14,0x8(%rsp)
  0x000001a89c97f897: mov    %r15,(%rsp)
  0x000001a89c97f89b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97f8a5: movabs $0x1a89c97f845,%rdx  ;   {internal_word}
  0x000001a89c97f8af: mov    %rsp,%r8
  0x000001a89c97f8b2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97f8b6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97f8c0: callq  *%r10
  0x000001a89c97f8c3: hlt    
[Deopt Handler Code]
  0x000001a89c97f8c4: movabs $0x1a89c97f8c4,%r10  ;   {section_word}
  0x000001a89c97f8ce: push   %r10
  0x000001a89c97f8d0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97f8d5: hlt    
  0x000001a89c97f8d6: hlt    
  0x000001a89c97f8d7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 546 725 758 768 777 805 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea49a0, 0x000001a8a3ea49d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7534c78} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi:rsi   = 'java/lang/Object'
  # parm4:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea49a0: mov    0x14(%rdx),%ebx
  0x000001a8a3ea49a3: shl    $0x3,%rbx
  0x000001a8a3ea49a7: mov    0x28(%rbx),%ebx
  0x000001a8a3ea49aa: shl    $0x3,%rbx
  0x000001a8a3ea49ae: mov    0x24(%rbx),%ebx
  0x000001a8a3ea49b1: shl    $0x3,%rbx
  0x000001a8a3ea49b5: mov    0x10(%rbx),%rbx
  0x000001a8a3ea49b9: test   %rbx,%rbx
  0x000001a8a3ea49bc: je     0x000001a8a3ea49c5
  0x000001a8a3ea49c2: jmpq   *0x38(%rbx)
  0x000001a8a3ea49c5: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea49ca: hlt    
  0x000001a8a3ea49cb: hlt    
  0x000001a8a3ea49cc: hlt    
  0x000001a8a3ea49cd: hlt    
  0x000001a8a3ea49ce: hlt    
  0x000001a8a3ea49cf: hlt    
Compiled method (c1)     348   77       3       java.lang.Math::min (11 bytes)
 total in heap  [0x000001a89c97fb90,0x000001a89c97ff80] = 1008
 relocation     [0x000001a89c97fd08,0x000001a89c97fd38] = 48
 main code      [0x000001a89c97fd40,0x000001a89c97fe40] = 256
 stub code      [0x000001a89c97fe40,0x000001a89c97fed8] = 152
 metadata       [0x000001a89c97fed8,0x000001a89c97fee0] = 8
 scopes data    [0x000001a89c97fee0,0x000001a89c97ff08] = 40
 scopes pcs     [0x000001a89c97ff08,0x000001a89c97ff78] = 112
 dependencies   [0x000001a89c97ff78,0x000001a89c97ff80] = 8
----------------------------------------------------------------------
java/lang/Math.min(II)I  [0x000001a89c97fd40, 0x000001a89c97fed8]  408 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x000001a89c97fd40: mov    %eax,-0x7000(%rsp)
  0x000001a89c97fd47: push   %rbp
  0x000001a89c97fd48: sub    $0x30,%rsp
  0x000001a89c97fd4c: movabs $0x1a8b74f43d8,%rax  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c97fd56: mov    0xfc(%rax),%esi
  0x000001a89c97fd5c: add    $0x8,%esi
  0x000001a89c97fd5f: mov    %esi,0xfc(%rax)
  0x000001a89c97fd65: and    $0x1ff8,%esi
  0x000001a89c97fd6b: cmp    $0x0,%esi
  0x000001a89c97fd6e: je     0x000001a89c97fdd5  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@0

  0x000001a89c97fd74: cmp    %r8d,%edx
  0x000001a89c97fd77: movabs $0x1a8b74f43d8,%rax  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c97fd81: movabs $0x138,%rsi
  0x000001a89c97fd8b: jg     0x000001a89c97fd9b
  0x000001a89c97fd91: movabs $0x148,%rsi
  0x000001a89c97fd9b: mov    (%rax,%rsi,1),%rdi
  0x000001a89c97fd9f: lea    0x1(%rdi),%rdi
  0x000001a89c97fda3: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c97fda7: jg     0x000001a89c97fdc2  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2

  0x000001a89c97fdad: movabs $0x1a8b74f43d8,%rax  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c97fdb7: incl   0x158(%rax)
  0x000001a89c97fdbd: jmpq   0x000001a89c97fdc5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6

  0x000001a89c97fdc2: mov    %r8,%rdx           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10

  0x000001a89c97fdc5: mov    %rdx,%rax
  0x000001a89c97fdc8: add    $0x30,%rsp
  0x000001a89c97fdcc: pop    %rbp
  0x000001a89c97fdcd: mov    0x70(%r15),%r10
  0x000001a89c97fdd1: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c97fdd4: retq   
  0x000001a89c97fdd5: movabs $0x1a8b72c3720,%r10  ;   {metadata({method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c97fddf: mov    %r10,0x8(%rsp)
  0x000001a89c97fde4: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c97fdec: callq  0x000001a89c4d1f80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c97fdf1: jmp    0x000001a89c97fd74
  0x000001a89c97fdf3: nop
  0x000001a89c97fdf4: nop
  0x000001a89c97fdf5: mov    0x350(%r15),%rax
  0x000001a89c97fdfc: movabs $0x0,%r10
  0x000001a89c97fe06: mov    %r10,0x350(%r15)
  0x000001a89c97fe0d: movabs $0x0,%r10
  0x000001a89c97fe17: mov    %r10,0x358(%r15)
  0x000001a89c97fe1e: add    $0x30,%rsp
  0x000001a89c97fe22: pop    %rbp
  0x000001a89c97fe23: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c97fe28: hlt    
  0x000001a89c97fe29: hlt    
  0x000001a89c97fe2a: hlt    
  0x000001a89c97fe2b: hlt    
  0x000001a89c97fe2c: hlt    
  0x000001a89c97fe2d: hlt    
  0x000001a89c97fe2e: hlt    
  0x000001a89c97fe2f: hlt    
  0x000001a89c97fe30: hlt    
  0x000001a89c97fe31: hlt    
  0x000001a89c97fe32: hlt    
  0x000001a89c97fe33: hlt    
  0x000001a89c97fe34: hlt    
  0x000001a89c97fe35: hlt    
  0x000001a89c97fe36: hlt    
  0x000001a89c97fe37: hlt    
  0x000001a89c97fe38: hlt    
  0x000001a89c97fe39: hlt    
  0x000001a89c97fe3a: hlt    
  0x000001a89c97fe3b: hlt    
  0x000001a89c97fe3c: hlt    
  0x000001a89c97fe3d: hlt    
  0x000001a89c97fe3e: hlt    
  0x000001a89c97fe3f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c97fe40: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c97fe45: mov    %rsp,-0x28(%rsp)
  0x000001a89c97fe4a: sub    $0x80,%rsp
  0x000001a89c97fe51: mov    %rax,0x78(%rsp)
  0x000001a89c97fe56: mov    %rcx,0x70(%rsp)
  0x000001a89c97fe5b: mov    %rdx,0x68(%rsp)
  0x000001a89c97fe60: mov    %rbx,0x60(%rsp)
  0x000001a89c97fe65: mov    %rbp,0x50(%rsp)
  0x000001a89c97fe6a: mov    %rsi,0x48(%rsp)
  0x000001a89c97fe6f: mov    %rdi,0x40(%rsp)
  0x000001a89c97fe74: mov    %r8,0x38(%rsp)
  0x000001a89c97fe79: mov    %r9,0x30(%rsp)
  0x000001a89c97fe7e: mov    %r10,0x28(%rsp)
  0x000001a89c97fe83: mov    %r11,0x20(%rsp)
  0x000001a89c97fe88: mov    %r12,0x18(%rsp)
  0x000001a89c97fe8d: mov    %r13,0x10(%rsp)
  0x000001a89c97fe92: mov    %r14,0x8(%rsp)
  0x000001a89c97fe97: mov    %r15,(%rsp)
  0x000001a89c97fe9b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c97fea5: movabs $0x1a89c97fe45,%rdx  ;   {internal_word}
  0x000001a89c97feaf: mov    %rsp,%r8
  0x000001a89c97feb2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c97feb6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c97fec0: callq  *%r10
  0x000001a89c97fec3: hlt    
[Deopt Handler Code]
  0x000001a89c97fec4: movabs $0x1a89c97fec4,%r10  ;   {section_word}
  0x000001a89c97fece: push   %r10
  0x000001a89c97fed0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c97fed5: hlt    
  0x000001a89c97fed6: hlt    
  0x000001a89c97fed7: hlt    

ImmutableOopMap{}pc offsets: 177 ----------------------------------------------------------------------
java/lang/Class.isPrimitive()Z  [0x000001a8a3ea4bc0, 0x000001a8a3ea4df0]  560 bytes
[Entry Point]
  # {method} {0x000001a8b717d970} 'isPrimitive' '()Z' in 'java/lang/Class'
  #           [sp+0x70]  (sp of caller)
  0x000001a8a3ea4bc0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea4bc4: shl    $0x3,%r10
  0x000001a8a3ea4bc8: cmp    %r10,%rax
  0x000001a8a3ea4bcb: je     0x000001a8a3ea4bd8
  0x000001a8a3ea4bd1: jmpq   0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea4bd6: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea4bd8: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea4bdf: push   %rbp
  0x000001a8a3ea4be0: mov    %rsp,%rbp
  0x000001a8a3ea4be3: sub    $0x60,%rsp
  0x000001a8a3ea4be7: mov    %rdx,0x20(%rsp)
  0x000001a8a3ea4bec: cmp    $0x0,%rdx
  0x000001a8a3ea4bf0: lea    0x20(%rsp),%rdx
  0x000001a8a3ea4bf5: cmove  0x20(%rsp),%rdx    ; ImmutableOopMap{[32]=Oop }
  0x000001a8a3ea4bfb: vzeroupper 
  0x000001a8a3ea4bfe: movabs $0x1a8a3ea4bfb,%r10  ;   {internal_word}
  0x000001a8a3ea4c08: mov    %r10,0x258(%r15)
  0x000001a8a3ea4c0f: mov    %rsp,0x250(%r15)
  0x000001a8a3ea4c16: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea4c20: cmpb   $0x0,(%r10)
  0x000001a8a3ea4c24: je     0x000001a8a3ea4c74
  0x000001a8a3ea4c2a: push   %rdx
  0x000001a8a3ea4c2b: movabs $0x1a8b717d968,%rdx  ;   {metadata({method} {0x000001a8b717d970} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x000001a8a3ea4c35: mov    %r15,%rcx
  0x000001a8a3ea4c38: sub    $0x20,%rsp
  0x000001a8a3ea4c3c: test   $0xf,%esp
  0x000001a8a3ea4c42: je     0x000001a8a3ea4c62
  0x000001a8a3ea4c48: sub    $0x8,%rsp
  0x000001a8a3ea4c4c: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea4c56: callq  *%r10
  0x000001a8a3ea4c59: add    $0x8,%rsp
  0x000001a8a3ea4c5d: jmpq   0x000001a8a3ea4c6f
  0x000001a8a3ea4c62: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea4c6c: callq  *%r10
  0x000001a8a3ea4c6f: add    $0x20,%rsp
  0x000001a8a3ea4c73: pop    %rdx
  0x000001a8a3ea4c74: lea    0x270(%r15),%rcx
  0x000001a8a3ea4c7b: movl   $0x4,0x2e8(%r15)
  0x000001a8a3ea4c86: movabs $0x7ff8f176005a,%r10  ;   {runtime_call}
  0x000001a8a3ea4c90: callq  *%r10
  0x000001a8a3ea4c93: vzeroupper 
  0x000001a8a3ea4c96: and    $0xff,%eax
  0x000001a8a3ea4c9c: setne  %al
  0x000001a8a3ea4c9f: movl   $0x5,0x2e8(%r15)
  0x000001a8a3ea4caa: lock addl $0x0,-0x40(%rsp)
  0x000001a8a3ea4cb0: testb  $0x8,0x70(%r15)
  0x000001a8a3ea4cb5: jne    0x000001a8a3ea4cc9
  0x000001a8a3ea4cbb: cmpl   $0x0,0x48(%r15)
  0x000001a8a3ea4cc3: je     0x000001a8a3ea4cf5
  0x000001a8a3ea4cc9: vzeroupper 
  0x000001a8a3ea4ccc: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea4cd0: mov    %r15,%rcx
  0x000001a8a3ea4cd3: mov    %rsp,%r12
  0x000001a8a3ea4cd6: sub    $0x20,%rsp
  0x000001a8a3ea4cda: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea4cde: movabs $0x540c4790,%r10   ;   {runtime_call}
  0x000001a8a3ea4ce8: callq  *%r10
  0x000001a8a3ea4ceb: mov    %r12,%rsp
  0x000001a8a3ea4cee: xor    %r12,%r12
  0x000001a8a3ea4cf1: mov    -0x8(%rbp),%rax
  0x000001a8a3ea4cf5: movl   $0x8,0x2e8(%r15)
  0x000001a8a3ea4d00: cmpl   $0x2,0x338(%r15)
  0x000001a8a3ea4d0b: je     0x000001a8a3ea4dbd
  0x000001a8a3ea4d11: movabs $0x543daf1e,%r10   ;   {external_word}
  0x000001a8a3ea4d1b: cmpb   $0x0,(%r10)
  0x000001a8a3ea4d1f: je     0x000001a8a3ea4d75
  0x000001a8a3ea4d25: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea4d29: movabs $0x1a8b717d968,%rdx  ;   {metadata({method} {0x000001a8b717d970} 'isPrimitive' '()Z' in 'java/lang/Class')}
  0x000001a8a3ea4d33: mov    %r15,%rcx
  0x000001a8a3ea4d36: sub    $0x20,%rsp
  0x000001a8a3ea4d3a: test   $0xf,%esp
  0x000001a8a3ea4d40: je     0x000001a8a3ea4d60
  0x000001a8a3ea4d46: sub    $0x8,%rsp
  0x000001a8a3ea4d4a: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea4d54: callq  *%r10
  0x000001a8a3ea4d57: add    $0x8,%rsp
  0x000001a8a3ea4d5b: jmpq   0x000001a8a3ea4d6d
  0x000001a8a3ea4d60: movabs $0x540495b0,%r10   ;   {runtime_call}
  0x000001a8a3ea4d6a: callq  *%r10
  0x000001a8a3ea4d6d: add    $0x20,%rsp
  0x000001a8a3ea4d71: mov    -0x8(%rbp),%rax
  0x000001a8a3ea4d75: movabs $0x0,%r10
  0x000001a8a3ea4d7f: mov    %r10,0x250(%r15)
  0x000001a8a3ea4d86: movabs $0x0,%r10
  0x000001a8a3ea4d90: mov    %r10,0x258(%r15)
  0x000001a8a3ea4d97: vzeroupper 
  0x000001a8a3ea4d9a: mov    0x50(%r15),%rcx
  0x000001a8a3ea4d9e: movl   $0x0,0x100(%rcx)
  0x000001a8a3ea4da8: leaveq 
  0x000001a8a3ea4da9: cmpq   $0x0,0x8(%r15)
  0x000001a8a3ea4db1: jne    0x000001a8a3ea4db8
  0x000001a8a3ea4db7: retq   
  0x000001a8a3ea4db8: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a8a3ea4dbd: vzeroupper 
  0x000001a8a3ea4dc0: mov    %rax,-0x8(%rbp)
  0x000001a8a3ea4dc4: mov    %rsp,%r12
  0x000001a8a3ea4dc7: sub    $0x20,%rsp
  0x000001a8a3ea4dcb: and    $0xfffffffffffffff0,%rsp
  0x000001a8a3ea4dcf: movabs $0x5404c310,%r10   ;   {runtime_call}
  0x000001a8a3ea4dd9: callq  *%r10
  0x000001a8a3ea4ddc: mov    %r12,%rsp
  0x000001a8a3ea4ddf: xor    %r12,%r12
  0x000001a8a3ea4de2: mov    -0x8(%rbp),%rax
  0x000001a8a3ea4de6: jmpq   0x000001a8a3ea4d11
  0x000001a8a3ea4deb: hlt    
  0x000001a8a3ea4dec: hlt    
  0x000001a8a3ea4ded: hlt    
  0x000001a8a3ea4dee: hlt    
  0x000001a8a3ea4def: hlt    
Compiled method (c1)     352   73       3       java.lang.StringLatin1::canEncode (13 bytes)
 total in heap  [0x000001a89c97ff90,0x000001a89c980380] = 1008
 relocation     [0x000001a89c980108,0x000001a89c980138] = 48
 main code      [0x000001a89c980140,0x000001a89c980240] = 256
 stub code      [0x000001a89c980240,0x000001a89c9802d8] = 152
 metadata       [0x000001a89c9802d8,0x000001a89c9802e0] = 8
 scopes data    [0x000001a89c9802e0,0x000001a89c980308] = 40
 scopes pcs     [0x000001a89c980308,0x000001a89c980378] = 112
 dependencies   [0x000001a89c980378,0x000001a89c980380] = 8
----------------------------------------------------------------------
java/lang/StringLatin1.canEncode(I)Z  [0x000001a89c980140, 0x000001a89c9802d8]  408 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000001a89c980140: mov    %eax,-0x7000(%rsp)
  0x000001a89c980147: push   %rbp
  0x000001a89c980148: sub    $0x30,%rsp
  0x000001a89c98014c: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c980156: mov    0xfc(%rax),%esi
  0x000001a89c98015c: add    $0x8,%esi
  0x000001a89c98015f: mov    %esi,0xfc(%rax)
  0x000001a89c980165: and    $0x1ff8,%esi
  0x000001a89c98016b: cmp    $0x0,%esi
  0x000001a89c98016e: je     0x000001a89c9801df  ;*iload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@0

  0x000001a89c980174: shr    $0x8,%edx
  0x000001a89c980177: cmp    $0x0,%edx
  0x000001a89c98017a: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c980184: movabs $0x138,%rsi
  0x000001a89c98018e: jne    0x000001a89c98019e
  0x000001a89c980194: movabs $0x148,%rsi
  0x000001a89c98019e: mov    (%rax,%rsi,1),%rdi
  0x000001a89c9801a2: lea    0x1(%rdi),%rdi
  0x000001a89c9801a6: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c9801aa: jne    0x000001a89c9801ca  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@4

  0x000001a89c9801b0: movabs $0x1a8b7439f18,%rax  ;   {metadata(method data for {method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c9801ba: incl   0x158(%rax)
  0x000001a89c9801c0: mov    $0x1,%eax
  0x000001a89c9801c5: jmpq   0x000001a89c9801cf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@8

  0x000001a89c9801ca: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::canEncode@12

  0x000001a89c9801cf: and    $0x1,%eax
  0x000001a89c9801d2: add    $0x30,%rsp
  0x000001a89c9801d6: pop    %rbp
  0x000001a89c9801d7: mov    0x70(%r15),%r10
  0x000001a89c9801db: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9801de: retq   
  0x000001a89c9801df: movabs $0x1a8b7264868,%r10  ;   {metadata({method} {0x000001a8b7264870} 'canEncode' '(I)Z' in 'java/lang/StringLatin1')}
  0x000001a89c9801e9: mov    %r10,0x8(%rsp)
  0x000001a89c9801ee: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9801f6: callq  0x000001a89c4d1f80  ; ImmutableOopMap{}
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::canEncode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9801fb: jmpq   0x000001a89c980174
  0x000001a89c980200: nop
  0x000001a89c980201: nop
  0x000001a89c980202: mov    0x350(%r15),%rax
  0x000001a89c980209: movabs $0x0,%r10
  0x000001a89c980213: mov    %r10,0x350(%r15)
  0x000001a89c98021a: movabs $0x0,%r10
  0x000001a89c980224: mov    %r10,0x358(%r15)
  0x000001a89c98022b: add    $0x30,%rsp
  0x000001a89c98022f: pop    %rbp
  0x000001a89c980230: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c980235: hlt    
  0x000001a89c980236: hlt    
  0x000001a89c980237: hlt    
  0x000001a89c980238: hlt    
  0x000001a89c980239: hlt    
  0x000001a89c98023a: hlt    
  0x000001a89c98023b: hlt    
  0x000001a89c98023c: hlt    
  0x000001a89c98023d: hlt    
  0x000001a89c98023e: hlt    
  0x000001a89c98023f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c980240: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c980245: mov    %rsp,-0x28(%rsp)
  0x000001a89c98024a: sub    $0x80,%rsp
  0x000001a89c980251: mov    %rax,0x78(%rsp)
  0x000001a89c980256: mov    %rcx,0x70(%rsp)
  0x000001a89c98025b: mov    %rdx,0x68(%rsp)
  0x000001a89c980260: mov    %rbx,0x60(%rsp)
  0x000001a89c980265: mov    %rbp,0x50(%rsp)
  0x000001a89c98026a: mov    %rsi,0x48(%rsp)
  0x000001a89c98026f: mov    %rdi,0x40(%rsp)
  0x000001a89c980274: mov    %r8,0x38(%rsp)
  0x000001a89c980279: mov    %r9,0x30(%rsp)
  0x000001a89c98027e: mov    %r10,0x28(%rsp)
  0x000001a89c980283: mov    %r11,0x20(%rsp)
  0x000001a89c980288: mov    %r12,0x18(%rsp)
  0x000001a89c98028d: mov    %r13,0x10(%rsp)
  0x000001a89c980292: mov    %r14,0x8(%rsp)
  0x000001a89c980297: mov    %r15,(%rsp)
  0x000001a89c98029b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9802a5: movabs $0x1a89c980245,%rdx  ;   {internal_word}
  0x000001a89c9802af: mov    %rsp,%r8
  0x000001a89c9802b2: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9802b6: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9802c0: callq  *%r10
  0x000001a89c9802c3: hlt    
[Deopt Handler Code]
  0x000001a89c9802c4: movabs $0x1a89c9802c4,%r10  ;   {section_word}
  0x000001a89c9802ce: push   %r10
  0x000001a89c9802d0: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9802d5: hlt    
  0x000001a89c9802d6: hlt    
  0x000001a89c9802d7: hlt    

ImmutableOopMap{}pc offsets: 187 Compiled method (c2)     354   82       4       java.lang.String::charAt (25 bytes)
 total in heap  [0x000001a8a3ea4e10,0x000001a8a3ea51e8] = 984
 relocation     [0x000001a8a3ea4f88,0x000001a8a3ea4f98] = 16
 main code      [0x000001a8a3ea4fa0,0x000001a8a3ea5060] = 192
 stub code      [0x000001a8a3ea5060,0x000001a8a3ea5078] = 24
 metadata       [0x000001a8a3ea5078,0x000001a8a3ea5090] = 24
 scopes data    [0x000001a8a3ea5090,0x000001a8a3ea50f0] = 96
 scopes pcs     [0x000001a8a3ea50f0,0x000001a8a3ea51d0] = 224
 dependencies   [0x000001a8a3ea51d0,0x000001a8a3ea51d8] = 8
 nul chk table  [0x000001a8a3ea51d8,0x000001a8a3ea51e8] = 16
----------------------------------------------------------------------
java/lang/String.charAt(I)C  [0x000001a8a3ea4fa0, 0x000001a8a3ea5078]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7174600} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x000001a8a3ea4fa0: mov    0x8(%rdx),%r10d
  0x000001a8a3ea4fa4: shl    $0x3,%r10
  0x000001a8a3ea4fa8: cmp    %r10,%rax
  0x000001a8a3ea4fab: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a8a3ea4fb1: data16 xchg %ax,%ax
  0x000001a8a3ea4fb4: nopl   0x0(%rax,%rax,1)
  0x000001a8a3ea4fbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a8a3ea4fc0: mov    %eax,-0x7000(%rsp)
  0x000001a8a3ea4fc7: push   %rbp
  0x000001a8a3ea4fc8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1

  0x000001a8a3ea4fcc: movsbl 0x14(%rdx),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::charAt@1

  0x000001a8a3ea4fd1: test   %r10d,%r10d
  0x000001a8a3ea4fd4: jne    0x000001a8a3ea4ffa  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4

  0x000001a8a3ea4fd6: mov    0xc(%rdx),%ebp     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@8

  0x000001a8a3ea4fd9: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x000001a8a3ea5032
  0x000001a8a3ea4fde: cmp    %r10d,%r8d
  0x000001a8a3ea4fe1: jae    0x000001a8a3ea501e
  0x000001a8a3ea4fe3: lea    (%r12,%rbp,8),%r10
  0x000001a8a3ea4fe7: movzbl 0x10(%r10,%r8,1),%eax  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@25
                                                ; - java.lang.String::charAt@12

  0x000001a8a3ea4fed: add    $0x20,%rsp
  0x000001a8a3ea4ff1: pop    %rbp
  0x000001a8a3ea4ff2: mov    0x70(%r15),%r10
  0x000001a8a3ea4ff6: test   %eax,(%r10)        ;   {poll_return}
  0x000001a8a3ea4ff9: retq   
  0x000001a8a3ea4ffa: test   %r10d,%r10d
  0x000001a8a3ea4ffd: setne  %bpl
  0x000001a8a3ea5001: movzbl %bpl,%ebp
  0x000001a8a3ea5005: xor    $0x1,%ebp          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::charAt@1

  0x000001a8a3ea5008: mov    %rdx,(%rsp)
  0x000001a8a3ea500c: mov    %r8d,0x8(%rsp)
  0x000001a8a3ea5011: mov    $0xffffff55,%edx
  0x000001a8a3ea5016: nop
  0x000001a8a3ea5017: callq  0x000001a89c408a00  ; ImmutableOopMap{[0]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea501c: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::charAt@4

  0x000001a8a3ea501e: mov    $0xffffffe5,%edx
  0x000001a8a3ea5023: mov    %r8d,0x4(%rsp)
  0x000001a8a3ea5028: data16 xchg %ax,%ax
  0x000001a8a3ea502b: callq  0x000001a89c408a00  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea5030: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12

  0x000001a8a3ea5032: mov    $0xfffffff6,%edx
  0x000001a8a3ea5037: mov    %r8d,0x4(%rsp)
  0x000001a8a3ea503c: data16 xchg %ax,%ax
  0x000001a8a3ea503f: callq  0x000001a89c408a00  ; ImmutableOopMap{rbp=NarrowOop }
                                                ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a8a3ea5044: ud2                       ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::charAt@1
                                                ; - java.lang.String::charAt@12

  0x000001a8a3ea5046: hlt    
  0x000001a8a3ea5047: hlt    
  0x000001a8a3ea5048: hlt    
  0x000001a8a3ea5049: hlt    
  0x000001a8a3ea504a: hlt    
  0x000001a8a3ea504b: hlt    
  0x000001a8a3ea504c: hlt    
  0x000001a8a3ea504d: hlt    
  0x000001a8a3ea504e: hlt    
  0x000001a8a3ea504f: hlt    
  0x000001a8a3ea5050: hlt    
  0x000001a8a3ea5051: hlt    
  0x000001a8a3ea5052: hlt    
  0x000001a8a3ea5053: hlt    
  0x000001a8a3ea5054: hlt    
  0x000001a8a3ea5055: hlt    
  0x000001a8a3ea5056: hlt    
  0x000001a8a3ea5057: hlt    
  0x000001a8a3ea5058: hlt    
  0x000001a8a3ea5059: hlt    
  0x000001a8a3ea505a: hlt    
  0x000001a8a3ea505b: hlt    
  0x000001a8a3ea505c: hlt    
  0x000001a8a3ea505d: hlt    
  0x000001a8a3ea505e: hlt    
  0x000001a8a3ea505f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a8a3ea5060: jmpq   0x000001a89c43f700  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a8a3ea5065: callq  0x000001a8a3ea506a
  0x000001a8a3ea506a: subq   $0x5,(%rsp)
  0x000001a8a3ea506f: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a8a3ea5074: hlt    
  0x000001a8a3ea5075: hlt    
  0x000001a8a3ea5076: hlt    
  0x000001a8a3ea5077: hlt    

ImmutableOopMap{[0]=Oop }pc offsets: 124 
ImmutableOopMap{rbp=NarrowOop }pc offsets: 144 164 Compiled method (c1)     357   74       3       java.lang.AbstractStringBuilder::ensureCapacityInternal (39 bytes)
 total in heap  [0x000001a89c980390,0x000001a89c980cd8] = 2376
 relocation     [0x000001a89c980508,0x000001a89c980570] = 104
 main code      [0x000001a89c980580,0x000001a89c9809a0] = 1056
 stub code      [0x000001a89c9809a0,0x000001a89c980a60] = 192
 metadata       [0x000001a89c980a60,0x000001a89c980a78] = 24
 scopes data    [0x000001a89c980a78,0x000001a89c980b60] = 232
 scopes pcs     [0x000001a89c980b60,0x000001a89c980cc0] = 352
 dependencies   [0x000001a89c980cc0,0x000001a89c980cc8] = 8
 nul chk table  [0x000001a89c980cc8,0x000001a89c980cd8] = 16
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.ensureCapacityInternal(I)V  [0x000001a89c980580, 0x000001a89c980a60]  1248 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rdx:rdx   = 'java/lang/AbstractStringBuilder'
  # parm0:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x000001a89c980580: mov    0x8(%rdx),%r10d
  0x000001a89c980584: shl    $0x3,%r10
  0x000001a89c980588: cmp    %rax,%r10
  0x000001a89c98058b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c980591: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c98059c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c9805a0: mov    %eax,-0x7000(%rsp)
  0x000001a89c9805a7: push   %rbp
  0x000001a89c9805a8: sub    $0xa0,%rsp
  0x000001a89c9805af: mov    %rdx,0x78(%rsp)
  0x000001a89c9805b4: movabs $0x1a8b75333b0,%rcx  ;   {metadata(method data for {method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c9805be: mov    0xfc(%rcx),%esi
  0x000001a89c9805c4: add    $0x8,%esi
  0x000001a89c9805c7: mov    %esi,0xfc(%rcx)
  0x000001a89c9805cd: and    $0x1ff8,%esi
  0x000001a89c9805d3: cmp    $0x0,%esi
  0x000001a89c9805d6: je     0x000001a89c9808a9  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0

  0x000001a89c9805dc: mov    0x14(%rdx),%esi
  0x000001a89c9805df: shl    $0x3,%rsi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@1

  0x000001a89c9805e3: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4
                                                ; implicit exception: dispatches to 0x000001a89c9808ca
  0x000001a89c9805e6: movsbl 0x10(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6

  0x000001a89c9805ea: mov    %rdi,%rbx
  0x000001a89c9805ed: sar    %cl,%ebx
  0x000001a89c9805ef: mov    %r8,%rax
  0x000001a89c9805f2: sub    %ebx,%eax
  0x000001a89c9805f4: cmp    $0x0,%eax
  0x000001a89c9805f7: movabs $0x1a8b75333b0,%rbx  ;   {metadata(method data for {method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980601: movabs $0x138,%rax
  0x000001a89c98060b: jle    0x000001a89c98061b
  0x000001a89c980611: movabs $0x148,%rax
  0x000001a89c98061b: mov    (%rbx,%rax,1),%rcx
  0x000001a89c98061f: lea    0x1(%rcx),%rcx
  0x000001a89c980623: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c980627: jle    0x000001a89c980899  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@14

  0x000001a89c98062d: mov    %edi,0x80(%rsp)
  0x000001a89c980634: mov    %rsi,0x88(%rsp)
  0x000001a89c98063c: mov    %rdx,%rbx
  0x000001a89c98063f: movabs $0x1a8b75333b0,%rax  ;   {metadata(method data for {method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980649: addq   $0x1,0x158(%rax)
  0x000001a89c980651: mov    %rdx,%rbx
  0x000001a89c980654: mov    %rbx,%rdx          ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24

  0x000001a89c980657: callq  0x000001a89c407000  ; ImmutableOopMap{[120]=Oop [136]=Oop }
                                                ;*invokespecial newCapacity {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@24
                                                ;   {optimized virtual_call}
  0x000001a89c98065c: mov    0x78(%rsp),%rdx
  0x000001a89c980661: movsbl 0x10(%rdx),%ecx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@28

  0x000001a89c980665: mov    %rax,%r8
  0x000001a89c980668: shl    %cl,%r8d
  0x000001a89c98066b: movabs $0x1a8b75333b0,%rbx  ;   {metadata(method data for {method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980675: addq   $0x1,0x168(%rbx)
  0x000001a89c98067d: movabs $0x1a8b7543958,%rbx  ;   {metadata(method data for {method} {0x000001a8b72b8a60} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000001a89c980687: mov    0xfc(%rbx),%esi
  0x000001a89c98068d: add    $0x8,%esi
  0x000001a89c980690: mov    %esi,0xfc(%rbx)
  0x000001a89c980696: and    $0x7ffff8,%esi
  0x000001a89c98069c: cmp    $0x0,%esi
  0x000001a89c98069f: je     0x000001a89c9808cf
  0x000001a89c9806a5: mov    %r8,%rbx
  0x000001a89c9806a8: movabs $0x7c0000790,%rdx  ;   {metadata({type array byte})}
  0x000001a89c9806b2: movslq %ebx,%rbx
  0x000001a89c9806b5: mov    %rbx,%rdi
  0x000001a89c9806b8: cmp    $0xffffff,%rbx
  0x000001a89c9806bf: ja     0x000001a89c9808f0
  0x000001a89c9806c5: movabs $0x17,%rsi
  0x000001a89c9806cf: lea    (%rsi,%rbx,1),%rsi
  0x000001a89c9806d3: and    $0xfffffffffffffff8,%rsi
  0x000001a89c9806d7: mov    0x80(%r15),%rax
  0x000001a89c9806de: lea    (%rax,%rsi,1),%rsi
  0x000001a89c9806e2: cmp    0x90(%r15),%rsi
  0x000001a89c9806e9: ja     0x000001a89c9808f0
  0x000001a89c9806ef: mov    %rsi,0x80(%r15)
  0x000001a89c9806f6: sub    %rax,%rsi
  0x000001a89c9806f9: movq   $0x1,(%rax)
  0x000001a89c980700: mov    %rdx,%rcx
  0x000001a89c980703: shr    $0x3,%rcx
  0x000001a89c980707: mov    %ecx,0x8(%rax)
  0x000001a89c98070a: mov    %ebx,0xc(%rax)
  0x000001a89c98070d: sub    $0x10,%rsi
  0x000001a89c980711: je     0x000001a89c980731
  0x000001a89c980717: test   %rsi,%rsi
  0x000001a89c98071a: je     0x000001a89c980731
  0x000001a89c980720: xor    %rbx,%rbx
  0x000001a89c980723: shr    $0x3,%rsi
  0x000001a89c980727: mov    %rbx,0x8(%rax,%rsi,8)
  0x000001a89c98072c: dec    %rsi
  0x000001a89c98072f: jne    0x000001a89c980727  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32

  0x000001a89c980731: movabs $0x1a8b7543958,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b8a60} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000001a89c98073b: addq   $0x1,0x138(%rdx)
  0x000001a89c980743: movabs $0x1a8b74f43d8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c98074d: mov    0xfc(%rdx),%r9d
  0x000001a89c980754: add    $0x8,%r9d
  0x000001a89c980758: mov    %r9d,0xfc(%rdx)
  0x000001a89c98075f: and    $0x7ffff8,%r9d
  0x000001a89c980766: cmp    $0x0,%r9d
  0x000001a89c98076a: je     0x000001a89c9808fa
  0x000001a89c980770: mov    0x80(%rsp),%edi
  0x000001a89c980777: cmp    %r8d,%edi
  0x000001a89c98077a: movabs $0x1a8b74f43d8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c980784: movabs $0x138,%r9
  0x000001a89c98078e: jg     0x000001a89c98079e
  0x000001a89c980794: movabs $0x148,%r9
  0x000001a89c98079e: mov    (%rdx,%r9,1),%rsi
  0x000001a89c9807a2: lea    0x1(%rsi),%rsi
  0x000001a89c9807a6: mov    %rsi,(%rdx,%r9,1)
  0x000001a89c9807aa: jg     0x000001a89c9807c8  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32

  0x000001a89c9807b0: movabs $0x1a8b74f43d8,%rdx  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c9807ba: incl   0x158(%rdx)
  0x000001a89c9807c0: mov    %rdi,%rsi
  0x000001a89c9807c3: jmpq   0x000001a89c9807cb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32

  0x000001a89c9807c8: mov    %r8,%rsi           ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32

  0x000001a89c9807cb: mov    0x88(%rsp),%rdx
  0x000001a89c9807d3: movabs $0x1a8b7543958,%r8  ;   {metadata(method data for {method} {0x000001a8b72b8a60} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000001a89c9807dd: addq   $0x1,0x148(%r8)
  0x000001a89c9807e5: mov    $0x0,%r8d
  0x000001a89c9807eb: mov    %rax,%r9
  0x000001a89c9807ee: mov    $0x0,%edi
  0x000001a89c9807f3: mov    %rax,0x90(%rsp)
  0x000001a89c9807fb: lea    (%r8,%rsi,1),%rcx
  0x000001a89c9807ff: cmp    0xc(%rdx),%ecx
  0x000001a89c980802: ja     0x000001a89c98091b
  0x000001a89c980808: lea    (%rdi,%rsi,1),%rcx
  0x000001a89c98080c: cmp    0xc(%r9),%ecx
  0x000001a89c980810: ja     0x000001a89c98091b
  0x000001a89c980816: test   %esi,%esi
  0x000001a89c980818: jl     0x000001a89c98091b
  0x000001a89c98081e: movslq %r8d,%r8
  0x000001a89c980821: movslq %edi,%rdi
  0x000001a89c980824: lea    0x10(%rdx,%r8,1),%rcx
  0x000001a89c980829: lea    0x10(%r9,%rdi,1),%rdx
  0x000001a89c98082e: mov    %rsi,%r8
  0x000001a89c980831: sub    $0x20,%rsp
  0x000001a89c980835: test   $0xf,%esp
  0x000001a89c98083b: je     0x000001a89c980853
  0x000001a89c980841: sub    $0x8,%rsp
  0x000001a89c980845: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000001a89c98084a: add    $0x8,%rsp
  0x000001a89c98084e: jmpq   0x000001a89c980858
  0x000001a89c980853: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000001a89c980858: add    $0x20,%rsp         ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32

  0x000001a89c98085c: mov    0x90(%rsp),%rax
  0x000001a89c980864: mov    0x78(%rsp),%rdx
  0x000001a89c980869: movsbl 0x398(%r15),%esi
  0x000001a89c980871: cmp    $0x0,%esi
  0x000001a89c980874: jne    0x000001a89c980929
  0x000001a89c98087a: mov    %rax,%r10
  0x000001a89c98087d: shr    $0x3,%r10
  0x000001a89c980881: mov    %r10d,0x14(%rdx)
  0x000001a89c980885: mov    %rdx,%rsi
  0x000001a89c980888: xor    %rax,%rsi
  0x000001a89c98088b: shr    $0x14,%rsi
  0x000001a89c98088f: cmp    $0x0,%rsi
  0x000001a89c980893: jne    0x000001a89c980948  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@35

  0x000001a89c980899: add    $0xa0,%rsp
  0x000001a89c9808a0: pop    %rbp
  0x000001a89c9808a1: mov    0x70(%r15),%r10
  0x000001a89c9808a5: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9808a8: retq   
  0x000001a89c9808a9: movabs $0x1a8b71fb230,%r10  ;   {metadata({method} {0x000001a8b71fb238} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c9808b3: mov    %r10,0x8(%rsp)
  0x000001a89c9808b8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9808c0: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9808c5: jmpq   0x000001a89c9805dc
  0x000001a89c9808ca: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdx=Oop [120]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@4
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9808cf: movabs $0x1a8b72b8a58,%r10  ;   {metadata({method} {0x000001a8b72b8a60} 'copyOf' '([BI)[B' in 'java/util/Arrays')}
  0x000001a89c9808d9: mov    %r10,0x8(%rsp)
  0x000001a89c9808de: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9808e6: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop rdx=Oop [120]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9808eb: jmpq   0x000001a89c9806a5
  0x000001a89c9808f0: callq  0x000001a89c4cda00  ; ImmutableOopMap{[136]=Oop [120]=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x000001a89c9808f5: jmpq   0x000001a89c980731
  0x000001a89c9808fa: movabs $0x1a8b72c3720,%r10  ;   {metadata({method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c980904: mov    %r10,0x8(%rsp)
  0x000001a89c980909: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c980911: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ; - java.util.Arrays::copyOf@11
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c980916: jmpq   0x000001a89c980770
  0x000001a89c98091b: nopl   0x0(%rax)
  0x000001a89c98091f: callq  0x000001a89c407500  ; ImmutableOopMap{[144]=Oop [120]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOf@14
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@32
                                                ;   {static_call}
  0x000001a89c980924: jmpq   0x000001a89c98085c
  0x000001a89c980929: mov    0x14(%rdx),%esi
  0x000001a89c98092c: shl    $0x3,%rsi
  0x000001a89c980930: cmp    $0x0,%rsi
  0x000001a89c980934: je     0x000001a89c98087a
  0x000001a89c98093a: mov    %rsi,(%rsp)
  0x000001a89c98093e: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c980943: jmpq   0x000001a89c98087a
  0x000001a89c980948: cmp    $0x0,%rax
  0x000001a89c98094c: je     0x000001a89c980899
  0x000001a89c980952: mov    %rdx,(%rsp)
  0x000001a89c980956: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c98095b: jmpq   0x000001a89c980899
  0x000001a89c980960: nop
  0x000001a89c980961: nop
  0x000001a89c980962: mov    0x350(%r15),%rax
  0x000001a89c980969: movabs $0x0,%r10
  0x000001a89c980973: mov    %r10,0x350(%r15)
  0x000001a89c98097a: movabs $0x0,%r10
  0x000001a89c980984: mov    %r10,0x358(%r15)
  0x000001a89c98098b: add    $0xa0,%rsp
  0x000001a89c980992: pop    %rbp
  0x000001a89c980993: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c980998: hlt    
  0x000001a89c980999: hlt    
  0x000001a89c98099a: hlt    
  0x000001a89c98099b: hlt    
  0x000001a89c98099c: hlt    
  0x000001a89c98099d: hlt    
  0x000001a89c98099e: hlt    
  0x000001a89c98099f: hlt    
[Stub Code]
  0x000001a89c9809a0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c9809a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9809af: jmpq   0x000001a89c9809af  ;   {runtime_call}
  0x000001a89c9809b4: nop
  0x000001a89c9809b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9809bf: jmpq   0x000001a89c9809bf  ;   {runtime_call}
[Exception Handler]
  0x000001a89c9809c4: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c9809c9: mov    %rsp,-0x28(%rsp)
  0x000001a89c9809ce: sub    $0x80,%rsp
  0x000001a89c9809d5: mov    %rax,0x78(%rsp)
  0x000001a89c9809da: mov    %rcx,0x70(%rsp)
  0x000001a89c9809df: mov    %rdx,0x68(%rsp)
  0x000001a89c9809e4: mov    %rbx,0x60(%rsp)
  0x000001a89c9809e9: mov    %rbp,0x50(%rsp)
  0x000001a89c9809ee: mov    %rsi,0x48(%rsp)
  0x000001a89c9809f3: mov    %rdi,0x40(%rsp)
  0x000001a89c9809f8: mov    %r8,0x38(%rsp)
  0x000001a89c9809fd: mov    %r9,0x30(%rsp)
  0x000001a89c980a02: mov    %r10,0x28(%rsp)
  0x000001a89c980a07: mov    %r11,0x20(%rsp)
  0x000001a89c980a0c: mov    %r12,0x18(%rsp)
  0x000001a89c980a11: mov    %r13,0x10(%rsp)
  0x000001a89c980a16: mov    %r14,0x8(%rsp)
  0x000001a89c980a1b: mov    %r15,(%rsp)
  0x000001a89c980a1f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c980a29: movabs $0x1a89c9809c9,%rdx  ;   {internal_word}
  0x000001a89c980a33: mov    %rsp,%r8
  0x000001a89c980a36: and    $0xfffffffffffffff0,%rsp
  0x000001a89c980a3a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c980a44: callq  *%r10
  0x000001a89c980a47: hlt    
[Deopt Handler Code]
  0x000001a89c980a48: movabs $0x1a89c980a48,%r10  ;   {section_word}
  0x000001a89c980a52: push   %r10
  0x000001a89c980a54: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c980a59: hlt    
  0x000001a89c980a5a: hlt    
  0x000001a89c980a5b: hlt    
  0x000001a89c980a5c: hlt    
  0x000001a89c980a5d: hlt    
  0x000001a89c980a5e: hlt    
  0x000001a89c980a5f: hlt    

ImmutableOopMap{[120]=Oop [136]=Oop }pc offsets: 220 
ImmutableOopMap{rdx=Oop [120]=Oop }pc offsets: 837 
ImmutableOopMap{rdx=Oop [120]=Oop rsi=Oop }pc offsets: 847 
ImmutableOopMap{[136]=Oop rdx=Oop [120]=Oop }pc offsets: 875 
ImmutableOopMap{[136]=Oop [120]=Oop }pc offsets: 885 
ImmutableOopMap{[136]=Oop [120]=Oop rax=Oop }pc offsets: 918 
ImmutableOopMap{[144]=Oop [120]=Oop }pc offsets: 932 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea53a0, 0x000001a8a3ea53c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b7543cb0} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea53a0: mov    0x24(%r8),%ebx
  0x000001a8a3ea53a4: shl    $0x3,%rbx
  0x000001a8a3ea53a8: mov    0x10(%rbx),%rbx
  0x000001a8a3ea53ac: test   %rbx,%rbx
  0x000001a8a3ea53af: je     0x000001a8a3ea53b8
  0x000001a8a3ea53b5: jmpq   *0x38(%rbx)
  0x000001a8a3ea53b8: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea53bd: hlt    
  0x000001a8a3ea53be: hlt    
  0x000001a8a3ea53bf: hlt    
Compiled method (c1)     362   75       3       java.lang.AbstractStringBuilder::isLatin1 (19 bytes)
 total in heap  [0x000001a89c980d10,0x000001a89c981168] = 1112
 relocation     [0x000001a89c980e88,0x000001a89c980eb8] = 48
 main code      [0x000001a89c980ec0,0x000001a89c981000] = 320
 stub code      [0x000001a89c981000,0x000001a89c981098] = 152
 metadata       [0x000001a89c981098,0x000001a89c9810a0] = 8
 scopes data    [0x000001a89c9810a0,0x000001a89c9810d0] = 48
 scopes pcs     [0x000001a89c9810d0,0x000001a89c981160] = 144
 dependencies   [0x000001a89c981160,0x000001a89c981168] = 8
----------------------------------------------------------------------
java/lang/AbstractStringBuilder.isLatin1()Z  [0x000001a89c980ec0, 0x000001a89c981098]  472 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder'
  #           [sp+0x40]  (sp of caller)
  0x000001a89c980ec0: mov    0x8(%rdx),%r10d
  0x000001a89c980ec4: shl    $0x3,%r10
  0x000001a89c980ec8: cmp    %rax,%r10
  0x000001a89c980ecb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c980ed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c980edc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c980ee0: mov    %eax,-0x7000(%rsp)
  0x000001a89c980ee7: push   %rbp
  0x000001a89c980ee8: sub    $0x30,%rsp
  0x000001a89c980eec: movabs $0x1a8b7535a68,%rax  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980ef6: mov    0xfc(%rax),%esi
  0x000001a89c980efc: add    $0x8,%esi
  0x000001a89c980eff: mov    %esi,0xfc(%rax)
  0x000001a89c980f05: and    $0x1ff8,%esi
  0x000001a89c980f0b: cmp    $0x0,%esi
  0x000001a89c980f0e: je     0x000001a89c980f90  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@0

  0x000001a89c980f14: movabs $0x1a8b7535a68,%rax  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980f1e: incl   0x148(%rax)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3

  0x000001a89c980f24: movsbl 0x10(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7

  0x000001a89c980f28: cmp    $0x0,%eax
  0x000001a89c980f2b: movabs $0x1a8b7535a68,%rax  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980f35: movabs $0x158,%rsi
  0x000001a89c980f3f: jne    0x000001a89c980f4f
  0x000001a89c980f45: movabs $0x168,%rsi
  0x000001a89c980f4f: mov    (%rax,%rsi,1),%rdi
  0x000001a89c980f53: lea    0x1(%rdi),%rdi
  0x000001a89c980f57: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c980f5b: jne    0x000001a89c980f7b  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10

  0x000001a89c980f61: movabs $0x1a8b7535a68,%rax  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980f6b: incl   0x178(%rax)
  0x000001a89c980f71: mov    $0x1,%eax
  0x000001a89c980f76: jmpq   0x000001a89c980f80  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14

  0x000001a89c980f7b: mov    $0x0,%eax          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18

  0x000001a89c980f80: and    $0x1,%eax
  0x000001a89c980f83: add    $0x30,%rsp
  0x000001a89c980f87: pop    %rbp
  0x000001a89c980f88: mov    0x70(%r15),%r10
  0x000001a89c980f8c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c980f8f: retq   
  0x000001a89c980f90: movabs $0x1a8b71fdd90,%r10  ;   {metadata({method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c980f9a: mov    %r10,0x8(%rsp)
  0x000001a89c980f9f: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c980fa7: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c980fac: jmpq   0x000001a89c980f14
  0x000001a89c980fb1: nop
  0x000001a89c980fb2: nop
  0x000001a89c980fb3: mov    0x350(%r15),%rax
  0x000001a89c980fba: movabs $0x0,%r10
  0x000001a89c980fc4: mov    %r10,0x350(%r15)
  0x000001a89c980fcb: movabs $0x0,%r10
  0x000001a89c980fd5: mov    %r10,0x358(%r15)
  0x000001a89c980fdc: add    $0x30,%rsp
  0x000001a89c980fe0: pop    %rbp
  0x000001a89c980fe1: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c980fe6: hlt    
  0x000001a89c980fe7: hlt    
  0x000001a89c980fe8: hlt    
  0x000001a89c980fe9: hlt    
  0x000001a89c980fea: hlt    
  0x000001a89c980feb: hlt    
  0x000001a89c980fec: hlt    
  0x000001a89c980fed: hlt    
  0x000001a89c980fee: hlt    
  0x000001a89c980fef: hlt    
  0x000001a89c980ff0: hlt    
  0x000001a89c980ff1: hlt    
  0x000001a89c980ff2: hlt    
  0x000001a89c980ff3: hlt    
  0x000001a89c980ff4: hlt    
  0x000001a89c980ff5: hlt    
  0x000001a89c980ff6: hlt    
  0x000001a89c980ff7: hlt    
  0x000001a89c980ff8: hlt    
  0x000001a89c980ff9: hlt    
  0x000001a89c980ffa: hlt    
  0x000001a89c980ffb: hlt    
  0x000001a89c980ffc: hlt    
  0x000001a89c980ffd: hlt    
  0x000001a89c980ffe: hlt    
  0x000001a89c980fff: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c981000: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c981005: mov    %rsp,-0x28(%rsp)
  0x000001a89c98100a: sub    $0x80,%rsp
  0x000001a89c981011: mov    %rax,0x78(%rsp)
  0x000001a89c981016: mov    %rcx,0x70(%rsp)
  0x000001a89c98101b: mov    %rdx,0x68(%rsp)
  0x000001a89c981020: mov    %rbx,0x60(%rsp)
  0x000001a89c981025: mov    %rbp,0x50(%rsp)
  0x000001a89c98102a: mov    %rsi,0x48(%rsp)
  0x000001a89c98102f: mov    %rdi,0x40(%rsp)
  0x000001a89c981034: mov    %r8,0x38(%rsp)
  0x000001a89c981039: mov    %r9,0x30(%rsp)
  0x000001a89c98103e: mov    %r10,0x28(%rsp)
  0x000001a89c981043: mov    %r11,0x20(%rsp)
  0x000001a89c981048: mov    %r12,0x18(%rsp)
  0x000001a89c98104d: mov    %r13,0x10(%rsp)
  0x000001a89c981052: mov    %r14,0x8(%rsp)
  0x000001a89c981057: mov    %r15,(%rsp)
  0x000001a89c98105b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c981065: movabs $0x1a89c981005,%rdx  ;   {internal_word}
  0x000001a89c98106f: mov    %rsp,%r8
  0x000001a89c981072: and    $0xfffffffffffffff0,%rsp
  0x000001a89c981076: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c981080: callq  *%r10
  0x000001a89c981083: hlt    
[Deopt Handler Code]
  0x000001a89c981084: movabs $0x1a89c981084,%r10  ;   {section_word}
  0x000001a89c98108e: push   %r10
  0x000001a89c981090: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c981095: hlt    
  0x000001a89c981096: hlt    
  0x000001a89c981097: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 236 Compiled method (c1)     364   72       3       java.lang.String::<init> (15 bytes)
 total in heap  [0x000001a89c981190,0x000001a89c981618] = 1160
 relocation     [0x000001a89c981308,0x000001a89c981340] = 56
 main code      [0x000001a89c981340,0x000001a89c9814c0] = 384
 stub code      [0x000001a89c9814c0,0x000001a89c981558] = 152
 metadata       [0x000001a89c981558,0x000001a89c981568] = 16
 scopes data    [0x000001a89c981568,0x000001a89c9815a0] = 56
 scopes pcs     [0x000001a89c9815a0,0x000001a89c981610] = 112
 dependencies   [0x000001a89c981610,0x000001a89c981618] = 8
----------------------------------------------------------------------
java/lang/String.<init>([BB)V  [0x000001a89c981340, 0x000001a89c981558]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8:r8     = '[B'
  # parm1:    r9        = byte
  #           [sp+0x40]  (sp of caller)
  0x000001a89c981340: mov    0x8(%rdx),%r10d
  0x000001a89c981344: shl    $0x3,%r10
  0x000001a89c981348: cmp    %rax,%r10
  0x000001a89c98134b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c981351: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c98135c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c981360: mov    %eax,-0x7000(%rsp)
  0x000001a89c981367: push   %rbp
  0x000001a89c981368: sub    $0x30,%rsp
  0x000001a89c98136c: movabs $0x1a8b7546b58,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c981376: mov    0xfc(%rsi),%edi
  0x000001a89c98137c: add    $0x8,%edi
  0x000001a89c98137f: mov    %edi,0xfc(%rsi)
  0x000001a89c981385: and    $0x1ff8,%edi
  0x000001a89c98138b: cmp    $0x0,%edi
  0x000001a89c98138e: je     0x000001a89c981412  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@0

  0x000001a89c981394: mov    %rdx,%rsi
  0x000001a89c981397: movabs $0x1a8b7546b58,%rdi  ;   {metadata(method data for {method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c9813a1: addq   $0x1,0x138(%rdi)
  0x000001a89c9813a9: movabs $0x1a8b73432f0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c9813b3: mov    0xfc(%rsi),%edi
  0x000001a89c9813b9: add    $0x8,%edi
  0x000001a89c9813bc: mov    %edi,0xfc(%rsi)
  0x000001a89c9813c2: and    $0x7ffff8,%edi
  0x000001a89c9813c8: cmp    $0x0,%edi
  0x000001a89c9813cb: je     0x000001a89c981433
  0x000001a89c9813d1: movsbl 0x398(%r15),%esi
  0x000001a89c9813d9: cmp    $0x0,%esi
  0x000001a89c9813dc: jne    0x000001a89c981451
  0x000001a89c9813e2: mov    %r8,%r10
  0x000001a89c9813e5: shr    $0x3,%r10
  0x000001a89c9813e9: mov    %r10d,0xc(%rdx)
  0x000001a89c9813ed: mov    %rdx,%rsi
  0x000001a89c9813f0: xor    %r8,%rsi
  0x000001a89c9813f3: shr    $0x14,%rsi
  0x000001a89c9813f7: cmp    $0x0,%rsi
  0x000001a89c9813fb: jne    0x000001a89c98146c  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6

  0x000001a89c981401: mov    %r9b,0x14(%rdx)    ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@11

  0x000001a89c981405: add    $0x30,%rsp
  0x000001a89c981409: pop    %rbp
  0x000001a89c98140a: mov    0x70(%r15),%r10
  0x000001a89c98140e: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c981411: retq   
  0x000001a89c981412: movabs $0x1a8b7177d28,%r10  ;   {metadata({method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c98141c: mov    %r10,0x8(%rsp)
  0x000001a89c981421: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c981429: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c98142e: jmpq   0x000001a89c981394
  0x000001a89c981433: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c98143d: mov    %r10,0x8(%rsp)
  0x000001a89c981442: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c98144a: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.lang.String::<init>@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c98144f: jmp    0x000001a89c9813d1
  0x000001a89c981451: mov    0xc(%rdx),%esi
  0x000001a89c981454: shl    $0x3,%rsi
  0x000001a89c981458: cmp    $0x0,%rsi
  0x000001a89c98145c: je     0x000001a89c9813e2
  0x000001a89c98145e: mov    %rsi,(%rsp)
  0x000001a89c981462: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c981467: jmpq   0x000001a89c9813e2
  0x000001a89c98146c: cmp    $0x0,%r8
  0x000001a89c981470: je     0x000001a89c981401
  0x000001a89c981472: mov    %rdx,(%rsp)
  0x000001a89c981476: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c98147b: jmp    0x000001a89c981401
  0x000001a89c98147d: nop
  0x000001a89c98147e: nop
  0x000001a89c98147f: mov    0x350(%r15),%rax
  0x000001a89c981486: movabs $0x0,%r10
  0x000001a89c981490: mov    %r10,0x350(%r15)
  0x000001a89c981497: movabs $0x0,%r10
  0x000001a89c9814a1: mov    %r10,0x358(%r15)
  0x000001a89c9814a8: add    $0x30,%rsp
  0x000001a89c9814ac: pop    %rbp
  0x000001a89c9814ad: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9814b2: hlt    
  0x000001a89c9814b3: hlt    
  0x000001a89c9814b4: hlt    
  0x000001a89c9814b5: hlt    
  0x000001a89c9814b6: hlt    
  0x000001a89c9814b7: hlt    
  0x000001a89c9814b8: hlt    
  0x000001a89c9814b9: hlt    
  0x000001a89c9814ba: hlt    
  0x000001a89c9814bb: hlt    
  0x000001a89c9814bc: hlt    
  0x000001a89c9814bd: hlt    
  0x000001a89c9814be: hlt    
  0x000001a89c9814bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a89c9814c0: callq  0x000001a89c4ce800  ;   {no_reloc}
  0x000001a89c9814c5: mov    %rsp,-0x28(%rsp)
  0x000001a89c9814ca: sub    $0x80,%rsp
  0x000001a89c9814d1: mov    %rax,0x78(%rsp)
  0x000001a89c9814d6: mov    %rcx,0x70(%rsp)
  0x000001a89c9814db: mov    %rdx,0x68(%rsp)
  0x000001a89c9814e0: mov    %rbx,0x60(%rsp)
  0x000001a89c9814e5: mov    %rbp,0x50(%rsp)
  0x000001a89c9814ea: mov    %rsi,0x48(%rsp)
  0x000001a89c9814ef: mov    %rdi,0x40(%rsp)
  0x000001a89c9814f4: mov    %r8,0x38(%rsp)
  0x000001a89c9814f9: mov    %r9,0x30(%rsp)
  0x000001a89c9814fe: mov    %r10,0x28(%rsp)
  0x000001a89c981503: mov    %r11,0x20(%rsp)
  0x000001a89c981508: mov    %r12,0x18(%rsp)
  0x000001a89c98150d: mov    %r13,0x10(%rsp)
  0x000001a89c981512: mov    %r14,0x8(%rsp)
  0x000001a89c981517: mov    %r15,(%rsp)
  0x000001a89c98151b: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c981525: movabs $0x1a89c9814c5,%rdx  ;   {internal_word}
  0x000001a89c98152f: mov    %rsp,%r8
  0x000001a89c981532: and    $0xfffffffffffffff0,%rsp
  0x000001a89c981536: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c981540: callq  *%r10
  0x000001a89c981543: hlt    
[Deopt Handler Code]
  0x000001a89c981544: movabs $0x1a89c981544,%r10  ;   {section_word}
  0x000001a89c98154e: push   %r10
  0x000001a89c981550: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c981555: hlt    
  0x000001a89c981556: hlt    
  0x000001a89c981557: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 238 271 Compiled method (c1)     367   84       3       java.util.concurrent.ConcurrentHashMap::get (162 bytes)
 total in heap  [0x000001a89c981690,0x000001a89c982c90] = 5632
 relocation     [0x000001a89c981808,0x000001a89c9818e8] = 224
 main code      [0x000001a89c981900,0x000001a89c9824c0] = 3008
 stub code      [0x000001a89c9824c0,0x000001a89c9825a0] = 224
 oops           [0x000001a89c9825a0,0x000001a89c9825a8] = 8
 metadata       [0x000001a89c9825a8,0x000001a89c9825c8] = 32
 scopes data    [0x000001a89c9825c8,0x000001a89c982820] = 600
 scopes pcs     [0x000001a89c982820,0x000001a89c982c50] = 1072
 dependencies   [0x000001a89c982c50,0x000001a89c982c58] = 8
 nul chk table  [0x000001a89c982c58,0x000001a89c982c90] = 56
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a89c981900, 0x000001a89c9825a0]  3232 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0xc0]  (sp of caller)
  0x000001a89c981900: mov    0x8(%rdx),%r10d
  0x000001a89c981904: shl    $0x3,%r10
  0x000001a89c981908: cmp    %rax,%r10
  0x000001a89c98190b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c981911: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c98191c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c981920: mov    %eax,-0x7000(%rsp)
  0x000001a89c981927: push   %rbp
  0x000001a89c981928: sub    $0xb0,%rsp
  0x000001a89c98192f: mov    %r8,0x88(%rsp)
  0x000001a89c981937: movabs $0x1a8b7551f28,%rsi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981941: mov    0xfc(%rsi),%edi
  0x000001a89c981947: add    $0x8,%edi
  0x000001a89c98194a: mov    %edi,0xfc(%rsi)
  0x000001a89c981950: and    $0x1ff8,%edi
  0x000001a89c981956: cmp    $0x0,%edi
  0x000001a89c981959: je     0x000001a89c98236f  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@0

  0x000001a89c98195f: mov    %rdx,0x80(%rsp)
  0x000001a89c981967: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000001a89c982390
  0x000001a89c98196a: mov    %r8,%rsi
  0x000001a89c98196d: movabs $0x1a8b7551f28,%rdi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981977: mov    0x8(%rsi),%esi
  0x000001a89c98197a: shl    $0x3,%rsi
  0x000001a89c98197e: cmp    0x148(%rdi),%rsi
  0x000001a89c981985: jne    0x000001a89c981994
  0x000001a89c981987: addq   $0x1,0x150(%rdi)
  0x000001a89c98198f: jmpq   0x000001a89c9819fa
  0x000001a89c981994: cmp    0x158(%rdi),%rsi
  0x000001a89c98199b: jne    0x000001a89c9819aa
  0x000001a89c98199d: addq   $0x1,0x160(%rdi)
  0x000001a89c9819a5: jmpq   0x000001a89c9819fa
  0x000001a89c9819aa: cmpq   $0x0,0x148(%rdi)
  0x000001a89c9819b5: jne    0x000001a89c9819ce
  0x000001a89c9819b7: mov    %rsi,0x148(%rdi)
  0x000001a89c9819be: movq   $0x1,0x150(%rdi)
  0x000001a89c9819c9: jmpq   0x000001a89c9819fa
  0x000001a89c9819ce: cmpq   $0x0,0x158(%rdi)
  0x000001a89c9819d9: jne    0x000001a89c9819f2
  0x000001a89c9819db: mov    %rsi,0x158(%rdi)
  0x000001a89c9819e2: movq   $0x1,0x160(%rdi)
  0x000001a89c9819ed: jmpq   0x000001a89c9819fa
  0x000001a89c9819f2: addq   $0x1,0x138(%rdi)
  0x000001a89c9819fa: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1

  0x000001a89c9819fd: movabs $0xffffffffffffffff,%rax
  0x000001a89c981a07: callq  0x000001a89c408da0  ; ImmutableOopMap{[136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1
                                                ;   {virtual_call}
  0x000001a89c981a0c: movabs $0x1a8b7551f28,%rcx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981a16: addq   $0x1,0x170(%rcx)
  0x000001a89c981a1e: movabs $0x1a8b73ddb88,%rcx  ;   {metadata(method data for {method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981a28: mov    0xfc(%rcx),%r8d
  0x000001a89c981a2f: add    $0x8,%r8d
  0x000001a89c981a33: mov    %r8d,0xfc(%rcx)
  0x000001a89c981a3a: and    $0x7ffff8,%r8d
  0x000001a89c981a41: cmp    $0x0,%r8d
  0x000001a89c981a45: je     0x000001a89c982395
  0x000001a89c981a4b: mov    %rax,%rcx
  0x000001a89c981a4e: shr    $0x10,%ecx
  0x000001a89c981a51: xor    %rax,%rcx
  0x000001a89c981a54: and    $0x7fffffff,%ecx
  0x000001a89c981a5a: mov    %ecx,0x98(%rsp)
  0x000001a89c981a61: mov    0x80(%rsp),%rdx
  0x000001a89c981a69: mov    0x28(%rdx),%r8d
  0x000001a89c981a6d: shl    $0x3,%r8           ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@10

  0x000001a89c981a71: cmp    $0x0,%r8
  0x000001a89c981a75: movabs $0x1a8b7551f28,%rdx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981a7f: movabs $0x180,%rsi
  0x000001a89c981a89: je     0x000001a89c981a99
  0x000001a89c981a8f: movabs $0x190,%rsi
  0x000001a89c981a99: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c981a9d: lea    0x1(%rdi),%rdi
  0x000001a89c981aa1: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c981aa5: je     0x000001a89c982327  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@15

  0x000001a89c981aab: mov    0xc(%r8),%edx      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19
                                                ; implicit exception: dispatches to 0x000001a89c9823b6
  0x000001a89c981aaf: cmp    $0x0,%edx
  0x000001a89c981ab2: movabs $0x1a8b7551f28,%rsi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981abc: movabs $0x1a0,%rdi
  0x000001a89c981ac6: jle    0x000001a89c981ad6
  0x000001a89c981acc: movabs $0x1b0,%rdi
  0x000001a89c981ad6: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c981ada: lea    0x1(%rbx),%rbx
  0x000001a89c981ade: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c981ae2: jle    0x000001a89c982327  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@23

  0x000001a89c981ae8: movabs $0x1a8b7551f28,%rsi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981af2: addq   $0x1,0x1c0(%rsi)
  0x000001a89c981afa: dec    %edx
  0x000001a89c981afc: and    %rcx,%rdx
  0x000001a89c981aff: movabs $0x1a8b73dd7a0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981b09: mov    0xfc(%rsi),%edi
  0x000001a89c981b0f: add    $0x8,%edi
  0x000001a89c981b12: mov    %edi,0xfc(%rsi)
  0x000001a89c981b18: and    $0x7ffff8,%edi
  0x000001a89c981b1e: cmp    $0x0,%edi
  0x000001a89c981b21: je     0x000001a89c9823bb
  0x000001a89c981b27: movabs $0x1a8b73dd7a0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981b31: lea    0x170(%rsi),%rsi
  0x000001a89c981b38: mov    %r8,%rdi
  0x000001a89c981b3b: mov    0x8(%rdi),%edi
  0x000001a89c981b3e: shl    $0x3,%rdi
  0x000001a89c981b42: xor    0x8(%rsi),%rdi
  0x000001a89c981b46: test   $0xfffffffffffffffc,%rdi
  0x000001a89c981b4d: je     0x000001a89c981b60
  0x000001a89c981b4f: test   $0x2,%rdi
  0x000001a89c981b56: jne    0x000001a89c981b60
  0x000001a89c981b58: orq    $0x2,0x8(%rsi)
  0x000001a89c981b60: movabs $0x6d1708638,%rsi  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a89c981b6a: movabs $0x1a8b73dd7a0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981b74: addq   $0x1,0x138(%rdi)
  0x000001a89c981b7c: movslq %edx,%rdx
  0x000001a89c981b7f: mov    %rcx,%rsi
  0x000001a89c981b82: mov    $0x2,%ecx
  0x000001a89c981b87: shl    %cl,%rdx
  0x000001a89c981b8a: movabs $0x10,%r10
  0x000001a89c981b94: add    %r10,%rdx
  0x000001a89c981b97: movabs $0x1a8b73dd9a8,%rdi  ;   {metadata(method data for {method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c981ba1: mov    0xfc(%rdi),%ebx
  0x000001a89c981ba7: add    $0x8,%ebx
  0x000001a89c981baa: mov    %ebx,0xfc(%rdi)
  0x000001a89c981bb0: and    $0x7ffff8,%ebx
  0x000001a89c981bb6: cmp    $0x0,%ebx
  0x000001a89c981bb9: je     0x000001a89c9823dc
  0x000001a89c981bbf: mov    (%r8,%rdx,1),%r8d
  0x000001a89c981bc3: shl    $0x3,%r8
  0x000001a89c981bc7: cmp    $0x0,%r8
  0x000001a89c981bcb: jne    0x000001a89c981be6
  0x000001a89c981bcd: movabs $0x1a8b73dd7a0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981bd7: orl    $0x100,0x180(%rdx)
  0x000001a89c981be1: jmpq   0x000001a89c981ca9
  0x000001a89c981be6: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a89c981bf0: mov    0x8(%r8),%edx
  0x000001a89c981bf4: shl    $0x3,%rdx
  0x000001a89c981bf8: cmp    0x30(%rdx),%rbx
  0x000001a89c981bfc: jne    0x000001a89c981c8d
  0x000001a89c981c02: movabs $0x1a8b73dd7a0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981c0c: mov    0x8(%r8),%ebx
  0x000001a89c981c10: shl    $0x3,%rbx
  0x000001a89c981c14: cmp    0x198(%rdx),%rbx
  0x000001a89c981c1b: jne    0x000001a89c981c2a
  0x000001a89c981c1d: addq   $0x1,0x1a0(%rdx)
  0x000001a89c981c25: jmpq   0x000001a89c981ca9
  0x000001a89c981c2a: cmp    0x1a8(%rdx),%rbx
  0x000001a89c981c31: jne    0x000001a89c981c40
  0x000001a89c981c33: addq   $0x1,0x1b0(%rdx)
  0x000001a89c981c3b: jmpq   0x000001a89c981ca9
  0x000001a89c981c40: cmpq   $0x0,0x198(%rdx)
  0x000001a89c981c4b: jne    0x000001a89c981c64
  0x000001a89c981c4d: mov    %rbx,0x198(%rdx)
  0x000001a89c981c54: movq   $0x1,0x1a0(%rdx)
  0x000001a89c981c5f: jmpq   0x000001a89c981ca9
  0x000001a89c981c64: cmpq   $0x0,0x1a8(%rdx)
  0x000001a89c981c6f: jne    0x000001a89c981c88
  0x000001a89c981c71: mov    %rbx,0x1a8(%rdx)
  0x000001a89c981c78: movq   $0x1,0x1b0(%rdx)
  0x000001a89c981c83: jmpq   0x000001a89c981ca9
  0x000001a89c981c88: jmpq   0x000001a89c981ca9
  0x000001a89c981c8d: movabs $0x1a8b73dd7a0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981c97: subq   $0x1,0x188(%rdx)
  0x000001a89c981c9f: jmpq   0x000001a89c9823fd
  0x000001a89c981ca4: jmpq   0x000001a89c981ca9
  0x000001a89c981ca9: mov    %r8,%rdi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34

  0x000001a89c981cac: cmp    $0x0,%rdi
  0x000001a89c981cb0: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981cba: movabs $0x1d0,%rdx
  0x000001a89c981cc4: je     0x000001a89c981cd4
  0x000001a89c981cca: movabs $0x1e0,%rdx
  0x000001a89c981cd4: mov    (%r8,%rdx,1),%rbx
  0x000001a89c981cd8: lea    0x1(%rbx),%rbx
  0x000001a89c981cdc: mov    %rbx,(%r8,%rdx,1)
  0x000001a89c981ce0: je     0x000001a89c982327  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@39

  0x000001a89c981ce6: mov    0xc(%rdi),%ebx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43
                                                ; implicit exception: dispatches to 0x000001a89c982406
  0x000001a89c981ce9: cmp    %esi,%ebx
  0x000001a89c981ceb: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981cf5: movabs $0x1f0,%rdx
  0x000001a89c981cff: jne    0x000001a89c981d0f
  0x000001a89c981d05: movabs $0x200,%rdx
  0x000001a89c981d0f: mov    (%r8,%rdx,1),%rax
  0x000001a89c981d13: lea    0x1(%rax),%rax
  0x000001a89c981d17: mov    %rax,(%r8,%rdx,1)
  0x000001a89c981d1b: jne    0x000001a89c981eb1  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@51

  0x000001a89c981d21: mov    0x88(%rsp),%r8
  0x000001a89c981d29: mov    0x10(%rdi),%edx
  0x000001a89c981d2c: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@55

  0x000001a89c981d30: cmp    %r8,%rdx
  0x000001a89c981d33: movabs $0x1a8b7551f28,%rbx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981d3d: movabs $0x210,%rax
  0x000001a89c981d47: je     0x000001a89c981d57
  0x000001a89c981d4d: movabs $0x220,%rax
  0x000001a89c981d57: mov    (%rbx,%rax,1),%rcx
  0x000001a89c981d5b: lea    0x1(%rcx),%rcx
  0x000001a89c981d5f: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c981d63: je     0x000001a89c982358  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@62

  0x000001a89c981d69: cmp    $0x0,%rdx
  0x000001a89c981d6d: movabs $0x1a8b7551f28,%rbx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981d77: movabs $0x240,%rax
  0x000001a89c981d81: jne    0x000001a89c981d91
  0x000001a89c981d87: movabs $0x230,%rax
  0x000001a89c981d91: mov    (%rbx,%rax,1),%rcx
  0x000001a89c981d95: lea    0x1(%rcx),%rcx
  0x000001a89c981d99: mov    %rcx,(%rbx,%rax,1)
  0x000001a89c981d9d: jne    0x000001a89c981dab  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@67

  0x000001a89c981da3: mov    %rsi,%rcx
  0x000001a89c981da6: jmpq   0x000001a89c981f10  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112

  0x000001a89c981dab: mov    %rdi,0x90(%rsp)
  0x000001a89c981db3: mov    %r8,%rsi
  0x000001a89c981db6: movabs $0x1a8b7551f28,%rbx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981dc0: mov    0x8(%rsi),%esi
  0x000001a89c981dc3: shl    $0x3,%rsi
  0x000001a89c981dc7: cmp    0x260(%rbx),%rsi
  0x000001a89c981dce: jne    0x000001a89c981ddd
  0x000001a89c981dd0: addq   $0x1,0x268(%rbx)
  0x000001a89c981dd8: jmpq   0x000001a89c981e43
  0x000001a89c981ddd: cmp    0x270(%rbx),%rsi
  0x000001a89c981de4: jne    0x000001a89c981df3
  0x000001a89c981de6: addq   $0x1,0x278(%rbx)
  0x000001a89c981dee: jmpq   0x000001a89c981e43
  0x000001a89c981df3: cmpq   $0x0,0x260(%rbx)
  0x000001a89c981dfe: jne    0x000001a89c981e17
  0x000001a89c981e00: mov    %rsi,0x260(%rbx)
  0x000001a89c981e07: movq   $0x1,0x268(%rbx)
  0x000001a89c981e12: jmpq   0x000001a89c981e43
  0x000001a89c981e17: cmpq   $0x0,0x270(%rbx)
  0x000001a89c981e22: jne    0x000001a89c981e3b
  0x000001a89c981e24: mov    %rsi,0x270(%rbx)
  0x000001a89c981e2b: movq   $0x1,0x278(%rbx)
  0x000001a89c981e36: jmpq   0x000001a89c981e43
  0x000001a89c981e3b: addq   $0x1,0x250(%rbx)
  0x000001a89c981e43: mov    %r8,%rsi
  0x000001a89c981e46: mov    %rdx,%r8
  0x000001a89c981e49: mov    %rsi,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73

  0x000001a89c981e4c: nop
  0x000001a89c981e4d: movabs $0xffffffffffffffff,%rax
  0x000001a89c981e57: callq  0x000001a89c408d60  ; ImmutableOopMap{[136]=Oop [144]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@73
                                                ;   {virtual_call}
  0x000001a89c981e5c: cmp    $0x0,%eax
  0x000001a89c981e5f: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981e69: movabs $0x298,%rdx
  0x000001a89c981e73: jne    0x000001a89c981e83
  0x000001a89c981e79: movabs $0x288,%rdx
  0x000001a89c981e83: mov    (%r8,%rdx,1),%rsi
  0x000001a89c981e87: lea    0x1(%rsi),%rsi
  0x000001a89c981e8b: mov    %rsi,(%r8,%rdx,1)  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76

  0x000001a89c981e8f: mov    0x90(%rsp),%rdi    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112

  0x000001a89c981e97: jne    0x000001a89c982358  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@76

  0x000001a89c981e9d: mov    0x98(%rsp),%ecx
  0x000001a89c981ea4: mov    0x88(%rsp),%r8
  0x000001a89c981eac: jmpq   0x000001a89c981f10  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112

  0x000001a89c981eb1: mov    %rdi,0x90(%rsp)
  0x000001a89c981eb9: cmp    $0x0,%ebx
  0x000001a89c981ebc: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981ec6: movabs $0x2b8,%rdx
  0x000001a89c981ed0: jl     0x000001a89c981ee0
  0x000001a89c981ed6: movabs $0x2a8,%rdx
  0x000001a89c981ee0: mov    (%r8,%rdx,1),%rsi
  0x000001a89c981ee4: lea    0x1(%rsi),%rsi
  0x000001a89c981ee8: mov    %rsi,(%r8,%rdx,1)
  0x000001a89c981eec: jl     0x000001a89c9821ea  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@86

  0x000001a89c981ef2: mov    0x90(%rsp),%rdi    ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112

  0x000001a89c981efa: mov    0x98(%rsp),%ecx
  0x000001a89c981f01: mov    0x88(%rsp),%r8
  0x000001a89c981f09: nopl   0x0(%rax)
  0x000001a89c981f10: mov    0x18(%rdi),%esi    ; implicit exception: dispatches to 0x000001a89c98240b
  0x000001a89c981f13: shl    $0x3,%rsi          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113

  0x000001a89c981f17: cmp    $0x0,%rsi
  0x000001a89c981f1b: movabs $0x1a8b7551f28,%rdx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981f25: movabs $0x338,%rdi
  0x000001a89c981f2f: je     0x000001a89c981f3f
  0x000001a89c981f35: movabs $0x348,%rdi
  0x000001a89c981f3f: mov    (%rdx,%rdi,1),%rbx
  0x000001a89c981f43: lea    0x1(%rbx),%rbx
  0x000001a89c981f47: mov    %rbx,(%rdx,%rdi,1)
  0x000001a89c981f4b: je     0x000001a89c982327  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@118

  0x000001a89c981f51: mov    0xc(%rsi),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122
                                                ; implicit exception: dispatches to 0x000001a89c982410
  0x000001a89c981f54: movabs $0x1a8b7551f28,%rdi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981f5e: mov    0x100(%rdi),%ebx
  0x000001a89c981f64: add    $0x8,%ebx
  0x000001a89c981f67: mov    %ebx,0x100(%rdi)
  0x000001a89c981f6d: and    $0xfff8,%ebx
  0x000001a89c981f73: cmp    $0x0,%ebx
  0x000001a89c981f76: je     0x000001a89c982415  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127

  0x000001a89c981f7c: mov    0x70(%r15),%r10    ; ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127

  0x000001a89c981f80: test   %eax,(%r10)        ;   {poll}
  0x000001a89c981f83: cmp    %ecx,%edx
  0x000001a89c981f85: movabs $0x1a8b7551f28,%rdx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981f8f: movabs $0x358,%rdi
  0x000001a89c981f99: jne    0x000001a89c981fa9
  0x000001a89c981f9f: movabs $0x368,%rdi
  0x000001a89c981fa9: mov    (%rdx,%rdi,1),%rbx
  0x000001a89c981fad: lea    0x1(%rbx),%rbx
  0x000001a89c981fb1: mov    %rbx,(%rdx,%rdi,1)
  0x000001a89c981fb5: jne    0x000001a89c9821b9  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127

  0x000001a89c981fbb: mov    0x10(%rsi),%edx
  0x000001a89c981fbe: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@131

  0x000001a89c981fc2: cmp    %r8,%rdx
  0x000001a89c981fc5: movabs $0x1a8b7551f28,%rdi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c981fcf: movabs $0x378,%rbx
  0x000001a89c981fd9: je     0x000001a89c981fe9
  0x000001a89c981fdf: movabs $0x388,%rbx
  0x000001a89c981fe9: mov    (%rdi,%rbx,1),%rax
  0x000001a89c981fed: lea    0x1(%rax),%rax
  0x000001a89c981ff1: mov    %rax,(%rdi,%rbx,1)
  0x000001a89c981ff5: je     0x000001a89c982341  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@138

  0x000001a89c981ffb: movabs $0x1a8b7551f28,%rdi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982005: mov    0x100(%rdi),%ebx
  0x000001a89c98200b: add    $0x8,%ebx
  0x000001a89c98200e: mov    %ebx,0x100(%rdi)
  0x000001a89c982014: and    $0xfff8,%ebx
  0x000001a89c98201a: cmp    $0x0,%ebx
  0x000001a89c98201d: je     0x000001a89c982436  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143

  0x000001a89c982023: mov    0x70(%r15),%r10    ; ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop rdx=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143

  0x000001a89c982027: test   %eax,(%r10)        ;   {poll}
  0x000001a89c98202a: cmp    $0x0,%rdx
  0x000001a89c98202e: movabs $0x1a8b7551f28,%rdi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982038: movabs $0x398,%rbx
  0x000001a89c982042: je     0x000001a89c982052
  0x000001a89c982048: movabs $0x3a8,%rbx
  0x000001a89c982052: mov    (%rdi,%rbx,1),%rax
  0x000001a89c982056: lea    0x1(%rax),%rax
  0x000001a89c98205a: mov    %rax,(%rdi,%rbx,1)
  0x000001a89c98205e: mov    %rsi,0xa0(%rsp)
  0x000001a89c982066: je     0x000001a89c98219d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143

  0x000001a89c98206c: mov    %r8,%rdi
  0x000001a89c98206f: movabs $0x1a8b7551f28,%rbx  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982079: mov    0x8(%rdi),%edi
  0x000001a89c98207c: shl    $0x3,%rdi
  0x000001a89c982080: cmp    0x3c8(%rbx),%rdi
  0x000001a89c982087: jne    0x000001a89c982096
  0x000001a89c982089: addq   $0x1,0x3d0(%rbx)
  0x000001a89c982091: jmpq   0x000001a89c9820fc
  0x000001a89c982096: cmp    0x3d8(%rbx),%rdi
  0x000001a89c98209d: jne    0x000001a89c9820ac
  0x000001a89c98209f: addq   $0x1,0x3e0(%rbx)
  0x000001a89c9820a7: jmpq   0x000001a89c9820fc
  0x000001a89c9820ac: cmpq   $0x0,0x3c8(%rbx)
  0x000001a89c9820b7: jne    0x000001a89c9820d0
  0x000001a89c9820b9: mov    %rdi,0x3c8(%rbx)
  0x000001a89c9820c0: movq   $0x1,0x3d0(%rbx)
  0x000001a89c9820cb: jmpq   0x000001a89c9820fc
  0x000001a89c9820d0: cmpq   $0x0,0x3d8(%rbx)
  0x000001a89c9820db: jne    0x000001a89c9820f4
  0x000001a89c9820dd: mov    %rdi,0x3d8(%rbx)
  0x000001a89c9820e4: movq   $0x1,0x3e0(%rbx)
  0x000001a89c9820ef: jmpq   0x000001a89c9820fc
  0x000001a89c9820f4: addq   $0x1,0x3b8(%rbx)
  0x000001a89c9820fc: mov    %r8,%rdi
  0x000001a89c9820ff: mov    %rdx,%r8
  0x000001a89c982102: mov    %rdi,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149

  0x000001a89c982105: movabs $0xffffffffffffffff,%rax
  0x000001a89c98210f: callq  0x000001a89c407280  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@149
                                                ;   {virtual_call}
  0x000001a89c982114: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c98211e: mov    0x100(%r8),%r9d
  0x000001a89c982125: add    $0x8,%r9d
  0x000001a89c982129: mov    %r9d,0x100(%r8)
  0x000001a89c982130: and    $0xfff8,%r9d
  0x000001a89c982137: cmp    $0x0,%r9d
  0x000001a89c98213b: je     0x000001a89c982457  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152

  0x000001a89c982141: mov    0x70(%r15),%r10    ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152

  0x000001a89c982145: test   %eax,(%r10)        ;   {poll}
  0x000001a89c982148: cmp    $0x0,%eax
  0x000001a89c98214b: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982155: movabs $0x400,%r9
  0x000001a89c98215f: jne    0x000001a89c98216f
  0x000001a89c982165: movabs $0x3f0,%r9
  0x000001a89c98216f: mov    (%r8,%r9,1),%rdx
  0x000001a89c982173: lea    0x1(%rdx),%rdx
  0x000001a89c982177: mov    %rdx,(%r8,%r9,1)
  0x000001a89c98217b: jne    0x000001a89c9821dd  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152

  0x000001a89c982181: mov    0xa0(%rsp),%rdi
  0x000001a89c982189: mov    0x98(%rsp),%ecx
  0x000001a89c982190: mov    0x88(%rsp),%r8
  0x000001a89c982198: jmpq   0x000001a89c981f10
  0x000001a89c98219d: mov    0xa0(%rsp),%rdi
  0x000001a89c9821a5: mov    0x98(%rsp),%ecx
  0x000001a89c9821ac: mov    0x88(%rsp),%r8
  0x000001a89c9821b4: jmpq   0x000001a89c981f10
  0x000001a89c9821b9: mov    %rsi,0xa0(%rsp)
  0x000001a89c9821c1: mov    0xa0(%rsp),%rdi
  0x000001a89c9821c9: mov    0x98(%rsp),%ecx
  0x000001a89c9821d0: mov    0x88(%rsp),%r8
  0x000001a89c9821d8: jmpq   0x000001a89c981f10  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@112

  0x000001a89c9821dd: mov    0xa0(%rsp),%rsi
  0x000001a89c9821e5: jmpq   0x000001a89c982341  ;*aload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@155

  0x000001a89c9821ea: mov    0x98(%rsp),%ecx
  0x000001a89c9821f1: mov    0x88(%rsp),%r9
  0x000001a89c9821f9: mov    0x90(%rsp),%rdi
  0x000001a89c982201: movabs $0x1a8b7551f28,%r8  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c98220b: mov    0x8(%rdi),%edi
  0x000001a89c98220e: shl    $0x3,%rdi
  0x000001a89c982212: cmp    0x2d8(%r8),%rdi
  0x000001a89c982219: jne    0x000001a89c982228
  0x000001a89c98221b: addq   $0x1,0x2e0(%r8)
  0x000001a89c982223: jmpq   0x000001a89c98228e
  0x000001a89c982228: cmp    0x2e8(%r8),%rdi
  0x000001a89c98222f: jne    0x000001a89c98223e
  0x000001a89c982231: addq   $0x1,0x2f0(%r8)
  0x000001a89c982239: jmpq   0x000001a89c98228e
  0x000001a89c98223e: cmpq   $0x0,0x2d8(%r8)
  0x000001a89c982249: jne    0x000001a89c982262
  0x000001a89c98224b: mov    %rdi,0x2d8(%r8)
  0x000001a89c982252: movq   $0x1,0x2e0(%r8)
  0x000001a89c98225d: jmpq   0x000001a89c98228e
  0x000001a89c982262: cmpq   $0x0,0x2e8(%r8)
  0x000001a89c98226d: jne    0x000001a89c982286
  0x000001a89c98226f: mov    %rdi,0x2e8(%r8)
  0x000001a89c982276: movq   $0x1,0x2f0(%r8)
  0x000001a89c982281: jmpq   0x000001a89c98228e
  0x000001a89c982286: addq   $0x1,0x2c8(%r8)
  0x000001a89c98228e: mov    %rcx,%r8
  0x000001a89c982291: mov    0x90(%rsp),%rdx    ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93

  0x000001a89c982299: nopl   0x0(%rax)
  0x000001a89c98229d: movabs $0xffffffffffffffff,%rax
  0x000001a89c9822a7: callq  0x000001a89c407280  ; ImmutableOopMap{}
                                                ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@93
                                                ;   {virtual_call}
  0x000001a89c9822ac: cmp    $0x0,%rax
  0x000001a89c9822b0: movabs $0x1a8b7551f28,%rsi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9822ba: movabs $0x300,%rdi
  0x000001a89c9822c4: je     0x000001a89c9822d4
  0x000001a89c9822ca: movabs $0x310,%rdi
  0x000001a89c9822d4: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c9822d8: lea    0x1(%rbx),%rbx
  0x000001a89c9822dc: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c9822e0: je     0x000001a89c98230d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@99

  0x000001a89c9822e6: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000001a89c982478
  0x000001a89c9822e9: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104

  0x000001a89c9822ed: movabs $0x1a8b7551f28,%rsi  ;   {metadata(method data for {method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9822f7: incl   0x320(%rsi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@107

  0x000001a89c9822fd: add    $0xb0,%rsp
  0x000001a89c982304: pop    %rbp
  0x000001a89c982305: mov    0x70(%r15),%r10
  0x000001a89c982309: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c98230c: retq   
  0x000001a89c98230d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c982317: add    $0xb0,%rsp
  0x000001a89c98231e: pop    %rbp
  0x000001a89c98231f: mov    0x70(%r15),%r10
  0x000001a89c982323: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c982326: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@111

  0x000001a89c982327: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a89c982331: add    $0xb0,%rsp
  0x000001a89c982338: pop    %rbp
  0x000001a89c982339: mov    0x70(%r15),%r10
  0x000001a89c98233d: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c982340: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@161

  0x000001a89c982341: mov    0x14(%rsi),%eax
  0x000001a89c982344: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@156

  0x000001a89c982348: add    $0xb0,%rsp
  0x000001a89c98234f: pop    %rbp
  0x000001a89c982350: mov    0x70(%r15),%r10
  0x000001a89c982354: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c982357: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@159

  0x000001a89c982358: mov    0x14(%rdi),%eax
  0x000001a89c98235b: shl    $0x3,%rax          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@80

  0x000001a89c98235f: add    $0xb0,%rsp
  0x000001a89c982366: pop    %rbp
  0x000001a89c982367: mov    0x70(%r15),%r10
  0x000001a89c98236b: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c98236e: retq   
  0x000001a89c98236f: movabs $0x1a8b72839a0,%r10  ;   {metadata({method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982379: mov    %r10,0x8(%rsp)
  0x000001a89c98237e: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c982386: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop [136]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::get@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c98238b: jmpq   0x000001a89c98195f
  0x000001a89c982390: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [136]=Oop [128]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c982395: movabs $0x1a8b7282f28,%r10  ;   {metadata({method} {0x000001a8b7282f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c98239f: mov    %r10,0x8(%rsp)
  0x000001a89c9823a4: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9823ac: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop [128]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::get@4
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9823b1: jmpq   0x000001a89c981a4b
  0x000001a89c9823b6: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [136]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@19
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9823bb: movabs $0x1a8b7283250,%r10  ;   {metadata({method} {0x000001a8b7283258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c9823c5: mov    %r10,0x8(%rsp)
  0x000001a89c9823ca: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9823d2: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9823d7: jmpq   0x000001a89c981b27
  0x000001a89c9823dc: movabs $0x1a8b720e6a0,%r10  ;   {metadata({method} {0x000001a8b720e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a89c9823e6: mov    %r10,0x8(%rsp)
  0x000001a89c9823eb: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9823f3: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9823f8: jmpq   0x000001a89c981bbf
  0x000001a89c9823fd: mov    %r8,(%rsp)
  0x000001a89c982401: callq  0x000001a89c4ceca0  ; ImmutableOopMap{[136]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::get@34
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a89c982406: callq  0x000001a89c4ccba0  ; ImmutableOopMap{rdi=Oop [136]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@43
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c98240b: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [136]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@113
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c982410: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@122
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c982415: movabs $0x1a8b72839a0,%r10  ;   {metadata({method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c98241f: mov    %r10,0x8(%rsp)
  0x000001a89c982424: movq   $0x7f,(%rsp)
  0x000001a89c98242c: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop }
                                                ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@127
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c982431: jmpq   0x000001a89c981f7c
  0x000001a89c982436: movabs $0x1a8b72839a0,%r10  ;   {metadata({method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982440: mov    %r10,0x8(%rsp)
  0x000001a89c982445: movq   $0x8f,(%rsp)
  0x000001a89c98244d: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop rdx=Oop }
                                                ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@143
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c982452: jmpq   0x000001a89c982023
  0x000001a89c982457: movabs $0x1a8b72839a0,%r10  ;   {metadata({method} {0x000001a8b72839a8} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a89c982461: mov    %r10,0x8(%rsp)
  0x000001a89c982466: movq   $0x98,(%rsp)
  0x000001a89c98246e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[136]=Oop [160]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@152
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c982473: jmpq   0x000001a89c982141
  0x000001a89c982478: callq  0x000001a89c4ccba0  ; ImmutableOopMap{}
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::get@104
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c98247d: nop
  0x000001a89c98247e: nop
  0x000001a89c98247f: mov    0x350(%r15),%rax
  0x000001a89c982486: movabs $0x0,%r10
  0x000001a89c982490: mov    %r10,0x350(%r15)
  0x000001a89c982497: movabs $0x0,%r10
  0x000001a89c9824a1: mov    %r10,0x358(%r15)
  0x000001a89c9824a8: add    $0xb0,%rsp
  0x000001a89c9824af: pop    %rbp
  0x000001a89c9824b0: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9824b5: hlt    
  0x000001a89c9824b6: hlt    
  0x000001a89c9824b7: hlt    
  0x000001a89c9824b8: hlt    
  0x000001a89c9824b9: hlt    
  0x000001a89c9824ba: hlt    
  0x000001a89c9824bb: hlt    
  0x000001a89c9824bc: hlt    
  0x000001a89c9824bd: hlt    
  0x000001a89c9824be: hlt    
  0x000001a89c9824bf: hlt    
[Stub Code]
  0x000001a89c9824c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c9824c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9824cf: jmpq   0x000001a89c9824cf  ;   {runtime_call}
  0x000001a89c9824d4: nop
  0x000001a89c9824d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9824df: jmpq   0x000001a89c9824df  ;   {runtime_call}
  0x000001a89c9824e4: nop
  0x000001a89c9824e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9824ef: jmpq   0x000001a89c9824ef  ;   {runtime_call}
  0x000001a89c9824f4: nop
  0x000001a89c9824f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9824ff: jmpq   0x000001a89c9824ff  ;   {runtime_call}
[Exception Handler]
  0x000001a89c982504: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c982509: mov    %rsp,-0x28(%rsp)
  0x000001a89c98250e: sub    $0x80,%rsp
  0x000001a89c982515: mov    %rax,0x78(%rsp)
  0x000001a89c98251a: mov    %rcx,0x70(%rsp)
  0x000001a89c98251f: mov    %rdx,0x68(%rsp)
  0x000001a89c982524: mov    %rbx,0x60(%rsp)
  0x000001a89c982529: mov    %rbp,0x50(%rsp)
  0x000001a89c98252e: mov    %rsi,0x48(%rsp)
  0x000001a89c982533: mov    %rdi,0x40(%rsp)
  0x000001a89c982538: mov    %r8,0x38(%rsp)
  0x000001a89c98253d: mov    %r9,0x30(%rsp)
  0x000001a89c982542: mov    %r10,0x28(%rsp)
  0x000001a89c982547: mov    %r11,0x20(%rsp)
  0x000001a89c98254c: mov    %r12,0x18(%rsp)
  0x000001a89c982551: mov    %r13,0x10(%rsp)
  0x000001a89c982556: mov    %r14,0x8(%rsp)
  0x000001a89c98255b: mov    %r15,(%rsp)
  0x000001a89c98255f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c982569: movabs $0x1a89c982509,%rdx  ;   {internal_word}
  0x000001a89c982573: mov    %rsp,%r8
  0x000001a89c982576: and    $0xfffffffffffffff0,%rsp
  0x000001a89c98257a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c982584: callq  *%r10
  0x000001a89c982587: hlt    
[Deopt Handler Code]
  0x000001a89c982588: movabs $0x1a89c982588,%r10  ;   {section_word}
  0x000001a89c982592: push   %r10
  0x000001a89c982594: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c982599: hlt    
  0x000001a89c98259a: hlt    
  0x000001a89c98259b: hlt    
  0x000001a89c98259c: hlt    
  0x000001a89c98259d: hlt    
  0x000001a89c98259e: hlt    
  0x000001a89c98259f: hlt    

ImmutableOopMap{[136]=Oop [128]=Oop }pc offsets: 268 
ImmutableOopMap{[136]=Oop [144]=Oop }pc offsets: 1372 
ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop }pc offsets: 1664 
ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop rdx=Oop }pc offsets: 1831 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 2068 2117 
ImmutableOopMap{}pc offsets: 2476 
ImmutableOopMap{rdx=Oop r8=Oop [136]=Oop }pc offsets: 2699 
ImmutableOopMap{r8=Oop [136]=Oop [128]=Oop }pc offsets: 2709 
ImmutableOopMap{[136]=Oop [128]=Oop }pc offsets: 2737 
ImmutableOopMap{r8=Oop [136]=Oop }pc offsets: 2747 
ImmutableOopMap{[136]=Oop r8=Oop }pc offsets: 2775 2808 
ImmutableOopMap{[136]=Oop }pc offsets: 2822 
ImmutableOopMap{rdi=Oop [136]=Oop }pc offsets: 2827 
ImmutableOopMap{r8=Oop [136]=Oop }pc offsets: 2832 
ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop }pc offsets: 2837 2865 
ImmutableOopMap{r8=Oop [136]=Oop rsi=Oop rdx=Oop }pc offsets: 2898 
ImmutableOopMap{[136]=Oop [160]=Oop }pc offsets: 2931 
ImmutableOopMap{}pc offsets: 2941 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.invokeBasic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;  [0x000001a8a3ea55a0, 0x000001a8a3ea55d0]  48 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b755b8d0} 'invokeBasic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # this:     rdx:rdx   = 'java/lang/invoke/MethodHandle'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea55a0: mov    0x14(%rdx),%ebx
  0x000001a8a3ea55a3: shl    $0x3,%rbx
  0x000001a8a3ea55a7: mov    0x28(%rbx),%ebx
  0x000001a8a3ea55aa: shl    $0x3,%rbx
  0x000001a8a3ea55ae: mov    0x24(%rbx),%ebx
  0x000001a8a3ea55b1: shl    $0x3,%rbx
  0x000001a8a3ea55b5: mov    0x10(%rbx),%rbx
  0x000001a8a3ea55b9: test   %rbx,%rbx
  0x000001a8a3ea55bc: je     0x000001a8a3ea55c5
  0x000001a8a3ea55c2: jmpq   *0x38(%rbx)
  0x000001a8a3ea55c5: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea55ca: hlt    
  0x000001a8a3ea55cb: hlt    
  0x000001a8a3ea55cc: hlt    
  0x000001a8a3ea55cd: hlt    
  0x000001a8a3ea55ce: hlt    
  0x000001a8a3ea55cf: hlt    
Compiled method (c1)     380   89       3       jdk.internal.org.objectweb.asm.ClassWriter::get (49 bytes)
 total in heap  [0x000001a89c982d10,0x000001a89c983490] = 1920
 relocation     [0x000001a89c982e88,0x000001a89c982ed8] = 80
 main code      [0x000001a89c982ee0,0x000001a89c983160] = 640
 stub code      [0x000001a89c983160,0x000001a89c983210] = 176
 metadata       [0x000001a89c983210,0x000001a89c983218] = 8
 scopes data    [0x000001a89c983218,0x000001a89c9832c0] = 168
 scopes pcs     [0x000001a89c9832c0,0x000001a89c983460] = 416
 dependencies   [0x000001a89c983460,0x000001a89c983468] = 8
 nul chk table  [0x000001a89c983468,0x000001a89c983490] = 40
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/ClassWriter.get(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;  [0x000001a89c982ee0, 0x000001a89c983210]  816 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter'
  # this:     rdx:rdx   = 'jdk/internal/org/objectweb/asm/ClassWriter'
  # parm0:    r8:r8     = 'jdk/internal/org/objectweb/asm/Item'
  #           [sp+0x50]  (sp of caller)
  0x000001a89c982ee0: mov    0x8(%rdx),%r10d
  0x000001a89c982ee4: shl    $0x3,%r10
  0x000001a89c982ee8: cmp    %rax,%r10
  0x000001a89c982eeb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c982ef1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c982efc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c982f00: mov    %eax,-0x7000(%rsp)
  0x000001a89c982f07: push   %rbp
  0x000001a89c982f08: sub    $0x40,%rsp
  0x000001a89c982f0c: mov    %r8,0x28(%rsp)
  0x000001a89c982f11: movabs $0x1a8b755b5e8,%rax  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c982f1b: mov    0xfc(%rax),%esi
  0x000001a89c982f21: add    $0x8,%esi
  0x000001a89c982f24: mov    %esi,0xfc(%rax)
  0x000001a89c982f2a: and    $0x1ff8,%esi
  0x000001a89c982f30: cmp    $0x0,%esi
  0x000001a89c982f33: je     0x000001a89c9830bd  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@0

  0x000001a89c982f39: mov    0x58(%rdx),%esi
  0x000001a89c982f3c: shl    $0x3,%rsi          ;*getfield items {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@1

  0x000001a89c982f40: mov    0x20(%r8),%eax     ;*getfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5
                                                ; implicit exception: dispatches to 0x000001a89c9830de
  0x000001a89c982f44: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12
                                                ; implicit exception: dispatches to 0x000001a89c9830e3
  0x000001a89c982f47: cmp    $0x80000000,%eax
  0x000001a89c982f4d: jne    0x000001a89c982f5e
  0x000001a89c982f53: xor    %edx,%edx
  0x000001a89c982f55: cmp    $0xffffffff,%edi
  0x000001a89c982f58: je     0x000001a89c982f61
  0x000001a89c982f5e: cltd   
  0x000001a89c982f5f: idiv   %edi               ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13
                                                ; implicit exception: dispatches to 0x000001a89c9830e8
  0x000001a89c982f61: movslq %edx,%rdi
  0x000001a89c982f64: cmp    0xc(%rsi),%edx
  0x000001a89c982f67: jae    0x000001a89c9830ed
  0x000001a89c982f6d: mov    0x10(%rsi,%rdi,4),%edx
  0x000001a89c982f71: shl    $0x3,%rdx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14

  0x000001a89c982f75: data16 xchg %ax,%ax
  0x000001a89c982f78: cmp    $0x0,%rdx
  0x000001a89c982f7c: movabs $0x1a8b755b5e8,%rsi  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c982f86: movabs $0x138,%rdi
  0x000001a89c982f90: je     0x000001a89c982fa0
  0x000001a89c982f96: movabs $0x148,%rdi
  0x000001a89c982fa0: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c982fa4: lea    0x1(%rbx),%rbx
  0x000001a89c982fa8: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c982fac: je     0x000001a89c9830ad  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@17

  0x000001a89c982fb2: mov    0x18(%rdx),%esi    ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21
                                                ; implicit exception: dispatches to 0x000001a89c9830f6
  0x000001a89c982fb5: mov    0x18(%r8),%edi     ;*getfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@25

  0x000001a89c982fb9: cmp    %edi,%esi
  0x000001a89c982fbb: movabs $0x1a8b755b5e8,%rsi  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c982fc5: movabs $0x158,%rdi
  0x000001a89c982fcf: jne    0x000001a89c982fdf
  0x000001a89c982fd5: movabs $0x168,%rdi
  0x000001a89c982fdf: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c982fe3: lea    0x1(%rbx),%rbx
  0x000001a89c982fe7: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c982feb: jne    0x000001a89c98305a  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@28

  0x000001a89c982ff1: mov    %r8,%rsi
  0x000001a89c982ff4: movabs $0x1a8b755b5e8,%rdi  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c982ffe: addq   $0x1,0x178(%rdi)
  0x000001a89c983006: mov    %r8,%rsi
  0x000001a89c983009: mov    %rdx,%r8
  0x000001a89c98300c: mov    %rdx,0x20(%rsp)
  0x000001a89c983011: mov    %rsi,%rdx          ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33

  0x000001a89c983014: data16 xchg %ax,%ax
  0x000001a89c983017: callq  0x000001a89c407000  ; ImmutableOopMap{[40]=Oop [32]=Oop }
                                                ;*invokevirtual isEqualTo {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@33
                                                ;   {optimized virtual_call}
  0x000001a89c98301c: cmp    $0x0,%eax
  0x000001a89c98301f: movabs $0x1a8b755b5e8,%rax  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c983029: movabs $0x1b0,%rsi
  0x000001a89c983033: jne    0x000001a89c983043
  0x000001a89c983039: movabs $0x1c0,%rsi
  0x000001a89c983043: mov    (%rax,%rsi,1),%rdi
  0x000001a89c983047: lea    0x1(%rdi),%rdi
  0x000001a89c98304b: mov    %rdi,(%rax,%rsi,1)
  0x000001a89c98304f: mov    0x20(%rsp),%rdx
  0x000001a89c983054: jne    0x000001a89c9830ad  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@36

  0x000001a89c98305a: mov    0x30(%rdx),%eax
  0x000001a89c98305d: shl    $0x3,%rax          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@40

  0x000001a89c983061: movabs $0x1a8b755b5e8,%rsi  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c98306b: mov    0x100(%rsi),%edi
  0x000001a89c983071: add    $0x8,%edi
  0x000001a89c983074: mov    %edi,0x100(%rsi)
  0x000001a89c98307a: and    $0xfff8,%edi
  0x000001a89c983080: cmp    $0x0,%edi
  0x000001a89c983083: je     0x000001a89c9830fb  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44

  0x000001a89c983089: mov    0x70(%r15),%r10    ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44

  0x000001a89c98308d: test   %eax,(%r10)        ;   {poll}
  0x000001a89c983090: movabs $0x1a8b755b5e8,%rsi  ;   {metadata(method data for {method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c98309a: incl   0x1d0(%rsi)
  0x000001a89c9830a0: mov    %rax,%rdx
  0x000001a89c9830a3: mov    0x28(%rsp),%r8
  0x000001a89c9830a8: jmpq   0x000001a89c982f78  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44

  0x000001a89c9830ad: mov    %rdx,%rax
  0x000001a89c9830b0: add    $0x40,%rsp
  0x000001a89c9830b4: pop    %rbp
  0x000001a89c9830b5: mov    0x70(%r15),%r10
  0x000001a89c9830b9: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9830bc: retq   
  0x000001a89c9830bd: movabs $0x1a8b75154d0,%r10  ;   {metadata({method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c9830c7: mov    %r10,0x8(%rsp)
  0x000001a89c9830cc: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9830d4: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop r8=Oop [40]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9830d9: jmpq   0x000001a89c982f39
  0x000001a89c9830de: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [40]=Oop rsi=Oop }
                                                ;*getfield hashCode {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@5
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9830e3: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [40]=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9830e8: callq  0x000001a89c4cc920  ; ImmutableOopMap{r8=Oop [40]=Oop rsi=Oop }
                                                ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@13
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000001a89c9830ed: mov    %rdx,(%rsp)
  0x000001a89c9830f1: callq  0x000001a89c43eda0  ; ImmutableOopMap{r8=Oop [40]=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@14
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a89c9830f6: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r8=Oop [40]=Oop rdx=Oop }
                                                ;*getfield type {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@21
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c9830fb: movabs $0x1a8b75154d0,%r10  ;   {metadata({method} {0x000001a8b75154d8} 'get' '(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;' in 'jdk/internal/org/objectweb/asm/ClassWriter')}
  0x000001a89c983105: mov    %r10,0x8(%rsp)
  0x000001a89c98310a: movq   $0x2c,(%rsp)
  0x000001a89c983112: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[40]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.ClassWriter::get@44
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c983117: jmpq   0x000001a89c983089
  0x000001a89c98311c: nop
  0x000001a89c98311d: nop
  0x000001a89c98311e: mov    0x350(%r15),%rax
  0x000001a89c983125: movabs $0x0,%r10
  0x000001a89c98312f: mov    %r10,0x350(%r15)
  0x000001a89c983136: movabs $0x0,%r10
  0x000001a89c983140: mov    %r10,0x358(%r15)
  0x000001a89c983147: add    $0x40,%rsp
  0x000001a89c98314b: pop    %rbp
  0x000001a89c98314c: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c983151: hlt    
  0x000001a89c983152: hlt    
  0x000001a89c983153: hlt    
  0x000001a89c983154: hlt    
  0x000001a89c983155: hlt    
  0x000001a89c983156: hlt    
  0x000001a89c983157: hlt    
  0x000001a89c983158: hlt    
  0x000001a89c983159: hlt    
  0x000001a89c98315a: hlt    
  0x000001a89c98315b: hlt    
  0x000001a89c98315c: hlt    
  0x000001a89c98315d: hlt    
  0x000001a89c98315e: hlt    
  0x000001a89c98315f: hlt    
[Stub Code]
  0x000001a89c983160: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c983165: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98316f: jmpq   0x000001a89c98316f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c983174: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c983179: mov    %rsp,-0x28(%rsp)
  0x000001a89c98317e: sub    $0x80,%rsp
  0x000001a89c983185: mov    %rax,0x78(%rsp)
  0x000001a89c98318a: mov    %rcx,0x70(%rsp)
  0x000001a89c98318f: mov    %rdx,0x68(%rsp)
  0x000001a89c983194: mov    %rbx,0x60(%rsp)
  0x000001a89c983199: mov    %rbp,0x50(%rsp)
  0x000001a89c98319e: mov    %rsi,0x48(%rsp)
  0x000001a89c9831a3: mov    %rdi,0x40(%rsp)
  0x000001a89c9831a8: mov    %r8,0x38(%rsp)
  0x000001a89c9831ad: mov    %r9,0x30(%rsp)
  0x000001a89c9831b2: mov    %r10,0x28(%rsp)
  0x000001a89c9831b7: mov    %r11,0x20(%rsp)
  0x000001a89c9831bc: mov    %r12,0x18(%rsp)
  0x000001a89c9831c1: mov    %r13,0x10(%rsp)
  0x000001a89c9831c6: mov    %r14,0x8(%rsp)
  0x000001a89c9831cb: mov    %r15,(%rsp)
  0x000001a89c9831cf: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9831d9: movabs $0x1a89c983179,%rdx  ;   {internal_word}
  0x000001a89c9831e3: mov    %rsp,%r8
  0x000001a89c9831e6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9831ea: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9831f4: callq  *%r10
  0x000001a89c9831f7: hlt    
[Deopt Handler Code]
  0x000001a89c9831f8: movabs $0x1a89c9831f8,%r10  ;   {section_word}
  0x000001a89c983202: push   %r10
  0x000001a89c983204: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c983209: hlt    
  0x000001a89c98320a: hlt    
  0x000001a89c98320b: hlt    
  0x000001a89c98320c: hlt    
  0x000001a89c98320d: hlt    
  0x000001a89c98320e: hlt    
  0x000001a89c98320f: hlt    

ImmutableOopMap{[40]=Oop [32]=Oop }pc offsets: 316 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 429 
ImmutableOopMap{rdx=Oop r8=Oop [40]=Oop }pc offsets: 505 
ImmutableOopMap{r8=Oop [40]=Oop rsi=Oop }pc offsets: 515 520 525 534 
ImmutableOopMap{r8=Oop [40]=Oop rdx=Oop }pc offsets: 539 
ImmutableOopMap{[40]=Oop rax=Oop }pc offsets: 567 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToSpecial(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;  [0x000001a8a3ea57a0, 0x000001a8a3ea57c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a8b755c1d0} 'linkToSpecial' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a8a3ea57a0: cmp    (%rdx),%rax
  0x000001a8a3ea57a3: mov    0x24(%rsi),%ebx
  0x000001a8a3ea57a6: shl    $0x3,%rbx
  0x000001a8a3ea57aa: mov    0x10(%rbx),%rbx
  0x000001a8a3ea57ae: test   %rbx,%rbx
  0x000001a8a3ea57b1: je     0x000001a8a3ea57ba
  0x000001a8a3ea57b7: jmpq   *0x38(%rbx)
  0x000001a8a3ea57ba: jmpq   0x000001a89c420b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a8a3ea57bf: hlt    
Compiled method (c1)     385   88       3       jdk.internal.org.objectweb.asm.Item::set (219 bytes)
 total in heap  [0x000001a89c983510,0x000001a89c983fa0] = 2704
 relocation     [0x000001a89c983688,0x000001a89c983720] = 152
 main code      [0x000001a89c983720,0x000001a89c983b00] = 992
 stub code      [0x000001a89c983b00,0x000001a89c983c00] = 256
 metadata       [0x000001a89c983c00,0x000001a89c983c08] = 8
 scopes data    [0x000001a89c983c08,0x000001a89c983d50] = 328
 scopes pcs     [0x000001a89c983d50,0x000001a89c983f60] = 528
 dependencies   [0x000001a89c983f60,0x000001a89c983f68] = 8
 nul chk table  [0x000001a89c983f68,0x000001a89c983fa0] = 56
----------------------------------------------------------------------
jdk/internal/org/objectweb/asm/Item.set(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V  [0x000001a89c983720, 0x000001a89c983c00]  1248 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item'
  # this:     rdx:rdx   = 'jdk/internal/org/objectweb/asm/Item'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/String'
  # parm2:    rdi:rdi   = 'java/lang/String'
  # parm3:    rsi:rsi   = 'java/lang/String'
  #           [sp+0x70]  (sp of caller)
  0x000001a89c983720: mov    0x8(%rdx),%r10d
  0x000001a89c983724: shl    $0x3,%r10
  0x000001a89c983728: cmp    %rax,%r10
  0x000001a89c98372b: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c983731: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c98373c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c983740: mov    %eax,-0x7000(%rsp)
  0x000001a89c983747: push   %rbp
  0x000001a89c983748: sub    $0x60,%rsp
  0x000001a89c98374c: mov    %rdx,0x48(%rsp)
  0x000001a89c983751: mov    %r8d,0x40(%rsp)
  0x000001a89c983756: mov    %rdi,0x30(%rsp)
  0x000001a89c98375b: movabs $0x1a8b755b100,%rbx  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c983765: mov    0xfc(%rbx),%eax
  0x000001a89c98376b: add    $0x8,%eax
  0x000001a89c98376e: mov    %eax,0xfc(%rbx)
  0x000001a89c983774: and    $0x1ff8,%eax
  0x000001a89c98377a: cmp    $0x0,%eax
  0x000001a89c98377d: je     0x000001a89c9839d3  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@0

  0x000001a89c983783: mov    %r8d,0x18(%rdx)    ;*putfield type {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@2

  0x000001a89c983787: movsbl 0x398(%r15),%ebx
  0x000001a89c98378f: cmp    $0x0,%ebx
  0x000001a89c983792: jne    0x000001a89c9839f4
  0x000001a89c983798: mov    %r9,%r10
  0x000001a89c98379b: shr    $0x3,%r10
  0x000001a89c98379f: mov    %r10d,0x24(%rdx)
  0x000001a89c9837a3: mov    %rdx,%rbx
  0x000001a89c9837a6: xor    %r9,%rbx
  0x000001a89c9837a9: shr    $0x14,%rbx
  0x000001a89c9837ad: cmp    $0x0,%rbx
  0x000001a89c9837b1: jne    0x000001a89c983a13  ;*putfield strVal1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@7

  0x000001a89c9837b7: movsbl 0x398(%r15),%ebx
  0x000001a89c9837bf: cmp    $0x0,%ebx
  0x000001a89c9837c2: jne    0x000001a89c983a2b
  0x000001a89c9837c8: mov    %rdi,%r10
  0x000001a89c9837cb: shr    $0x3,%r10
  0x000001a89c9837cf: mov    %r10d,0x28(%rdx)
  0x000001a89c9837d3: mov    %rdx,%rbx
  0x000001a89c9837d6: xor    %rdi,%rbx
  0x000001a89c9837d9: shr    $0x14,%rbx
  0x000001a89c9837dd: cmp    $0x0,%rbx
  0x000001a89c9837e1: jne    0x000001a89c983a4a  ;*putfield strVal2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@12

  0x000001a89c9837e7: movsbl 0x398(%r15),%ebx
  0x000001a89c9837ef: cmp    $0x0,%ebx
  0x000001a89c9837f2: jne    0x000001a89c983a62
  0x000001a89c9837f8: mov    %rsi,%r10
  0x000001a89c9837fb: shr    $0x3,%r10
  0x000001a89c9837ff: mov    %r10d,0x2c(%rdx)
  0x000001a89c983803: mov    %rdx,%rbx
  0x000001a89c983806: xor    %rsi,%rbx
  0x000001a89c983809: shr    $0x14,%rbx
  0x000001a89c98380d: cmp    $0x0,%rbx
  0x000001a89c983811: jne    0x000001a89c983a81  ;*putfield strVal3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@18

  0x000001a89c983817: cmp    $0x1,%r8d
  0x000001a89c98381b: je     0x000001a89c983994
  0x000001a89c983821: cmp    $0x7,%r8d
  0x000001a89c983825: je     0x000001a89c98398a
  0x000001a89c98382b: cmp    $0x8,%r8d
  0x000001a89c98382f: je     0x000001a89c983994
  0x000001a89c983835: cmp    $0xc,%r8d
  0x000001a89c983839: je     0x000001a89c983912
  0x000001a89c98383f: cmp    $0x10,%r8d
  0x000001a89c983843: je     0x000001a89c983994
  0x000001a89c983849: cmp    $0x13,%r8d
  0x000001a89c98384d: je     0x000001a89c983994
  0x000001a89c983853: cmp    $0x14,%r8d
  0x000001a89c983857: je     0x000001a89c983994
  0x000001a89c98385d: cmp    $0x1e,%r8d
  0x000001a89c983861: je     0x000001a89c983994  ;*tableswitch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@22

  0x000001a89c983867: mov    %rsi,0x38(%rsp)
  0x000001a89c98386c: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a89c983a99
  0x000001a89c98386f: mov    %r9,%rbx
  0x000001a89c983872: movabs $0x1a8b755b100,%rax  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c98387c: addq   $0x1,0x3e0(%rax)
  0x000001a89c983884: mov    %r9,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@199

  0x000001a89c983887: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop [48]=Oop [56]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@199
                                                ;   {optimized virtual_call}
  0x000001a89c98388c: mov    0x30(%rsp),%rdi
  0x000001a89c983891: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000001a89c983a9e
  0x000001a89c983894: mov    %rdi,%rdx
  0x000001a89c983897: movabs $0x1a8b755b100,%rsi  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c9838a1: addq   $0x1,0x418(%rsi)
  0x000001a89c9838a9: mov    %rdi,%rdx          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@203

  0x000001a89c9838ac: mov    %eax,0x44(%rsp)
  0x000001a89c9838b0: nopl   0x0(%rax)
  0x000001a89c9838b7: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop [56]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@203
                                                ;   {optimized virtual_call}
  0x000001a89c9838bc: mov    0x38(%rsp),%rsi
  0x000001a89c9838c1: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000001a89c983aa3
  0x000001a89c9838c4: mov    %rsi,%rdx
  0x000001a89c9838c7: movabs $0x1a8b755b100,%rdi  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c9838d1: addq   $0x1,0x450(%rdi)
  0x000001a89c9838d9: mov    0x44(%rsp),%edi
  0x000001a89c9838dd: imul   %eax,%edi
  0x000001a89c9838e0: mov    %rsi,%rdx          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@209

  0x000001a89c9838e3: mov    %edi,0x50(%rsp)
  0x000001a89c9838e7: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@209
                                                ;   {optimized virtual_call}
  0x000001a89c9838ec: mov    0x50(%rsp),%edi
  0x000001a89c9838f0: imul   %eax,%edi
  0x000001a89c9838f3: add    0x40(%rsp),%edi
  0x000001a89c9838f7: and    $0x7fffffff,%edi
  0x000001a89c9838fd: mov    0x48(%rsp),%rdx
  0x000001a89c983902: mov    %edi,0x20(%rdx)    ;*putfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@215

  0x000001a89c983905: add    $0x60,%rsp
  0x000001a89c983909: pop    %rbp
  0x000001a89c98390a: mov    0x70(%r15),%r10
  0x000001a89c98390e: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c983911: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@218

  0x000001a89c983912: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a89c983aa8
  0x000001a89c983915: mov    %r9,%rsi
  0x000001a89c983918: movabs $0x1a8b755b100,%rbx  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c983922: addq   $0x1,0x370(%rbx)
  0x000001a89c98392a: mov    %r9,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@180

  0x000001a89c98392d: xchg   %ax,%ax
  0x000001a89c98392f: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop [48]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@180
                                                ;   {optimized virtual_call}
  0x000001a89c983934: mov    0x30(%rsp),%rdi
  0x000001a89c983939: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000001a89c983aad
  0x000001a89c98393c: mov    %rdi,%rdx
  0x000001a89c98393f: movabs $0x1a8b755b100,%rsi  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c983949: addq   $0x1,0x3a8(%rsi)
  0x000001a89c983951: mov    %rdi,%rdx          ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@184

  0x000001a89c983954: mov    %eax,0x54(%rsp)
  0x000001a89c983958: nopl   0x0(%rax)
  0x000001a89c98395f: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@184
                                                ;   {optimized virtual_call}
  0x000001a89c983964: mov    0x54(%rsp),%edx
  0x000001a89c983968: imul   %eax,%edx
  0x000001a89c98396b: add    0x40(%rsp),%edx
  0x000001a89c98396f: and    $0x7fffffff,%edx
  0x000001a89c983975: mov    0x48(%rsp),%rsi
  0x000001a89c98397a: mov    %edx,0x20(%rsi)    ;*putfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@190

  0x000001a89c98397d: add    $0x60,%rsp
  0x000001a89c983981: pop    %rbp
  0x000001a89c983982: mov    0x70(%r15),%r10
  0x000001a89c983986: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c983989: retq                      ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@193

  0x000001a89c98398a: mov    %rdx,%rsi
  0x000001a89c98398d: movl   $0x0,0x1c(%rsi)    ;*putfield intVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@158

  0x000001a89c983994: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a89c983ab2
  0x000001a89c983997: mov    %r9,%rsi
  0x000001a89c98399a: movabs $0x1a8b755b100,%rdi  ;   {metadata(method data for {method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c9839a4: addq   $0x1,0x338(%rdi)
  0x000001a89c9839ac: mov    %r9,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@166

  0x000001a89c9839af: callq  0x000001a89c972880  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@166
                                                ;   {optimized virtual_call}
  0x000001a89c9839b4: add    0x40(%rsp),%eax
  0x000001a89c9839b8: and    $0x7fffffff,%eax
  0x000001a89c9839be: mov    0x48(%rsp),%rdx
  0x000001a89c9839c3: mov    %eax,0x20(%rdx)    ;*putfield hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@171

  0x000001a89c9839c6: add    $0x60,%rsp
  0x000001a89c9839ca: pop    %rbp
  0x000001a89c9839cb: mov    0x70(%r15),%r10
  0x000001a89c9839cf: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c9839d2: retq   
  0x000001a89c9839d3: movabs $0x1a8b7519640,%r10  ;   {metadata({method} {0x000001a8b7519648} 'set' '(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' in 'jdk/internal/org/objectweb/asm/Item')}
  0x000001a89c9839dd: mov    %r10,0x8(%rsp)
  0x000001a89c9839e2: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9839ea: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop rdi=Oop [48]=Oop rsi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Item::set@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9839ef: jmpq   0x000001a89c983783
  0x000001a89c9839f4: mov    0x24(%rdx),%ebx
  0x000001a89c9839f7: shl    $0x3,%rbx
  0x000001a89c9839fb: cmp    $0x0,%rbx
  0x000001a89c9839ff: je     0x000001a89c983798
  0x000001a89c983a05: mov    %rbx,(%rsp)
  0x000001a89c983a09: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c983a0e: jmpq   0x000001a89c983798
  0x000001a89c983a13: cmp    $0x0,%r9
  0x000001a89c983a17: je     0x000001a89c9837b7
  0x000001a89c983a1d: mov    %rdx,(%rsp)
  0x000001a89c983a21: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c983a26: jmpq   0x000001a89c9837b7
  0x000001a89c983a2b: mov    0x28(%rdx),%ebx
  0x000001a89c983a2e: shl    $0x3,%rbx
  0x000001a89c983a32: cmp    $0x0,%rbx
  0x000001a89c983a36: je     0x000001a89c9837c8
  0x000001a89c983a3c: mov    %rbx,(%rsp)
  0x000001a89c983a40: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c983a45: jmpq   0x000001a89c9837c8
  0x000001a89c983a4a: cmp    $0x0,%rdi
  0x000001a89c983a4e: je     0x000001a89c9837e7
  0x000001a89c983a54: mov    %rdx,(%rsp)
  0x000001a89c983a58: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c983a5d: jmpq   0x000001a89c9837e7
  0x000001a89c983a62: mov    0x2c(%rdx),%ebx
  0x000001a89c983a65: shl    $0x3,%rbx
  0x000001a89c983a69: cmp    $0x0,%rbx
  0x000001a89c983a6d: je     0x000001a89c9837f8
  0x000001a89c983a73: mov    %rbx,(%rsp)
  0x000001a89c983a77: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c983a7c: jmpq   0x000001a89c9837f8
  0x000001a89c983a81: cmp    $0x0,%rsi
  0x000001a89c983a85: je     0x000001a89c983817
  0x000001a89c983a8b: mov    %rdx,(%rsp)
  0x000001a89c983a8f: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c983a94: jmpq   0x000001a89c983817
  0x000001a89c983a99: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r9=Oop [72]=Oop [56]=Oop [48]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@199
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983a9e: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [56]=Oop rdi=Oop [48]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@203
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983aa3: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop rsi=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@209
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983aa8: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop [48]=Oop r9=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@180
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983aad: callq  0x000001a89c4ccba0  ; ImmutableOopMap{[72]=Oop rdi=Oop [48]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@184
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983ab2: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r9=Oop [72]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - jdk.internal.org.objectweb.asm.Item::set@166
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c983ab7: nop
  0x000001a89c983ab8: nop
  0x000001a89c983ab9: mov    0x350(%r15),%rax
  0x000001a89c983ac0: movabs $0x0,%r10
  0x000001a89c983aca: mov    %r10,0x350(%r15)
  0x000001a89c983ad1: movabs $0x0,%r10
  0x000001a89c983adb: mov    %r10,0x358(%r15)
  0x000001a89c983ae2: add    $0x60,%rsp
  0x000001a89c983ae6: pop    %rbp
  0x000001a89c983ae7: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c983aec: hlt    
  0x000001a89c983aed: hlt    
  0x000001a89c983aee: hlt    
  0x000001a89c983aef: hlt    
  0x000001a89c983af0: hlt    
  0x000001a89c983af1: hlt    
  0x000001a89c983af2: hlt    
  0x000001a89c983af3: hlt    
  0x000001a89c983af4: hlt    
  0x000001a89c983af5: hlt    
  0x000001a89c983af6: hlt    
  0x000001a89c983af7: hlt    
  0x000001a89c983af8: hlt    
  0x000001a89c983af9: hlt    
  0x000001a89c983afa: hlt    
  0x000001a89c983afb: hlt    
  0x000001a89c983afc: hlt    
  0x000001a89c983afd: hlt    
  0x000001a89c983afe: hlt    
  0x000001a89c983aff: hlt    
[Stub Code]
  0x000001a89c983b00: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c983b05: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b0f: jmpq   0x000001a89c983b0f  ;   {runtime_call}
  0x000001a89c983b14: nop
  0x000001a89c983b15: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b1f: jmpq   0x000001a89c983b1f  ;   {runtime_call}
  0x000001a89c983b24: nop
  0x000001a89c983b25: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b2f: jmpq   0x000001a89c983b2f  ;   {runtime_call}
  0x000001a89c983b34: nop
  0x000001a89c983b35: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b3f: jmpq   0x000001a89c983b3f  ;   {runtime_call}
  0x000001a89c983b44: nop
  0x000001a89c983b45: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b4f: jmpq   0x000001a89c983b4f  ;   {runtime_call}
  0x000001a89c983b54: nop
  0x000001a89c983b55: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c983b5f: jmpq   0x000001a89c983b5f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c983b64: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c983b69: mov    %rsp,-0x28(%rsp)
  0x000001a89c983b6e: sub    $0x80,%rsp
  0x000001a89c983b75: mov    %rax,0x78(%rsp)
  0x000001a89c983b7a: mov    %rcx,0x70(%rsp)
  0x000001a89c983b7f: mov    %rdx,0x68(%rsp)
  0x000001a89c983b84: mov    %rbx,0x60(%rsp)
  0x000001a89c983b89: mov    %rbp,0x50(%rsp)
  0x000001a89c983b8e: mov    %rsi,0x48(%rsp)
  0x000001a89c983b93: mov    %rdi,0x40(%rsp)
  0x000001a89c983b98: mov    %r8,0x38(%rsp)
  0x000001a89c983b9d: mov    %r9,0x30(%rsp)
  0x000001a89c983ba2: mov    %r10,0x28(%rsp)
  0x000001a89c983ba7: mov    %r11,0x20(%rsp)
  0x000001a89c983bac: mov    %r12,0x18(%rsp)
  0x000001a89c983bb1: mov    %r13,0x10(%rsp)
  0x000001a89c983bb6: mov    %r14,0x8(%rsp)
  0x000001a89c983bbb: mov    %r15,(%rsp)
  0x000001a89c983bbf: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c983bc9: movabs $0x1a89c983b69,%rdx  ;   {internal_word}
  0x000001a89c983bd3: mov    %rsp,%r8
  0x000001a89c983bd6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c983bda: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c983be4: callq  *%r10
  0x000001a89c983be7: hlt    
[Deopt Handler Code]
  0x000001a89c983be8: movabs $0x1a89c983be8,%r10  ;   {section_word}
  0x000001a89c983bf2: push   %r10
  0x000001a89c983bf4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c983bf9: hlt    
  0x000001a89c983bfa: hlt    
  0x000001a89c983bfb: hlt    
  0x000001a89c983bfc: hlt    
  0x000001a89c983bfd: hlt    
  0x000001a89c983bfe: hlt    
  0x000001a89c983bff: hlt    

ImmutableOopMap{[72]=Oop [48]=Oop [56]=Oop }pc offsets: 364 
ImmutableOopMap{[72]=Oop [56]=Oop }pc offsets: 412 
ImmutableOopMap{[72]=Oop }pc offsets: 460 
ImmutableOopMap{[72]=Oop [48]=Oop }pc offsets: 532 
ImmutableOopMap{[72]=Oop }pc offsets: 580 660 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop rdi=Oop [48]=Oop rsi=Oop }pc offsets: 719 
ImmutableOopMap{r9=Oop [72]=Oop [56]=Oop [48]=Oop }pc offsets: 894 
ImmutableOopMap{[72]=Oop [56]=Oop rdi=Oop [48]=Oop }pc offsets: 899 
ImmutableOopMap{[72]=Oop rsi=Oop }pc offsets: 904 
ImmutableOopMap{[72]=Oop [48]=Oop r9=Oop }pc offsets: 909 
ImmutableOopMap{[72]=Oop rdi=Oop [48]=Oop }pc offsets: 914 
ImmutableOopMap{r9=Oop [72]=Oop }pc offsets: 919 Compiled method (c1)     392   92       3       java.lang.String::indexOf (29 bytes)
 total in heap  [0x000001a89c984010,0x000001a89c984650] = 1600
 relocation     [0x000001a89c984188,0x000001a89c9841e0] = 88
 main code      [0x000001a89c9841e0,0x000001a89c984400] = 544
 stub code      [0x000001a89c984400,0x000001a89c9844c0] = 192
 metadata       [0x000001a89c9844c0,0x000001a89c9844d0] = 16
 scopes data    [0x000001a89c9844d0,0x000001a89c984548] = 120
 scopes pcs     [0x000001a89c984548,0x000001a89c984648] = 256
 dependencies   [0x000001a89c984648,0x000001a89c984650] = 8
----------------------------------------------------------------------
java/lang/String.indexOf(II)I  [0x000001a89c9841e0, 0x000001a89c9844c0]  736 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x000001a89c9841e0: mov    0x8(%rdx),%r10d
  0x000001a89c9841e4: shl    $0x3,%r10
  0x000001a89c9841e8: cmp    %rax,%r10
  0x000001a89c9841eb: jne    0x000001a89c406d80  ;   {runtime_call ic_miss_stub}
  0x000001a89c9841f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a89c9841fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a89c984200: mov    %eax,-0x7000(%rsp)
  0x000001a89c984207: push   %rbp
  0x000001a89c984208: sub    $0x40,%rsp
  0x000001a89c98420c: movabs $0x1a8b7575af0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c984216: mov    0xfc(%rsi),%edi
  0x000001a89c98421c: add    $0x8,%edi
  0x000001a89c98421f: mov    %edi,0xfc(%rsi)
  0x000001a89c984225: and    $0x1ff8,%edi
  0x000001a89c98422b: cmp    $0x0,%edi
  0x000001a89c98422e: je     0x000001a89c984389  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@0

  0x000001a89c984234: mov    %rdx,%rsi
  0x000001a89c984237: movabs $0x1a8b7575af0,%rdi  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c984241: addq   $0x1,0x138(%rdi)
  0x000001a89c984249: movabs $0x1a8b733eea8,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c984253: mov    0xfc(%rsi),%edi
  0x000001a89c984259: add    $0x8,%edi
  0x000001a89c98425c: mov    %edi,0xfc(%rsi)
  0x000001a89c984262: and    $0x7ffff8,%edi
  0x000001a89c984268: cmp    $0x0,%edi
  0x000001a89c98426b: je     0x000001a89c9843aa
  0x000001a89c984271: movabs $0x1a8b733eea8,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c98427b: incl   0x148(%rsi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::indexOf@1

  0x000001a89c984281: movsbl 0x14(%rdx),%esi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::indexOf@1

  0x000001a89c984285: cmp    $0x0,%esi
  0x000001a89c984288: movabs $0x1a8b733eea8,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c984292: movabs $0x158,%rdi
  0x000001a89c98429c: jne    0x000001a89c9842ac
  0x000001a89c9842a2: movabs $0x168,%rdi
  0x000001a89c9842ac: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c9842b0: lea    0x1(%rbx),%rbx
  0x000001a89c9842b4: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c9842b8: jne    0x000001a89c9842d8  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::indexOf@1

  0x000001a89c9842be: movabs $0x1a8b733eea8,%rsi  ;   {metadata(method data for {method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9842c8: incl   0x178(%rsi)
  0x000001a89c9842ce: mov    $0x1,%esi
  0x000001a89c9842d3: jmpq   0x000001a89c9842dd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::indexOf@1

  0x000001a89c9842d8: mov    $0x0,%esi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::indexOf@1

  0x000001a89c9842dd: and    $0x1,%esi
  0x000001a89c9842e0: cmp    $0x0,%esi
  0x000001a89c9842e3: movabs $0x1a8b7575af0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c9842ed: movabs $0x148,%rdi
  0x000001a89c9842f7: je     0x000001a89c984307
  0x000001a89c9842fd: movabs $0x158,%rdi
  0x000001a89c984307: mov    (%rsi,%rdi,1),%rbx
  0x000001a89c98430b: lea    0x1(%rbx),%rbx
  0x000001a89c98430f: mov    %rbx,(%rsi,%rdi,1)
  0x000001a89c984313: je     0x000001a89c984359  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@4

  0x000001a89c984319: mov    0xc(%rdx),%edx
  0x000001a89c98431c: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@8

  0x000001a89c984320: movabs $0x1a8b7575af0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c98432a: addq   $0x1,0x168(%rsi)
  0x000001a89c984332: nopl   0x0(%rax,%rax,1)
  0x000001a89c984337: callq  0x000001a89c97f4e0  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@13
                                                ;   {static_call}
  0x000001a89c98433c: movabs $0x1a8b7575af0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c984346: incl   0x178(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@16

  0x000001a89c98434c: add    $0x40,%rsp
  0x000001a89c984350: pop    %rbp
  0x000001a89c984351: mov    0x70(%r15),%r10
  0x000001a89c984355: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c984358: retq   
  0x000001a89c984359: mov    0xc(%rdx),%edx
  0x000001a89c98435c: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@20

  0x000001a89c984360: movabs $0x1a8b7575af0,%rsi  ;   {metadata(method data for {method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c98436a: addq   $0x1,0x190(%rsi)
  0x000001a89c984372: nopl   0x0(%rax,%rax,1)
  0x000001a89c984377: callq  0x000001a89c407500  ; ImmutableOopMap{}
                                                ;*invokestatic indexOf {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::indexOf@25
                                                ;   {static_call}
  0x000001a89c98437c: add    $0x40,%rsp
  0x000001a89c984380: pop    %rbp
  0x000001a89c984381: mov    0x70(%r15),%r10
  0x000001a89c984385: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c984388: retq   
  0x000001a89c984389: movabs $0x1a8b7175950,%r10  ;   {metadata({method} {0x000001a8b7175958} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000001a89c984393: mov    %r10,0x8(%rsp)
  0x000001a89c984398: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9843a0: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9843a5: jmpq   0x000001a89c984234
  0x000001a89c9843aa: movabs $0x1a8b7177f08,%r10  ;   {metadata({method} {0x000001a8b7177f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a89c9843b4: mov    %r10,0x8(%rsp)
  0x000001a89c9843b9: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9843c1: callq  0x000001a89c4d1f80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::indexOf@1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9843c6: jmpq   0x000001a89c984271
  0x000001a89c9843cb: nop
  0x000001a89c9843cc: nop
  0x000001a89c9843cd: mov    0x350(%r15),%rax
  0x000001a89c9843d4: movabs $0x0,%r10
  0x000001a89c9843de: mov    %r10,0x350(%r15)
  0x000001a89c9843e5: movabs $0x0,%r10
  0x000001a89c9843ef: mov    %r10,0x358(%r15)
  0x000001a89c9843f6: add    $0x40,%rsp
  0x000001a89c9843fa: pop    %rbp
  0x000001a89c9843fb: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
[Stub Code]
  0x000001a89c984400: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c984405: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98440f: jmpq   0x000001a89c98440f  ;   {runtime_call}
  0x000001a89c984414: nop
  0x000001a89c984415: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98441f: jmpq   0x000001a89c98441f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c984424: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c984429: mov    %rsp,-0x28(%rsp)
  0x000001a89c98442e: sub    $0x80,%rsp
  0x000001a89c984435: mov    %rax,0x78(%rsp)
  0x000001a89c98443a: mov    %rcx,0x70(%rsp)
  0x000001a89c98443f: mov    %rdx,0x68(%rsp)
  0x000001a89c984444: mov    %rbx,0x60(%rsp)
  0x000001a89c984449: mov    %rbp,0x50(%rsp)
  0x000001a89c98444e: mov    %rsi,0x48(%rsp)
  0x000001a89c984453: mov    %rdi,0x40(%rsp)
  0x000001a89c984458: mov    %r8,0x38(%rsp)
  0x000001a89c98445d: mov    %r9,0x30(%rsp)
  0x000001a89c984462: mov    %r10,0x28(%rsp)
  0x000001a89c984467: mov    %r11,0x20(%rsp)
  0x000001a89c98446c: mov    %r12,0x18(%rsp)
  0x000001a89c984471: mov    %r13,0x10(%rsp)
  0x000001a89c984476: mov    %r14,0x8(%rsp)
  0x000001a89c98447b: mov    %r15,(%rsp)
  0x000001a89c98447f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c984489: movabs $0x1a89c984429,%rdx  ;   {internal_word}
  0x000001a89c984493: mov    %rsp,%r8
  0x000001a89c984496: and    $0xfffffffffffffff0,%rsp
  0x000001a89c98449a: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9844a4: callq  *%r10
  0x000001a89c9844a7: hlt    
[Deopt Handler Code]
  0x000001a89c9844a8: movabs $0x1a89c9844a8,%r10  ;   {section_word}
  0x000001a89c9844b2: push   %r10
  0x000001a89c9844b4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9844b9: hlt    
  0x000001a89c9844ba: hlt    
  0x000001a89c9844bb: hlt    
  0x000001a89c9844bc: hlt    
  0x000001a89c9844bd: hlt    
  0x000001a89c9844be: hlt    
  0x000001a89c9844bf: hlt    

ImmutableOopMap{}pc offsets: 348 412 
ImmutableOopMap{rdx=Oop }pc offsets: 453 486 Compiled method (c1)     396   94       3       java.util.Arrays::copyOfRange (64 bytes)
 total in heap  [0x000001a89c984690,0x000001a89c985bf8] = 5480
 relocation     [0x000001a89c984808,0x000001a89c984928] = 288
 main code      [0x000001a89c984940,0x000001a89c9853c0] = 2688
 stub code      [0x000001a89c9853c0,0x000001a89c9854e0] = 288
 oops           [0x000001a89c9854e0,0x000001a89c9854e8] = 8
 metadata       [0x000001a89c9854e8,0x000001a89c985538] = 80
 scopes data    [0x000001a89c985538,0x000001a89c985810] = 728
 scopes pcs     [0x000001a89c985810,0x000001a89c985be0] = 976
 dependencies   [0x000001a89c985be0,0x000001a89c985be8] = 8
 nul chk table  [0x000001a89c985be8,0x000001a89c985bf8] = 16
----------------------------------------------------------------------
java/util/Arrays.copyOfRange([BII)[B  [0x000001a89c984940, 0x000001a89c9854e0]  2976 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xf0]  (sp of caller)
  0x000001a89c984940: mov    %eax,-0x7000(%rsp)
  0x000001a89c984947: push   %rbp
  0x000001a89c984948: sub    $0xe0,%rsp
  0x000001a89c98494f: mov    %rdx,%r11
  0x000001a89c984952: movabs $0x1a8b7595f80,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c98495c: mov    0xfc(%rdx),%esi
  0x000001a89c984962: add    $0x8,%esi
  0x000001a89c984965: mov    %esi,0xfc(%rdx)
  0x000001a89c98496b: and    $0x1ff8,%esi
  0x000001a89c984971: cmp    $0x0,%esi
  0x000001a89c984974: je     0x000001a89c985169  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@0

  0x000001a89c98497a: mov    %r9,%r13
  0x000001a89c98497d: sub    %r8d,%r13d
  0x000001a89c984980: cmp    $0x0,%r13d
  0x000001a89c984984: movabs $0x1a8b7595f80,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c98498e: movabs $0x138,%rsi
  0x000001a89c984998: jge    0x000001a89c9849a8
  0x000001a89c98499e: movabs $0x148,%rsi
  0x000001a89c9849a8: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c9849ac: lea    0x1(%rdi),%rdi
  0x000001a89c9849b0: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c9849b4: jge    0x000001a89c984f51  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@5

  0x000001a89c9849ba: mov    %r9d,0xbc(%rsp)
  0x000001a89c9849c2: mov    %r8d,0xb8(%rsp)
  0x000001a89c9849ca: nopw   0x0(%rax,%rax,1)
  0x000001a89c9849d0: jmpq   0x000001a89c985199  ;   {no_reloc}
  0x000001a89c9849d5: add    %al,(%rax)
  0x000001a89c9849d7: add    %al,(%rax)
  0x000001a89c9849d9: add    %cl,-0x75(%rcx)
  0x000001a89c9849dc: xchg   %eax,0x48000000(%rax)
  0x000001a89c9849e2: lea    0x28(%rax),%edi
  0x000001a89c9849e5: cmp    0x90(%r15),%rdi
  0x000001a89c9849ec: ja     0x000001a89c9851a3
  0x000001a89c9849f2: mov    %rdi,0x80(%r15)
  0x000001a89c9849f9: mov    0xb0(%rdx),%rcx
  0x000001a89c984a00: mov    %rcx,(%rax)
  0x000001a89c984a03: mov    %rdx,%rcx
  0x000001a89c984a06: shr    $0x3,%rcx
  0x000001a89c984a0a: mov    %ecx,0x8(%rax)
  0x000001a89c984a0d: xor    %rcx,%rcx
  0x000001a89c984a10: mov    %ecx,0xc(%rax)
  0x000001a89c984a13: xor    %rcx,%rcx
  0x000001a89c984a16: mov    %rcx,0x10(%rax)
  0x000001a89c984a1a: mov    %rcx,0x18(%rax)
  0x000001a89c984a1e: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8

  0x000001a89c984a22: mov    %rax,0xc0(%rsp)
  0x000001a89c984a2a: nopw   0x0(%rax,%rax,1)
  0x000001a89c984a30: jmpq   0x000001a89c9851bf  ;   {no_reloc}
  0x000001a89c984a35: add    %al,(%rax)
  0x000001a89c984a37: add    %al,(%rax)
  0x000001a89c984a39: add    %cl,-0x75(%rcx)
  0x000001a89c984a3c: xchg   %eax,0x48000000(%rax)
  0x000001a89c984a42: lea    0x18(%rax),%edi
  0x000001a89c984a45: cmp    0x90(%r15),%rdi
  0x000001a89c984a4c: ja     0x000001a89c9851c9
  0x000001a89c984a52: mov    %rdi,0x80(%r15)
  0x000001a89c984a59: mov    0xb0(%rdx),%rcx
  0x000001a89c984a60: mov    %rcx,(%rax)
  0x000001a89c984a63: mov    %rdx,%rcx
  0x000001a89c984a66: shr    $0x3,%rcx
  0x000001a89c984a6a: mov    %ecx,0x8(%rax)
  0x000001a89c984a6d: xor    %rcx,%rcx
  0x000001a89c984a70: mov    %ecx,0xc(%rax)
  0x000001a89c984a73: xor    %rcx,%rcx
  0x000001a89c984a76: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12

  0x000001a89c984a7a: mov    %rax,%rdx
  0x000001a89c984a7d: movabs $0x1a8b7595f80,%rsi  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984a87: addq   $0x1,0x158(%rsi)
  0x000001a89c984a8f: movabs $0x1a8b759f888,%rdx  ;   {metadata(method data for {method} {0x000001a8b71ff8a8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000001a89c984a99: mov    0xfc(%rdx),%esi
  0x000001a89c984a9f: add    $0x8,%esi
  0x000001a89c984aa2: mov    %esi,0xfc(%rdx)
  0x000001a89c984aa8: and    $0x7ffff8,%esi
  0x000001a89c984aae: cmp    $0x0,%esi
  0x000001a89c984ab1: je     0x000001a89c9851d6
  0x000001a89c984ab7: mov    %rax,%rdx
  0x000001a89c984aba: movabs $0x1a8b759f888,%rsi  ;   {metadata(method data for {method} {0x000001a8b71ff8a8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000001a89c984ac4: addq   $0x1,0x138(%rsi)
  0x000001a89c984acc: mov    $0x10,%r8d
  0x000001a89c984ad2: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16

  0x000001a89c984ad5: mov    %rax,0xb0(%rsp)
  0x000001a89c984add: xchg   %ax,%ax
  0x000001a89c984adf: callq  0x000001a89c407000  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {optimized virtual_call}
  0x000001a89c984ae4: mov    0xb0(%rsp),%rax
  0x000001a89c984aec: movabs $0x1a8b7595f80,%r8  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984af6: addq   $0x1,0x168(%r8)
  0x000001a89c984afe: movabs $0x1a8b759fbf0,%r8  ;   {metadata(method data for {method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984b08: mov    0xfc(%r8),%edx
  0x000001a89c984b0f: add    $0x8,%edx
  0x000001a89c984b12: mov    %edx,0xfc(%r8)
  0x000001a89c984b19: and    $0x7ffff8,%edx
  0x000001a89c984b1f: cmp    $0x0,%edx
  0x000001a89c984b22: je     0x000001a89c9851f7
  0x000001a89c984b28: mov    0xb0(%rsp),%rax
  0x000001a89c984b30: movabs $0x1a8b759fbf0,%r8  ;   {metadata(method data for {method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984b3a: addq   $0x1,0x138(%r8)
  0x000001a89c984b42: mov    0xb8(%rsp),%r8d
  0x000001a89c984b4a: mov    0xb0(%rsp),%rdx    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@20

  0x000001a89c984b52: nopl   0x0(%rax,%rax,1)
  0x000001a89c984b57: callq  0x000001a89c407000  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@20
                                                ;   {optimized virtual_call}
  0x000001a89c984b5c: mov    0xb0(%rsp),%rax
  0x000001a89c984b64: movabs $0x1a8b7595f80,%r8  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984b6e: addq   $0x1,0x1a0(%r8)
  0x000001a89c984b76: movabs $0x1a8b759ff98,%r8  ;   {metadata(method data for {method} {0x000001a8b71ffc28} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984b80: mov    0xfc(%r8),%edx
  0x000001a89c984b87: add    $0x8,%edx
  0x000001a89c984b8a: mov    %edx,0xfc(%r8)
  0x000001a89c984b91: and    $0x7ffff8,%edx
  0x000001a89c984b97: cmp    $0x0,%edx
  0x000001a89c984b9a: je     0x000001a89c985218
  0x000001a89c984ba0: mov    0xb0(%rsp),%rax
  0x000001a89c984ba8: movabs $0x1a8b759ff98,%r8  ;   {metadata(method data for {method} {0x000001a8b71ffc28} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984bb2: addq   $0x1,0x138(%r8)
  0x000001a89c984bba: movabs $0x6d168fe98,%r8   ;   {oop(" > "{0x00000006d168fe98})}
  0x000001a89c984bc4: mov    0xb0(%rsp),%rdx    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@26

  0x000001a89c984bcc: data16 xchg %ax,%ax
  0x000001a89c984bcf: callq  0x000001a89c407000  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@26
                                                ;   {optimized virtual_call}
  0x000001a89c984bd4: mov    0xb0(%rsp),%rax
  0x000001a89c984bdc: movabs $0x1a8b7595f80,%r8  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984be6: addq   $0x1,0x1d8(%r8)
  0x000001a89c984bee: movabs $0x1a8b759fbf0,%r8  ;   {metadata(method data for {method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984bf8: mov    0xfc(%r8),%edx
  0x000001a89c984bff: add    $0x8,%edx
  0x000001a89c984c02: mov    %edx,0xfc(%r8)
  0x000001a89c984c09: and    $0x7ffff8,%edx
  0x000001a89c984c0f: cmp    $0x0,%edx
  0x000001a89c984c12: je     0x000001a89c985239
  0x000001a89c984c18: mov    0xb0(%rsp),%rax
  0x000001a89c984c20: movabs $0x1a8b759fbf0,%r8  ;   {metadata(method data for {method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c984c2a: addq   $0x1,0x138(%r8)
  0x000001a89c984c32: mov    0xbc(%rsp),%r8d
  0x000001a89c984c3a: mov    0xb0(%rsp),%rdx    ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@30

  0x000001a89c984c42: nopl   0x0(%rax,%rax,1)
  0x000001a89c984c47: callq  0x000001a89c407000  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*invokespecial append {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@30
                                                ;   {optimized virtual_call}
  0x000001a89c984c4c: mov    0xb0(%rsp),%rax
  0x000001a89c984c54: movabs $0x1a8b7595f80,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984c5e: addq   $0x1,0x210(%rdx)
  0x000001a89c984c66: movabs $0x1a8b75a0318,%rdx  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984c70: mov    0xfc(%rdx),%esi
  0x000001a89c984c76: add    $0x8,%esi
  0x000001a89c984c79: mov    %esi,0xfc(%rdx)
  0x000001a89c984c7f: and    $0x7ffff8,%esi
  0x000001a89c984c85: cmp    $0x0,%esi
  0x000001a89c984c88: je     0x000001a89c98525a
  0x000001a89c984c8e: mov    0xb0(%rsp),%rax
  0x000001a89c984c96: movabs $0x1a8b75a0318,%rdx  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984ca0: addq   $0x1,0x138(%rdx)
  0x000001a89c984ca8: movabs $0x1a8b7535a68,%rdx  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c984cb2: mov    0xfc(%rdx),%esi
  0x000001a89c984cb8: add    $0x8,%esi
  0x000001a89c984cbb: mov    %esi,0xfc(%rdx)
  0x000001a89c984cc1: and    $0x7ffff8,%esi
  0x000001a89c984cc7: cmp    $0x0,%esi
  0x000001a89c984cca: je     0x000001a89c98527b
  0x000001a89c984cd0: movabs $0x1a8b7535a68,%rdx  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c984cda: incl   0x148(%rdx)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@3
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984ce0: mov    0xb0(%rsp),%rax
  0x000001a89c984ce8: movsbl 0x10(%rax),%edx    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@7
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984cec: cmp    $0x0,%edx
  0x000001a89c984cef: movabs $0x1a8b7535a68,%rdx  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c984cf9: movabs $0x158,%rsi
  0x000001a89c984d03: jne    0x000001a89c984d13
  0x000001a89c984d09: movabs $0x168,%rsi
  0x000001a89c984d13: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c984d17: lea    0x1(%rdi),%rdi
  0x000001a89c984d1b: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c984d1f: jne    0x000001a89c984d3f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@10
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d25: movabs $0x1a8b7535a68,%rdx  ;   {metadata(method data for {method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c984d2f: incl   0x178(%rdx)
  0x000001a89c984d35: mov    $0x1,%edx
  0x000001a89c984d3a: jmpq   0x000001a89c984d44  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@14
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d3f: mov    $0x0,%edx          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.AbstractStringBuilder::isLatin1@18
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d44: and    $0x1,%edx
  0x000001a89c984d47: cmp    $0x0,%edx
  0x000001a89c984d4a: movabs $0x1a8b75a0318,%rdx  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984d54: movabs $0x170,%rsi
  0x000001a89c984d5e: je     0x000001a89c984d6e
  0x000001a89c984d64: movabs $0x180,%rsi
  0x000001a89c984d6e: mov    (%rdx,%rsi,1),%rdi
  0x000001a89c984d72: lea    0x1(%rdi),%rdi
  0x000001a89c984d76: mov    %rdi,(%rdx,%rsi,1)
  0x000001a89c984d7a: je     0x000001a89c984f1f  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@4
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d80: mov    0x14(%rax),%r8d
  0x000001a89c984d84: shl    $0x3,%r8           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@8
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d88: mov    0xc(%rax),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@13
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984d8c: movabs $0x1a8b75a0318,%rdx  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984d96: addq   $0x1,0x190(%rdx)
  0x000001a89c984d9e: movabs $0x1a8b75a0520,%rdx  ;   {metadata(method data for {method} {0x000001a8b7266448} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000001a89c984da8: mov    0xfc(%rdx),%esi
  0x000001a89c984dae: add    $0x8,%esi
  0x000001a89c984db1: mov    %esi,0xfc(%rdx)
  0x000001a89c984db7: and    $0x7ffff8,%esi
  0x000001a89c984dbd: cmp    $0x0,%esi
  0x000001a89c984dc0: je     0x000001a89c98529c
  0x000001a89c984dc6: movabs $0x7c0001678,%rdx  ;   {metadata('java/lang/String')}
  0x000001a89c984dd0: mov    0x80(%r15),%rax
  0x000001a89c984dd7: lea    0x18(%rax),%rdi
  0x000001a89c984ddb: cmp    0x90(%r15),%rdi
  0x000001a89c984de2: ja     0x000001a89c9852bd
  0x000001a89c984de8: mov    %rdi,0x80(%r15)
  0x000001a89c984def: mov    0xb0(%rdx),%rcx
  0x000001a89c984df6: mov    %rcx,(%rax)
  0x000001a89c984df9: mov    %rdx,%rcx
  0x000001a89c984dfc: shr    $0x3,%rcx
  0x000001a89c984e00: mov    %ecx,0x8(%rax)
  0x000001a89c984e03: xor    %rcx,%rcx
  0x000001a89c984e06: mov    %ecx,0xc(%rax)
  0x000001a89c984e09: xor    %rcx,%rcx
  0x000001a89c984e0c: mov    %rcx,0x10(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984e10: movabs $0x1a8b75a0520,%rdx  ;   {metadata(method data for {method} {0x000001a8b7266448} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000001a89c984e1a: addq   $0x1,0x138(%rdx)
  0x000001a89c984e22: mov    %r8,%rdx
  0x000001a89c984e25: mov    $0x0,%r8d          ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@9
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984e2b: mov    %rax,0xc8(%rsp)
  0x000001a89c984e33: nopl   0x0(%rax)
  0x000001a89c984e37: callq  0x000001a89c407500  ; ImmutableOopMap{[192]=Oop [200]=Oop }
                                                ;*invokestatic copyOfRange {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@9
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {static_call}
  0x000001a89c984e3c: mov    0xc8(%rsp),%rdx
  0x000001a89c984e44: movabs $0x1a8b75a0520,%r8  ;   {metadata(method data for {method} {0x000001a8b7266448} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000001a89c984e4e: addq   $0x1,0x148(%r8)
  0x000001a89c984e56: movabs $0x1a8b7546b58,%rdx  ;   {metadata(method data for {method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c984e60: mov    0xfc(%rdx),%r8d
  0x000001a89c984e67: add    $0x8,%r8d
  0x000001a89c984e6b: mov    %r8d,0xfc(%rdx)
  0x000001a89c984e72: and    $0x7ffff8,%r8d
  0x000001a89c984e79: cmp    $0x0,%r8d
  0x000001a89c984e7d: je     0x000001a89c9852ca
  0x000001a89c984e83: mov    0xc8(%rsp),%rdx
  0x000001a89c984e8b: movabs $0x1a8b7546b58,%r8  ;   {metadata(method data for {method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c984e95: addq   $0x1,0x138(%r8)
  0x000001a89c984e9d: movabs $0x1a8b73432f0,%rdx  ;   {metadata(method data for {method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c984ea7: mov    0xfc(%rdx),%r8d
  0x000001a89c984eae: add    $0x8,%r8d
  0x000001a89c984eb2: mov    %r8d,0xfc(%rdx)
  0x000001a89c984eb9: and    $0x7ffff8,%r8d
  0x000001a89c984ec0: cmp    $0x0,%r8d
  0x000001a89c984ec4: je     0x000001a89c9852eb
  0x000001a89c984eca: movsbl 0x398(%r15),%edx
  0x000001a89c984ed2: cmp    $0x0,%edx
  0x000001a89c984ed5: mov    0xc8(%rsp),%rdx
  0x000001a89c984edd: jne    0x000001a89c98530c
  0x000001a89c984ee3: mov    %rax,%r10
  0x000001a89c984ee6: shr    $0x3,%r10
  0x000001a89c984eea: mov    %r10d,0xc(%rdx)
  0x000001a89c984eee: mov    %rdx,%r8
  0x000001a89c984ef1: xor    %rax,%r8
  0x000001a89c984ef4: shr    $0x14,%r8
  0x000001a89c984ef8: cmp    $0x0,%r8
  0x000001a89c984efc: jne    0x000001a89c98532c  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@6
                                                ; - java.lang.StringLatin1::newString@13
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f02: movb   $0x0,0x14(%rdx)    ;*putfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::<init>@11
                                                ; - java.lang.StringLatin1::newString@13
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f06: movabs $0x1a8b75a0318,%r8  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984f10: incl   0x1a0(%r8)
  0x000001a89c984f17: mov    %rdx,%rax
  0x000001a89c984f1a: jmpq   0x000001a89c985133  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@19
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f1f: mov    0x14(%rax),%edx
  0x000001a89c984f22: shl    $0x3,%rdx          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@23
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f26: mov    0xc(%rax),%r9d     ;*getfield count {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@28
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f2a: movabs $0x1a8b75a0318,%r8  ;   {metadata(method data for {method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c984f34: addq   $0x1,0x1b8(%r8)
  0x000001a89c984f3c: mov    $0x0,%r8d          ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@31
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f42: nopl   0x0(%rax,%rax,1)
  0x000001a89c984f47: callq  0x000001a89c407500  ; ImmutableOopMap{[192]=Oop }
                                                ;*invokestatic newString {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@31
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {static_call}
  0x000001a89c984f4c: jmpq   0x000001a89c985133  ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringBuilder::toString@34
                                                ; - java.util.Arrays::copyOfRange@33

  0x000001a89c984f51: mov    %r8d,0xb8(%rsp)
  0x000001a89c984f59: mov    %r13,%rbx
  0x000001a89c984f5c: movabs $0x7c0000790,%rdx  ;   {metadata({type array byte})}
  0x000001a89c984f66: movslq %ebx,%rbx
  0x000001a89c984f69: mov    %rbx,%rdi
  0x000001a89c984f6c: cmp    $0xffffff,%rbx
  0x000001a89c984f73: ja     0x000001a89c985344
  0x000001a89c984f79: movabs $0x17,%rsi
  0x000001a89c984f83: lea    (%rsi,%rbx,1),%rsi
  0x000001a89c984f87: and    $0xfffffffffffffff8,%rsi
  0x000001a89c984f8b: mov    0x80(%r15),%rax
  0x000001a89c984f92: lea    (%rax,%rsi,1),%rsi
  0x000001a89c984f96: cmp    0x90(%r15),%rsi
  0x000001a89c984f9d: ja     0x000001a89c985344
  0x000001a89c984fa3: mov    %rsi,0x80(%r15)
  0x000001a89c984faa: sub    %rax,%rsi
  0x000001a89c984fad: movq   $0x1,(%rax)
  0x000001a89c984fb4: mov    %rdx,%rcx
  0x000001a89c984fb7: shr    $0x3,%rcx
  0x000001a89c984fbb: mov    %ecx,0x8(%rax)
  0x000001a89c984fbe: mov    %ebx,0xc(%rax)
  0x000001a89c984fc1: sub    $0x10,%rsi
  0x000001a89c984fc5: je     0x000001a89c984fe5
  0x000001a89c984fcb: test   %rsi,%rsi
  0x000001a89c984fce: je     0x000001a89c984fe5
  0x000001a89c984fd4: xor    %rbx,%rbx
  0x000001a89c984fd7: shr    $0x3,%rsi
  0x000001a89c984fdb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000001a89c984fe0: dec    %rsi
  0x000001a89c984fe3: jne    0x000001a89c984fdb  ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@41

  0x000001a89c984fe5: mov    0xc(%r11),%edx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@51
                                                ; implicit exception: dispatches to 0x000001a89c98534e
  0x000001a89c984fe9: sub    0xb8(%rsp),%edx
  0x000001a89c984ff0: movabs $0x1a8b7595f80,%r8  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c984ffa: addq   $0x1,0x258(%r8)
  0x000001a89c985002: movabs $0x1a8b74f43d8,%r8  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c98500c: mov    0xfc(%r8),%r9d
  0x000001a89c985013: add    $0x8,%r9d
  0x000001a89c985017: mov    %r9d,0xfc(%r8)
  0x000001a89c98501e: and    $0x7ffff8,%r9d
  0x000001a89c985025: cmp    $0x0,%r9d
  0x000001a89c985029: je     0x000001a89c985353
  0x000001a89c98502f: cmp    %r13d,%edx
  0x000001a89c985032: movabs $0x1a8b74f43d8,%r8  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c98503c: movabs $0x138,%r9
  0x000001a89c985046: jg     0x000001a89c985056
  0x000001a89c98504c: movabs $0x148,%r9
  0x000001a89c985056: mov    (%r8,%r9,1),%rdi
  0x000001a89c98505a: lea    0x1(%rdi),%rdi
  0x000001a89c98505e: mov    %rdi,(%r8,%r9,1)
  0x000001a89c985062: jg     0x000001a89c985081  ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@2
                                                ; - java.util.Arrays::copyOfRange@55

  0x000001a89c985068: movabs $0x1a8b74f43d8,%r8  ;   {metadata(method data for {method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c985072: incl   0x158(%r8)
  0x000001a89c985079: mov    %rdx,%rsi
  0x000001a89c98507c: jmpq   0x000001a89c985084  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@6
                                                ; - java.util.Arrays::copyOfRange@55

  0x000001a89c985081: mov    %r13,%rsi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::min@10
                                                ; - java.util.Arrays::copyOfRange@55

  0x000001a89c985084: mov    0xb8(%rsp),%r8d
  0x000001a89c98508c: movabs $0x1a8b7595f80,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c985096: addq   $0x1,0x268(%rdx)
  0x000001a89c98509e: mov    %r11,%rdx
  0x000001a89c9850a1: mov    %rax,%r9
  0x000001a89c9850a4: mov    $0x0,%edi
  0x000001a89c9850a9: mov    %rax,0xd0(%rsp)
  0x000001a89c9850b1: test   %r8d,%r8d
  0x000001a89c9850b4: jl     0x000001a89c985374
  0x000001a89c9850ba: lea    (%r8,%rsi,1),%rcx
  0x000001a89c9850be: cmp    0xc(%rdx),%ecx
  0x000001a89c9850c1: ja     0x000001a89c985374
  0x000001a89c9850c7: lea    (%rdi,%rsi,1),%rcx
  0x000001a89c9850cb: cmp    0xc(%r9),%ecx
  0x000001a89c9850cf: ja     0x000001a89c985374
  0x000001a89c9850d5: test   %esi,%esi
  0x000001a89c9850d7: jl     0x000001a89c985374
  0x000001a89c9850dd: movslq %r8d,%r8
  0x000001a89c9850e0: movslq %edi,%rdi
  0x000001a89c9850e3: lea    0x10(%rdx,%r8,1),%rcx
  0x000001a89c9850e8: lea    0x10(%r9,%rdi,1),%rdx
  0x000001a89c9850ed: mov    %rsi,%r8
  0x000001a89c9850f0: sub    $0x20,%rsp
  0x000001a89c9850f4: test   $0xf,%esp
  0x000001a89c9850fa: je     0x000001a89c985112
  0x000001a89c985100: sub    $0x8,%rsp
  0x000001a89c985104: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000001a89c985109: add    $0x8,%rsp
  0x000001a89c98510d: jmpq   0x000001a89c985117
  0x000001a89c985112: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call StubRoutines (2)}
  0x000001a89c985117: add    $0x20,%rsp         ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@58

  0x000001a89c98511b: mov    0xd0(%rsp),%rax
  0x000001a89c985123: add    $0xe0,%rsp
  0x000001a89c98512a: pop    %rbp
  0x000001a89c98512b: mov    0x70(%r15),%r10
  0x000001a89c98512f: test   %eax,(%r10)        ;   {poll_return}
  0x000001a89c985132: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@63

  0x000001a89c985133: mov    0xc0(%rsp),%rsi
  0x000001a89c98513b: mov    %rsi,%r8
  0x000001a89c98513e: movabs $0x1a8b7595f80,%rdx  ;   {metadata(method data for {method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c985148: addq   $0x1,0x248(%rdx)
  0x000001a89c985150: mov    %rax,%r8
  0x000001a89c985153: mov    %rsi,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@36

  0x000001a89c985156: nop
  0x000001a89c985157: callq  0x000001a89c407000  ; ImmutableOopMap{[192]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@36
                                                ;   {optimized virtual_call}
  0x000001a89c98515c: mov    0xc0(%rsp),%rax
  0x000001a89c985164: jmpq   0x000001a89c9853ac
  0x000001a89c985169: movabs $0x1a8b72b9170,%r10  ;   {metadata({method} {0x000001a8b72b9178} 'copyOfRange' '([BII)[B' in 'java/util/Arrays')}
  0x000001a89c985173: mov    %r10,0x8(%rsp)
  0x000001a89c985178: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c985180: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r11=Oop }
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985185: jmpq   0x000001a89c98497a
  0x000001a89c98518a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c985194: mov    $0xa050f00,%eax
  0x000001a89c985199: callq  0x000001a89c4d0a00  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c98519e: jmpq   0x000001a89c9849d0
  0x000001a89c9851a3: mov    %rdx,%rdx
  0x000001a89c9851a6: callq  0x000001a89c4cd400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@8
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c9851ab: jmpq   0x000001a89c984a22
  0x000001a89c9851b0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a89c9851ba: mov    $0xa050f00,%eax
  0x000001a89c9851bf: callq  0x000001a89c4d0a00  ; ImmutableOopMap{rax=Oop [192]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a89c9851c4: jmpq   0x000001a89c984a30
  0x000001a89c9851c9: mov    %rdx,%rdx
  0x000001a89c9851cc: callq  0x000001a89c4cd400  ; ImmutableOopMap{[192]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@12
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c9851d1: jmpq   0x000001a89c984a7a
  0x000001a89c9851d6: movabs $0x1a8b71ff8a0,%r10  ;   {metadata({method} {0x000001a8b71ff8a8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000001a89c9851e0: mov    %r10,0x8(%rsp)
  0x000001a89c9851e5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9851ed: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[192]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9851f2: jmpq   0x000001a89c984ab7
  0x000001a89c9851f7: movabs $0x1a8b7200130,%r10  ;   {metadata({method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c985201: mov    %r10,0x8(%rsp)
  0x000001a89c985206: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c98520e: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985213: jmpq   0x000001a89c984b28
  0x000001a89c985218: movabs $0x1a8b71ffc20,%r10  ;   {metadata({method} {0x000001a8b71ffc28} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c985222: mov    %r10,0x8(%rsp)
  0x000001a89c985227: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c98522f: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@26
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985234: jmpq   0x000001a89c984ba0
  0x000001a89c985239: movabs $0x1a8b7200130,%r10  ;   {metadata({method} {0x000001a8b7200138} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000001a89c985243: mov    %r10,0x8(%rsp)
  0x000001a89c985248: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c985250: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@30
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985255: jmpq   0x000001a89c984c18
  0x000001a89c98525a: movabs $0x1a8b72010b8,%r10  ;   {metadata({method} {0x000001a8b72010c0} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000001a89c985264: mov    %r10,0x8(%rsp)
  0x000001a89c985269: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c985271: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985276: jmpq   0x000001a89c984c8e
  0x000001a89c98527b: movabs $0x1a8b71fdd90,%r10  ;   {metadata({method} {0x000001a8b71fdd98} 'isLatin1' '()Z' in 'java/lang/AbstractStringBuilder')}
  0x000001a89c985285: mov    %r10,0x8(%rsp)
  0x000001a89c98528a: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c985292: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[176]=Oop [192]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::isLatin1@-1
                                                ; - java.lang.StringBuilder::toString@1
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985297: jmpq   0x000001a89c984cd0
  0x000001a89c98529c: movabs $0x1a8b7266440,%r10  ;   {metadata({method} {0x000001a8b7266448} 'newString' '([BII)Ljava/lang/String;' in 'java/lang/StringLatin1')}
  0x000001a89c9852a6: mov    %r10,0x8(%rsp)
  0x000001a89c9852ab: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9852b3: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[192]=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::newString@-1
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9852b8: jmpq   0x000001a89c984dc6
  0x000001a89c9852bd: mov    %rdx,%rdx
  0x000001a89c9852c0: callq  0x000001a89c4cd400  ; ImmutableOopMap{[192]=Oop r8=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::newString@0
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a89c9852c5: jmpq   0x000001a89c984e10
  0x000001a89c9852ca: movabs $0x1a8b7177d28,%r10  ;   {metadata({method} {0x000001a8b7177d30} '<init>' '([BB)V' in 'java/lang/String')}
  0x000001a89c9852d4: mov    %r10,0x8(%rsp)
  0x000001a89c9852d9: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c9852e1: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1
                                                ; - java.lang.StringLatin1::newString@13
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c9852e6: jmpq   0x000001a89c984e83
  0x000001a89c9852eb: movabs $0x1a8b7170588,%r10  ;   {metadata({method} {0x000001a8b7170590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a89c9852f5: mov    %r10,0x8(%rsp)
  0x000001a89c9852fa: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c985302: callq  0x000001a89c4d1f80  ; ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.lang.String::<init>@1
                                                ; - java.lang.StringLatin1::newString@13
                                                ; - java.lang.StringBuilder::toString@16
                                                ; - java.util.Arrays::copyOfRange@33
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c985307: jmpq   0x000001a89c984eca
  0x000001a89c98530c: mov    0xc(%rdx),%r8d
  0x000001a89c985310: shl    $0x3,%r8
  0x000001a89c985314: cmp    $0x0,%r8
  0x000001a89c985318: je     0x000001a89c984ee3
  0x000001a89c98531e: mov    %r8,(%rsp)
  0x000001a89c985322: callq  0x000001a89c4d1780  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a89c985327: jmpq   0x000001a89c984ee3
  0x000001a89c98532c: cmp    $0x0,%rax
  0x000001a89c985330: je     0x000001a89c984f02
  0x000001a89c985336: mov    %rdx,(%rsp)
  0x000001a89c98533a: callq  0x000001a89c4d1a80  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a89c98533f: jmpq   0x000001a89c984f02
  0x000001a89c985344: callq  0x000001a89c4cda00  ; ImmutableOopMap{r11=Oop }
                                                ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@41
                                                ;   {runtime_call new_type_array Runtime1 stub}
  0x000001a89c985349: jmpq   0x000001a89c984fe5
  0x000001a89c98534e: callq  0x000001a89c4ccba0  ; ImmutableOopMap{r11=Oop rax=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@51
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a89c985353: movabs $0x1a8b72c3720,%r10  ;   {metadata({method} {0x000001a8b72c3728} 'min' '(II)I' in 'java/lang/Math')}
  0x000001a89c98535d: mov    %r10,0x8(%rsp)
  0x000001a89c985362: movq   $0xffffffffffffffff,(%rsp)
  0x000001a89c98536a: callq  0x000001a89c4d1f80  ; ImmutableOopMap{r11=Oop rax=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ; - java.util.Arrays::copyOfRange@55
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a89c98536f: jmpq   0x000001a89c98502f
  0x000001a89c985374: data16 xchg %ax,%ax
  0x000001a89c985377: callq  0x000001a89c407500  ; ImmutableOopMap{[208]=Oop }
                                                ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.Arrays::copyOfRange@58
                                                ;   {static_call}
  0x000001a89c98537c: jmpq   0x000001a89c98511b
  0x000001a89c985381: nop
  0x000001a89c985382: nop
  0x000001a89c985383: mov    0x350(%r15),%rax
  0x000001a89c98538a: movabs $0x0,%r10
  0x000001a89c985394: mov    %r10,0x350(%r15)
  0x000001a89c98539b: movabs $0x0,%r10
  0x000001a89c9853a5: mov    %r10,0x358(%r15)
  0x000001a89c9853ac: add    $0xe0,%rsp
  0x000001a89c9853b3: pop    %rbp
  0x000001a89c9853b4: jmpq   0x000001a89c43f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a89c9853b9: hlt    
  0x000001a89c9853ba: hlt    
  0x000001a89c9853bb: hlt    
  0x000001a89c9853bc: hlt    
  0x000001a89c9853bd: hlt    
  0x000001a89c9853be: hlt    
  0x000001a89c9853bf: hlt    
[Stub Code]
  0x000001a89c9853c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a89c9853c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9853cf: jmpq   0x000001a89c9853cf  ;   {runtime_call}
  0x000001a89c9853d4: nop
  0x000001a89c9853d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9853df: jmpq   0x000001a89c9853df  ;   {runtime_call}
  0x000001a89c9853e4: nop
  0x000001a89c9853e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9853ef: jmpq   0x000001a89c9853ef  ;   {runtime_call}
  0x000001a89c9853f4: nop
  0x000001a89c9853f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c9853ff: jmpq   0x000001a89c9853ff  ;   {runtime_call}
  0x000001a89c985404: nop
  0x000001a89c985405: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98540f: jmpq   0x000001a89c98540f  ;   {runtime_call}
  0x000001a89c985414: nop
  0x000001a89c985415: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98541f: jmpq   0x000001a89c98541f  ;   {runtime_call}
  0x000001a89c985424: nop
  0x000001a89c985425: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98542f: jmpq   0x000001a89c98542f  ;   {runtime_call}
  0x000001a89c985434: nop
  0x000001a89c985435: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a89c98543f: jmpq   0x000001a89c98543f  ;   {runtime_call}
[Exception Handler]
  0x000001a89c985444: callq  0x000001a89c4ce800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a89c985449: mov    %rsp,-0x28(%rsp)
  0x000001a89c98544e: sub    $0x80,%rsp
  0x000001a89c985455: mov    %rax,0x78(%rsp)
  0x000001a89c98545a: mov    %rcx,0x70(%rsp)
  0x000001a89c98545f: mov    %rdx,0x68(%rsp)
  0x000001a89c985464: mov    %rbx,0x60(%rsp)
  0x000001a89c985469: mov    %rbp,0x50(%rsp)
  0x000001a89c98546e: mov    %rsi,0x48(%rsp)
  0x000001a89c985473: mov    %rdi,0x40(%rsp)
  0x000001a89c985478: mov    %r8,0x38(%rsp)
  0x000001a89c98547d: mov    %r9,0x30(%rsp)
  0x000001a89c985482: mov    %r10,0x28(%rsp)
  0x000001a89c985487: mov    %r11,0x20(%rsp)
  0x000001a89c98548c: mov    %r12,0x18(%rsp)
  0x000001a89c985491: mov    %r13,0x10(%rsp)
  0x000001a89c985496: mov    %r14,0x8(%rsp)
  0x000001a89c98549b: mov    %r15,(%rsp)
  0x000001a89c98549f: movabs $0x541d44e8,%rcx   ;   {external_word}
  0x000001a89c9854a9: movabs $0x1a89c985449,%rdx  ;   {internal_word}
  0x000001a89c9854b3: mov    %rsp,%r8
  0x000001a89c9854b6: and    $0xfffffffffffffff0,%rsp
  0x000001a89c9854ba: movabs $0x53f27850,%r10   ;   {runtime_call}
  0x000001a89c9854c4: callq  *%r10
  0x000001a89c9854c7: hlt    
[Deopt Handler Code]
  0x000001a89c9854c8: movabs $0x1a89c9854c8,%r10  ;   {section_word}
  0x000001a89c9854d2: push   %r10
  0x000001a89c9854d4: jmpq   0x000001a89c408620  ;   {runtime_call DeoptimizationBlob}
  0x000001a89c9854d9: hlt    
  0x000001a89c9854da: hlt    
  0x000001a89c9854db: hlt    
  0x000001a89c9854dc: hlt    
  0x000001a89c9854dd: hlt    
  0x000001a89c9854de: hlt    
  0x000001a89c9854df: hlt    

ImmutableOopMap{[176]=Oop [192]=Oop }pc offsets: 420 540 660 780 
ImmutableOopMap{[192]=Oop [200]=Oop }pc offsets: 1276 
ImmutableOopMap{[192]=Oop }pc offsets: 1548 2076 
ImmutableOopMap{r11=Oop }pc offsets: 2117 
ImmutableOopMap{}pc offsets: 2142 2155 
ImmutableOopMap{rax=Oop [192]=Oop }pc offsets: 2180 
ImmutableOopMap{[192]=Oop }pc offsets: 2193 
ImmutableOopMap{[192]=Oop rax=Oop }pc offsets: 2226 
ImmutableOopMap{[176]=Oop [192]=Oop }pc offsets: 2259 2292 2325 2358 2391 
ImmutableOopMap{[192]=Oop r8=Oop }pc offsets: 2424 2437 
ImmutableOopMap{[192]=Oop [200]=Oop rax=Oop }pc offsets: 2470 2503 
ImmutableOopMap{r11=Oop }pc offsets: 2569 
ImmutableOopMap{r11=Oop rax=Oop }pc offsets: 2579 2607 
ImmutableOopMap{[208]=Oop }pc offsets: 2620 