Loaded disassembler from hsdis-amd64.dll
Decoding compiled method 0x00000000033c0250:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000000033c03e0: mov    0x8(%rdx),%r10d
  0x00000000033c03e4: shl    $0x3,%r10
  0x00000000033c03e8: cmp    %rax,%r10
  0x00000000033c03eb: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033c03f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033c03fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033c0400: mov    %eax,-0x6000(%rsp)
  0x00000000033c0407: push   %rbp
  0x00000000033c0408: sub    $0x30,%rsp
  0x00000000033c040c: movabs $0x1c0fdf78,%rax   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0416: mov    0xdc(%rax),%esi
  0x00000000033c041c: add    $0x8,%esi
  0x00000000033c041f: mov    %esi,0xdc(%rax)
  0x00000000033c0425: movabs $0x1bf143e0,%rax   ;   {metadata({method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c042f: and    $0x1ff8,%esi
  0x00000000033c0435: cmp    $0x0,%esi
  0x00000000033c0438: je     0x00000000033c080e  ;*aload_0
                                                ; - java.lang.String::equals@0

  0x00000000033c043e: cmp    %r8,%rdx
  0x00000000033c0441: movabs $0x1c0fdf78,%rax   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c044b: movabs $0x108,%rsi
  0x00000000033c0455: jne    0x00000000033c0465
  0x00000000033c045b: movabs $0x118,%rsi
  0x00000000033c0465: mov    (%rax,%rsi,1),%rdi
  0x00000000033c0469: lea    0x1(%rdi),%rdi
  0x00000000033c046d: mov    %rdi,(%rax,%rsi,1)
  0x00000000033c0471: je     0x00000000033c07fd  ;*if_acmpne
                                                ; - java.lang.String::equals@2

  0x00000000033c0477: cmp    $0x0,%r8
  0x00000000033c047b: jne    0x00000000033c0496
  0x00000000033c047d: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0487: orl    $0x100,0x120(%rdi)
  0x00000000033c0491: jmpq   0x00000000033c0558
  0x00000000033c0496: movabs $0x7c00016d0,%rbx  ;   {metadata('java/lang/String')}
  0x00000000033c04a0: mov    0x8(%r8),%esi
  0x00000000033c04a4: shl    $0x3,%rsi
  0x00000000033c04a8: cmp    %rsi,%rbx
  0x00000000033c04ab: jne    0x00000000033c053c
  0x00000000033c04b1: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c04bb: mov    0x8(%r8),%ebx
  0x00000000033c04bf: shl    $0x3,%rbx
  0x00000000033c04c3: cmp    0x130(%rdi),%rbx
  0x00000000033c04ca: jne    0x00000000033c04d9
  0x00000000033c04cc: addq   $0x1,0x138(%rdi)
  0x00000000033c04d4: jmpq   0x00000000033c055d
  0x00000000033c04d9: cmp    0x140(%rdi),%rbx
  0x00000000033c04e0: jne    0x00000000033c04ef
  0x00000000033c04e2: addq   $0x1,0x148(%rdi)
  0x00000000033c04ea: jmpq   0x00000000033c055d
  0x00000000033c04ef: cmpq   $0x0,0x130(%rdi)
  0x00000000033c04fa: jne    0x00000000033c0513
  0x00000000033c04fc: mov    %rbx,0x130(%rdi)
  0x00000000033c0503: movq   $0x1,0x138(%rdi)
  0x00000000033c050e: jmpq   0x00000000033c055d
  0x00000000033c0513: cmpq   $0x0,0x140(%rdi)
  0x00000000033c051e: jne    0x00000000033c0537
  0x00000000033c0520: mov    %rbx,0x140(%rdi)
  0x00000000033c0527: movq   $0x1,0x148(%rdi)
  0x00000000033c0532: jmpq   0x00000000033c055d
  0x00000000033c0537: jmpq   0x00000000033c055d
  0x00000000033c053c: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0546: subq   $0x1,0x128(%rdi)
  0x00000000033c054e: jmpq   0x00000000033c0558
  0x00000000033c0553: jmpq   0x00000000033c055d
  0x00000000033c0558: xor    %rax,%rax
  0x00000000033c055b: jmp    0x00000000033c0567
  0x00000000033c055d: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8

  0x00000000033c0567: cmp    $0x0,%eax
  0x00000000033c056a: movabs $0x1c0fdf78,%rax   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0574: movabs $0x158,%rsi
  0x00000000033c057e: je     0x00000000033c058e
  0x00000000033c0584: movabs $0x168,%rsi
  0x00000000033c058e: mov    (%rax,%rsi,1),%rdi
  0x00000000033c0592: lea    0x1(%rdi),%rdi
  0x00000000033c0596: mov    %rdi,(%rax,%rsi,1)
  0x00000000033c059a: je     0x00000000033c07ec  ;*ifeq
                                                ; - java.lang.String::equals@11

  0x00000000033c05a0: cmp    $0x0,%r8
  0x00000000033c05a4: jne    0x00000000033c05bf
  0x00000000033c05a6: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c05b0: orl    $0x100,0x170(%rdi)
  0x00000000033c05ba: jmpq   0x00000000033c0681
  0x00000000033c05bf: movabs $0x7c00016d0,%rbx  ;   {metadata('java/lang/String')}
  0x00000000033c05c9: mov    0x8(%r8),%esi
  0x00000000033c05cd: shl    $0x3,%rsi
  0x00000000033c05d1: cmp    %rsi,%rbx
  0x00000000033c05d4: jne    0x00000000033c0665
  0x00000000033c05da: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c05e4: mov    0x8(%r8),%ebx
  0x00000000033c05e8: shl    $0x3,%rbx
  0x00000000033c05ec: cmp    0x180(%rdi),%rbx
  0x00000000033c05f3: jne    0x00000000033c0602
  0x00000000033c05f5: addq   $0x1,0x188(%rdi)
  0x00000000033c05fd: jmpq   0x00000000033c0681
  0x00000000033c0602: cmp    0x190(%rdi),%rbx
  0x00000000033c0609: jne    0x00000000033c0618
  0x00000000033c060b: addq   $0x1,0x198(%rdi)
  0x00000000033c0613: jmpq   0x00000000033c0681
  0x00000000033c0618: cmpq   $0x0,0x180(%rdi)
  0x00000000033c0623: jne    0x00000000033c063c
  0x00000000033c0625: mov    %rbx,0x180(%rdi)
  0x00000000033c062c: movq   $0x1,0x188(%rdi)
  0x00000000033c0637: jmpq   0x00000000033c0681
  0x00000000033c063c: cmpq   $0x0,0x190(%rdi)
  0x00000000033c0647: jne    0x00000000033c0660
  0x00000000033c0649: mov    %rbx,0x190(%rdi)
  0x00000000033c0650: movq   $0x1,0x198(%rdi)
  0x00000000033c065b: jmpq   0x00000000033c0681
  0x00000000033c0660: jmpq   0x00000000033c0681
  0x00000000033c0665: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c066f: subq   $0x1,0x178(%rdi)
  0x00000000033c0677: jmpq   0x00000000033c0825
  0x00000000033c067c: jmpq   0x00000000033c0681
  0x00000000033c0681: mov    %r8,%rax           ;*checkcast
                                                ; - java.lang.String::equals@15

  0x00000000033c0684: mov    0xc(%rdx),%esi
  0x00000000033c0687: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20

  0x00000000033c068b: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23
                                                ; implicit exception: dispatches to 0x00000000033c082e
  0x00000000033c068e: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00000000033c0833
  0x00000000033c0691: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27

  0x00000000033c0695: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30
                                                ; implicit exception: dispatches to 0x00000000033c0838
  0x00000000033c0698: cmp    %ebx,%edi
  0x00000000033c069a: movabs $0x1c0fdf78,%rbx   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c06a4: movabs $0x1a8,%rdx
  0x00000000033c06ae: jne    0x00000000033c06be
  0x00000000033c06b4: movabs $0x1b8,%rdx
  0x00000000033c06be: mov    (%rbx,%rdx,1),%rcx
  0x00000000033c06c2: lea    0x1(%rcx),%rcx
  0x00000000033c06c6: mov    %rcx,(%rbx,%rdx,1)
  0x00000000033c06ca: jne    0x00000000033c07ec  ;*if_icmpne
                                                ; - java.lang.String::equals@31

  0x00000000033c06d0: mov    $0x0,%ebx
  0x00000000033c06d5: jmpq   0x00000000033c0787  ;*iload_3
                                                ; - java.lang.String::equals@49

  0x00000000033c06da: nopw   0x0(%rax,%rax,1)
  0x00000000033c06e0: movslq %ebx,%rdi
  0x00000000033c06e3: cmp    0xc(%rsi),%ebx
  0x00000000033c06e6: jae    0x00000000033c083d
  0x00000000033c06ec: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60

  0x00000000033c06f1: movslq %ebx,%rcx
  0x00000000033c06f4: cmp    0xc(%rax),%ebx
  0x00000000033c06f7: jae    0x00000000033c0846
  0x00000000033c06fd: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65

  0x00000000033c0702: cmp    %ecx,%edi
  0x00000000033c0704: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c070e: movabs $0x1e8,%rcx
  0x00000000033c0718: je     0x00000000033c0728
  0x00000000033c071e: movabs $0x1f8,%rcx
  0x00000000033c0728: mov    (%rdi,%rcx,1),%r8
  0x00000000033c072c: lea    0x1(%r8),%r8
  0x00000000033c0730: mov    %r8,(%rdi,%rcx,1)
  0x00000000033c0734: jne    0x00000000033c07ca  ;*if_icmpeq
                                                ; - java.lang.String::equals@66

  0x00000000033c073a: inc    %ebx
  0x00000000033c073c: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0746: mov    0xe0(%rdi),%ecx
  0x00000000033c074c: add    $0x8,%ecx
  0x00000000033c074f: mov    %ecx,0xe0(%rdi)
  0x00000000033c0755: movabs $0x1bf143e0,%rdi   ;   {metadata({method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c075f: and    $0xfff8,%ecx
  0x00000000033c0765: cmp    $0x0,%ecx
  0x00000000033c0768: je     0x00000000033c084f  ; OopMap{rax=Oop rsi=Oop off=910}
                                                ;*goto
                                                ; - java.lang.String::equals@74

  0x00000000033c076e: test   %eax,-0x730674(%rip)        # 0x0000000002c90100
                                                ;   {poll}
  0x00000000033c0774: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c077e: incl   0x208(%rdi)
  0x00000000033c0784: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74

  0x00000000033c0787: mov    %rdi,%rdx
  0x00000000033c078a: dec    %edx
  0x00000000033c078c: cmp    $0x0,%edi
  0x00000000033c078f: movabs $0x1c0fdf78,%rdi   ;   {metadata(method data for {method} {0x000000001bf143e8} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000000033c0799: movabs $0x1c8,%rcx
  0x00000000033c07a3: je     0x00000000033c07b3
  0x00000000033c07a9: movabs $0x1d8,%rcx
  0x00000000033c07b3: mov    (%rdi,%rcx,1),%r8
  0x00000000033c07b7: lea    0x1(%r8),%r8
  0x00000000033c07bb: mov    %r8,(%rdi,%rcx,1)
  0x00000000033c07bf: je     0x00000000033c07db
  0x00000000033c07c5: jmpq   0x00000000033c06e0  ;*ifeq
                                                ; - java.lang.String::equals@53

  0x00000000033c07ca: mov    $0x0,%eax
  0x00000000033c07cf: add    $0x30,%rsp
  0x00000000033c07d3: pop    %rbp
  0x00000000033c07d4: test   %eax,-0x7306da(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c07da: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70

  0x00000000033c07db: mov    $0x1,%eax
  0x00000000033c07e0: add    $0x30,%rsp
  0x00000000033c07e4: pop    %rbp
  0x00000000033c07e5: test   %eax,-0x7306eb(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c07eb: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78

  0x00000000033c07ec: mov    $0x0,%eax
  0x00000000033c07f1: add    $0x30,%rsp
  0x00000000033c07f5: pop    %rbp
  0x00000000033c07f6: test   %eax,-0x7306fc(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c07fc: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80

  0x00000000033c07fd: mov    $0x1,%eax
  0x00000000033c0802: add    $0x30,%rsp
  0x00000000033c0806: pop    %rbp
  0x00000000033c0807: test   %eax,-0x73070d(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c080d: retq   
  0x00000000033c080e: mov    %rax,0x8(%rsp)
  0x00000000033c0813: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033c081b: callq  0x00000000033bede0  ; OopMap{rdx=Oop r8=Oop off=1088}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1
                                                ;   {runtime_call}
  0x00000000033c0820: jmpq   0x00000000033c043e
  0x00000000033c0825: mov    %r8,(%rsp)
  0x00000000033c0829: callq  0x00000000033bc900  ; OopMap{rdx=Oop off=1102}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15
                                                ;   {runtime_call}
  0x00000000033c082e: callq  0x00000000033ba700  ; OopMap{rax=Oop rsi=Oop off=1107}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23
                                                ;   {runtime_call}
  0x00000000033c0833: callq  0x00000000033ba700  ; OopMap{rsi=Oop off=1112}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27
                                                ;   {runtime_call}
  0x00000000033c0838: callq  0x00000000033ba700  ; OopMap{rsi=Oop rax=Oop off=1117}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30
                                                ;   {runtime_call}
  0x00000000033c083d: mov    %rbx,(%rsp)
  0x00000000033c0841: callq  0x000000000332cc80  ; OopMap{rax=Oop rsi=Oop off=1126}
                                                ;*caload
                                                ; - java.lang.String::equals@60
                                                ;   {runtime_call}
  0x00000000033c0846: mov    %rbx,(%rsp)
  0x00000000033c084a: callq  0x000000000332cc80  ; OopMap{rax=Oop rsi=Oop off=1135}
                                                ;*caload
                                                ; - java.lang.String::equals@65
                                                ;   {runtime_call}
  0x00000000033c084f: mov    %rdi,0x8(%rsp)
  0x00000000033c0854: movq   $0x4a,(%rsp)
  0x00000000033c085c: callq  0x00000000033bede0  ; OopMap{rax=Oop rsi=Oop off=1153}
                                                ;*goto
                                                ; - java.lang.String::equals@74
                                                ;   {runtime_call}
  0x00000000033c0861: jmpq   0x00000000033c076e
  0x00000000033c0866: nop
  0x00000000033c0867: nop
  0x00000000033c0868: mov    0x2a8(%r15),%rax
  0x00000000033c086f: movabs $0x0,%r10
  0x00000000033c0879: mov    %r10,0x2a8(%r15)
  0x00000000033c0880: movabs $0x0,%r10
  0x00000000033c088a: mov    %r10,0x2b0(%r15)
  0x00000000033c0891: add    $0x30,%rsp
  0x00000000033c0895: pop    %rbp
  0x00000000033c0896: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033c089b: hlt    
  0x00000000033c089c: hlt    
  0x00000000033c089d: hlt    
  0x00000000033c089e: hlt    
  0x00000000033c089f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033c08a0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033c08a5: mov    %rsp,-0x28(%rsp)
  0x00000000033c08aa: sub    $0x80,%rsp
  0x00000000033c08b1: mov    %rax,0x78(%rsp)
  0x00000000033c08b6: mov    %rcx,0x70(%rsp)
  0x00000000033c08bb: mov    %rdx,0x68(%rsp)
  0x00000000033c08c0: mov    %rbx,0x60(%rsp)
  0x00000000033c08c5: mov    %rbp,0x50(%rsp)
  0x00000000033c08ca: mov    %rsi,0x48(%rsp)
  0x00000000033c08cf: mov    %rdi,0x40(%rsp)
  0x00000000033c08d4: mov    %r8,0x38(%rsp)
  0x00000000033c08d9: mov    %r9,0x30(%rsp)
  0x00000000033c08de: mov    %r10,0x28(%rsp)
  0x00000000033c08e3: mov    %r11,0x20(%rsp)
  0x00000000033c08e8: mov    %r12,0x18(%rsp)
  0x00000000033c08ed: mov    %r13,0x10(%rsp)
  0x00000000033c08f2: mov    %r14,0x8(%rsp)
  0x00000000033c08f7: mov    %r15,(%rsp)
  0x00000000033c08fb: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033c0905: movabs $0x33c08a5,%rdx    ;   {internal_word}
  0x00000000033c090f: mov    %rsp,%r8
  0x00000000033c0912: and    $0xfffffffffffffff0,%rsp
  0x00000000033c0916: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033c091b: hlt    
[Deopt Handler Code]
  0x00000000033c091c: movabs $0x33c091c,%r10    ;   {section_word}
  0x00000000033c0926: push   %r10
  0x00000000033c0928: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033c092d: hlt    
  0x00000000033c092e: hlt    
  0x00000000033c092f: hlt    
Decoding compiled method 0x00000000033c31d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00000000033c3340: mov    0x8(%rdx),%r10d
  0x00000000033c3344: shl    $0x3,%r10
  0x00000000033c3348: cmp    %rax,%r10
  0x00000000033c334b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033c3351: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033c335c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033c3360: mov    %eax,-0x6000(%rsp)
  0x00000000033c3367: push   %rbp
  0x00000000033c3368: sub    $0x30,%rsp
  0x00000000033c336c: movabs $0x1c0e83e8,%rax   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c3376: mov    0xdc(%rax),%esi
  0x00000000033c337c: add    $0x8,%esi
  0x00000000033c337f: mov    %esi,0xdc(%rax)
  0x00000000033c3385: movabs $0x1bf14d28,%rax   ;   {metadata({method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c338f: and    $0x1ff8,%esi
  0x00000000033c3395: cmp    $0x0,%esi
  0x00000000033c3398: je     0x00000000033c34d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0

  0x00000000033c339e: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1

  0x00000000033c33a1: cmp    $0x0,%eax
  0x00000000033c33a4: movabs $0x1c0e83e8,%rsi   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c33ae: movabs $0x108,%rdi
  0x00000000033c33b8: jne    0x00000000033c33c8
  0x00000000033c33be: movabs $0x118,%rdi
  0x00000000033c33c8: mov    (%rsi,%rdi,1),%rbx
  0x00000000033c33cc: lea    0x1(%rbx),%rbx
  0x00000000033c33d0: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033c33d4: jne    0x00000000033c34c5  ;*ifne
                                                ; - java.lang.String::hashCode@6

  0x00000000033c33da: mov    0xc(%rdx),%esi
  0x00000000033c33dd: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::hashCode@10

  0x00000000033c33e1: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x00000000033c34e8
  0x00000000033c33e4: cmp    $0x0,%edi
  0x00000000033c33e7: movabs $0x1c0e83e8,%rbx   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c33f1: movabs $0x128,%rcx
  0x00000000033c33fb: jle    0x00000000033c340b
  0x00000000033c3401: movabs $0x138,%rcx
  0x00000000033c340b: mov    (%rbx,%rcx,1),%r8
  0x00000000033c340f: lea    0x1(%r8),%r8
  0x00000000033c3413: mov    %r8,(%rbx,%rcx,1)
  0x00000000033c3417: jle    0x00000000033c34c5  ;*ifle
                                                ; - java.lang.String::hashCode@14

  0x00000000033c341d: mov    $0x0,%ebx
  0x00000000033c3422: jmpq   0x00000000033c348a  ;*iload_3
                                                ; - java.lang.String::hashCode@24

  0x00000000033c3427: nop
  0x00000000033c3428: movslq %ebx,%rcx
  0x00000000033c342b: movzwl 0x10(%rsi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39

  0x00000000033c3430: mov    %rax,%r8
  0x00000000033c3433: shl    $0x5,%eax
  0x00000000033c3436: sub    %r8d,%eax
  0x00000000033c3439: add    %ecx,%eax
  0x00000000033c343b: inc    %ebx
  0x00000000033c343d: movabs $0x1c0e83e8,%rcx   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c3447: mov    0xe0(%rcx),%r8d
  0x00000000033c344e: add    $0x8,%r8d
  0x00000000033c3452: mov    %r8d,0xe0(%rcx)
  0x00000000033c3459: movabs $0x1bf14d28,%rcx   ;   {metadata({method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c3463: and    $0xfff8,%r8d
  0x00000000033c346a: cmp    $0x0,%r8d
  0x00000000033c346e: je     0x00000000033c34ed  ; OopMap{rsi=Oop rdx=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45

  0x00000000033c3474: test   %eax,-0x73337a(%rip)        # 0x0000000002c90100
                                                ;   {poll}
  0x00000000033c347a: movabs $0x1c0e83e8,%rcx   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c3484: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45

  0x00000000033c348a: cmp    %edi,%ebx
  0x00000000033c348c: movabs $0x1c0e83e8,%rcx   ;   {metadata(method data for {method} {0x000000001bf14d30} 'hashCode' '()I' in 'java/lang/String')}
  0x00000000033c3496: movabs $0x148,%r8
  0x00000000033c34a0: jge    0x00000000033c34b0
  0x00000000033c34a6: movabs $0x158,%r8
  0x00000000033c34b0: mov    (%rcx,%r8,1),%r9
  0x00000000033c34b4: lea    0x1(%r9),%r9
  0x00000000033c34b8: mov    %r9,(%rcx,%r8,1)
  0x00000000033c34bc: jl     0x00000000033c3428  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30

  0x00000000033c34c2: mov    %eax,0x10(%rdx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50

  0x00000000033c34c5: add    $0x30,%rsp
  0x00000000033c34c9: pop    %rbp
  0x00000000033c34ca: test   %eax,-0x7333d0(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c34d0: retq   
  0x00000000033c34d1: mov    %rax,0x8(%rsp)
  0x00000000033c34d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033c34de: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1
                                                ;   {runtime_call}
  0x00000000033c34e3: jmpq   0x00000000033c339e
  0x00000000033c34e8: callq  0x00000000033ba700  ; OopMap{rdx=Oop rsi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call}
  0x00000000033c34ed: mov    %rcx,0x8(%rsp)
  0x00000000033c34f2: movq   $0x2d,(%rsp)
  0x00000000033c34fa: callq  0x00000000033bede0  ; OopMap{rsi=Oop rdx=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45
                                                ;   {runtime_call}
  0x00000000033c34ff: jmpq   0x00000000033c3474
  0x00000000033c3504: nop
  0x00000000033c3505: nop
  0x00000000033c3506: mov    0x2a8(%r15),%rax
  0x00000000033c350d: movabs $0x0,%r10
  0x00000000033c3517: mov    %r10,0x2a8(%r15)
  0x00000000033c351e: movabs $0x0,%r10
  0x00000000033c3528: mov    %r10,0x2b0(%r15)
  0x00000000033c352f: add    $0x30,%rsp
  0x00000000033c3533: pop    %rbp
  0x00000000033c3534: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033c3539: hlt    
  0x00000000033c353a: hlt    
  0x00000000033c353b: hlt    
  0x00000000033c353c: hlt    
  0x00000000033c353d: hlt    
  0x00000000033c353e: hlt    
  0x00000000033c353f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033c3540: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033c3545: mov    %rsp,-0x28(%rsp)
  0x00000000033c354a: sub    $0x80,%rsp
  0x00000000033c3551: mov    %rax,0x78(%rsp)
  0x00000000033c3556: mov    %rcx,0x70(%rsp)
  0x00000000033c355b: mov    %rdx,0x68(%rsp)
  0x00000000033c3560: mov    %rbx,0x60(%rsp)
  0x00000000033c3565: mov    %rbp,0x50(%rsp)
  0x00000000033c356a: mov    %rsi,0x48(%rsp)
  0x00000000033c356f: mov    %rdi,0x40(%rsp)
  0x00000000033c3574: mov    %r8,0x38(%rsp)
  0x00000000033c3579: mov    %r9,0x30(%rsp)
  0x00000000033c357e: mov    %r10,0x28(%rsp)
  0x00000000033c3583: mov    %r11,0x20(%rsp)
  0x00000000033c3588: mov    %r12,0x18(%rsp)
  0x00000000033c358d: mov    %r13,0x10(%rsp)
  0x00000000033c3592: mov    %r14,0x8(%rsp)
  0x00000000033c3597: mov    %r15,(%rsp)
  0x00000000033c359b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033c35a5: movabs $0x33c3545,%rdx    ;   {internal_word}
  0x00000000033c35af: mov    %rsp,%r8
  0x00000000033c35b2: and    $0xfffffffffffffff0,%rsp
  0x00000000033c35b6: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033c35bb: hlt    
[Deopt Handler Code]
  0x00000000033c35bc: movabs $0x33c35bc,%r10    ;   {section_word}
  0x00000000033c35c6: push   %r10
  0x00000000033c35c8: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033c35cd: hlt    
  0x00000000033c35ce: hlt    
  0x00000000033c35cf: hlt    
Decoding compiled method 0x00000000033c2a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033c2be0: mov    0x8(%rdx),%r10d
  0x00000000033c2be4: shl    $0x3,%r10
  0x00000000033c2be8: cmp    %rax,%r10
  0x00000000033c2beb: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033c2bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033c2bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033c2c00: mov    %eax,-0x6000(%rsp)
  0x00000000033c2c07: push   %rbp
  0x00000000033c2c08: sub    $0x30,%rsp
  0x00000000033c2c0c: movabs $0x1c108ff0,%rax   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2c16: mov    0xdc(%rax),%esi
  0x00000000033c2c1c: add    $0x8,%esi
  0x00000000033c2c1f: mov    %esi,0xdc(%rax)
  0x00000000033c2c25: movabs $0x1bf14e88,%rax   ;   {metadata({method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2c2f: and    $0x1ff8,%esi
  0x00000000033c2c35: cmp    $0x0,%esi
  0x00000000033c2c38: je     0x00000000033c2e51  ;*aload_0
                                                ; - java.lang.String::indexOf@0

  0x00000000033c2c3e: mov    0xc(%rdx),%eax
  0x00000000033c2c41: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1

  0x00000000033c2c45: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::indexOf@4
                                                ; implicit exception: dispatches to 0x00000000033c2e68
  0x00000000033c2c48: cmp    $0x0,%r9d
  0x00000000033c2c4c: movabs $0x1c108ff0,%rdi   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2c56: movabs $0x108,%rbx
  0x00000000033c2c60: jge    0x00000000033c2c70
  0x00000000033c2c66: movabs $0x118,%rbx
  0x00000000033c2c70: mov    (%rdi,%rbx,1),%rcx
  0x00000000033c2c74: lea    0x1(%rcx),%rcx
  0x00000000033c2c78: mov    %rcx,(%rdi,%rbx,1)
  0x00000000033c2c7c: jge    0x00000000033c2c9e  ;*ifge
                                                ; - java.lang.String::indexOf@7

  0x00000000033c2c82: movabs $0x1c108ff0,%r9    ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2c8c: incl   0x128(%r9)
  0x00000000033c2c93: mov    $0x0,%r9d
  0x00000000033c2c99: jmpq   0x00000000033c2cd7  ;*goto
                                                ; - java.lang.String::indexOf@12

  0x00000000033c2c9e: cmp    %esi,%r9d
  0x00000000033c2ca1: movabs $0x1c108ff0,%rdi   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2cab: movabs $0x140,%rbx
  0x00000000033c2cb5: jl     0x00000000033c2cc5
  0x00000000033c2cbb: movabs $0x150,%rbx
  0x00000000033c2cc5: mov    (%rdi,%rbx,1),%rcx
  0x00000000033c2cc9: lea    0x1(%rcx),%rcx
  0x00000000033c2ccd: mov    %rcx,(%rdi,%rbx,1)
  0x00000000033c2cd1: jge    0x00000000033c2e40  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17

  0x00000000033c2cd7: cmp    $0x10000,%r8d
  0x00000000033c2cde: movabs $0x1c108ff0,%rdi   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2ce8: movabs $0x160,%rbx
  0x00000000033c2cf2: jge    0x00000000033c2d02
  0x00000000033c2cf8: movabs $0x170,%rbx
  0x00000000033c2d02: mov    (%rdi,%rbx,1),%rcx
  0x00000000033c2d06: lea    0x1(%rcx),%rcx
  0x00000000033c2d0a: mov    %rcx,(%rdi,%rbx,1)
  0x00000000033c2d0e: jge    0x00000000033c2e14
  0x00000000033c2d14: jmpq   0x00000000033c2db6  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25

  0x00000000033c2d19: nopl   0x0(%rax)
  0x00000000033c2d20: movslq %r9d,%rdx
  0x00000000033c2d23: cmp    0xc(%rax),%r9d
  0x00000000033c2d27: jae    0x00000000033c2e6d
  0x00000000033c2d2d: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::indexOf@47

  0x00000000033c2d32: cmp    %r8d,%edx
  0x00000000033c2d35: movabs $0x1c108ff0,%rdx   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2d3f: movabs $0x1a0,%rdi
  0x00000000033c2d49: jne    0x00000000033c2d59
  0x00000000033c2d4f: movabs $0x1b0,%rdi
  0x00000000033c2d59: mov    (%rdx,%rdi,1),%rbx
  0x00000000033c2d5d: lea    0x1(%rbx),%rbx
  0x00000000033c2d61: mov    %rbx,(%rdx,%rdi,1)
  0x00000000033c2d65: je     0x00000000033c2df4  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49

  0x00000000033c2d6b: inc    %r9d
  0x00000000033c2d6e: movabs $0x1c108ff0,%rdx   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2d78: mov    0xe0(%rdx),%edi
  0x00000000033c2d7e: add    $0x8,%edi
  0x00000000033c2d81: mov    %edi,0xe0(%rdx)
  0x00000000033c2d87: movabs $0x1bf14e88,%rdx   ;   {metadata({method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2d91: and    $0xfff8,%edi
  0x00000000033c2d97: cmp    $0x0,%edi
  0x00000000033c2d9a: je     0x00000000033c2e76  ; OopMap{rax=Oop off=448}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58

  0x00000000033c2da0: test   %eax,-0x732ca6(%rip)        # 0x0000000002c90100
                                                ;   {poll}
  0x00000000033c2da6: movabs $0x1c108ff0,%rdx   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2db0: incl   0x1c0(%rdx)        ;*goto
                                                ; - java.lang.String::indexOf@58

  0x00000000033c2db6: cmp    %esi,%r9d
  0x00000000033c2db9: movabs $0x1c108ff0,%rdx   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2dc3: movabs $0x180,%rdi
  0x00000000033c2dcd: jge    0x00000000033c2ddd
  0x00000000033c2dd3: movabs $0x190,%rdi
  0x00000000033c2ddd: mov    (%rdx,%rdi,1),%rbx
  0x00000000033c2de1: lea    0x1(%rbx),%rbx
  0x00000000033c2de5: mov    %rbx,(%rdx,%rdi,1)
  0x00000000033c2de9: jge    0x00000000033c2e03
  0x00000000033c2def: jmpq   0x00000000033c2d20  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40

  0x00000000033c2df4: mov    %r9,%rax
  0x00000000033c2df7: add    $0x30,%rsp
  0x00000000033c2dfb: pop    %rbp
  0x00000000033c2dfc: test   %eax,-0x732d02(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c2e02: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54

  0x00000000033c2e03: mov    $0xffffffff,%eax
  0x00000000033c2e08: add    $0x30,%rsp
  0x00000000033c2e0c: pop    %rbp
  0x00000000033c2e0d: test   %eax,-0x732d13(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c2e13: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62

  0x00000000033c2e14: mov    %rdx,%rsi
  0x00000000033c2e17: movabs $0x1c108ff0,%rdi   ;   {metadata(method data for {method} {0x000000001bf14e90} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000000033c2e21: addq   $0x1,0x1d8(%rdi)
  0x00000000033c2e29: nop
  0x00000000033c2e2a: nop
  0x00000000033c2e2b: nop
  0x00000000033c2e2c: nop
  0x00000000033c2e2d: nop
  0x00000000033c2e2e: nop
  0x00000000033c2e2f: callq  0x00000000033061a0  ; OopMap{off=596}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66
                                                ;   {optimized virtual_call}
  0x00000000033c2e34: add    $0x30,%rsp
  0x00000000033c2e38: pop    %rbp
  0x00000000033c2e39: test   %eax,-0x732d3f(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c2e3f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69

  0x00000000033c2e40: mov    $0xffffffff,%eax
  0x00000000033c2e45: add    $0x30,%rsp
  0x00000000033c2e49: pop    %rbp
  0x00000000033c2e4a: test   %eax,-0x732d50(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c2e50: retq   
  0x00000000033c2e51: mov    %rax,0x8(%rsp)
  0x00000000033c2e56: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033c2e5e: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=643}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1
                                                ;   {runtime_call}
  0x00000000033c2e63: jmpq   0x00000000033c2c3e
  0x00000000033c2e68: callq  0x00000000033ba700  ; OopMap{rdx=Oop rax=Oop off=653}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4
                                                ;   {runtime_call}
  0x00000000033c2e6d: mov    %r9,(%rsp)
  0x00000000033c2e71: callq  0x000000000332cc80  ; OopMap{rax=Oop off=662}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47
                                                ;   {runtime_call}
  0x00000000033c2e76: mov    %rdx,0x8(%rsp)
  0x00000000033c2e7b: movq   $0x3a,(%rsp)
  0x00000000033c2e83: callq  0x00000000033bede0  ; OopMap{rax=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58
                                                ;   {runtime_call}
  0x00000000033c2e88: jmpq   0x00000000033c2da0
  0x00000000033c2e8d: nop
  0x00000000033c2e8e: nop
  0x00000000033c2e8f: mov    0x2a8(%r15),%rax
  0x00000000033c2e96: movabs $0x0,%r10
  0x00000000033c2ea0: mov    %r10,0x2a8(%r15)
  0x00000000033c2ea7: movabs $0x0,%r10
  0x00000000033c2eb1: mov    %r10,0x2b0(%r15)
  0x00000000033c2eb8: add    $0x30,%rsp
  0x00000000033c2ebc: pop    %rbp
  0x00000000033c2ebd: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033c2ec2: hlt    
  0x00000000033c2ec3: hlt    
  0x00000000033c2ec4: hlt    
  0x00000000033c2ec5: hlt    
  0x00000000033c2ec6: hlt    
  0x00000000033c2ec7: hlt    
  0x00000000033c2ec8: hlt    
  0x00000000033c2ec9: hlt    
  0x00000000033c2eca: hlt    
  0x00000000033c2ecb: hlt    
  0x00000000033c2ecc: hlt    
  0x00000000033c2ecd: hlt    
  0x00000000033c2ece: hlt    
  0x00000000033c2ecf: hlt    
  0x00000000033c2ed0: hlt    
  0x00000000033c2ed1: hlt    
  0x00000000033c2ed2: hlt    
  0x00000000033c2ed3: hlt    
  0x00000000033c2ed4: hlt    
  0x00000000033c2ed5: hlt    
  0x00000000033c2ed6: hlt    
  0x00000000033c2ed7: hlt    
  0x00000000033c2ed8: hlt    
  0x00000000033c2ed9: hlt    
  0x00000000033c2eda: hlt    
  0x00000000033c2edb: hlt    
  0x00000000033c2edc: hlt    
  0x00000000033c2edd: hlt    
  0x00000000033c2ede: hlt    
  0x00000000033c2edf: hlt    
[Stub Code]
  0x00000000033c2ee0: nop                       ;   {no_reloc}
  0x00000000033c2ee1: nop
  0x00000000033c2ee2: nop
  0x00000000033c2ee3: nop
  0x00000000033c2ee4: nop
  0x00000000033c2ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033c2eef: jmpq   0x00000000033c2eef  ;   {runtime_call}
[Exception Handler]
  0x00000000033c2ef4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033c2ef9: mov    %rsp,-0x28(%rsp)
  0x00000000033c2efe: sub    $0x80,%rsp
  0x00000000033c2f05: mov    %rax,0x78(%rsp)
  0x00000000033c2f0a: mov    %rcx,0x70(%rsp)
  0x00000000033c2f0f: mov    %rdx,0x68(%rsp)
  0x00000000033c2f14: mov    %rbx,0x60(%rsp)
  0x00000000033c2f19: mov    %rbp,0x50(%rsp)
  0x00000000033c2f1e: mov    %rsi,0x48(%rsp)
  0x00000000033c2f23: mov    %rdi,0x40(%rsp)
  0x00000000033c2f28: mov    %r8,0x38(%rsp)
  0x00000000033c2f2d: mov    %r9,0x30(%rsp)
  0x00000000033c2f32: mov    %r10,0x28(%rsp)
  0x00000000033c2f37: mov    %r11,0x20(%rsp)
  0x00000000033c2f3c: mov    %r12,0x18(%rsp)
  0x00000000033c2f41: mov    %r13,0x10(%rsp)
  0x00000000033c2f46: mov    %r14,0x8(%rsp)
  0x00000000033c2f4b: mov    %r15,(%rsp)
  0x00000000033c2f4f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033c2f59: movabs $0x33c2ef9,%rdx    ;   {internal_word}
  0x00000000033c2f63: mov    %rsp,%r8
  0x00000000033c2f66: and    $0xfffffffffffffff0,%rsp
  0x00000000033c2f6a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033c2f6f: hlt    
[Deopt Handler Code]
  0x00000000033c2f70: movabs $0x33c2f70,%r10    ;   {section_word}
  0x00000000033c2f7a: push   %r10
  0x00000000033c2f7c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033c2f81: hlt    
  0x00000000033c2f82: hlt    
  0x00000000033c2f83: hlt    
  0x00000000033c2f84: hlt    
  0x00000000033c2f85: hlt    
  0x00000000033c2f86: hlt    
  0x00000000033c2f87: hlt    
Decoding compiled method 0x00000000033bfc50:
Code:
[Entry Point]
  # {method} {0x000000001bf288c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8        = int
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x00000000033bfdc0: mov    0x8(%rdx),%r10d
  0x00000000033bfdc4: shl    $0x3,%r10
  0x00000000033bfdc8: cmp    %r10,%rax
  0x00000000033bfdcb: je     0x00000000033bfdd8
  0x00000000033bfdd1: jmpq   0x0000000003305f60  ;   {runtime_call}
  0x00000000033bfdd6: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000033bfdd8: mov    %eax,-0x6000(%rsp)
  0x00000000033bfddf: push   %rbp
  0x00000000033bfde0: mov    %rsp,%rbp
  0x00000000033bfde3: sub    $0x80,%rsp
  0x00000000033bfdea: mov    %rsi,0x30(%rsp)
  0x00000000033bfdef: mov    %rdi,0x28(%rsp)
  0x00000000033bfdf4: mov    %r9,0x48(%rsp)
  0x00000000033bfdf9: cmp    $0x0,%r9
  0x00000000033bfdfd: lea    0x48(%rsp),%rax
  0x00000000033bfe02: cmove  0x48(%rsp),%rax
  0x00000000033bfe08: mov    %rax,0x20(%rsp)
  0x00000000033bfe0d: mov    %r8,%r9
  0x00000000033bfe10: mov    %rdx,0x38(%rsp)
  0x00000000033bfe15: cmp    $0x0,%rdx
  0x00000000033bfe19: lea    0x38(%rsp),%r8
  0x00000000033bfe1e: cmove  0x38(%rsp),%r8
  0x00000000033bfe24: movabs $0x76b300c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x00000000033bfe2e: mov    %r14,0x68(%rsp)
  0x00000000033bfe33: lea    0x68(%rsp),%r14
  0x00000000033bfe38: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000000033bfe3b: movabs $0x33bfe3b,%r10    ;   {section_word}
  0x00000000033bfe45: mov    %r10,0x1e0(%r15)
  0x00000000033bfe4c: mov    %rsp,0x1d8(%r15)
  0x00000000033bfe53: cmpb   $0x0,0x564f41dd(%rip)        # 0x00000000598b4037
                                                ;   {external_word}
  0x00000000033bfe5a: je     0x00000000033bfea2
  0x00000000033bfe60: push   %rdx
  0x00000000033bfe61: push   %r8
  0x00000000033bfe63: push   %r9
  0x00000000033bfe65: movabs $0x1bf288c0,%rdx   ;   {metadata({method} {0x000000001bf288c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000000033bfe6f: mov    %r15,%rcx
  0x00000000033bfe72: sub    $0x20,%rsp
  0x00000000033bfe76: test   $0xf,%esp
  0x00000000033bfe7c: je     0x00000000033bfe94
  0x00000000033bfe82: sub    $0x8,%rsp
  0x00000000033bfe86: callq  0x00000000592dade0  ;   {runtime_call}
  0x00000000033bfe8b: add    $0x8,%rsp
  0x00000000033bfe8f: jmpq   0x00000000033bfe99
  0x00000000033bfe94: callq  0x00000000592dade0  ;   {runtime_call}
  0x00000000033bfe99: add    $0x20,%rsp
  0x00000000033bfe9d: pop    %r9
  0x00000000033bfe9f: pop    %r8
  0x00000000033bfea1: pop    %rdx
  0x00000000033bfea2: lea    0x1f8(%r15),%rcx
  0x00000000033bfea9: movl   $0x4,0x270(%r15)
  0x00000000033bfeb4: callq  0x00000000578407fe  ;   {runtime_call}
  0x00000000033bfeb9: vzeroupper 
  0x00000000033bfebc: movl   $0x5,0x270(%r15)
  0x00000000033bfec7: mov    %r15d,%ecx
  0x00000000033bfeca: shr    $0x4,%ecx
  0x00000000033bfecd: and    $0xffc,%ecx
  0x00000000033bfed3: movabs $0x2ca0000,%r10    ;   {external_word}
  0x00000000033bfedd: mov    %ecx,(%r10,%rcx,1)
  0x00000000033bfee1: cmpl   $0x0,0x564f4d25(%rip)        # 0x00000000598b4c10
                                                ;   {external_word}
  0x00000000033bfeeb: jne    0x00000000033bfeff
  0x00000000033bfef1: cmpl   $0x0,0x30(%r15)
  0x00000000033bfef9: je     0x00000000033bff18
  0x00000000033bfeff: mov    %r15,%rcx
  0x00000000033bff02: mov    %rsp,%r12
  0x00000000033bff05: sub    $0x20,%rsp
  0x00000000033bff09: and    $0xfffffffffffffff0,%rsp
  0x00000000033bff0d: callq  0x00000000592f1270  ;   {runtime_call}
  0x00000000033bff12: mov    %r12,%rsp
  0x00000000033bff15: xor    %r12,%r12
  0x00000000033bff18: movl   $0x8,0x270(%r15)
  0x00000000033bff23: cmpl   $0x1,0x29c(%r15)
  0x00000000033bff2e: je     0x00000000033bffbe
  0x00000000033bff34: cmpb   $0x0,0x564f40fc(%rip)        # 0x00000000598b4037
                                                ;   {external_word}
  0x00000000033bff3b: je     0x00000000033bff79
  0x00000000033bff41: movabs $0x1bf288c0,%rdx   ;   {metadata({method} {0x000000001bf288c8} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000000033bff4b: mov    %r15,%rcx
  0x00000000033bff4e: sub    $0x20,%rsp
  0x00000000033bff52: test   $0xf,%esp
  0x00000000033bff58: je     0x00000000033bff70
  0x00000000033bff5e: sub    $0x8,%rsp
  0x00000000033bff62: callq  0x00000000592dade0  ;   {runtime_call}
  0x00000000033bff67: add    $0x8,%rsp
  0x00000000033bff6b: jmpq   0x00000000033bff75
  0x00000000033bff70: callq  0x00000000592dade0  ;   {runtime_call}
  0x00000000033bff75: add    $0x20,%rsp
  0x00000000033bff79: movabs $0x0,%r10
  0x00000000033bff83: mov    %r10,0x1d8(%r15)
  0x00000000033bff8a: movabs $0x0,%r10
  0x00000000033bff94: mov    %r10,0x1e0(%r15)
  0x00000000033bff9b: mov    0x38(%r15),%rcx
  0x00000000033bff9f: movl   $0x0,0x100(%rcx)
  0x00000000033bffa9: leaveq 
  0x00000000033bffaa: cmpq   $0x0,0x8(%r15)
  0x00000000033bffb2: jne    0x00000000033bffb9
  0x00000000033bffb8: retq   
  0x00000000033bffb9: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000033bffbe: mov    %rsp,%r12
  0x00000000033bffc1: sub    $0x20,%rsp
  0x00000000033bffc5: and    $0xfffffffffffffff0,%rsp
  0x00000000033bffc9: callq  0x00000000592dae00  ;   {runtime_call}
  0x00000000033bffce: mov    %r12,%rsp
  0x00000000033bffd1: xor    %r12,%r12
  0x00000000033bffd4: jmpq   0x00000000033bff34
  0x00000000033bffd9: hlt    
  0x00000000033bffda: hlt    
  0x00000000033bffdb: hlt    
  0x00000000033bffdc: hlt    
  0x00000000033bffdd: hlt    
  0x00000000033bffde: hlt    
  0x00000000033bffdf: hlt    
Decoding compiled method 0x00000000033c2710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf10470} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x00000000033c2860: mov    0x8(%rdx),%r10d
  0x00000000033c2864: shl    $0x3,%r10
  0x00000000033c2868: cmp    %rax,%r10
  0x00000000033c286b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033c2871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033c287c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033c2880: mov    %eax,-0x6000(%rsp)
  0x00000000033c2887: push   %rbp
  0x00000000033c2888: sub    $0x50,%rsp
  0x00000000033c288c: movabs $0x1c0381c8,%rcx   ;   {metadata(method data for {method} {0x000000001bf10470} '<init>' '()V' in 'java/lang/Object')}
  0x00000000033c2896: mov    0xdc(%rcx),%esi
  0x00000000033c289c: add    $0x8,%esi
  0x00000000033c289f: mov    %esi,0xdc(%rcx)
  0x00000000033c28a5: movabs $0x1bf10468,%rcx   ;   {metadata({method} {0x000000001bf10470} '<init>' '()V' in 'java/lang/Object')}
  0x00000000033c28af: and    $0x1ff8,%esi
  0x00000000033c28b5: cmp    $0x0,%esi
  0x00000000033c28b8: je     0x00000000033c28d7
  0x00000000033c28be: mov    %rdx,%rcx          ;*return
                                                ; - java.lang.Object::<init>@0

  0x00000000033c28c1: mov    %rdx,0x40(%rsp)
  0x00000000033c28c6: callq  0x00000000033ba920  ; OopMap{[64]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0
                                                ;   {runtime_call}
  0x00000000033c28cb: add    $0x50,%rsp
  0x00000000033c28cf: pop    %rbp
  0x00000000033c28d0: test   %eax,-0x7327d6(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c28d6: retq   
  0x00000000033c28d7: mov    %rcx,0x8(%rsp)
  0x00000000033c28dc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033c28e4: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ;   {runtime_call}
  0x00000000033c28e9: jmp    0x00000000033c28be
  0x00000000033c28eb: nop
  0x00000000033c28ec: nop
  0x00000000033c28ed: mov    0x2a8(%r15),%rax
  0x00000000033c28f4: movabs $0x0,%r10
  0x00000000033c28fe: mov    %r10,0x2a8(%r15)
  0x00000000033c2905: movabs $0x0,%r10
  0x00000000033c290f: mov    %r10,0x2b0(%r15)
  0x00000000033c2916: add    $0x50,%rsp
  0x00000000033c291a: pop    %rbp
  0x00000000033c291b: jmpq   0x000000000332d120  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00000000033c2920: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033c2925: mov    %rsp,-0x28(%rsp)
  0x00000000033c292a: sub    $0x80,%rsp
  0x00000000033c2931: mov    %rax,0x78(%rsp)
  0x00000000033c2936: mov    %rcx,0x70(%rsp)
  0x00000000033c293b: mov    %rdx,0x68(%rsp)
  0x00000000033c2940: mov    %rbx,0x60(%rsp)
  0x00000000033c2945: mov    %rbp,0x50(%rsp)
  0x00000000033c294a: mov    %rsi,0x48(%rsp)
  0x00000000033c294f: mov    %rdi,0x40(%rsp)
  0x00000000033c2954: mov    %r8,0x38(%rsp)
  0x00000000033c2959: mov    %r9,0x30(%rsp)
  0x00000000033c295e: mov    %r10,0x28(%rsp)
  0x00000000033c2963: mov    %r11,0x20(%rsp)
  0x00000000033c2968: mov    %r12,0x18(%rsp)
  0x00000000033c296d: mov    %r13,0x10(%rsp)
  0x00000000033c2972: mov    %r14,0x8(%rsp)
  0x00000000033c2977: mov    %r15,(%rsp)
  0x00000000033c297b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033c2985: movabs $0x33c2925,%rdx    ;   {internal_word}
  0x00000000033c298f: mov    %rsp,%r8
  0x00000000033c2992: and    $0xfffffffffffffff0,%rsp
  0x00000000033c2996: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033c299b: hlt    
[Deopt Handler Code]
  0x00000000033c299c: movabs $0x33c299c,%r10    ;   {section_word}
  0x00000000033c29a6: push   %r10
  0x00000000033c29a8: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033c29ad: hlt    
  0x00000000033c29ae: hlt    
  0x00000000033c29af: hlt    
Decoding compiled method 0x00000000033c2290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033c23e0: mov    %eax,-0x6000(%rsp)
  0x00000000033c23e7: push   %rbp
  0x00000000033c23e8: sub    $0x30,%rsp
  0x00000000033c23ec: movabs $0x1c109420,%rax   ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033c23f6: mov    0xdc(%rax),%esi
  0x00000000033c23fc: add    $0x8,%esi
  0x00000000033c23ff: mov    %esi,0xdc(%rax)
  0x00000000033c2405: movabs $0x1bffae40,%rax   ;   {metadata({method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033c240f: and    $0x1ff8,%esi
  0x00000000033c2415: cmp    $0x0,%esi
  0x00000000033c2418: je     0x00000000033c247e  ;*iload_0
                                                ; - java.lang.Math::min@0

  0x00000000033c241e: cmp    %r8d,%edx
  0x00000000033c2421: movabs $0x1c109420,%rax   ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033c242b: movabs $0x108,%rsi
  0x00000000033c2435: jg     0x00000000033c2445
  0x00000000033c243b: movabs $0x118,%rsi
  0x00000000033c2445: mov    (%rax,%rsi,1),%rdi
  0x00000000033c2449: lea    0x1(%rdi),%rdi
  0x00000000033c244d: mov    %rdi,(%rax,%rsi,1)
  0x00000000033c2451: jg     0x00000000033c246c  ;*if_icmpgt
                                                ; - java.lang.Math::min@2

  0x00000000033c2457: movabs $0x1c109420,%rax   ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033c2461: incl   0x128(%rax)
  0x00000000033c2467: jmpq   0x00000000033c246f  ;*goto
                                                ; - java.lang.Math::min@6

  0x00000000033c246c: mov    %r8,%rdx           ;*ireturn
                                                ; - java.lang.Math::min@10

  0x00000000033c246f: mov    %rdx,%rax
  0x00000000033c2472: add    $0x30,%rsp
  0x00000000033c2476: pop    %rbp
  0x00000000033c2477: test   %eax,-0x73237d(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033c247d: retq   
  0x00000000033c247e: mov    %rax,0x8(%rsp)
  0x00000000033c2483: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033c248b: callq  0x00000000033bede0  ; OopMap{off=176}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ;   {runtime_call}
  0x00000000033c2490: jmp    0x00000000033c241e
  0x00000000033c2492: nop
  0x00000000033c2493: nop
  0x00000000033c2494: mov    0x2a8(%r15),%rax
  0x00000000033c249b: movabs $0x0,%r10
  0x00000000033c24a5: mov    %r10,0x2a8(%r15)
  0x00000000033c24ac: movabs $0x0,%r10
  0x00000000033c24b6: mov    %r10,0x2b0(%r15)
  0x00000000033c24bd: add    $0x30,%rsp
  0x00000000033c24c1: pop    %rbp
  0x00000000033c24c2: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033c24c7: hlt    
  0x00000000033c24c8: hlt    
  0x00000000033c24c9: hlt    
  0x00000000033c24ca: hlt    
  0x00000000033c24cb: hlt    
  0x00000000033c24cc: hlt    
  0x00000000033c24cd: hlt    
  0x00000000033c24ce: hlt    
  0x00000000033c24cf: hlt    
  0x00000000033c24d0: hlt    
  0x00000000033c24d1: hlt    
  0x00000000033c24d2: hlt    
  0x00000000033c24d3: hlt    
  0x00000000033c24d4: hlt    
  0x00000000033c24d5: hlt    
  0x00000000033c24d6: hlt    
  0x00000000033c24d7: hlt    
  0x00000000033c24d8: hlt    
  0x00000000033c24d9: hlt    
  0x00000000033c24da: hlt    
  0x00000000033c24db: hlt    
  0x00000000033c24dc: hlt    
  0x00000000033c24dd: hlt    
  0x00000000033c24de: hlt    
  0x00000000033c24df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033c24e0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033c24e5: mov    %rsp,-0x28(%rsp)
  0x00000000033c24ea: sub    $0x80,%rsp
  0x00000000033c24f1: mov    %rax,0x78(%rsp)
  0x00000000033c24f6: mov    %rcx,0x70(%rsp)
  0x00000000033c24fb: mov    %rdx,0x68(%rsp)
  0x00000000033c2500: mov    %rbx,0x60(%rsp)
  0x00000000033c2505: mov    %rbp,0x50(%rsp)
  0x00000000033c250a: mov    %rsi,0x48(%rsp)
  0x00000000033c250f: mov    %rdi,0x40(%rsp)
  0x00000000033c2514: mov    %r8,0x38(%rsp)
  0x00000000033c2519: mov    %r9,0x30(%rsp)
  0x00000000033c251e: mov    %r10,0x28(%rsp)
  0x00000000033c2523: mov    %r11,0x20(%rsp)
  0x00000000033c2528: mov    %r12,0x18(%rsp)
  0x00000000033c252d: mov    %r13,0x10(%rsp)
  0x00000000033c2532: mov    %r14,0x8(%rsp)
  0x00000000033c2537: mov    %r15,(%rsp)
  0x00000000033c253b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033c2545: movabs $0x33c24e5,%rdx    ;   {internal_word}
  0x00000000033c254f: mov    %rsp,%r8
  0x00000000033c2552: and    $0xfffffffffffffff0,%rsp
  0x00000000033c2556: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033c255b: hlt    
[Deopt Handler Code]
  0x00000000033c255c: movabs $0x33c255c,%r10    ;   {section_word}
  0x00000000033c2566: push   %r10
  0x00000000033c2568: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033c256d: hlt    
  0x00000000033c256e: hlt    
  0x00000000033c256f: hlt    
Decoding compiled method 0x00000000033cc1d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c0cecf0} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033cc380: mov    %eax,-0x6000(%rsp)
  0x00000000033cc387: push   %rbp
  0x00000000033cc388: sub    $0x30,%rsp
  0x00000000033cc38c: movabs $0x1c0e0a78,%rax   ;   {metadata(method data for {method} {0x000000001c0cecf0} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x00000000033cc396: mov    0xdc(%rax),%esi
  0x00000000033cc39c: add    $0x8,%esi
  0x00000000033cc39f: mov    %esi,0xdc(%rax)
  0x00000000033cc3a5: movabs $0x1c0cece8,%rax   ;   {metadata({method} {0x000000001c0cecf0} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x00000000033cc3af: and    $0x1ff8,%esi
  0x00000000033cc3b5: cmp    $0x0,%esi
  0x00000000033cc3b8: je     0x00000000033cc53c  ;*iload_0
                                                ; - java.lang.CharacterData::of@0

  0x00000000033cc3be: mov    %rdx,%rax
  0x00000000033cc3c1: shr    $0x8,%eax
  0x00000000033cc3c4: cmp    $0x0,%eax
  0x00000000033cc3c7: movabs $0x1c0e0a78,%rax   ;   {metadata(method data for {method} {0x000000001c0cecf0} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x00000000033cc3d1: movabs $0x108,%rsi
  0x00000000033cc3db: jne    0x00000000033cc3eb
  0x00000000033cc3e1: movabs $0x118,%rsi
  0x00000000033cc3eb: mov    (%rax,%rsi,1),%rdi
  0x00000000033cc3ef: lea    0x1(%rdi),%rdi
  0x00000000033cc3f3: mov    %rdi,(%rax,%rsi,1)
  0x00000000033cc3f7: je     0x00000000033cc526  ;*ifne
                                                ; - java.lang.CharacterData::of@4

  0x00000000033cc3fd: shr    $0x10,%edx
  0x00000000033cc400: cmp    $0x0,%edx
  0x00000000033cc403: je     0x00000000033cc4fe
  0x00000000033cc409: cmp    $0x1,%edx
  0x00000000033cc40c: je     0x00000000033cc4d6
  0x00000000033cc412: cmp    $0x2,%edx
  0x00000000033cc415: je     0x00000000033cc4ae
  0x00000000033cc41b: cmp    $0xe,%edx
  0x00000000033cc41e: je     0x00000000033cc486
  0x00000000033cc424: cmp    $0xf,%edx
  0x00000000033cc427: je     0x00000000033cc436
  0x00000000033cc42d: cmp    $0x10,%edx
  0x00000000033cc430: jne    0x00000000033cc45e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15

  0x00000000033cc436: xchg   %ax,%ax
  0x00000000033cc438: jmpq   0x00000000033cc5b0  ;   {no_reloc}
  0x00000000033cc43d: add    %al,(%rax)
  0x00000000033cc43f: add    %al,(%rax)
  0x00000000033cc441: add    %ah,0xf(%rsi)
  0x00000000033cc444: (bad)  
  0x00000000033cc445: add    %r8b,(%rax)
  0x00000000033cc448: jmpq   0x00000000033cc5ca  ; implicit exception: dispatches to 0x00000000033cc5ba
  0x00000000033cc44d: nop
  0x00000000033cc44e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112

  0x00000000033cc452: add    $0x30,%rsp
  0x00000000033cc456: pop    %rbp
  0x00000000033cc457: test   %eax,-0x73c35d(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc45d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115

  0x00000000033cc45e: xchg   %ax,%ax
  0x00000000033cc460: jmpq   0x00000000033cc631  ;   {no_reloc}
  0x00000000033cc465: add    %al,(%rax)
  0x00000000033cc467: add    %al,(%rax)
  0x00000000033cc469: add    %ah,0xf(%rsi)
  0x00000000033cc46c: (bad)  
  0x00000000033cc46d: add    %r8b,(%rax)
  0x00000000033cc470: jmpq   0x00000000033cc64b  ; implicit exception: dispatches to 0x00000000033cc63b
  0x00000000033cc475: nop
  0x00000000033cc476: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116

  0x00000000033cc47a: add    $0x30,%rsp
  0x00000000033cc47e: pop    %rbp
  0x00000000033cc47f: test   %eax,-0x73c385(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc485: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119

  0x00000000033cc486: xchg   %ax,%ax
  0x00000000033cc488: jmpq   0x00000000033cc6b2  ;   {no_reloc}
  0x00000000033cc48d: add    %al,(%rax)
  0x00000000033cc48f: add    %al,(%rax)
  0x00000000033cc491: add    %ah,0xf(%rsi)
  0x00000000033cc494: (bad)  
  0x00000000033cc495: add    %r8b,(%rax)
  0x00000000033cc498: jmpq   0x00000000033cc6cc  ; implicit exception: dispatches to 0x00000000033cc6bc
  0x00000000033cc49d: nop
  0x00000000033cc49e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108

  0x00000000033cc4a2: add    $0x30,%rsp
  0x00000000033cc4a6: pop    %rbp
  0x00000000033cc4a7: test   %eax,-0x73c3ad(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc4ad: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111

  0x00000000033cc4ae: xchg   %ax,%ax
  0x00000000033cc4b0: jmpq   0x00000000033cc733  ;   {no_reloc}
  0x00000000033cc4b5: add    %al,(%rax)
  0x00000000033cc4b7: add    %al,(%rax)
  0x00000000033cc4b9: add    %ah,0xf(%rsi)
  0x00000000033cc4bc: (bad)  
  0x00000000033cc4bd: add    %r8b,(%rax)
  0x00000000033cc4c0: jmpq   0x00000000033cc74d  ; implicit exception: dispatches to 0x00000000033cc73d
  0x00000000033cc4c5: nop
  0x00000000033cc4c6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104

  0x00000000033cc4ca: add    $0x30,%rsp
  0x00000000033cc4ce: pop    %rbp
  0x00000000033cc4cf: test   %eax,-0x73c3d5(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc4d5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107

  0x00000000033cc4d6: xchg   %ax,%ax
  0x00000000033cc4d8: jmpq   0x00000000033cc7b4  ;   {no_reloc}
  0x00000000033cc4dd: add    %al,(%rax)
  0x00000000033cc4df: add    %al,(%rax)
  0x00000000033cc4e1: add    %ah,0xf(%rsi)
  0x00000000033cc4e4: (bad)  
  0x00000000033cc4e5: add    %r8b,(%rax)
  0x00000000033cc4e8: jmpq   0x00000000033cc7ce  ; implicit exception: dispatches to 0x00000000033cc7be
  0x00000000033cc4ed: nop
  0x00000000033cc4ee: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100

  0x00000000033cc4f2: add    $0x30,%rsp
  0x00000000033cc4f6: pop    %rbp
  0x00000000033cc4f7: test   %eax,-0x73c3fd(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc4fd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103

  0x00000000033cc4fe: xchg   %ax,%ax
  0x00000000033cc500: jmpq   0x00000000033cc835  ;   {no_reloc}
  0x00000000033cc505: add    %al,(%rax)
  0x00000000033cc507: add    %al,(%rax)
  0x00000000033cc509: add    %ah,0xf(%rsi)
  0x00000000033cc50c: (bad)  
  0x00000000033cc50d: add    %r8b,(%rax)
  0x00000000033cc510: jmpq   0x00000000033cc84f  ; implicit exception: dispatches to 0x00000000033cc83f
  0x00000000033cc515: nop
  0x00000000033cc516: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96

  0x00000000033cc51a: add    $0x30,%rsp
  0x00000000033cc51e: pop    %rbp
  0x00000000033cc51f: test   %eax,-0x73c425(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc525: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99

  0x00000000033cc526: movabs $0x76b3b1b40,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x00000000033cc530: add    $0x30,%rsp
  0x00000000033cc534: pop    %rbp
  0x00000000033cc535: test   %eax,-0x73c43b(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cc53b: retq   
  0x00000000033cc53c: mov    %rax,0x8(%rsp)
  0x00000000033cc541: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cc549: callq  0x00000000033bede0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1
                                                ;   {runtime_call}
  0x00000000033cc54e: jmpq   0x00000000033cc3be
  0x00000000033cc553: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc55d: push   %rax
  0x00000000033cc55e: push   %rbx
  0x00000000033cc55f: mov    0x48(%rax),%rbx
  0x00000000033cc563: push   %rdi
  0x00000000033cc564: push   %rsi
  0x00000000033cc565: push   %rdx
  0x00000000033cc566: push   %rcx
  0x00000000033cc567: push   %r8
  0x00000000033cc569: push   %r9
  0x00000000033cc56b: push   %r10
  0x00000000033cc56d: mov    %rsp,%r10
  0x00000000033cc570: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc574: push   %r10
  0x00000000033cc576: push   %r11
  0x00000000033cc578: mov    $0x7,%ecx
  0x00000000033cc57d: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc587: callq  *%r10
  0x00000000033cc58a: pop    %r11
  0x00000000033cc58c: pop    %rsp
  0x00000000033cc58d: pop    %r10
  0x00000000033cc58f: pop    %r9
  0x00000000033cc591: pop    %r8
  0x00000000033cc593: pop    %rcx
  0x00000000033cc594: pop    %rdx
  0x00000000033cc595: pop    %rsi
  0x00000000033cc596: pop    %rdi
  0x00000000033cc597: cmp    0x118(%rbx),%rax
  0x00000000033cc59e: pop    %rbx
  0x00000000033cc59f: pop    %rax
  0x00000000033cc5a0: jne    0x00000000033cc5b0
  0x00000000033cc5a6: jmpq   0x00000000033cc442
  0x00000000033cc5ab: mov    $0xa535d00,%eax
  0x00000000033cc5b0: callq  0x00000000033be160  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112
                                                ;   {runtime_call}
  0x00000000033cc5b5: jmpq   0x00000000033cc438
  0x00000000033cc5ba: callq  0x00000000033ba700  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112
                                                ;   {runtime_call}
  0x00000000033cc5bf: mov    0x0(%rax),%eax
  0x00000000033cc5c5: mov    $0x6050b00,%eax
  0x00000000033cc5ca: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112
                                                ;   {runtime_call}
  0x00000000033cc5cf: jmpq   0x00000000033cc448
  0x00000000033cc5d4: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc5de: push   %rax
  0x00000000033cc5df: push   %rbx
  0x00000000033cc5e0: mov    0x48(%rax),%rbx
  0x00000000033cc5e4: push   %rdi
  0x00000000033cc5e5: push   %rsi
  0x00000000033cc5e6: push   %rdx
  0x00000000033cc5e7: push   %rcx
  0x00000000033cc5e8: push   %r8
  0x00000000033cc5ea: push   %r9
  0x00000000033cc5ec: push   %r10
  0x00000000033cc5ee: mov    %rsp,%r10
  0x00000000033cc5f1: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc5f5: push   %r10
  0x00000000033cc5f7: push   %r11
  0x00000000033cc5f9: mov    $0x7,%ecx
  0x00000000033cc5fe: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc608: callq  *%r10
  0x00000000033cc60b: pop    %r11
  0x00000000033cc60d: pop    %rsp
  0x00000000033cc60e: pop    %r10
  0x00000000033cc610: pop    %r9
  0x00000000033cc612: pop    %r8
  0x00000000033cc614: pop    %rcx
  0x00000000033cc615: pop    %rdx
  0x00000000033cc616: pop    %rsi
  0x00000000033cc617: pop    %rdi
  0x00000000033cc618: cmp    0x118(%rbx),%rax
  0x00000000033cc61f: pop    %rbx
  0x00000000033cc620: pop    %rax
  0x00000000033cc621: jne    0x00000000033cc631
  0x00000000033cc627: jmpq   0x00000000033cc46a
  0x00000000033cc62c: mov    $0xa535d00,%eax
  0x00000000033cc631: callq  0x00000000033be160  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116
                                                ;   {runtime_call}
  0x00000000033cc636: jmpq   0x00000000033cc460
  0x00000000033cc63b: callq  0x00000000033ba700  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116
                                                ;   {runtime_call}
  0x00000000033cc640: mov    0x0(%rax),%eax
  0x00000000033cc646: mov    $0x6050b00,%eax
  0x00000000033cc64b: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116
                                                ;   {runtime_call}
  0x00000000033cc650: jmpq   0x00000000033cc470
  0x00000000033cc655: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc65f: push   %rax
  0x00000000033cc660: push   %rbx
  0x00000000033cc661: mov    0x48(%rax),%rbx
  0x00000000033cc665: push   %rdi
  0x00000000033cc666: push   %rsi
  0x00000000033cc667: push   %rdx
  0x00000000033cc668: push   %rcx
  0x00000000033cc669: push   %r8
  0x00000000033cc66b: push   %r9
  0x00000000033cc66d: push   %r10
  0x00000000033cc66f: mov    %rsp,%r10
  0x00000000033cc672: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc676: push   %r10
  0x00000000033cc678: push   %r11
  0x00000000033cc67a: mov    $0x7,%ecx
  0x00000000033cc67f: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc689: callq  *%r10
  0x00000000033cc68c: pop    %r11
  0x00000000033cc68e: pop    %rsp
  0x00000000033cc68f: pop    %r10
  0x00000000033cc691: pop    %r9
  0x00000000033cc693: pop    %r8
  0x00000000033cc695: pop    %rcx
  0x00000000033cc696: pop    %rdx
  0x00000000033cc697: pop    %rsi
  0x00000000033cc698: pop    %rdi
  0x00000000033cc699: cmp    0x118(%rbx),%rax
  0x00000000033cc6a0: pop    %rbx
  0x00000000033cc6a1: pop    %rax
  0x00000000033cc6a2: jne    0x00000000033cc6b2
  0x00000000033cc6a8: jmpq   0x00000000033cc492
  0x00000000033cc6ad: mov    $0xa535d00,%eax
  0x00000000033cc6b2: callq  0x00000000033be160  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108
                                                ;   {runtime_call}
  0x00000000033cc6b7: jmpq   0x00000000033cc488
  0x00000000033cc6bc: callq  0x00000000033ba700  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108
                                                ;   {runtime_call}
  0x00000000033cc6c1: mov    0x0(%rax),%eax
  0x00000000033cc6c7: mov    $0x6050b00,%eax
  0x00000000033cc6cc: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108
                                                ;   {runtime_call}
  0x00000000033cc6d1: jmpq   0x00000000033cc498
  0x00000000033cc6d6: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc6e0: push   %rax
  0x00000000033cc6e1: push   %rbx
  0x00000000033cc6e2: mov    0x48(%rax),%rbx
  0x00000000033cc6e6: push   %rdi
  0x00000000033cc6e7: push   %rsi
  0x00000000033cc6e8: push   %rdx
  0x00000000033cc6e9: push   %rcx
  0x00000000033cc6ea: push   %r8
  0x00000000033cc6ec: push   %r9
  0x00000000033cc6ee: push   %r10
  0x00000000033cc6f0: mov    %rsp,%r10
  0x00000000033cc6f3: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc6f7: push   %r10
  0x00000000033cc6f9: push   %r11
  0x00000000033cc6fb: mov    $0x7,%ecx
  0x00000000033cc700: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc70a: callq  *%r10
  0x00000000033cc70d: pop    %r11
  0x00000000033cc70f: pop    %rsp
  0x00000000033cc710: pop    %r10
  0x00000000033cc712: pop    %r9
  0x00000000033cc714: pop    %r8
  0x00000000033cc716: pop    %rcx
  0x00000000033cc717: pop    %rdx
  0x00000000033cc718: pop    %rsi
  0x00000000033cc719: pop    %rdi
  0x00000000033cc71a: cmp    0x118(%rbx),%rax
  0x00000000033cc721: pop    %rbx
  0x00000000033cc722: pop    %rax
  0x00000000033cc723: jne    0x00000000033cc733
  0x00000000033cc729: jmpq   0x00000000033cc4ba
  0x00000000033cc72e: mov    $0xa535d00,%eax
  0x00000000033cc733: callq  0x00000000033be160  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104
                                                ;   {runtime_call}
  0x00000000033cc738: jmpq   0x00000000033cc4b0
  0x00000000033cc73d: callq  0x00000000033ba700  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104
                                                ;   {runtime_call}
  0x00000000033cc742: mov    0x0(%rax),%eax
  0x00000000033cc748: mov    $0x6050b00,%eax
  0x00000000033cc74d: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104
                                                ;   {runtime_call}
  0x00000000033cc752: jmpq   0x00000000033cc4c0
  0x00000000033cc757: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc761: push   %rax
  0x00000000033cc762: push   %rbx
  0x00000000033cc763: mov    0x48(%rax),%rbx
  0x00000000033cc767: push   %rdi
  0x00000000033cc768: push   %rsi
  0x00000000033cc769: push   %rdx
  0x00000000033cc76a: push   %rcx
  0x00000000033cc76b: push   %r8
  0x00000000033cc76d: push   %r9
  0x00000000033cc76f: push   %r10
  0x00000000033cc771: mov    %rsp,%r10
  0x00000000033cc774: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc778: push   %r10
  0x00000000033cc77a: push   %r11
  0x00000000033cc77c: mov    $0x7,%ecx
  0x00000000033cc781: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc78b: callq  *%r10
  0x00000000033cc78e: pop    %r11
  0x00000000033cc790: pop    %rsp
  0x00000000033cc791: pop    %r10
  0x00000000033cc793: pop    %r9
  0x00000000033cc795: pop    %r8
  0x00000000033cc797: pop    %rcx
  0x00000000033cc798: pop    %rdx
  0x00000000033cc799: pop    %rsi
  0x00000000033cc79a: pop    %rdi
  0x00000000033cc79b: cmp    0x118(%rbx),%rax
  0x00000000033cc7a2: pop    %rbx
  0x00000000033cc7a3: pop    %rax
  0x00000000033cc7a4: jne    0x00000000033cc7b4
  0x00000000033cc7aa: jmpq   0x00000000033cc4e2
  0x00000000033cc7af: mov    $0xa535d00,%eax
  0x00000000033cc7b4: callq  0x00000000033be160  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100
                                                ;   {runtime_call}
  0x00000000033cc7b9: jmpq   0x00000000033cc4d8
  0x00000000033cc7be: callq  0x00000000033ba700  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100
                                                ;   {runtime_call}
  0x00000000033cc7c3: mov    0x0(%rax),%eax
  0x00000000033cc7c9: mov    $0x6050b00,%eax
  0x00000000033cc7ce: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100
                                                ;   {runtime_call}
  0x00000000033cc7d3: jmpq   0x00000000033cc4e8
  0x00000000033cc7d8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000033cc7e2: push   %rax
  0x00000000033cc7e3: push   %rbx
  0x00000000033cc7e4: mov    0x48(%rax),%rbx
  0x00000000033cc7e8: push   %rdi
  0x00000000033cc7e9: push   %rsi
  0x00000000033cc7ea: push   %rdx
  0x00000000033cc7eb: push   %rcx
  0x00000000033cc7ec: push   %r8
  0x00000000033cc7ee: push   %r9
  0x00000000033cc7f0: push   %r10
  0x00000000033cc7f2: mov    %rsp,%r10
  0x00000000033cc7f5: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc7f9: push   %r10
  0x00000000033cc7fb: push   %r11
  0x00000000033cc7fd: mov    $0x7,%ecx
  0x00000000033cc802: movabs $0x7ffd687c5e40,%r10  ;   {runtime_call}
  0x00000000033cc80c: callq  *%r10
  0x00000000033cc80f: pop    %r11
  0x00000000033cc811: pop    %rsp
  0x00000000033cc812: pop    %r10
  0x00000000033cc814: pop    %r9
  0x00000000033cc816: pop    %r8
  0x00000000033cc818: pop    %rcx
  0x00000000033cc819: pop    %rdx
  0x00000000033cc81a: pop    %rsi
  0x00000000033cc81b: pop    %rdi
  0x00000000033cc81c: cmp    0x118(%rbx),%rax
  0x00000000033cc823: pop    %rbx
  0x00000000033cc824: pop    %rax
  0x00000000033cc825: jne    0x00000000033cc835
  0x00000000033cc82b: jmpq   0x00000000033cc50a
  0x00000000033cc830: mov    $0xa535d00,%eax
  0x00000000033cc835: callq  0x00000000033be160  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96
                                                ;   {runtime_call}
  0x00000000033cc83a: jmpq   0x00000000033cc500
  0x00000000033cc83f: callq  0x00000000033ba700  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96
                                                ;   {runtime_call}
  0x00000000033cc844: mov    0x0(%rax),%eax
  0x00000000033cc84a: mov    $0x6050b00,%eax
  0x00000000033cc84f: callq  0x00000000033bd8e0  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96
                                                ;   {runtime_call}
  0x00000000033cc854: jmpq   0x00000000033cc510
  0x00000000033cc859: nop
  0x00000000033cc85a: nop
  0x00000000033cc85b: mov    0x2a8(%r15),%rax
  0x00000000033cc862: movabs $0x0,%r10
  0x00000000033cc86c: mov    %r10,0x2a8(%r15)
  0x00000000033cc873: movabs $0x0,%r10
  0x00000000033cc87d: mov    %r10,0x2b0(%r15)
  0x00000000033cc884: add    $0x30,%rsp
  0x00000000033cc888: pop    %rbp
  0x00000000033cc889: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cc88e: hlt    
  0x00000000033cc88f: hlt    
  0x00000000033cc890: hlt    
  0x00000000033cc891: hlt    
  0x00000000033cc892: hlt    
  0x00000000033cc893: hlt    
  0x00000000033cc894: hlt    
  0x00000000033cc895: hlt    
  0x00000000033cc896: hlt    
  0x00000000033cc897: hlt    
  0x00000000033cc898: hlt    
  0x00000000033cc899: hlt    
  0x00000000033cc89a: hlt    
  0x00000000033cc89b: hlt    
  0x00000000033cc89c: hlt    
  0x00000000033cc89d: hlt    
  0x00000000033cc89e: hlt    
  0x00000000033cc89f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033cc8a0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033cc8a5: mov    %rsp,-0x28(%rsp)
  0x00000000033cc8aa: sub    $0x80,%rsp
  0x00000000033cc8b1: mov    %rax,0x78(%rsp)
  0x00000000033cc8b6: mov    %rcx,0x70(%rsp)
  0x00000000033cc8bb: mov    %rdx,0x68(%rsp)
  0x00000000033cc8c0: mov    %rbx,0x60(%rsp)
  0x00000000033cc8c5: mov    %rbp,0x50(%rsp)
  0x00000000033cc8ca: mov    %rsi,0x48(%rsp)
  0x00000000033cc8cf: mov    %rdi,0x40(%rsp)
  0x00000000033cc8d4: mov    %r8,0x38(%rsp)
  0x00000000033cc8d9: mov    %r9,0x30(%rsp)
  0x00000000033cc8de: mov    %r10,0x28(%rsp)
  0x00000000033cc8e3: mov    %r11,0x20(%rsp)
  0x00000000033cc8e8: mov    %r12,0x18(%rsp)
  0x00000000033cc8ed: mov    %r13,0x10(%rsp)
  0x00000000033cc8f2: mov    %r14,0x8(%rsp)
  0x00000000033cc8f7: mov    %r15,(%rsp)
  0x00000000033cc8fb: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033cc905: movabs $0x33cc8a5,%rdx    ;   {internal_word}
  0x00000000033cc90f: mov    %rsp,%r8
  0x00000000033cc912: and    $0xfffffffffffffff0,%rsp
  0x00000000033cc916: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033cc91b: hlt    
[Deopt Handler Code]
  0x00000000033cc91c: movabs $0x33cc91c,%r10    ;   {section_word}
  0x00000000033cc926: push   %r10
  0x00000000033cc928: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cc92d: hlt    
  0x00000000033cc92e: hlt    
  0x00000000033cc92f: hlt    
Decoding compiled method 0x00000000033cbf90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c033750} 'parentOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap'
  # parm0:    rdx:rdx   = 'java/util/TreeMap$Entry'
  #           [sp+0x30]  (sp of caller)
  0x00000000033cc0c0: mov    %eax,-0x6000(%rsp)
  0x00000000033cc0c7: push   %rbp
  0x00000000033cc0c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1

  0x00000000033cc0cc: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x00000000033cc0e3
  0x00000000033cc0d0: mov    %r10,%rax
  0x00000000033cc0d3: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9

  0x00000000033cc0d7: add    $0x20,%rsp
  0x00000000033cc0db: pop    %rbp
  0x00000000033cc0dc: test   %eax,-0x73c0e2(%rip)        # 0x0000000002c90000
                                                ;   {poll_return}
  0x00000000033cc0e2: retq   
  0x00000000033cc0e3: mov    %rdx,(%rsp)
  0x00000000033cc0e7: mov    $0xffffff65,%edx
  0x00000000033cc0ec: data16 xchg %ax,%ax
  0x00000000033cc0ef: callq  0x00000000033057a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1
                                                ;   {runtime_call}
  0x00000000033cc0f4: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1

  0x00000000033cc0f5: hlt    
  0x00000000033cc0f6: hlt    
  0x00000000033cc0f7: hlt    
  0x00000000033cc0f8: hlt    
  0x00000000033cc0f9: hlt    
  0x00000000033cc0fa: hlt    
  0x00000000033cc0fb: hlt    
  0x00000000033cc0fc: hlt    
  0x00000000033cc0fd: hlt    
  0x00000000033cc0fe: hlt    
  0x00000000033cc0ff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033cc100: jmpq   0x00000000033ba160  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000033cc105: callq  0x00000000033cc10a
  0x00000000033cc10a: subq   $0x5,(%rsp)
  0x00000000033cc10f: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cc114: hlt    
  0x00000000033cc115: hlt    
  0x00000000033cc116: hlt    
  0x00000000033cc117: hlt    
Decoding compiled method 0x00000000033cbb90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rdx:rdx   = 'java/lang/CharacterDataLatin1'
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033cbce0: mov    0x8(%rdx),%r10d
  0x00000000033cbce4: shl    $0x3,%r10
  0x00000000033cbce8: cmp    %rax,%r10
  0x00000000033cbceb: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033cbcf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033cbcfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033cbd00: mov    %eax,-0x6000(%rsp)
  0x00000000033cbd07: push   %rbp
  0x00000000033cbd08: sub    $0x30,%rsp
  0x00000000033cbd0c: movabs $0x1c0e0ea8,%rax   ;   {metadata(method data for {method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033cbd16: mov    0xdc(%rax),%esi
  0x00000000033cbd1c: add    $0x8,%esi
  0x00000000033cbd1f: mov    %esi,0xdc(%rax)
  0x00000000033cbd25: movabs $0x1c0cf388,%rax   ;   {metadata({method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033cbd2f: and    $0x1ff8,%esi
  0x00000000033cbd35: cmp    $0x0,%esi
  0x00000000033cbd38: je     0x00000000033cbd6c  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0

  0x00000000033cbd3e: and    $0xffff,%r8d
  0x00000000033cbd45: movabs $0x76b3b1b50,%rax  ;   {oop([I)}
  0x00000000033cbd4f: movslq %r8d,%rsi
  0x00000000033cbd52: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000033cbd80
  0x00000000033cbd56: jae    0x00000000033cbd8a
  0x00000000033cbd5c: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7

  0x00000000033cbd60: add    $0x30,%rsp
  0x00000000033cbd64: pop    %rbp
  0x00000000033cbd65: test   %eax,-0x73bc6b(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cbd6b: retq   
  0x00000000033cbd6c: mov    %rax,0x8(%rsp)
  0x00000000033cbd71: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cbd79: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=158}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1
                                                ;   {runtime_call}
  0x00000000033cbd7e: jmp    0x00000000033cbd3e
  0x00000000033cbd80: callq  0x00000000033ba700  ; OopMap{rax=Oop off=165}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ;   {runtime_call}
  0x00000000033cbd85: callq  0x00000000033ba700  ; OopMap{rax=Oop off=170}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ;   {runtime_call}
  0x00000000033cbd8a: mov    %r8,(%rsp)
  0x00000000033cbd8e: callq  0x000000000332cc80  ; OopMap{rax=Oop off=179}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ;   {runtime_call}
  0x00000000033cbd93: nop
  0x00000000033cbd94: nop
  0x00000000033cbd95: mov    0x2a8(%r15),%rax
  0x00000000033cbd9c: movabs $0x0,%r10
  0x00000000033cbda6: mov    %r10,0x2a8(%r15)
  0x00000000033cbdad: movabs $0x0,%r10
  0x00000000033cbdb7: mov    %r10,0x2b0(%r15)
  0x00000000033cbdbe: add    $0x30,%rsp
  0x00000000033cbdc2: pop    %rbp
  0x00000000033cbdc3: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cbdc8: hlt    
  0x00000000033cbdc9: hlt    
  0x00000000033cbdca: hlt    
  0x00000000033cbdcb: hlt    
  0x00000000033cbdcc: hlt    
  0x00000000033cbdcd: hlt    
  0x00000000033cbdce: hlt    
  0x00000000033cbdcf: hlt    
  0x00000000033cbdd0: hlt    
  0x00000000033cbdd1: hlt    
  0x00000000033cbdd2: hlt    
  0x00000000033cbdd3: hlt    
  0x00000000033cbdd4: hlt    
  0x00000000033cbdd5: hlt    
  0x00000000033cbdd6: hlt    
  0x00000000033cbdd7: hlt    
  0x00000000033cbdd8: hlt    
  0x00000000033cbdd9: hlt    
  0x00000000033cbdda: hlt    
  0x00000000033cbddb: hlt    
  0x00000000033cbddc: hlt    
  0x00000000033cbddd: hlt    
  0x00000000033cbdde: hlt    
  0x00000000033cbddf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033cbde0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033cbde5: mov    %rsp,-0x28(%rsp)
  0x00000000033cbdea: sub    $0x80,%rsp
  0x00000000033cbdf1: mov    %rax,0x78(%rsp)
  0x00000000033cbdf6: mov    %rcx,0x70(%rsp)
  0x00000000033cbdfb: mov    %rdx,0x68(%rsp)
  0x00000000033cbe00: mov    %rbx,0x60(%rsp)
  0x00000000033cbe05: mov    %rbp,0x50(%rsp)
  0x00000000033cbe0a: mov    %rsi,0x48(%rsp)
  0x00000000033cbe0f: mov    %rdi,0x40(%rsp)
  0x00000000033cbe14: mov    %r8,0x38(%rsp)
  0x00000000033cbe19: mov    %r9,0x30(%rsp)
  0x00000000033cbe1e: mov    %r10,0x28(%rsp)
  0x00000000033cbe23: mov    %r11,0x20(%rsp)
  0x00000000033cbe28: mov    %r12,0x18(%rsp)
  0x00000000033cbe2d: mov    %r13,0x10(%rsp)
  0x00000000033cbe32: mov    %r14,0x8(%rsp)
  0x00000000033cbe37: mov    %r15,(%rsp)
  0x00000000033cbe3b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033cbe45: movabs $0x33cbde5,%rdx    ;   {internal_word}
  0x00000000033cbe4f: mov    %rsp,%r8
  0x00000000033cbe52: and    $0xfffffffffffffff0,%rsp
  0x00000000033cbe56: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033cbe5b: hlt    
[Deopt Handler Code]
  0x00000000033cbe5c: movabs $0x33cbe5c,%r10    ;   {section_word}
  0x00000000033cbe66: push   %r10
  0x00000000033cbe68: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cbe6d: hlt    
  0x00000000033cbe6e: hlt    
  0x00000000033cbe6f: hlt    
Decoding compiled method 0x00000000033cb7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf13bf8} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000033cb920: mov    0x8(%rdx),%r10d
  0x00000000033cb924: shl    $0x3,%r10
  0x00000000033cb928: cmp    %r10,%rax
  0x00000000033cb92b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033cb931: data16 xchg %ax,%ax
  0x00000000033cb934: nopl   0x0(%rax,%rax,1)
  0x00000000033cb93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033cb940: mov    %eax,-0x6000(%rsp)
  0x00000000033cb947: push   %rbp
  0x00000000033cb948: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1

  0x00000000033cb94c: test   %r8d,%r8d
  0x00000000033cb94f: jl     0x00000000033cb98d  ;*iflt
                                                ; - java.lang.String::charAt@1

  0x00000000033cb951: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6

  0x00000000033cb955: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ; implicit exception: dispatches to 0x00000000033cb9b5
  0x00000000033cb95a: cmp    %ebp,%r8d
  0x00000000033cb95d: jge    0x00000000033cb9a1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10

  0x00000000033cb95f: cmp    %ebp,%r8d
  0x00000000033cb962: jae    0x00000000033cb97a
  0x00000000033cb964: shl    $0x3,%r10
  0x00000000033cb968: movzwl 0x10(%r10,%r8,2),%eax
  0x00000000033cb96e: add    $0x20,%rsp
  0x00000000033cb972: pop    %rbp
  0x00000000033cb973: test   %eax,-0x73b979(%rip)        # 0x0000000002c90000
                                                ;   {poll_return}
  0x00000000033cb979: retq   
  0x00000000033cb97a: mov    $0xffffffe4,%edx
  0x00000000033cb97f: mov    %r8d,%ebp
  0x00000000033cb982: mov    %r10d,(%rsp)
  0x00000000033cb986: nop
  0x00000000033cb987: callq  0x00000000033057a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27
                                                ;   {runtime_call}
  0x00000000033cb98c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27

  0x00000000033cb98d: mov    %rdx,%rbp
  0x00000000033cb990: mov    %r8d,0x4(%rsp)
  0x00000000033cb995: mov    $0xffffff65,%edx
  0x00000000033cb99a: nop
  0x00000000033cb99b: callq  0x00000000033057a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1
                                                ;   {runtime_call}
  0x00000000033cb9a0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1

  0x00000000033cb9a1: mov    %rdx,(%rsp)
  0x00000000033cb9a5: mov    %r8d,0xc(%rsp)
  0x00000000033cb9aa: mov    $0xffffff65,%edx
  0x00000000033cb9af: callq  0x00000000033057a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10
                                                ;   {runtime_call}
  0x00000000033cb9b4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10

  0x00000000033cb9b5: mov    $0xfffffff6,%edx
  0x00000000033cb9ba: nop
  0x00000000033cb9bb: callq  0x00000000033057a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9
                                                ;   {runtime_call}
  0x00000000033cb9c0: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9

  0x00000000033cb9c1: hlt    
  0x00000000033cb9c2: hlt    
  0x00000000033cb9c3: hlt    
  0x00000000033cb9c4: hlt    
  0x00000000033cb9c5: hlt    
  0x00000000033cb9c6: hlt    
  0x00000000033cb9c7: hlt    
  0x00000000033cb9c8: hlt    
  0x00000000033cb9c9: hlt    
  0x00000000033cb9ca: hlt    
  0x00000000033cb9cb: hlt    
  0x00000000033cb9cc: hlt    
  0x00000000033cb9cd: hlt    
  0x00000000033cb9ce: hlt    
  0x00000000033cb9cf: hlt    
  0x00000000033cb9d0: hlt    
  0x00000000033cb9d1: hlt    
  0x00000000033cb9d2: hlt    
  0x00000000033cb9d3: hlt    
  0x00000000033cb9d4: hlt    
  0x00000000033cb9d5: hlt    
  0x00000000033cb9d6: hlt    
  0x00000000033cb9d7: hlt    
  0x00000000033cb9d8: hlt    
  0x00000000033cb9d9: hlt    
  0x00000000033cb9da: hlt    
  0x00000000033cb9db: hlt    
  0x00000000033cb9dc: hlt    
  0x00000000033cb9dd: hlt    
  0x00000000033cb9de: hlt    
  0x00000000033cb9df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033cb9e0: jmpq   0x00000000033ba160  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000033cb9e5: callq  0x00000000033cb9ea
  0x00000000033cb9ea: subq   $0x5,(%rsp)
  0x00000000033cb9ef: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cb9f4: hlt    
  0x00000000033cb9f5: hlt    
  0x00000000033cb9f6: hlt    
  0x00000000033cb9f7: hlt    
Decoding compiled method 0x00000000033d2050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bfa4c10} 'toUpperCase' '(C)C' in 'java/lang/Character'
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x00000000033d21c0: mov    %eax,-0x6000(%rsp)
  0x00000000033d21c7: push   %rbp
  0x00000000033d21c8: sub    $0x40,%rsp
  0x00000000033d21cc: movabs $0x1c10d1c8,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4c10} 'toUpperCase' '(C)C' in 'java/lang/Character')}
  0x00000000033d21d6: mov    0xdc(%rsi),%edi
  0x00000000033d21dc: add    $0x8,%edi
  0x00000000033d21df: mov    %edi,0xdc(%rsi)
  0x00000000033d21e5: movabs $0x1bfa4c08,%rsi   ;   {metadata({method} {0x000000001bfa4c10} 'toUpperCase' '(C)C' in 'java/lang/Character')}
  0x00000000033d21ef: and    $0x1ff8,%edi
  0x00000000033d21f5: cmp    $0x0,%edi
  0x00000000033d21f8: je     0x00000000033d232c  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0

  0x00000000033d21fe: movabs $0x1c10d1c8,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4c10} 'toUpperCase' '(C)C' in 'java/lang/Character')}
  0x00000000033d2208: addq   $0x1,0x108(%rsi)
  0x00000000033d2210: movabs $0x1c10d320,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d221a: mov    0xdc(%rsi),%edi
  0x00000000033d2220: add    $0x8,%edi
  0x00000000033d2223: mov    %edi,0xdc(%rsi)
  0x00000000033d2229: movabs $0x1bfa4ca0,%rsi   ;   {metadata({method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d2233: and    $0x7ffff8,%edi
  0x00000000033d2239: cmp    $0x0,%edi
  0x00000000033d223c: je     0x00000000033d2343
  0x00000000033d2242: movabs $0x1c10d320,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d224c: addq   $0x1,0x108(%rsi)
  0x00000000033d2254: mov    %rdx,%rsi
  0x00000000033d2257: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1
                                                ; - java.lang.Character::toUpperCase@1

  0x00000000033d225a: mov    %esi,0x28(%rsp)
  0x00000000033d225e: nop
  0x00000000033d225f: callq  0x0000000003306620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1
                                                ; - java.lang.Character::toUpperCase@1
                                                ;   {static_call}
  0x00000000033d2264: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000033d235a
  0x00000000033d2267: mov    %rax,%r8
  0x00000000033d226a: movabs $0x1c10d320,%rdx   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d2274: mov    0x8(%r8),%r8d
  0x00000000033d2278: shl    $0x3,%r8
  0x00000000033d227c: cmp    0x120(%rdx),%r8
  0x00000000033d2283: jne    0x00000000033d2292
  0x00000000033d2285: addq   $0x1,0x128(%rdx)
  0x00000000033d228d: jmpq   0x00000000033d22f8
  0x00000000033d2292: cmp    0x130(%rdx),%r8
  0x00000000033d2299: jne    0x00000000033d22a8
  0x00000000033d229b: addq   $0x1,0x138(%rdx)
  0x00000000033d22a3: jmpq   0x00000000033d22f8
  0x00000000033d22a8: cmpq   $0x0,0x120(%rdx)
  0x00000000033d22b3: jne    0x00000000033d22cc
  0x00000000033d22b5: mov    %r8,0x120(%rdx)
  0x00000000033d22bc: movq   $0x1,0x128(%rdx)
  0x00000000033d22c7: jmpq   0x00000000033d22f8
  0x00000000033d22cc: cmpq   $0x0,0x130(%rdx)
  0x00000000033d22d7: jne    0x00000000033d22f0
  0x00000000033d22d9: mov    %r8,0x130(%rdx)
  0x00000000033d22e0: movq   $0x1,0x138(%rdx)
  0x00000000033d22eb: jmpq   0x00000000033d22f8
  0x00000000033d22f0: addq   $0x1,0x118(%rdx)
  0x00000000033d22f8: mov    0x28(%rsp),%r8d
  0x00000000033d22fd: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5
                                                ; - java.lang.Character::toUpperCase@1

  0x00000000033d2300: nop
  0x00000000033d2301: nop
  0x00000000033d2302: nop
  0x00000000033d2303: nop
  0x00000000033d2304: nop
  0x00000000033d2305: movabs $0xffffffffffffffff,%rax
  0x00000000033d230f: callq  0x00000000033063e0  ; OopMap{off=340}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5
                                                ; - java.lang.Character::toUpperCase@1
                                                ;   {virtual_call}
  0x00000000033d2314: and    $0xffff,%eax
  0x00000000033d231a: and    $0xffff,%eax
  0x00000000033d2320: add    $0x40,%rsp
  0x00000000033d2324: pop    %rbp
  0x00000000033d2325: test   %eax,-0x74222b(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d232b: retq   
  0x00000000033d232c: mov    %rsi,0x8(%rsp)
  0x00000000033d2331: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d2339: callq  0x00000000033bede0  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1
                                                ;   {runtime_call}
  0x00000000033d233e: jmpq   0x00000000033d21fe
  0x00000000033d2343: mov    %rsi,0x8(%rsp)
  0x00000000033d2348: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d2350: callq  0x00000000033bede0  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1
                                                ; - java.lang.Character::toUpperCase@1
                                                ;   {runtime_call}
  0x00000000033d2355: jmpq   0x00000000033d2242
  0x00000000033d235a: callq  0x00000000033ba700  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5
                                                ; - java.lang.Character::toUpperCase@1
                                                ;   {runtime_call}
  0x00000000033d235f: nop
  0x00000000033d2360: nop
  0x00000000033d2361: mov    0x2a8(%r15),%rax
  0x00000000033d2368: movabs $0x0,%r10
  0x00000000033d2372: mov    %r10,0x2a8(%r15)
  0x00000000033d2379: movabs $0x0,%r10
  0x00000000033d2383: mov    %r10,0x2b0(%r15)
  0x00000000033d238a: add    $0x40,%rsp
  0x00000000033d238e: pop    %rbp
  0x00000000033d238f: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d2394: hlt    
  0x00000000033d2395: hlt    
  0x00000000033d2396: hlt    
  0x00000000033d2397: hlt    
  0x00000000033d2398: hlt    
  0x00000000033d2399: hlt    
  0x00000000033d239a: hlt    
  0x00000000033d239b: hlt    
  0x00000000033d239c: hlt    
  0x00000000033d239d: hlt    
  0x00000000033d239e: hlt    
  0x00000000033d239f: hlt    
[Stub Code]
  0x00000000033d23a0: nop                       ;   {no_reloc}
  0x00000000033d23a1: nop
  0x00000000033d23a2: nop
  0x00000000033d23a3: nop
  0x00000000033d23a4: nop
  0x00000000033d23a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d23af: jmpq   0x00000000033d23af  ;   {runtime_call}
  0x00000000033d23b4: nop
  0x00000000033d23b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d23bf: jmpq   0x00000000033d23bf  ;   {runtime_call}
[Exception Handler]
  0x00000000033d23c4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033d23c9: mov    %rsp,-0x28(%rsp)
  0x00000000033d23ce: sub    $0x80,%rsp
  0x00000000033d23d5: mov    %rax,0x78(%rsp)
  0x00000000033d23da: mov    %rcx,0x70(%rsp)
  0x00000000033d23df: mov    %rdx,0x68(%rsp)
  0x00000000033d23e4: mov    %rbx,0x60(%rsp)
  0x00000000033d23e9: mov    %rbp,0x50(%rsp)
  0x00000000033d23ee: mov    %rsi,0x48(%rsp)
  0x00000000033d23f3: mov    %rdi,0x40(%rsp)
  0x00000000033d23f8: mov    %r8,0x38(%rsp)
  0x00000000033d23fd: mov    %r9,0x30(%rsp)
  0x00000000033d2402: mov    %r10,0x28(%rsp)
  0x00000000033d2407: mov    %r11,0x20(%rsp)
  0x00000000033d240c: mov    %r12,0x18(%rsp)
  0x00000000033d2411: mov    %r13,0x10(%rsp)
  0x00000000033d2416: mov    %r14,0x8(%rsp)
  0x00000000033d241b: mov    %r15,(%rsp)
  0x00000000033d241f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d2429: movabs $0x33d23c9,%rdx    ;   {internal_word}
  0x00000000033d2433: mov    %rsp,%r8
  0x00000000033d2436: and    $0xfffffffffffffff0,%rsp
  0x00000000033d243a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d243f: hlt    
[Deopt Handler Code]
  0x00000000033d2440: movabs $0x33d2440,%r10    ;   {section_word}
  0x00000000033d244a: push   %r10
  0x00000000033d244c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d2451: hlt    
  0x00000000033d2452: hlt    
  0x00000000033d2453: hlt    
  0x00000000033d2454: hlt    
  0x00000000033d2455: hlt    
  0x00000000033d2456: hlt    
  0x00000000033d2457: hlt    
Decoding compiled method 0x00000000033cb510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf13ab8} 'length' '()I' in 'java/lang/String'
  #           [sp+0x20]  (sp of caller)
  0x00000000033cb640: mov    0x8(%rdx),%r10d
  0x00000000033cb644: shl    $0x3,%r10
  0x00000000033cb648: cmp    %r10,%rax
  0x00000000033cb64b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033cb651: data16 xchg %ax,%ax
  0x00000000033cb654: nopl   0x0(%rax,%rax,1)
  0x00000000033cb65c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033cb660: mov    %eax,-0x6000(%rsp)
  0x00000000033cb667: push   %rbp
  0x00000000033cb668: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1

  0x00000000033cb66c: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1

  0x00000000033cb670: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x00000000033cb681
  0x00000000033cb675: add    $0x10,%rsp
  0x00000000033cb679: pop    %rbp
  0x00000000033cb67a: test   %eax,-0x73b680(%rip)        # 0x0000000002c90000
                                                ;   {poll_return}
  0x00000000033cb680: retq   
  0x00000000033cb681: mov    $0xfffffff6,%edx
  0x00000000033cb686: nop
  0x00000000033cb687: callq  0x00000000033057a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4
                                                ;   {runtime_call}
  0x00000000033cb68c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4

  0x00000000033cb68d: hlt    
  0x00000000033cb68e: hlt    
  0x00000000033cb68f: hlt    
  0x00000000033cb690: hlt    
  0x00000000033cb691: hlt    
  0x00000000033cb692: hlt    
  0x00000000033cb693: hlt    
  0x00000000033cb694: hlt    
  0x00000000033cb695: hlt    
  0x00000000033cb696: hlt    
  0x00000000033cb697: hlt    
  0x00000000033cb698: hlt    
  0x00000000033cb699: hlt    
  0x00000000033cb69a: hlt    
  0x00000000033cb69b: hlt    
  0x00000000033cb69c: hlt    
  0x00000000033cb69d: hlt    
  0x00000000033cb69e: hlt    
  0x00000000033cb69f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033cb6a0: jmpq   0x00000000033ba160  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000033cb6a5: callq  0x00000000033cb6aa
  0x00000000033cb6aa: subq   $0x5,(%rsp)
  0x00000000033cb6af: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cb6b4: hlt    
  0x00000000033cb6b5: hlt    
  0x00000000033cb6b6: hlt    
  0x00000000033cb6b7: hlt    
Decoding compiled method 0x00000000033d1b90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033d1d00: mov    %eax,-0x6000(%rsp)
  0x00000000033d1d07: push   %rbp
  0x00000000033d1d08: sub    $0x30,%rsp
  0x00000000033d1d0c: movabs $0x1c10d320,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d1d16: mov    0xdc(%rsi),%edi
  0x00000000033d1d1c: add    $0x8,%edi
  0x00000000033d1d1f: mov    %edi,0xdc(%rsi)
  0x00000000033d1d25: movabs $0x1bfa4ca0,%rsi   ;   {metadata({method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d1d2f: and    $0x1ff8,%edi
  0x00000000033d1d35: cmp    $0x0,%edi
  0x00000000033d1d38: je     0x00000000033d1e20  ;*iload_0
                                                ; - java.lang.Character::toUpperCase@0

  0x00000000033d1d3e: movabs $0x1c10d320,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d1d48: addq   $0x1,0x108(%rsi)
  0x00000000033d1d50: mov    %rdx,%rsi
  0x00000000033d1d53: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1

  0x00000000033d1d56: mov    %esi,0x20(%rsp)
  0x00000000033d1d5a: nop
  0x00000000033d1d5b: nop
  0x00000000033d1d5c: nop
  0x00000000033d1d5d: nop
  0x00000000033d1d5e: nop
  0x00000000033d1d5f: callq  0x0000000003306620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toUpperCase@1
                                                ;   {static_call}
  0x00000000033d1d64: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000033d1e37
  0x00000000033d1d67: mov    %rax,%r8
  0x00000000033d1d6a: movabs $0x1c10d320,%rdx   ;   {metadata(method data for {method} {0x000000001bfa4ca8} 'toUpperCase' '(I)I' in 'java/lang/Character')}
  0x00000000033d1d74: mov    0x8(%r8),%r8d
  0x00000000033d1d78: shl    $0x3,%r8
  0x00000000033d1d7c: cmp    0x120(%rdx),%r8
  0x00000000033d1d83: jne    0x00000000033d1d92
  0x00000000033d1d85: addq   $0x1,0x128(%rdx)
  0x00000000033d1d8d: jmpq   0x00000000033d1df8
  0x00000000033d1d92: cmp    0x130(%rdx),%r8
  0x00000000033d1d99: jne    0x00000000033d1da8
  0x00000000033d1d9b: addq   $0x1,0x138(%rdx)
  0x00000000033d1da3: jmpq   0x00000000033d1df8
  0x00000000033d1da8: cmpq   $0x0,0x120(%rdx)
  0x00000000033d1db3: jne    0x00000000033d1dcc
  0x00000000033d1db5: mov    %r8,0x120(%rdx)
  0x00000000033d1dbc: movq   $0x1,0x128(%rdx)
  0x00000000033d1dc7: jmpq   0x00000000033d1df8
  0x00000000033d1dcc: cmpq   $0x0,0x130(%rdx)
  0x00000000033d1dd7: jne    0x00000000033d1df0
  0x00000000033d1dd9: mov    %r8,0x130(%rdx)
  0x00000000033d1de0: movq   $0x1,0x138(%rdx)
  0x00000000033d1deb: jmpq   0x00000000033d1df8
  0x00000000033d1df0: addq   $0x1,0x118(%rdx)
  0x00000000033d1df8: mov    0x20(%rsp),%r8d
  0x00000000033d1dfd: mov    %rax,%rdx          ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5

  0x00000000033d1e00: nop
  0x00000000033d1e01: nop
  0x00000000033d1e02: nop
  0x00000000033d1e03: nop
  0x00000000033d1e04: nop
  0x00000000033d1e05: movabs $0xffffffffffffffff,%rax
  0x00000000033d1e0f: callq  0x00000000033063e0  ; OopMap{off=276}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5
                                                ;   {virtual_call}
  0x00000000033d1e14: add    $0x30,%rsp
  0x00000000033d1e18: pop    %rbp
  0x00000000033d1e19: test   %eax,-0x741d1f(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d1e1f: retq   
  0x00000000033d1e20: mov    %rsi,0x8(%rsp)
  0x00000000033d1e25: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d1e2d: callq  0x00000000033bede0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toUpperCase@-1
                                                ;   {runtime_call}
  0x00000000033d1e32: jmpq   0x00000000033d1d3e
  0x00000000033d1e37: callq  0x00000000033ba700  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toUpperCase
                                                ; - java.lang.Character::toUpperCase@5
                                                ;   {runtime_call}
  0x00000000033d1e3c: nop
  0x00000000033d1e3d: nop
  0x00000000033d1e3e: mov    0x2a8(%r15),%rax
  0x00000000033d1e45: movabs $0x0,%r10
  0x00000000033d1e4f: mov    %r10,0x2a8(%r15)
  0x00000000033d1e56: movabs $0x0,%r10
  0x00000000033d1e60: mov    %r10,0x2b0(%r15)
  0x00000000033d1e67: add    $0x30,%rsp
  0x00000000033d1e6b: pop    %rbp
  0x00000000033d1e6c: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d1e71: hlt    
  0x00000000033d1e72: hlt    
  0x00000000033d1e73: hlt    
  0x00000000033d1e74: hlt    
  0x00000000033d1e75: hlt    
  0x00000000033d1e76: hlt    
  0x00000000033d1e77: hlt    
  0x00000000033d1e78: hlt    
  0x00000000033d1e79: hlt    
  0x00000000033d1e7a: hlt    
  0x00000000033d1e7b: hlt    
  0x00000000033d1e7c: hlt    
  0x00000000033d1e7d: hlt    
  0x00000000033d1e7e: hlt    
  0x00000000033d1e7f: hlt    
[Stub Code]
  0x00000000033d1e80: nop                       ;   {no_reloc}
  0x00000000033d1e81: nop
  0x00000000033d1e82: nop
  0x00000000033d1e83: nop
  0x00000000033d1e84: nop
  0x00000000033d1e85: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d1e8f: jmpq   0x00000000033d1e8f  ;   {runtime_call}
  0x00000000033d1e94: nop
  0x00000000033d1e95: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d1e9f: jmpq   0x00000000033d1e9f  ;   {runtime_call}
[Exception Handler]
  0x00000000033d1ea4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033d1ea9: mov    %rsp,-0x28(%rsp)
  0x00000000033d1eae: sub    $0x80,%rsp
  0x00000000033d1eb5: mov    %rax,0x78(%rsp)
  0x00000000033d1eba: mov    %rcx,0x70(%rsp)
  0x00000000033d1ebf: mov    %rdx,0x68(%rsp)
  0x00000000033d1ec4: mov    %rbx,0x60(%rsp)
  0x00000000033d1ec9: mov    %rbp,0x50(%rsp)
  0x00000000033d1ece: mov    %rsi,0x48(%rsp)
  0x00000000033d1ed3: mov    %rdi,0x40(%rsp)
  0x00000000033d1ed8: mov    %r8,0x38(%rsp)
  0x00000000033d1edd: mov    %r9,0x30(%rsp)
  0x00000000033d1ee2: mov    %r10,0x28(%rsp)
  0x00000000033d1ee7: mov    %r11,0x20(%rsp)
  0x00000000033d1eec: mov    %r12,0x18(%rsp)
  0x00000000033d1ef1: mov    %r13,0x10(%rsp)
  0x00000000033d1ef6: mov    %r14,0x8(%rsp)
  0x00000000033d1efb: mov    %r15,(%rsp)
  0x00000000033d1eff: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d1f09: movabs $0x33d1ea9,%rdx    ;   {internal_word}
  0x00000000033d1f13: mov    %rsp,%r8
  0x00000000033d1f16: and    $0xfffffffffffffff0,%rsp
  0x00000000033d1f1a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d1f1f: hlt    
[Deopt Handler Code]
  0x00000000033d1f20: movabs $0x33d1f20,%r10    ;   {section_word}
  0x00000000033d1f2a: push   %r10
  0x00000000033d1f2c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d1f31: hlt    
  0x00000000033d1f32: hlt    
  0x00000000033d1f33: hlt    
  0x00000000033d1f34: hlt    
  0x00000000033d1f35: hlt    
  0x00000000033d1f36: hlt    
  0x00000000033d1f37: hlt    
Decoding compiled method 0x00000000033d1590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rdx:rdx   = 'java/lang/CharacterDataLatin1'
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000033d1700: mov    0x8(%rdx),%r10d
  0x00000000033d1704: shl    $0x3,%r10
  0x00000000033d1708: cmp    %rax,%r10
  0x00000000033d170b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033d1711: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033d171c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033d1720: mov    %eax,-0x6000(%rsp)
  0x00000000033d1727: push   %rbp
  0x00000000033d1728: sub    $0x40,%rsp
  0x00000000033d172c: movabs $0x1c10d4a8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d1736: mov    0xdc(%rax),%esi
  0x00000000033d173c: add    $0x8,%esi
  0x00000000033d173f: mov    %esi,0xdc(%rax)
  0x00000000033d1745: movabs $0x1c0cfbc8,%rax   ;   {metadata({method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d174f: and    $0x1ff8,%esi
  0x00000000033d1755: cmp    $0x0,%esi
  0x00000000033d1758: je     0x00000000033d18bc  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@0

  0x00000000033d175e: movabs $0x1c10d4a8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d1768: addq   $0x1,0x118(%rax)
  0x00000000033d1770: movabs $0x1c0e0ea8,%rax   ;   {metadata(method data for {method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d177a: mov    0xdc(%rax),%esi
  0x00000000033d1780: add    $0x8,%esi
  0x00000000033d1783: mov    %esi,0xdc(%rax)
  0x00000000033d1789: movabs $0x1c0cf388,%rax   ;   {metadata({method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d1793: and    $0x7ffff8,%esi
  0x00000000033d1799: cmp    $0x0,%esi
  0x00000000033d179c: je     0x00000000033d18d3
  0x00000000033d17a2: mov    %r8,%rax
  0x00000000033d17a5: and    $0xffff,%eax
  0x00000000033d17ab: movabs $0x76b3b1b50,%rsi  ;   {oop([I)}
  0x00000000033d17b5: movslq %eax,%rdi
  0x00000000033d17b8: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000000033d18ea
  0x00000000033d17bb: jae    0x00000000033d18f4
  0x00000000033d17c1: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4

  0x00000000033d17c5: mov    %rax,%rsi
  0x00000000033d17c8: and    $0x10000,%esi
  0x00000000033d17ce: cmp    $0x0,%esi
  0x00000000033d17d1: movabs $0x1c10d4a8,%rsi   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d17db: movabs $0x138,%rdi
  0x00000000033d17e5: je     0x00000000033d17f5
  0x00000000033d17eb: movabs $0x148,%rdi
  0x00000000033d17f5: mov    (%rsi,%rdi,1),%rbx
  0x00000000033d17f9: lea    0x1(%rbx),%rbx
  0x00000000033d17fd: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033d1801: je     0x00000000033d18ad  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@12

  0x00000000033d1807: mov    %rax,%rsi
  0x00000000033d180a: and    $0x7fc0000,%esi
  0x00000000033d1810: cmp    $0x7fc0000,%esi
  0x00000000033d1816: movabs $0x1c10d4a8,%rsi   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d1820: movabs $0x158,%rdi
  0x00000000033d182a: je     0x00000000033d183a
  0x00000000033d1830: movabs $0x168,%rdi
  0x00000000033d183a: mov    (%rsi,%rdi,1),%rbx
  0x00000000033d183e: lea    0x1(%rbx),%rbx
  0x00000000033d1842: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033d1846: jne    0x00000000033d1894  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@21

  0x00000000033d184c: cmp    $0xb5,%r8d
  0x00000000033d1853: movabs $0x1c10d4a8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d185d: movabs $0x190,%rsi
  0x00000000033d1867: jne    0x00000000033d1877
  0x00000000033d186d: movabs $0x1a0,%rsi
  0x00000000033d1877: mov    (%rax,%rsi,1),%rdi
  0x00000000033d187b: lea    0x1(%rdi),%rdi
  0x00000000033d187f: mov    %rdi,(%rax,%rsi,1)
  0x00000000033d1883: jne    0x00000000033d18ad  ;*if_icmpne
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@44

  0x00000000033d1889: mov    $0x39c,%r8d
  0x00000000033d188f: jmpq   0x00000000033d18ad  ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@51

  0x00000000033d1894: shl    $0x5,%eax
  0x00000000033d1897: sar    $0x17,%eax
  0x00000000033d189a: sub    %eax,%r8d
  0x00000000033d189d: movabs $0x1c10d4a8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfbd0} 'toUpperCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033d18a7: incl   0x178(%rax)        ;*goto
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@37

  0x00000000033d18ad: mov    %r8,%rax
  0x00000000033d18b0: add    $0x40,%rsp
  0x00000000033d18b4: pop    %rbp
  0x00000000033d18b5: test   %eax,-0x7417bb(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d18bb: retq   
  0x00000000033d18bc: mov    %rax,0x8(%rsp)
  0x00000000033d18c1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d18c9: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@-1
                                                ;   {runtime_call}
  0x00000000033d18ce: jmpq   0x00000000033d175e
  0x00000000033d18d3: mov    %rax,0x8(%rsp)
  0x00000000033d18d8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d18e0: callq  0x00000000033bede0  ; OopMap{off=485}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4
                                                ;   {runtime_call}
  0x00000000033d18e5: jmpq   0x00000000033d17a2
  0x00000000033d18ea: callq  0x00000000033ba700  ; OopMap{rsi=Oop off=495}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4
                                                ;   {runtime_call}
  0x00000000033d18ef: callq  0x00000000033ba700  ; OopMap{rsi=Oop off=500}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4
                                                ;   {runtime_call}
  0x00000000033d18f4: mov    %rax,(%rsp)
  0x00000000033d18f8: callq  0x000000000332cc80  ; OopMap{rsi=Oop off=509}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toUpperCase@4
                                                ;   {runtime_call}
  0x00000000033d18fd: nop
  0x00000000033d18fe: nop
  0x00000000033d18ff: mov    0x2a8(%r15),%rax
  0x00000000033d1906: movabs $0x0,%r10
  0x00000000033d1910: mov    %r10,0x2a8(%r15)
  0x00000000033d1917: movabs $0x0,%r10
  0x00000000033d1921: mov    %r10,0x2b0(%r15)
  0x00000000033d1928: add    $0x40,%rsp
  0x00000000033d192c: pop    %rbp
  0x00000000033d192d: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d1932: hlt    
  0x00000000033d1933: hlt    
  0x00000000033d1934: hlt    
  0x00000000033d1935: hlt    
  0x00000000033d1936: hlt    
  0x00000000033d1937: hlt    
  0x00000000033d1938: hlt    
  0x00000000033d1939: hlt    
  0x00000000033d193a: hlt    
  0x00000000033d193b: hlt    
  0x00000000033d193c: hlt    
  0x00000000033d193d: hlt    
  0x00000000033d193e: hlt    
  0x00000000033d193f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033d1940: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033d1945: mov    %rsp,-0x28(%rsp)
  0x00000000033d194a: sub    $0x80,%rsp
  0x00000000033d1951: mov    %rax,0x78(%rsp)
  0x00000000033d1956: mov    %rcx,0x70(%rsp)
  0x00000000033d195b: mov    %rdx,0x68(%rsp)
  0x00000000033d1960: mov    %rbx,0x60(%rsp)
  0x00000000033d1965: mov    %rbp,0x50(%rsp)
  0x00000000033d196a: mov    %rsi,0x48(%rsp)
  0x00000000033d196f: mov    %rdi,0x40(%rsp)
  0x00000000033d1974: mov    %r8,0x38(%rsp)
  0x00000000033d1979: mov    %r9,0x30(%rsp)
  0x00000000033d197e: mov    %r10,0x28(%rsp)
  0x00000000033d1983: mov    %r11,0x20(%rsp)
  0x00000000033d1988: mov    %r12,0x18(%rsp)
  0x00000000033d198d: mov    %r13,0x10(%rsp)
  0x00000000033d1992: mov    %r14,0x8(%rsp)
  0x00000000033d1997: mov    %r15,(%rsp)
  0x00000000033d199b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d19a5: movabs $0x33d1945,%rdx    ;   {internal_word}
  0x00000000033d19af: mov    %rsp,%r8
  0x00000000033d19b2: and    $0xfffffffffffffff0,%rsp
  0x00000000033d19b6: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d19bb: hlt    
[Deopt Handler Code]
  0x00000000033d19bc: movabs $0x33d19bc,%r10    ;   {section_word}
  0x00000000033d19c6: push   %r10
  0x00000000033d19c8: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d19cd: hlt    
  0x00000000033d19ce: hlt    
  0x00000000033d19cf: hlt    
Decoding compiled method 0x00000000033d0d90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c033918} 'rightOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap'
  # parm0:    rdx:rdx   = 'java/util/TreeMap$Entry'
  #           [sp+0x40]  (sp of caller)
  0x00000000033d0ee0: mov    %eax,-0x6000(%rsp)
  0x00000000033d0ee7: push   %rbp
  0x00000000033d0ee8: sub    $0x30,%rsp
  0x00000000033d0eec: movabs $0x1c0398b0,%rax   ;   {metadata(method data for {method} {0x000000001c033918} 'rightOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap')}
  0x00000000033d0ef6: mov    0xdc(%rax),%esi
  0x00000000033d0efc: add    $0x8,%esi
  0x00000000033d0eff: mov    %esi,0xdc(%rax)
  0x00000000033d0f05: movabs $0x1c033910,%rax   ;   {metadata({method} {0x000000001c033918} 'rightOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap')}
  0x00000000033d0f0f: and    $0x1ff8,%esi
  0x00000000033d0f15: cmp    $0x0,%esi
  0x00000000033d0f18: je     0x00000000033d0f91  ;*aload_0
                                                ; - java.util.TreeMap::rightOf@0

  0x00000000033d0f1e: cmp    $0x0,%rdx
  0x00000000033d0f22: movabs $0x1c0398b0,%rax   ;   {metadata(method data for {method} {0x000000001c033918} 'rightOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap')}
  0x00000000033d0f2c: movabs $0x108,%rsi
  0x00000000033d0f36: jne    0x00000000033d0f46
  0x00000000033d0f3c: movabs $0x118,%rsi
  0x00000000033d0f46: mov    (%rax,%rsi,1),%rdi
  0x00000000033d0f4a: lea    0x1(%rdi),%rdi
  0x00000000033d0f4e: mov    %rdi,(%rax,%rsi,1)
  0x00000000033d0f52: jne    0x00000000033d0f7e  ;*ifnonnull
                                                ; - java.util.TreeMap::rightOf@1

  0x00000000033d0f58: movabs $0x1c0398b0,%rax   ;   {metadata(method data for {method} {0x000000001c033918} 'rightOf' '(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' in 'java/util/TreeMap')}
  0x00000000033d0f62: incl   0x128(%rax)
  0x00000000033d0f68: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::rightOf@5
                                                ;   {oop(NULL)}
  0x00000000033d0f72: add    $0x30,%rsp
  0x00000000033d0f76: pop    %rbp
  0x00000000033d0f77: test   %eax,-0x740e7d(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d0f7d: retq   
  0x00000000033d0f7e: mov    0x1c(%rdx),%eax    ; implicit exception: dispatches to 0x00000000033d0fa8
  0x00000000033d0f81: shl    $0x3,%rax          ;*getfield right
                                                ; - java.util.TreeMap::rightOf@9

  0x00000000033d0f85: add    $0x30,%rsp
  0x00000000033d0f89: pop    %rbp
  0x00000000033d0f8a: test   %eax,-0x740e90(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d0f90: retq   
  0x00000000033d0f91: mov    %rax,0x8(%rsp)
  0x00000000033d0f96: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d0f9e: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=195}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::rightOf@-1
                                                ;   {runtime_call}
  0x00000000033d0fa3: jmpq   0x00000000033d0f1e
  0x00000000033d0fa8: callq  0x00000000033ba700  ; OopMap{off=205}
                                                ;*getfield right
                                                ; - java.util.TreeMap::rightOf@9
                                                ;   {runtime_call}
  0x00000000033d0fad: nop
  0x00000000033d0fae: nop
  0x00000000033d0faf: mov    0x2a8(%r15),%rax
  0x00000000033d0fb6: movabs $0x0,%r10
  0x00000000033d0fc0: mov    %r10,0x2a8(%r15)
  0x00000000033d0fc7: movabs $0x0,%r10
  0x00000000033d0fd1: mov    %r10,0x2b0(%r15)
  0x00000000033d0fd8: add    $0x30,%rsp
  0x00000000033d0fdc: pop    %rbp
  0x00000000033d0fdd: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d0fe2: hlt    
  0x00000000033d0fe3: hlt    
  0x00000000033d0fe4: hlt    
  0x00000000033d0fe5: hlt    
  0x00000000033d0fe6: hlt    
  0x00000000033d0fe7: hlt    
  0x00000000033d0fe8: hlt    
  0x00000000033d0fe9: hlt    
  0x00000000033d0fea: hlt    
  0x00000000033d0feb: hlt    
  0x00000000033d0fec: hlt    
  0x00000000033d0fed: hlt    
  0x00000000033d0fee: hlt    
  0x00000000033d0fef: hlt    
  0x00000000033d0ff0: hlt    
  0x00000000033d0ff1: hlt    
  0x00000000033d0ff2: hlt    
  0x00000000033d0ff3: hlt    
  0x00000000033d0ff4: hlt    
  0x00000000033d0ff5: hlt    
  0x00000000033d0ff6: hlt    
  0x00000000033d0ff7: hlt    
  0x00000000033d0ff8: hlt    
  0x00000000033d0ff9: hlt    
  0x00000000033d0ffa: hlt    
  0x00000000033d0ffb: hlt    
  0x00000000033d0ffc: hlt    
  0x00000000033d0ffd: hlt    
  0x00000000033d0ffe: hlt    
  0x00000000033d0fff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033d1000: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033d1005: mov    %rsp,-0x28(%rsp)
  0x00000000033d100a: sub    $0x80,%rsp
  0x00000000033d1011: mov    %rax,0x78(%rsp)
  0x00000000033d1016: mov    %rcx,0x70(%rsp)
  0x00000000033d101b: mov    %rdx,0x68(%rsp)
  0x00000000033d1020: mov    %rbx,0x60(%rsp)
  0x00000000033d1025: mov    %rbp,0x50(%rsp)
  0x00000000033d102a: mov    %rsi,0x48(%rsp)
  0x00000000033d102f: mov    %rdi,0x40(%rsp)
  0x00000000033d1034: mov    %r8,0x38(%rsp)
  0x00000000033d1039: mov    %r9,0x30(%rsp)
  0x00000000033d103e: mov    %r10,0x28(%rsp)
  0x00000000033d1043: mov    %r11,0x20(%rsp)
  0x00000000033d1048: mov    %r12,0x18(%rsp)
  0x00000000033d104d: mov    %r13,0x10(%rsp)
  0x00000000033d1052: mov    %r14,0x8(%rsp)
  0x00000000033d1057: mov    %r15,(%rsp)
  0x00000000033d105b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d1065: movabs $0x33d1005,%rdx    ;   {internal_word}
  0x00000000033d106f: mov    %rsp,%r8
  0x00000000033d1072: and    $0xfffffffffffffff0,%rsp
  0x00000000033d1076: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d107b: hlt    
[Deopt Handler Code]
  0x00000000033d107c: movabs $0x33d107c,%r10    ;   {section_word}
  0x00000000033d1086: push   %r10
  0x00000000033d1088: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d108d: hlt    
  0x00000000033d108e: hlt    
  0x00000000033d108f: hlt    
Decoding compiled method 0x00000000033d08d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rdx:rdx   = 'java/lang/AbstractStringBuilder'
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033d0a40: mov    0x8(%rdx),%r10d
  0x00000000033d0a44: shl    $0x3,%r10
  0x00000000033d0a48: cmp    %rax,%r10
  0x00000000033d0a4b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033d0a51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033d0a5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033d0a60: mov    %eax,-0x6000(%rsp)
  0x00000000033d0a67: push   %rbp
  0x00000000033d0a68: sub    $0x30,%rsp
  0x00000000033d0a6c: movabs $0x1c116dd8,%rsi   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d0a76: mov    0xdc(%rsi),%edi
  0x00000000033d0a7c: add    $0x8,%edi
  0x00000000033d0a7f: mov    %edi,0xdc(%rsi)
  0x00000000033d0a85: movabs $0x1bf7f8c8,%rsi   ;   {metadata({method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d0a8f: and    $0x1ff8,%edi
  0x00000000033d0a95: cmp    $0x0,%edi
  0x00000000033d0a98: je     0x00000000033d0b88  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0

  0x00000000033d0a9e: mov    0x10(%rdx),%esi
  0x00000000033d0aa1: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2

  0x00000000033d0aa5: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; implicit exception: dispatches to 0x00000000033d0b9f
  0x00000000033d0aa8: mov    %r8,%rdi
  0x00000000033d0aab: sub    %esi,%edi
  0x00000000033d0aad: cmp    $0x0,%edi
  0x00000000033d0ab0: movabs $0x1c116dd8,%rsi   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d0aba: movabs $0x108,%rdi
  0x00000000033d0ac4: jle    0x00000000033d0ad4
  0x00000000033d0aca: movabs $0x118,%rdi
  0x00000000033d0ad4: mov    (%rsi,%rdi,1),%rbx
  0x00000000033d0ad8: lea    0x1(%rbx),%rbx
  0x00000000033d0adc: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033d0ae0: jle    0x00000000033d0b7c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7

  0x00000000033d0ae6: mov    %rdx,%rsi
  0x00000000033d0ae9: movabs $0x1c116dd8,%rdi   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d0af3: mov    0x8(%rsi),%esi
  0x00000000033d0af6: shl    $0x3,%rsi
  0x00000000033d0afa: cmp    0x130(%rdi),%rsi
  0x00000000033d0b01: jne    0x00000000033d0b10
  0x00000000033d0b03: addq   $0x1,0x138(%rdi)
  0x00000000033d0b0b: jmpq   0x00000000033d0b76
  0x00000000033d0b10: cmp    0x140(%rdi),%rsi
  0x00000000033d0b17: jne    0x00000000033d0b26
  0x00000000033d0b19: addq   $0x1,0x148(%rdi)
  0x00000000033d0b21: jmpq   0x00000000033d0b76
  0x00000000033d0b26: cmpq   $0x0,0x130(%rdi)
  0x00000000033d0b31: jne    0x00000000033d0b4a
  0x00000000033d0b33: mov    %rsi,0x130(%rdi)
  0x00000000033d0b3a: movq   $0x1,0x138(%rdi)
  0x00000000033d0b45: jmpq   0x00000000033d0b76
  0x00000000033d0b4a: cmpq   $0x0,0x140(%rdi)
  0x00000000033d0b55: jne    0x00000000033d0b6e
  0x00000000033d0b57: mov    %rsi,0x140(%rdi)
  0x00000000033d0b5e: movq   $0x1,0x148(%rdi)
  0x00000000033d0b69: jmpq   0x00000000033d0b76
  0x00000000033d0b6e: addq   $0x1,0x128(%rdi)
  0x00000000033d0b76: nop
  0x00000000033d0b77: callq  0x00000000033061a0  ; OopMap{off=316}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12
                                                ;   {optimized virtual_call}
  0x00000000033d0b7c: add    $0x30,%rsp
  0x00000000033d0b80: pop    %rbp
  0x00000000033d0b81: test   %eax,-0x740a87(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d0b87: retq   
  0x00000000033d0b88: mov    %rsi,0x8(%rsp)
  0x00000000033d0b8d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d0b95: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=346}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ;   {runtime_call}
  0x00000000033d0b9a: jmpq   0x00000000033d0a9e
  0x00000000033d0b9f: callq  0x00000000033ba700  ; OopMap{rdx=Oop off=356}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ;   {runtime_call}
  0x00000000033d0ba4: nop
  0x00000000033d0ba5: nop
  0x00000000033d0ba6: mov    0x2a8(%r15),%rax
  0x00000000033d0bad: movabs $0x0,%r10
  0x00000000033d0bb7: mov    %r10,0x2a8(%r15)
  0x00000000033d0bbe: movabs $0x0,%r10
  0x00000000033d0bc8: mov    %r10,0x2b0(%r15)
  0x00000000033d0bcf: add    $0x30,%rsp
  0x00000000033d0bd3: pop    %rbp
  0x00000000033d0bd4: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d0bd9: hlt    
  0x00000000033d0bda: hlt    
  0x00000000033d0bdb: hlt    
  0x00000000033d0bdc: hlt    
  0x00000000033d0bdd: hlt    
  0x00000000033d0bde: hlt    
  0x00000000033d0bdf: hlt    
[Stub Code]
  0x00000000033d0be0: nop                       ;   {no_reloc}
  0x00000000033d0be1: nop
  0x00000000033d0be2: nop
  0x00000000033d0be3: nop
  0x00000000033d0be4: nop
  0x00000000033d0be5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d0bef: jmpq   0x00000000033d0bef  ;   {runtime_call}
[Exception Handler]
  0x00000000033d0bf4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033d0bf9: mov    %rsp,-0x28(%rsp)
  0x00000000033d0bfe: sub    $0x80,%rsp
  0x00000000033d0c05: mov    %rax,0x78(%rsp)
  0x00000000033d0c0a: mov    %rcx,0x70(%rsp)
  0x00000000033d0c0f: mov    %rdx,0x68(%rsp)
  0x00000000033d0c14: mov    %rbx,0x60(%rsp)
  0x00000000033d0c19: mov    %rbp,0x50(%rsp)
  0x00000000033d0c1e: mov    %rsi,0x48(%rsp)
  0x00000000033d0c23: mov    %rdi,0x40(%rsp)
  0x00000000033d0c28: mov    %r8,0x38(%rsp)
  0x00000000033d0c2d: mov    %r9,0x30(%rsp)
  0x00000000033d0c32: mov    %r10,0x28(%rsp)
  0x00000000033d0c37: mov    %r11,0x20(%rsp)
  0x00000000033d0c3c: mov    %r12,0x18(%rsp)
  0x00000000033d0c41: mov    %r13,0x10(%rsp)
  0x00000000033d0c46: mov    %r14,0x8(%rsp)
  0x00000000033d0c4b: mov    %r15,(%rsp)
  0x00000000033d0c4f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d0c59: movabs $0x33d0bf9,%rdx    ;   {internal_word}
  0x00000000033d0c63: mov    %rsp,%r8
  0x00000000033d0c66: and    $0xfffffffffffffff0,%rsp
  0x00000000033d0c6a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d0c6f: hlt    
[Deopt Handler Code]
  0x00000000033d0c70: movabs $0x33d0c70,%r10    ;   {section_word}
  0x00000000033d0c7a: push   %r10
  0x00000000033d0c7c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d0c81: hlt    
  0x00000000033d0c82: hlt    
  0x00000000033d0c83: hlt    
  0x00000000033d0c84: hlt    
  0x00000000033d0c85: hlt    
  0x00000000033d0c86: hlt    
  0x00000000033d0c87: hlt    
Decoding compiled method 0x00000000033cf190:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x00000000033cf3a0: mov    %eax,-0x6000(%rsp)
  0x00000000033cf3a7: push   %rbp
  0x00000000033cf3a8: sub    $0xa0,%rsp
  0x00000000033cf3af: mov    %rdx,%r11
  0x00000000033cf3b2: movabs $0x1c1204e8,%rbx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf3bc: mov    0xdc(%rbx),%edx
  0x00000000033cf3c2: add    $0x8,%edx
  0x00000000033cf3c5: mov    %edx,0xdc(%rbx)
  0x00000000033cf3cb: movabs $0x1c01e8a8,%rbx   ;   {metadata({method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf3d5: and    $0x1ff8,%edx
  0x00000000033cf3db: cmp    $0x0,%edx
  0x00000000033cf3de: je     0x00000000033cfc49  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0

  0x00000000033cf3e4: mov    %r9,%r13
  0x00000000033cf3e7: sub    %r8d,%r13d
  0x00000000033cf3ea: cmp    $0x0,%r13d
  0x00000000033cf3ee: movabs $0x1c1204e8,%rbx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf3f8: movabs $0x108,%rdx
  0x00000000033cf402: jge    0x00000000033cf412
  0x00000000033cf408: movabs $0x118,%rdx
  0x00000000033cf412: mov    (%rbx,%rdx,1),%rsi
  0x00000000033cf416: lea    0x1(%rsi),%rsi
  0x00000000033cf41a: mov    %rsi,(%rbx,%rdx,1)
  0x00000000033cf41e: jl     0x00000000033cf5e6  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5

  0x00000000033cf424: mov    %r13,%rbx
  0x00000000033cf427: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000033cf431: movslq %ebx,%rbx
  0x00000000033cf434: mov    %rbx,%rdi
  0x00000000033cf437: cmp    $0xffffff,%rbx
  0x00000000033cf43e: ja     0x00000000033cfc60
  0x00000000033cf444: movabs $0x17,%rsi
  0x00000000033cf44e: lea    (%rsi,%rbx,2),%rsi
  0x00000000033cf452: and    $0xfffffffffffffff8,%rsi
  0x00000000033cf456: mov    0x60(%r15),%rax
  0x00000000033cf45a: lea    (%rax,%rsi,1),%rsi
  0x00000000033cf45e: cmp    0x70(%r15),%rsi
  0x00000000033cf462: ja     0x00000000033cfc60
  0x00000000033cf468: mov    %rsi,0x60(%r15)
  0x00000000033cf46c: sub    %rax,%rsi
  0x00000000033cf46f: movq   $0x1,(%rax)
  0x00000000033cf476: mov    %rdx,%rcx
  0x00000000033cf479: shr    $0x3,%rcx
  0x00000000033cf47d: mov    %ecx,0x8(%rax)
  0x00000000033cf480: mov    %ebx,0xc(%rax)
  0x00000000033cf483: sub    $0x10,%rsi
  0x00000000033cf487: je     0x00000000033cf49e
  0x00000000033cf48d: xor    %rbx,%rbx
  0x00000000033cf490: shr    $0x3,%rsi
  0x00000000033cf494: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000033cf499: dec    %rsi
  0x00000000033cf49c: jne    0x00000000033cf494  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40

  0x00000000033cf49e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50
                                                ; implicit exception: dispatches to 0x00000000033cfc6a
  0x00000000033cf4a2: sub    %r8d,%edx
  0x00000000033cf4a5: movabs $0x1c1204e8,%r9    ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf4af: addq   $0x1,0x208(%r9)
  0x00000000033cf4b7: movabs $0x1c109420,%r9    ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033cf4c1: mov    0xdc(%r9),%edi
  0x00000000033cf4c8: add    $0x8,%edi
  0x00000000033cf4cb: mov    %edi,0xdc(%r9)
  0x00000000033cf4d2: movabs $0x1bffae40,%r9    ;   {metadata({method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033cf4dc: and    $0x7ffff8,%edi
  0x00000000033cf4e2: cmp    $0x0,%edi
  0x00000000033cf4e5: je     0x00000000033cfc6f
  0x00000000033cf4eb: cmp    %r13d,%edx
  0x00000000033cf4ee: movabs $0x1c109420,%r9    ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033cf4f8: movabs $0x108,%rdi
  0x00000000033cf502: jg     0x00000000033cf512
  0x00000000033cf508: movabs $0x118,%rdi
  0x00000000033cf512: mov    (%r9,%rdi,1),%rsi
  0x00000000033cf516: lea    0x1(%rsi),%rsi
  0x00000000033cf51a: mov    %rsi,(%r9,%rdi,1)
  0x00000000033cf51e: jg     0x00000000033cf53d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2
                                                ; - java.util.Arrays::copyOfRange@54

  0x00000000033cf524: movabs $0x1c109420,%r9    ;   {metadata(method data for {method} {0x000000001bffae48} 'min' '(II)I' in 'java/lang/Math')}
  0x00000000033cf52e: incl   0x128(%r9)
  0x00000000033cf535: mov    %rdx,%rsi
  0x00000000033cf538: jmpq   0x00000000033cf540  ;*goto
                                                ; - java.lang.Math::min@6
                                                ; - java.util.Arrays::copyOfRange@54

  0x00000000033cf53d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10
                                                ; - java.util.Arrays::copyOfRange@54

  0x00000000033cf540: movabs $0x1c1204e8,%rdx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf54a: addq   $0x1,0x218(%rdx)
  0x00000000033cf552: mov    %r11,%rdx
  0x00000000033cf555: mov    %rax,%r9
  0x00000000033cf558: mov    $0x0,%edi
  0x00000000033cf55d: mov    %rax,0x70(%rsp)
  0x00000000033cf562: test   %r8d,%r8d
  0x00000000033cf565: jl     0x00000000033cfc86
  0x00000000033cf56b: lea    (%r8,%rsi,1),%rcx
  0x00000000033cf56f: cmp    0xc(%rdx),%ecx
  0x00000000033cf572: ja     0x00000000033cfc86
  0x00000000033cf578: lea    (%rdi,%rsi,1),%rcx
  0x00000000033cf57c: cmp    0xc(%r9),%ecx
  0x00000000033cf580: ja     0x00000000033cfc86
  0x00000000033cf586: test   %esi,%esi
  0x00000000033cf588: jl     0x00000000033cfc86
  0x00000000033cf58e: je     0x00000000033cf5d2
  0x00000000033cf594: movslq %r8d,%r8
  0x00000000033cf597: movslq %edi,%rdi
  0x00000000033cf59a: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000033cf59f: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000033cf5a4: mov    %rsi,%r8
  0x00000000033cf5a7: sub    $0x20,%rsp
  0x00000000033cf5ab: test   $0xf,%esp
  0x00000000033cf5b1: je     0x00000000033cf5c9
  0x00000000033cf5b7: sub    $0x8,%rsp
  0x00000000033cf5bb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000033cf5c0: add    $0x8,%rsp
  0x00000000033cf5c4: jmpq   0x00000000033cf5ce
  0x00000000033cf5c9: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000033cf5ce: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57

  0x00000000033cf5d2: mov    0x70(%rsp),%rax
  0x00000000033cf5d7: add    $0xa0,%rsp
  0x00000000033cf5de: pop    %rbp
  0x00000000033cf5df: test   %eax,-0x73f4e5(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cf5e5: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62

  0x00000000033cf5e6: mov    %r9d,0x80(%rsp)
  0x00000000033cf5ee: xchg   %ax,%ax
  0x00000000033cf5f0: jmpq   0x00000000033cfca0  ;   {no_reloc}
  0x00000000033cf5f5: add    %al,(%rax)
  0x00000000033cf5f7: add    %al,(%rax)
  0x00000000033cf5f9: add    %cl,-0x75(%rcx)
  0x00000000033cf5fc: rex.RXB (bad) 
  0x00000000033cf5fe: lea    0x20(%rax),%rdi
  0x00000000033cf602: cmp    0x70(%r15),%rdi
  0x00000000033cf606: ja     0x00000000033cfcaa
  0x00000000033cf60c: mov    %rdi,0x60(%r15)
  0x00000000033cf610: mov    0xa8(%rdx),%rcx
  0x00000000033cf617: mov    %rcx,(%rax)
  0x00000000033cf61a: mov    %rdx,%rcx
  0x00000000033cf61d: shr    $0x3,%rcx
  0x00000000033cf621: mov    %ecx,0x8(%rax)
  0x00000000033cf624: xor    %rcx,%rcx
  0x00000000033cf627: mov    %ecx,0xc(%rax)
  0x00000000033cf62a: xor    %rcx,%rcx
  0x00000000033cf62d: mov    %rcx,0x10(%rax)
  0x00000000033cf631: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8

  0x00000000033cf635: data16 xchg %ax,%ax
  0x00000000033cf638: jmpq   0x00000000033cfcc6  ;   {no_reloc}
  0x00000000033cf63d: add    %al,(%rax)
  0x00000000033cf63f: add    %al,(%rax)
  0x00000000033cf641: add    %cl,-0x77(%rax)
  0x00000000033cf644: test   %ah,(%rax,%rcx,4)
  0x00000000033cf647: add    %al,(%rax)
  0x00000000033cf649: add    %cl,-0x75(%rcx)
  0x00000000033cf64c: rex.RXB (bad) 
  0x00000000033cf64e: lea    0x18(%rax),%rdi
  0x00000000033cf652: cmp    0x70(%r15),%rdi
  0x00000000033cf656: ja     0x00000000033cfcd0
  0x00000000033cf65c: mov    %rdi,0x60(%r15)
  0x00000000033cf660: mov    0xa8(%rdx),%rcx
  0x00000000033cf667: mov    %rcx,(%rax)
  0x00000000033cf66a: mov    %rdx,%rcx
  0x00000000033cf66d: shr    $0x3,%rcx
  0x00000000033cf671: mov    %ecx,0x8(%rax)
  0x00000000033cf674: xor    %rcx,%rcx
  0x00000000033cf677: mov    %ecx,0xc(%rax)
  0x00000000033cf67a: xor    %rcx,%rcx
  0x00000000033cf67d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12

  0x00000000033cf681: mov    %rax,%rbx
  0x00000000033cf684: movabs $0x1c1204e8,%rdx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf68e: addq   $0x1,0x128(%rdx)
  0x00000000033cf696: movabs $0x1c120780,%rbx   ;   {metadata(method data for {method} {0x000000001bf83058} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x00000000033cf6a0: mov    0xdc(%rbx),%edx
  0x00000000033cf6a6: add    $0x8,%edx
  0x00000000033cf6a9: mov    %edx,0xdc(%rbx)
  0x00000000033cf6af: movabs $0x1bf83050,%rbx   ;   {metadata({method} {0x000000001bf83058} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x00000000033cf6b9: and    $0x7ffff8,%edx
  0x00000000033cf6bf: cmp    $0x0,%edx
  0x00000000033cf6c2: je     0x00000000033cfcdd
  0x00000000033cf6c8: mov    %rax,%rbx
  0x00000000033cf6cb: movabs $0x1c120780,%rdx   ;   {metadata(method data for {method} {0x000000001bf83058} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x00000000033cf6d5: addq   $0x1,0x108(%rdx)
  0x00000000033cf6dd: movabs $0x1c1208b0,%rbx   ;   {metadata(method data for {method} {0x000000001bf7f680} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cf6e7: mov    0xdc(%rbx),%edx
  0x00000000033cf6ed: add    $0x8,%edx
  0x00000000033cf6f0: mov    %edx,0xdc(%rbx)
  0x00000000033cf6f6: movabs $0x1bf7f678,%rbx   ;   {metadata({method} {0x000000001bf7f680} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cf700: and    $0x7ffff8,%edx
  0x00000000033cf706: cmp    $0x0,%edx
  0x00000000033cf709: je     0x00000000033cfcf4
  0x00000000033cf70f: mov    %rax,%rbx
  0x00000000033cf712: movabs $0x1c1208b0,%rdx   ;   {metadata(method data for {method} {0x000000001bf7f680} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cf71c: addq   $0x1,0x108(%rdx)
  0x00000000033cf724: movabs $0x1c0381c8,%rbx   ;   {metadata(method data for {method} {0x000000001bf10470} '<init>' '()V' in 'java/lang/Object')}
  0x00000000033cf72e: mov    0xdc(%rbx),%edx
  0x00000000033cf734: add    $0x8,%edx
  0x00000000033cf737: mov    %edx,0xdc(%rbx)
  0x00000000033cf73d: movabs $0x1bf10468,%rbx   ;   {metadata({method} {0x000000001bf10470} '<init>' '()V' in 'java/lang/Object')}
  0x00000000033cf747: and    $0x7ffff8,%edx
  0x00000000033cf74d: cmp    $0x0,%edx
  0x00000000033cf750: je     0x00000000033cfd0b
  0x00000000033cf756: mov    $0x10,%ebx
  0x00000000033cf75b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000033cf765: mov    %rax,%r13
  0x00000000033cf768: movslq %ebx,%rbx
  0x00000000033cf76b: mov    %rbx,%rdi
  0x00000000033cf76e: cmp    $0xffffff,%rbx
  0x00000000033cf775: ja     0x00000000033cfd22
  0x00000000033cf77b: movabs $0x17,%rsi
  0x00000000033cf785: lea    (%rsi,%rbx,2),%rsi
  0x00000000033cf789: and    $0xfffffffffffffff8,%rsi
  0x00000000033cf78d: mov    0x60(%r15),%rax
  0x00000000033cf791: lea    (%rax,%rsi,1),%rsi
  0x00000000033cf795: cmp    0x70(%r15),%rsi
  0x00000000033cf799: ja     0x00000000033cfd22
  0x00000000033cf79f: mov    %rsi,0x60(%r15)
  0x00000000033cf7a3: sub    %rax,%rsi
  0x00000000033cf7a6: movq   $0x1,(%rax)
  0x00000000033cf7ad: mov    %rdx,%rcx
  0x00000000033cf7b0: shr    $0x3,%rcx
  0x00000000033cf7b4: mov    %ecx,0x8(%rax)
  0x00000000033cf7b7: mov    %ebx,0xc(%rax)
  0x00000000033cf7ba: sub    $0x10,%rsi
  0x00000000033cf7be: je     0x00000000033cf7d5
  0x00000000033cf7c4: xor    %rbx,%rbx
  0x00000000033cf7c7: shr    $0x3,%rsi
  0x00000000033cf7cb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000033cf7d0: dec    %rsi
  0x00000000033cf7d3: jne    0x00000000033cf7cb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16

  0x00000000033cf7d5: mov    %rax,%r10
  0x00000000033cf7d8: shr    $0x3,%r10
  0x00000000033cf7dc: mov    %r10d,0x10(%r13)
  0x00000000033cf7e0: mov    %r13,%rax
  0x00000000033cf7e3: shr    $0x9,%rax
  0x00000000033cf7e7: movabs $0xf074000,%rdx
  0x00000000033cf7f1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16

  0x00000000033cf7f5: mov    %r13,%rax
  0x00000000033cf7f8: movabs $0x1c1204e8,%rdx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf802: mov    0x8(%rax),%eax
  0x00000000033cf805: shl    $0x3,%rax
  0x00000000033cf809: cmp    0x140(%rdx),%rax
  0x00000000033cf810: jne    0x00000000033cf81f
  0x00000000033cf812: addq   $0x1,0x148(%rdx)
  0x00000000033cf81a: jmpq   0x00000000033cf885
  0x00000000033cf81f: cmp    0x150(%rdx),%rax
  0x00000000033cf826: jne    0x00000000033cf835
  0x00000000033cf828: addq   $0x1,0x158(%rdx)
  0x00000000033cf830: jmpq   0x00000000033cf885
  0x00000000033cf835: cmpq   $0x0,0x140(%rdx)
  0x00000000033cf840: jne    0x00000000033cf859
  0x00000000033cf842: mov    %rax,0x140(%rdx)
  0x00000000033cf849: movq   $0x1,0x148(%rdx)
  0x00000000033cf854: jmpq   0x00000000033cf885
  0x00000000033cf859: cmpq   $0x0,0x150(%rdx)
  0x00000000033cf864: jne    0x00000000033cf87d
  0x00000000033cf866: mov    %rax,0x150(%rdx)
  0x00000000033cf86d: movq   $0x1,0x158(%rdx)
  0x00000000033cf878: jmpq   0x00000000033cf885
  0x00000000033cf87d: addq   $0x1,0x138(%rdx)
  0x00000000033cf885: movabs $0x1c120aa8,%rdx   ;   {metadata(method data for {method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf88f: mov    0xdc(%rdx),%esi
  0x00000000033cf895: add    $0x8,%esi
  0x00000000033cf898: mov    %esi,0xdc(%rdx)
  0x00000000033cf89e: movabs $0x1bf837d8,%rdx   ;   {metadata({method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf8a8: and    $0x7ffff8,%esi
  0x00000000033cf8ae: cmp    $0x0,%esi
  0x00000000033cf8b1: je     0x00000000033cfd2c
  0x00000000033cf8b7: mov    %r13,%rax
  0x00000000033cf8ba: movabs $0x1c120aa8,%rdx   ;   {metadata(method data for {method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf8c4: addq   $0x1,0x108(%rdx)
  0x00000000033cf8cc: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@20

  0x00000000033cf8cf: mov    %r13,0x78(%rsp)
  0x00000000033cf8d4: nop
  0x00000000033cf8d5: nop
  0x00000000033cf8d6: nop
  0x00000000033cf8d7: callq  0x00000000033061a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@20
                                                ;   {optimized virtual_call}
  0x00000000033cf8dc: mov    0x78(%rsp),%rax
  0x00000000033cf8e1: movabs $0x1c1204e8,%r8    ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf8eb: mov    0x8(%rax),%eax
  0x00000000033cf8ee: shl    $0x3,%rax
  0x00000000033cf8f2: cmp    0x170(%r8),%rax
  0x00000000033cf8f9: jne    0x00000000033cf908
  0x00000000033cf8fb: addq   $0x1,0x178(%r8)
  0x00000000033cf903: jmpq   0x00000000033cf96e
  0x00000000033cf908: cmp    0x180(%r8),%rax
  0x00000000033cf90f: jne    0x00000000033cf91e
  0x00000000033cf911: addq   $0x1,0x188(%r8)
  0x00000000033cf919: jmpq   0x00000000033cf96e
  0x00000000033cf91e: cmpq   $0x0,0x170(%r8)
  0x00000000033cf929: jne    0x00000000033cf942
  0x00000000033cf92b: mov    %rax,0x170(%r8)
  0x00000000033cf932: movq   $0x1,0x178(%r8)
  0x00000000033cf93d: jmpq   0x00000000033cf96e
  0x00000000033cf942: cmpq   $0x0,0x180(%r8)
  0x00000000033cf94d: jne    0x00000000033cf966
  0x00000000033cf94f: mov    %rax,0x180(%r8)
  0x00000000033cf956: movq   $0x1,0x188(%r8)
  0x00000000033cf961: jmpq   0x00000000033cf96e
  0x00000000033cf966: addq   $0x1,0x168(%r8)
  0x00000000033cf96e: movabs $0x1c120df8,%r8    ;   {metadata(method data for {method} {0x000000001bf83350} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf978: mov    0xdc(%r8),%edx
  0x00000000033cf97f: add    $0x8,%edx
  0x00000000033cf982: mov    %edx,0xdc(%r8)
  0x00000000033cf989: movabs $0x1bf83348,%r8    ;   {metadata({method} {0x000000001bf83350} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf993: and    $0x7ffff8,%edx
  0x00000000033cf999: cmp    $0x0,%edx
  0x00000000033cf99c: je     0x00000000033cfd43
  0x00000000033cf9a2: mov    0x78(%rsp),%rax
  0x00000000033cf9a7: movabs $0x1c120df8,%r8    ;   {metadata(method data for {method} {0x000000001bf83350} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cf9b1: addq   $0x1,0x108(%r8)
  0x00000000033cf9b9: movabs $0x76b447af0,%r8   ;   {oop(" > ")}
  0x00000000033cf9c3: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@25

  0x00000000033cf9c8: nop
  0x00000000033cf9c9: nop
  0x00000000033cf9ca: nop
  0x00000000033cf9cb: nop
  0x00000000033cf9cc: nop
  0x00000000033cf9cd: nop
  0x00000000033cf9ce: nop
  0x00000000033cf9cf: callq  0x00000000033061a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@25
                                                ;   {optimized virtual_call}
  0x00000000033cf9d4: mov    0x78(%rsp),%rax
  0x00000000033cf9d9: movabs $0x1c1204e8,%r8    ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cf9e3: mov    0x8(%rax),%eax
  0x00000000033cf9e6: shl    $0x3,%rax
  0x00000000033cf9ea: cmp    0x1a0(%r8),%rax
  0x00000000033cf9f1: jne    0x00000000033cfa00
  0x00000000033cf9f3: addq   $0x1,0x1a8(%r8)
  0x00000000033cf9fb: jmpq   0x00000000033cfa66
  0x00000000033cfa00: cmp    0x1b0(%r8),%rax
  0x00000000033cfa07: jne    0x00000000033cfa16
  0x00000000033cfa09: addq   $0x1,0x1b8(%r8)
  0x00000000033cfa11: jmpq   0x00000000033cfa66
  0x00000000033cfa16: cmpq   $0x0,0x1a0(%r8)
  0x00000000033cfa21: jne    0x00000000033cfa3a
  0x00000000033cfa23: mov    %rax,0x1a0(%r8)
  0x00000000033cfa2a: movq   $0x1,0x1a8(%r8)
  0x00000000033cfa35: jmpq   0x00000000033cfa66
  0x00000000033cfa3a: cmpq   $0x0,0x1b0(%r8)
  0x00000000033cfa45: jne    0x00000000033cfa5e
  0x00000000033cfa47: mov    %rax,0x1b0(%r8)
  0x00000000033cfa4e: movq   $0x1,0x1b8(%r8)
  0x00000000033cfa59: jmpq   0x00000000033cfa66
  0x00000000033cfa5e: addq   $0x1,0x198(%r8)
  0x00000000033cfa66: movabs $0x1c120aa8,%r8    ;   {metadata(method data for {method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cfa70: mov    0xdc(%r8),%edx
  0x00000000033cfa77: add    $0x8,%edx
  0x00000000033cfa7a: mov    %edx,0xdc(%r8)
  0x00000000033cfa81: movabs $0x1bf837d8,%r8    ;   {metadata({method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cfa8b: and    $0x7ffff8,%edx
  0x00000000033cfa91: cmp    $0x0,%edx
  0x00000000033cfa94: je     0x00000000033cfd5a
  0x00000000033cfa9a: mov    0x78(%rsp),%rax
  0x00000000033cfa9f: movabs $0x1c120aa8,%r8    ;   {metadata(method data for {method} {0x000000001bf837e0} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000000033cfaa9: addq   $0x1,0x108(%r8)
  0x00000000033cfab1: mov    0x80(%rsp),%r8d
  0x00000000033cfab9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@29

  0x00000000033cfabe: nop
  0x00000000033cfabf: callq  0x00000000033061a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2
                                                ; - java.util.Arrays::copyOfRange@29
                                                ;   {optimized virtual_call}
  0x00000000033cfac4: mov    0x78(%rsp),%rax
  0x00000000033cfac9: movabs $0x1c1204e8,%rdx   ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cfad3: mov    0x8(%rax),%eax
  0x00000000033cfad6: shl    $0x3,%rax
  0x00000000033cfada: cmp    0x1d0(%rdx),%rax
  0x00000000033cfae1: jne    0x00000000033cfaf0
  0x00000000033cfae3: addq   $0x1,0x1d8(%rdx)
  0x00000000033cfaeb: jmpq   0x00000000033cfb56
  0x00000000033cfaf0: cmp    0x1e0(%rdx),%rax
  0x00000000033cfaf7: jne    0x00000000033cfb06
  0x00000000033cfaf9: addq   $0x1,0x1e8(%rdx)
  0x00000000033cfb01: jmpq   0x00000000033cfb56
  0x00000000033cfb06: cmpq   $0x0,0x1d0(%rdx)
  0x00000000033cfb11: jne    0x00000000033cfb2a
  0x00000000033cfb13: mov    %rax,0x1d0(%rdx)
  0x00000000033cfb1a: movq   $0x1,0x1d8(%rdx)
  0x00000000033cfb25: jmpq   0x00000000033cfb56
  0x00000000033cfb2a: cmpq   $0x0,0x1e0(%rdx)
  0x00000000033cfb35: jne    0x00000000033cfb4e
  0x00000000033cfb37: mov    %rax,0x1e0(%rdx)
  0x00000000033cfb3e: movq   $0x1,0x1e8(%rdx)
  0x00000000033cfb49: jmpq   0x00000000033cfb56
  0x00000000033cfb4e: addq   $0x1,0x1c8(%rdx)
  0x00000000033cfb56: movabs $0x1c121160,%rdx   ;   {metadata(method data for {method} {0x000000001bf84670} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x00000000033cfb60: mov    0xdc(%rdx),%esi
  0x00000000033cfb66: add    $0x8,%esi
  0x00000000033cfb69: mov    %esi,0xdc(%rdx)
  0x00000000033cfb6f: movabs $0x1bf84668,%rdx   ;   {metadata({method} {0x000000001bf84670} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x00000000033cfb79: and    $0x7ffff8,%esi
  0x00000000033cfb7f: cmp    $0x0,%esi
  0x00000000033cfb82: je     0x00000000033cfd71
  0x00000000033cfb88: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x00000000033cfb92: mov    0x60(%r15),%rax
  0x00000000033cfb96: lea    0x18(%rax),%rdi
  0x00000000033cfb9a: cmp    0x70(%r15),%rdi
  0x00000000033cfb9e: ja     0x00000000033cfd88
  0x00000000033cfba4: mov    %rdi,0x60(%r15)
  0x00000000033cfba8: mov    0xa8(%rdx),%rcx
  0x00000000033cfbaf: mov    %rcx,(%rax)
  0x00000000033cfbb2: mov    %rdx,%rcx
  0x00000000033cfbb5: shr    $0x3,%rcx
  0x00000000033cfbb9: mov    %ecx,0x8(%rax)
  0x00000000033cfbbc: xor    %rcx,%rcx
  0x00000000033cfbbf: mov    %ecx,0xc(%rax)
  0x00000000033cfbc2: xor    %rcx,%rcx
  0x00000000033cfbc5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0
                                                ; - java.util.Arrays::copyOfRange@32

  0x00000000033cfbc9: mov    0x78(%rsp),%r8
  0x00000000033cfbce: mov    0x10(%r8),%r9d
  0x00000000033cfbd2: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5
                                                ; - java.util.Arrays::copyOfRange@32

  0x00000000033cfbd6: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10
                                                ; - java.util.Arrays::copyOfRange@32

  0x00000000033cfbda: mov    %rax,%r8
  0x00000000033cfbdd: movabs $0x1c121160,%rdx   ;   {metadata(method data for {method} {0x000000001bf84670} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x00000000033cfbe7: addq   $0x1,0x108(%rdx)
  0x00000000033cfbef: mov    %r9,%r8
  0x00000000033cfbf2: mov    $0x0,%r9d
  0x00000000033cfbf8: mov    %rax,%rdx          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13
                                                ; - java.util.Arrays::copyOfRange@32

  0x00000000033cfbfb: mov    %rax,0x90(%rsp)
  0x00000000033cfc03: nop
  0x00000000033cfc04: nop
  0x00000000033cfc05: nop
  0x00000000033cfc06: nop
  0x00000000033cfc07: callq  0x00000000033061a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13
                                                ; - java.util.Arrays::copyOfRange@32
                                                ;   {optimized virtual_call}
  0x00000000033cfc0c: mov    0x88(%rsp),%rax
  0x00000000033cfc14: movabs $0x1c1204e8,%r8    ;   {metadata(method data for {method} {0x000000001c01e8b0} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000000033cfc1e: addq   $0x1,0x1f8(%r8)
  0x00000000033cfc26: mov    0x90(%rsp),%r8
  0x00000000033cfc2e: mov    0x88(%rsp),%rdx    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35

  0x00000000033cfc36: nop
  0x00000000033cfc37: callq  0x00000000033061a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35
                                                ;   {optimized virtual_call}
  0x00000000033cfc3c: mov    0x88(%rsp),%rax
  0x00000000033cfc44: jmpq   0x00000000033cfdc0
  0x00000000033cfc49: mov    %rbx,0x8(%rsp)
  0x00000000033cfc4e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfc56: callq  0x00000000033bede0  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1
                                                ;   {runtime_call}
  0x00000000033cfc5b: jmpq   0x00000000033cf3e4
  0x00000000033cfc60: callq  0x00000000033bb780  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40
                                                ;   {runtime_call}
  0x00000000033cfc65: jmpq   0x00000000033cf49e
  0x00000000033cfc6a: callq  0x00000000033ba700  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50
                                                ;   {runtime_call}
  0x00000000033cfc6f: mov    %r9,0x8(%rsp)
  0x00000000033cfc74: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfc7c: callq  0x00000000033bede0  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1
                                                ; - java.util.Arrays::copyOfRange@54
                                                ;   {runtime_call}
  0x00000000033cfc81: jmpq   0x00000000033cf4eb
  0x00000000033cfc86: nop
  0x00000000033cfc87: callq  0x0000000003306620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57
                                                ;   {static_call}
  0x00000000033cfc8c: jmpq   0x00000000033cf5d2
  0x00000000033cfc91: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000033cfc9b: mov    $0xa050f00,%eax
  0x00000000033cfca0: callq  0x00000000033bdd20  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8
                                                ;   {runtime_call}
  0x00000000033cfca5: jmpq   0x00000000033cf5f0
  0x00000000033cfcaa: mov    %rdx,%rdx
  0x00000000033cfcad: callq  0x00000000033bae80  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8
                                                ;   {runtime_call}
  0x00000000033cfcb2: jmpq   0x00000000033cf635
  0x00000000033cfcb7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000033cfcc1: mov    $0xa050f00,%eax
  0x00000000033cfcc6: callq  0x00000000033bdd20  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12
                                                ;   {runtime_call}
  0x00000000033cfccb: jmpq   0x00000000033cf638
  0x00000000033cfcd0: mov    %rdx,%rdx
  0x00000000033cfcd3: callq  0x00000000033bae80  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12
                                                ;   {runtime_call}
  0x00000000033cfcd8: jmpq   0x00000000033cf681
  0x00000000033cfcdd: mov    %rbx,0x8(%rsp)
  0x00000000033cfce2: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfcea: callq  0x00000000033bede0  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {runtime_call}
  0x00000000033cfcef: jmpq   0x00000000033cf6c8
  0x00000000033cfcf4: mov    %rbx,0x8(%rsp)
  0x00000000033cfcf9: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd01: callq  0x00000000033bede0  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {runtime_call}
  0x00000000033cfd06: jmpq   0x00000000033cf70f
  0x00000000033cfd0b: mov    %rbx,0x8(%rsp)
  0x00000000033cfd10: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd18: callq  0x00000000033bede0  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.lang.AbstractStringBuilder::<init>@1
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {runtime_call}
  0x00000000033cfd1d: jmpq   0x00000000033cf756
  0x00000000033cfd22: callq  0x00000000033bb780  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6
                                                ; - java.lang.StringBuilder::<init>@3
                                                ; - java.util.Arrays::copyOfRange@16
                                                ;   {runtime_call}
  0x00000000033cfd27: jmpq   0x00000000033cf7d5
  0x00000000033cfd2c: mov    %rdx,0x8(%rsp)
  0x00000000033cfd31: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd39: callq  0x00000000033bede0  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@20
                                                ;   {runtime_call}
  0x00000000033cfd3e: jmpq   0x00000000033cf8b7
  0x00000000033cfd43: mov    %r8,0x8(%rsp)
  0x00000000033cfd48: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd50: callq  0x00000000033bede0  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@25
                                                ;   {runtime_call}
  0x00000000033cfd55: jmpq   0x00000000033cf9a2
  0x00000000033cfd5a: mov    %r8,0x8(%rsp)
  0x00000000033cfd5f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd67: callq  0x00000000033bede0  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1
                                                ; - java.util.Arrays::copyOfRange@29
                                                ;   {runtime_call}
  0x00000000033cfd6c: jmpq   0x00000000033cfa9a
  0x00000000033cfd71: mov    %rdx,0x8(%rsp)
  0x00000000033cfd76: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cfd7e: callq  0x00000000033bede0  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1
                                                ; - java.util.Arrays::copyOfRange@32
                                                ;   {runtime_call}
  0x00000000033cfd83: jmpq   0x00000000033cfb88
  0x00000000033cfd88: mov    %rdx,%rdx
  0x00000000033cfd8b: callq  0x00000000033bae80  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0
                                                ; - java.util.Arrays::copyOfRange@32
                                                ;   {runtime_call}
  0x00000000033cfd90: jmpq   0x00000000033cfbc9
  0x00000000033cfd95: nop
  0x00000000033cfd96: nop
  0x00000000033cfd97: mov    0x2a8(%r15),%rax
  0x00000000033cfd9e: movabs $0x0,%r10
  0x00000000033cfda8: mov    %r10,0x2a8(%r15)
  0x00000000033cfdaf: movabs $0x0,%r10
  0x00000000033cfdb9: mov    %r10,0x2b0(%r15)
  0x00000000033cfdc0: add    $0xa0,%rsp
  0x00000000033cfdc7: pop    %rbp
  0x00000000033cfdc8: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cfdcd: hlt    
  0x00000000033cfdce: hlt    
  0x00000000033cfdcf: hlt    
  0x00000000033cfdd0: hlt    
  0x00000000033cfdd1: hlt    
  0x00000000033cfdd2: hlt    
  0x00000000033cfdd3: hlt    
  0x00000000033cfdd4: hlt    
  0x00000000033cfdd5: hlt    
  0x00000000033cfdd6: hlt    
  0x00000000033cfdd7: hlt    
  0x00000000033cfdd8: hlt    
  0x00000000033cfdd9: hlt    
  0x00000000033cfdda: hlt    
  0x00000000033cfddb: hlt    
  0x00000000033cfddc: hlt    
  0x00000000033cfddd: hlt    
  0x00000000033cfdde: hlt    
  0x00000000033cfddf: hlt    
[Stub Code]
  0x00000000033cfde0: nop                       ;   {no_reloc}
  0x00000000033cfde1: nop
  0x00000000033cfde2: nop
  0x00000000033cfde3: nop
  0x00000000033cfde4: nop
  0x00000000033cfde5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfdef: jmpq   0x00000000033cfdef  ;   {runtime_call}
  0x00000000033cfdf4: nop
  0x00000000033cfdf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfdff: jmpq   0x00000000033cfdff  ;   {runtime_call}
  0x00000000033cfe04: nop
  0x00000000033cfe05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfe0f: jmpq   0x00000000033cfe0f  ;   {runtime_call}
  0x00000000033cfe14: nop
  0x00000000033cfe15: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfe1f: jmpq   0x00000000033cfe1f  ;   {runtime_call}
  0x00000000033cfe24: nop
  0x00000000033cfe25: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfe2f: jmpq   0x00000000033cfe2f  ;   {runtime_call}
  0x00000000033cfe34: nop
  0x00000000033cfe35: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cfe3f: jmpq   0x00000000033cfe3f  ;   {runtime_call}
[Exception Handler]
  0x00000000033cfe44: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033cfe49: mov    %rsp,-0x28(%rsp)
  0x00000000033cfe4e: sub    $0x80,%rsp
  0x00000000033cfe55: mov    %rax,0x78(%rsp)
  0x00000000033cfe5a: mov    %rcx,0x70(%rsp)
  0x00000000033cfe5f: mov    %rdx,0x68(%rsp)
  0x00000000033cfe64: mov    %rbx,0x60(%rsp)
  0x00000000033cfe69: mov    %rbp,0x50(%rsp)
  0x00000000033cfe6e: mov    %rsi,0x48(%rsp)
  0x00000000033cfe73: mov    %rdi,0x40(%rsp)
  0x00000000033cfe78: mov    %r8,0x38(%rsp)
  0x00000000033cfe7d: mov    %r9,0x30(%rsp)
  0x00000000033cfe82: mov    %r10,0x28(%rsp)
  0x00000000033cfe87: mov    %r11,0x20(%rsp)
  0x00000000033cfe8c: mov    %r12,0x18(%rsp)
  0x00000000033cfe91: mov    %r13,0x10(%rsp)
  0x00000000033cfe96: mov    %r14,0x8(%rsp)
  0x00000000033cfe9b: mov    %r15,(%rsp)
  0x00000000033cfe9f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033cfea9: movabs $0x33cfe49,%rdx    ;   {internal_word}
  0x00000000033cfeb3: mov    %rsp,%r8
  0x00000000033cfeb6: and    $0xfffffffffffffff0,%rsp
  0x00000000033cfeba: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033cfebf: hlt    
[Deopt Handler Code]
  0x00000000033cfec0: movabs $0x33cfec0,%r10    ;   {section_word}
  0x00000000033cfeca: push   %r10
  0x00000000033cfecc: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cfed1: hlt    
  0x00000000033cfed2: hlt    
  0x00000000033cfed3: hlt    
  0x00000000033cfed4: hlt    
  0x00000000033cfed5: hlt    
  0x00000000033cfed6: hlt    
  0x00000000033cfed7: hlt    
Decoding compiled method 0x00000000033cecd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bfa4b80} 'toLowerCase' '(I)I' in 'java/lang/Character'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033cee40: mov    %eax,-0x6000(%rsp)
  0x00000000033cee47: push   %rbp
  0x00000000033cee48: sub    $0x30,%rsp
  0x00000000033cee4c: movabs $0x1c0e08f0,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4b80} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00000000033cee56: mov    0xdc(%rsi),%edi
  0x00000000033cee5c: add    $0x8,%edi
  0x00000000033cee5f: mov    %edi,0xdc(%rsi)
  0x00000000033cee65: movabs $0x1bfa4b78,%rsi   ;   {metadata({method} {0x000000001bfa4b80} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00000000033cee6f: and    $0x1ff8,%edi
  0x00000000033cee75: cmp    $0x0,%edi
  0x00000000033cee78: je     0x00000000033cef60  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0

  0x00000000033cee7e: movabs $0x1c0e08f0,%rsi   ;   {metadata(method data for {method} {0x000000001bfa4b80} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00000000033cee88: addq   $0x1,0x108(%rsi)
  0x00000000033cee90: mov    %rdx,%rsi
  0x00000000033cee93: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1

  0x00000000033cee96: mov    %esi,0x20(%rsp)
  0x00000000033cee9a: nop
  0x00000000033cee9b: nop
  0x00000000033cee9c: nop
  0x00000000033cee9d: nop
  0x00000000033cee9e: nop
  0x00000000033cee9f: callq  0x0000000003306620  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1
                                                ;   {static_call}
  0x00000000033ceea4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000033cef77
  0x00000000033ceea7: mov    %rax,%r8
  0x00000000033ceeaa: movabs $0x1c0e08f0,%rdx   ;   {metadata(method data for {method} {0x000000001bfa4b80} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x00000000033ceeb4: mov    0x8(%r8),%r8d
  0x00000000033ceeb8: shl    $0x3,%r8
  0x00000000033ceebc: cmp    0x120(%rdx),%r8
  0x00000000033ceec3: jne    0x00000000033ceed2
  0x00000000033ceec5: addq   $0x1,0x128(%rdx)
  0x00000000033ceecd: jmpq   0x00000000033cef38
  0x00000000033ceed2: cmp    0x130(%rdx),%r8
  0x00000000033ceed9: jne    0x00000000033ceee8
  0x00000000033ceedb: addq   $0x1,0x138(%rdx)
  0x00000000033ceee3: jmpq   0x00000000033cef38
  0x00000000033ceee8: cmpq   $0x0,0x120(%rdx)
  0x00000000033ceef3: jne    0x00000000033cef0c
  0x00000000033ceef5: mov    %r8,0x120(%rdx)
  0x00000000033ceefc: movq   $0x1,0x128(%rdx)
  0x00000000033cef07: jmpq   0x00000000033cef38
  0x00000000033cef0c: cmpq   $0x0,0x130(%rdx)
  0x00000000033cef17: jne    0x00000000033cef30
  0x00000000033cef19: mov    %r8,0x130(%rdx)
  0x00000000033cef20: movq   $0x1,0x138(%rdx)
  0x00000000033cef2b: jmpq   0x00000000033cef38
  0x00000000033cef30: addq   $0x1,0x118(%rdx)
  0x00000000033cef38: mov    0x20(%rsp),%r8d
  0x00000000033cef3d: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5

  0x00000000033cef40: nop
  0x00000000033cef41: nop
  0x00000000033cef42: nop
  0x00000000033cef43: nop
  0x00000000033cef44: nop
  0x00000000033cef45: movabs $0xffffffffffffffff,%rax
  0x00000000033cef4f: callq  0x00000000033063e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5
                                                ;   {virtual_call}
  0x00000000033cef54: add    $0x30,%rsp
  0x00000000033cef58: pop    %rbp
  0x00000000033cef59: test   %eax,-0x73ee5f(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cef5f: retq   
  0x00000000033cef60: mov    %rsi,0x8(%rsp)
  0x00000000033cef65: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cef6d: callq  0x00000000033bede0  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1
                                                ;   {runtime_call}
  0x00000000033cef72: jmpq   0x00000000033cee7e
  0x00000000033cef77: callq  0x00000000033ba700  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5
                                                ;   {runtime_call}
  0x00000000033cef7c: nop
  0x00000000033cef7d: nop
  0x00000000033cef7e: mov    0x2a8(%r15),%rax
  0x00000000033cef85: movabs $0x0,%r10
  0x00000000033cef8f: mov    %r10,0x2a8(%r15)
  0x00000000033cef96: movabs $0x0,%r10
  0x00000000033cefa0: mov    %r10,0x2b0(%r15)
  0x00000000033cefa7: add    $0x30,%rsp
  0x00000000033cefab: pop    %rbp
  0x00000000033cefac: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cefb1: hlt    
  0x00000000033cefb2: hlt    
  0x00000000033cefb3: hlt    
  0x00000000033cefb4: hlt    
  0x00000000033cefb5: hlt    
  0x00000000033cefb6: hlt    
  0x00000000033cefb7: hlt    
  0x00000000033cefb8: hlt    
  0x00000000033cefb9: hlt    
  0x00000000033cefba: hlt    
  0x00000000033cefbb: hlt    
  0x00000000033cefbc: hlt    
  0x00000000033cefbd: hlt    
  0x00000000033cefbe: hlt    
  0x00000000033cefbf: hlt    
[Stub Code]
  0x00000000033cefc0: nop                       ;   {no_reloc}
  0x00000000033cefc1: nop
  0x00000000033cefc2: nop
  0x00000000033cefc3: nop
  0x00000000033cefc4: nop
  0x00000000033cefc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cefcf: jmpq   0x00000000033cefcf  ;   {runtime_call}
  0x00000000033cefd4: nop
  0x00000000033cefd5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cefdf: jmpq   0x00000000033cefdf  ;   {runtime_call}
[Exception Handler]
  0x00000000033cefe4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033cefe9: mov    %rsp,-0x28(%rsp)
  0x00000000033cefee: sub    $0x80,%rsp
  0x00000000033ceff5: mov    %rax,0x78(%rsp)
  0x00000000033ceffa: mov    %rcx,0x70(%rsp)
  0x00000000033cefff: mov    %rdx,0x68(%rsp)
  0x00000000033cf004: mov    %rbx,0x60(%rsp)
  0x00000000033cf009: mov    %rbp,0x50(%rsp)
  0x00000000033cf00e: mov    %rsi,0x48(%rsp)
  0x00000000033cf013: mov    %rdi,0x40(%rsp)
  0x00000000033cf018: mov    %r8,0x38(%rsp)
  0x00000000033cf01d: mov    %r9,0x30(%rsp)
  0x00000000033cf022: mov    %r10,0x28(%rsp)
  0x00000000033cf027: mov    %r11,0x20(%rsp)
  0x00000000033cf02c: mov    %r12,0x18(%rsp)
  0x00000000033cf031: mov    %r13,0x10(%rsp)
  0x00000000033cf036: mov    %r14,0x8(%rsp)
  0x00000000033cf03b: mov    %r15,(%rsp)
  0x00000000033cf03f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033cf049: movabs $0x33cefe9,%rdx    ;   {internal_word}
  0x00000000033cf053: mov    %rsp,%r8
  0x00000000033cf056: and    $0xfffffffffffffff0,%rsp
  0x00000000033cf05a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033cf05f: hlt    
[Deopt Handler Code]
  0x00000000033cf060: movabs $0x33cf060,%r10    ;   {section_word}
  0x00000000033cf06a: push   %r10
  0x00000000033cf06c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cf071: hlt    
  0x00000000033cf072: hlt    
  0x00000000033cf073: hlt    
  0x00000000033cf074: hlt    
  0x00000000033cf075: hlt    
  0x00000000033cf076: hlt    
  0x00000000033cf077: hlt    
Decoding compiled method 0x00000000033ce750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rdx:rdx   = 'java/lang/CharacterDataLatin1'
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000033ce8c0: mov    0x8(%rdx),%r10d
  0x00000000033ce8c4: shl    $0x3,%r10
  0x00000000033ce8c8: cmp    %rax,%r10
  0x00000000033ce8cb: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033ce8d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033ce8dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033ce8e0: mov    %eax,-0x6000(%rsp)
  0x00000000033ce8e7: push   %rbp
  0x00000000033ce8e8: sub    $0x40,%rsp
  0x00000000033ce8ec: movabs $0x1c0e0ce8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce8f6: mov    0xdc(%rax),%esi
  0x00000000033ce8fc: add    $0x8,%esi
  0x00000000033ce8ff: mov    %esi,0xdc(%rax)
  0x00000000033ce905: movabs $0x1c0cfb08,%rax   ;   {metadata({method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce90f: and    $0x1ff8,%esi
  0x00000000033ce915: cmp    $0x0,%esi
  0x00000000033ce918: je     0x00000000033cea27  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0

  0x00000000033ce91e: movabs $0x1c0e0ce8,%rax   ;   {metadata(method data for {method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce928: addq   $0x1,0x118(%rax)
  0x00000000033ce930: movabs $0x1c0e0ea8,%rax   ;   {metadata(method data for {method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce93a: mov    0xdc(%rax),%esi
  0x00000000033ce940: add    $0x8,%esi
  0x00000000033ce943: mov    %esi,0xdc(%rax)
  0x00000000033ce949: movabs $0x1c0cf388,%rax   ;   {metadata({method} {0x000000001c0cf390} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce953: and    $0x7ffff8,%esi
  0x00000000033ce959: cmp    $0x0,%esi
  0x00000000033ce95c: je     0x00000000033cea3e
  0x00000000033ce962: mov    %r8,%rax
  0x00000000033ce965: and    $0xffff,%eax
  0x00000000033ce96b: movabs $0x76b3b1b50,%rsi  ;   {oop([I)}
  0x00000000033ce975: movslq %eax,%rdi
  0x00000000033ce978: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x00000000033cea55
  0x00000000033ce97b: jae    0x00000000033cea5f
  0x00000000033ce981: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4

  0x00000000033ce985: mov    %rax,%rsi
  0x00000000033ce988: and    $0x20000,%esi
  0x00000000033ce98e: cmp    $0x0,%esi
  0x00000000033ce991: movabs $0x1c0e0ce8,%rsi   ;   {metadata(method data for {method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce99b: movabs $0x138,%rdi
  0x00000000033ce9a5: je     0x00000000033ce9b5
  0x00000000033ce9ab: movabs $0x148,%rdi
  0x00000000033ce9b5: mov    (%rsi,%rdi,1),%rbx
  0x00000000033ce9b9: lea    0x1(%rbx),%rbx
  0x00000000033ce9bd: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033ce9c1: je     0x00000000033cea18  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12

  0x00000000033ce9c7: mov    %rax,%rsi
  0x00000000033ce9ca: and    $0x7fc0000,%esi
  0x00000000033ce9d0: cmp    $0x7fc0000,%esi
  0x00000000033ce9d6: movabs $0x1c0e0ce8,%rsi   ;   {metadata(method data for {method} {0x000000001c0cfb10} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000000033ce9e0: movabs $0x158,%rdi
  0x00000000033ce9ea: je     0x00000000033ce9fa
  0x00000000033ce9f0: movabs $0x168,%rdi
  0x00000000033ce9fa: mov    (%rsi,%rdi,1),%rbx
  0x00000000033ce9fe: lea    0x1(%rbx),%rbx
  0x00000000033cea02: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033cea06: je     0x00000000033cea18  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21

  0x00000000033cea0c: shl    $0x5,%eax
  0x00000000033cea0f: sar    $0x17,%eax
  0x00000000033cea12: add    %r8d,%eax
  0x00000000033cea15: mov    %rax,%r8           ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37

  0x00000000033cea18: mov    %r8,%rax
  0x00000000033cea1b: add    $0x40,%rsp
  0x00000000033cea1f: pop    %rbp
  0x00000000033cea20: test   %eax,-0x73e926(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cea26: retq   
  0x00000000033cea27: mov    %rax,0x8(%rsp)
  0x00000000033cea2c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cea34: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=377}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1
                                                ;   {runtime_call}
  0x00000000033cea39: jmpq   0x00000000033ce91e
  0x00000000033cea3e: mov    %rax,0x8(%rsp)
  0x00000000033cea43: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cea4b: callq  0x00000000033bede0  ; OopMap{off=400}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4
                                                ;   {runtime_call}
  0x00000000033cea50: jmpq   0x00000000033ce962
  0x00000000033cea55: callq  0x00000000033ba700  ; OopMap{rsi=Oop off=410}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4
                                                ;   {runtime_call}
  0x00000000033cea5a: callq  0x00000000033ba700  ; OopMap{rsi=Oop off=415}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4
                                                ;   {runtime_call}
  0x00000000033cea5f: mov    %rax,(%rsp)
  0x00000000033cea63: callq  0x000000000332cc80  ; OopMap{rsi=Oop off=424}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4
                                                ;   {runtime_call}
  0x00000000033cea68: nop
  0x00000000033cea69: nop
  0x00000000033cea6a: mov    0x2a8(%r15),%rax
  0x00000000033cea71: movabs $0x0,%r10
  0x00000000033cea7b: mov    %r10,0x2a8(%r15)
  0x00000000033cea82: movabs $0x0,%r10
  0x00000000033cea8c: mov    %r10,0x2b0(%r15)
  0x00000000033cea93: add    $0x40,%rsp
  0x00000000033cea97: pop    %rbp
  0x00000000033cea98: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cea9d: hlt    
  0x00000000033cea9e: hlt    
  0x00000000033cea9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033ceaa0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033ceaa5: mov    %rsp,-0x28(%rsp)
  0x00000000033ceaaa: sub    $0x80,%rsp
  0x00000000033ceab1: mov    %rax,0x78(%rsp)
  0x00000000033ceab6: mov    %rcx,0x70(%rsp)
  0x00000000033ceabb: mov    %rdx,0x68(%rsp)
  0x00000000033ceac0: mov    %rbx,0x60(%rsp)
  0x00000000033ceac5: mov    %rbp,0x50(%rsp)
  0x00000000033ceaca: mov    %rsi,0x48(%rsp)
  0x00000000033ceacf: mov    %rdi,0x40(%rsp)
  0x00000000033cead4: mov    %r8,0x38(%rsp)
  0x00000000033cead9: mov    %r9,0x30(%rsp)
  0x00000000033ceade: mov    %r10,0x28(%rsp)
  0x00000000033ceae3: mov    %r11,0x20(%rsp)
  0x00000000033ceae8: mov    %r12,0x18(%rsp)
  0x00000000033ceaed: mov    %r13,0x10(%rsp)
  0x00000000033ceaf2: mov    %r14,0x8(%rsp)
  0x00000000033ceaf7: mov    %r15,(%rsp)
  0x00000000033ceafb: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033ceb05: movabs $0x33ceaa5,%rdx    ;   {internal_word}
  0x00000000033ceb0f: mov    %rsp,%r8
  0x00000000033ceb12: and    $0xfffffffffffffff0,%rsp
  0x00000000033ceb16: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033ceb1b: hlt    
[Deopt Handler Code]
  0x00000000033ceb1c: movabs $0x33ceb1c,%r10    ;   {section_word}
  0x00000000033ceb26: push   %r10
  0x00000000033ceb28: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033ceb2d: hlt    
  0x00000000033ceb2e: hlt    
  0x00000000033ceb2f: hlt    
Decoding compiled method 0x00000000033ce310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem'
  # this:     rdx:rdx   = 'java/io/WinNTFileSystem'
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x00000000033ce460: mov    0x8(%rdx),%r10d
  0x00000000033ce464: shl    $0x3,%r10
  0x00000000033ce468: cmp    %rax,%r10
  0x00000000033ce46b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033ce471: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033ce47c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033ce480: mov    %eax,-0x6000(%rsp)
  0x00000000033ce487: push   %rbp
  0x00000000033ce488: sub    $0x30,%rsp
  0x00000000033ce48c: movabs $0x1c127228,%rax   ;   {metadata(method data for {method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem')}
  0x00000000033ce496: mov    0xdc(%rax),%esi
  0x00000000033ce49c: add    $0x8,%esi
  0x00000000033ce49f: mov    %esi,0xdc(%rax)
  0x00000000033ce4a5: movabs $0x1c085f20,%rax   ;   {metadata({method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem')}
  0x00000000033ce4af: and    $0x1ff8,%esi
  0x00000000033ce4b5: cmp    $0x0,%esi
  0x00000000033ce4b8: je     0x00000000033ce560  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0

  0x00000000033ce4be: cmp    $0x5c,%r8d
  0x00000000033ce4c2: movabs $0x1c127228,%rax   ;   {metadata(method data for {method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem')}
  0x00000000033ce4cc: movabs $0x108,%rsi
  0x00000000033ce4d6: je     0x00000000033ce4e6
  0x00000000033ce4dc: movabs $0x118,%rsi
  0x00000000033ce4e6: mov    (%rax,%rsi,1),%rdi
  0x00000000033ce4ea: lea    0x1(%rdi),%rdi
  0x00000000033ce4ee: mov    %rdi,(%rax,%rsi,1)
  0x00000000033ce4f2: je     0x00000000033ce532  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3

  0x00000000033ce4f8: cmp    $0x2f,%r8d
  0x00000000033ce4fc: movabs $0x1c127228,%rax   ;   {metadata(method data for {method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem')}
  0x00000000033ce506: movabs $0x128,%rsi
  0x00000000033ce510: jne    0x00000000033ce520
  0x00000000033ce516: movabs $0x138,%rsi
  0x00000000033ce520: mov    (%rax,%rsi,1),%rdi
  0x00000000033ce524: lea    0x1(%rdi),%rdi
  0x00000000033ce528: mov    %rdi,(%rax,%rsi,1)
  0x00000000033ce52c: jne    0x00000000033ce54c  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9

  0x00000000033ce532: movabs $0x1c127228,%rax   ;   {metadata(method data for {method} {0x000000001c085f28} 'isSlash' '(C)Z' in 'java/io/WinNTFileSystem')}
  0x00000000033ce53c: incl   0x148(%rax)
  0x00000000033ce542: mov    $0x1,%eax
  0x00000000033ce547: jmpq   0x00000000033ce551  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13

  0x00000000033ce54c: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17

  0x00000000033ce551: and    $0x1,%eax
  0x00000000033ce554: add    $0x30,%rsp
  0x00000000033ce558: pop    %rbp
  0x00000000033ce559: test   %eax,-0x73e45f(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033ce55f: retq   
  0x00000000033ce560: mov    %rax,0x8(%rsp)
  0x00000000033ce565: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033ce56d: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=274}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1
                                                ;   {runtime_call}
  0x00000000033ce572: jmpq   0x00000000033ce4be
  0x00000000033ce577: nop
  0x00000000033ce578: nop
  0x00000000033ce579: mov    0x2a8(%r15),%rax
  0x00000000033ce580: movabs $0x0,%r10
  0x00000000033ce58a: mov    %r10,0x2a8(%r15)
  0x00000000033ce591: movabs $0x0,%r10
  0x00000000033ce59b: mov    %r10,0x2b0(%r15)
  0x00000000033ce5a2: add    $0x30,%rsp
  0x00000000033ce5a6: pop    %rbp
  0x00000000033ce5a7: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033ce5ac: hlt    
  0x00000000033ce5ad: hlt    
  0x00000000033ce5ae: hlt    
  0x00000000033ce5af: hlt    
  0x00000000033ce5b0: hlt    
  0x00000000033ce5b1: hlt    
  0x00000000033ce5b2: hlt    
  0x00000000033ce5b3: hlt    
  0x00000000033ce5b4: hlt    
  0x00000000033ce5b5: hlt    
  0x00000000033ce5b6: hlt    
  0x00000000033ce5b7: hlt    
  0x00000000033ce5b8: hlt    
  0x00000000033ce5b9: hlt    
  0x00000000033ce5ba: hlt    
  0x00000000033ce5bb: hlt    
  0x00000000033ce5bc: hlt    
  0x00000000033ce5bd: hlt    
  0x00000000033ce5be: hlt    
  0x00000000033ce5bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033ce5c0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033ce5c5: mov    %rsp,-0x28(%rsp)
  0x00000000033ce5ca: sub    $0x80,%rsp
  0x00000000033ce5d1: mov    %rax,0x78(%rsp)
  0x00000000033ce5d6: mov    %rcx,0x70(%rsp)
  0x00000000033ce5db: mov    %rdx,0x68(%rsp)
  0x00000000033ce5e0: mov    %rbx,0x60(%rsp)
  0x00000000033ce5e5: mov    %rbp,0x50(%rsp)
  0x00000000033ce5ea: mov    %rsi,0x48(%rsp)
  0x00000000033ce5ef: mov    %rdi,0x40(%rsp)
  0x00000000033ce5f4: mov    %r8,0x38(%rsp)
  0x00000000033ce5f9: mov    %r9,0x30(%rsp)
  0x00000000033ce5fe: mov    %r10,0x28(%rsp)
  0x00000000033ce603: mov    %r11,0x20(%rsp)
  0x00000000033ce608: mov    %r12,0x18(%rsp)
  0x00000000033ce60d: mov    %r13,0x10(%rsp)
  0x00000000033ce612: mov    %r14,0x8(%rsp)
  0x00000000033ce617: mov    %r15,(%rsp)
  0x00000000033ce61b: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033ce625: movabs $0x33ce5c5,%rdx    ;   {internal_word}
  0x00000000033ce62f: mov    %rsp,%r8
  0x00000000033ce632: and    $0xfffffffffffffff0,%rsp
  0x00000000033ce636: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033ce63b: hlt    
[Deopt Handler Code]
  0x00000000033ce63c: movabs $0x33ce63c,%r10    ;   {section_word}
  0x00000000033ce646: push   %r10
  0x00000000033ce648: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033ce64d: hlt    
  0x00000000033ce64e: hlt    
  0x00000000033ce64f: hlt    
Decoding compiled method 0x00000000033cd9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf7be78} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer'
  # this:     rdx:rdx   = 'java/lang/StringBuffer'
  # parm0:    r8        = char
  #           [sp+0xa0]  (sp of caller)
  0x00000000033cdb60: mov    0x8(%rdx),%r10d
  0x00000000033cdb64: shl    $0x3,%r10
  0x00000000033cdb68: cmp    %rax,%r10
  0x00000000033cdb6b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033cdb71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033cdb7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033cdb80: mov    %eax,-0x6000(%rsp)
  0x00000000033cdb87: push   %rbp
  0x00000000033cdb88: sub    $0x90,%rsp
  0x00000000033cdb8f: lea    0x70(%rsp),%rsi
  0x00000000033cdb94: mov    %rdx,0x8(%rsi)
  0x00000000033cdb98: mov    (%rdx),%rax
  0x00000000033cdb9b: mov    %rax,%rdi
  0x00000000033cdb9e: and    $0x7,%rdi
  0x00000000033cdba2: cmp    $0x5,%rdi
  0x00000000033cdba6: jne    0x00000000033cdc2d
  0x00000000033cdbac: mov    0x8(%rdx),%edi
  0x00000000033cdbaf: shl    $0x3,%rdi
  0x00000000033cdbb3: mov    0xa8(%rdi),%rdi
  0x00000000033cdbba: or     %r15,%rdi
  0x00000000033cdbbd: xor    %rax,%rdi
  0x00000000033cdbc0: and    $0xffffffffffffff87,%rdi
  0x00000000033cdbc4: je     0x00000000033cdc55
  0x00000000033cdbca: test   $0x7,%rdi
  0x00000000033cdbd1: jne    0x00000000033cdc1a
  0x00000000033cdbd3: test   $0x300,%rdi
  0x00000000033cdbda: jne    0x00000000033cdbf9
  0x00000000033cdbdc: and    $0x37f,%rax
  0x00000000033cdbe3: mov    %rax,%rdi
  0x00000000033cdbe6: or     %r15,%rdi
  0x00000000033cdbe9: lock cmpxchg %rdi,(%rdx)
  0x00000000033cdbee: jne    0x00000000033cdea5
  0x00000000033cdbf4: jmpq   0x00000000033cdc55
  0x00000000033cdbf9: mov    0x8(%rdx),%edi
  0x00000000033cdbfc: shl    $0x3,%rdi
  0x00000000033cdc00: mov    0xa8(%rdi),%rdi
  0x00000000033cdc07: or     %r15,%rdi
  0x00000000033cdc0a: lock cmpxchg %rdi,(%rdx)
  0x00000000033cdc0f: jne    0x00000000033cdea5
  0x00000000033cdc15: jmpq   0x00000000033cdc55
  0x00000000033cdc1a: mov    0x8(%rdx),%edi
  0x00000000033cdc1d: shl    $0x3,%rdi
  0x00000000033cdc21: mov    0xa8(%rdi),%rdi
  0x00000000033cdc28: lock cmpxchg %rdi,(%rdx)
  0x00000000033cdc2d: mov    (%rdx),%rax
  0x00000000033cdc30: or     $0x1,%rax
  0x00000000033cdc34: mov    %rax,(%rsi)
  0x00000000033cdc37: lock cmpxchg %rsi,(%rdx)
  0x00000000033cdc3c: je     0x00000000033cdc55
  0x00000000033cdc42: sub    %rsp,%rax
  0x00000000033cdc45: and    $0xfffffffffffff007,%rax
  0x00000000033cdc4c: mov    %rax,(%rsi)
  0x00000000033cdc4f: jne    0x00000000033cdea5
  0x00000000033cdc55: movabs $0x1c127f70,%rsi   ;   {metadata(method data for {method} {0x000000001bf7be78} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x00000000033cdc5f: mov    0xdc(%rsi),%edi
  0x00000000033cdc65: add    $0x8,%edi
  0x00000000033cdc68: mov    %edi,0xdc(%rsi)
  0x00000000033cdc6e: movabs $0x1bf7be70,%rsi   ;   {metadata({method} {0x000000001bf7be78} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x00000000033cdc78: and    $0x1ff8,%edi
  0x00000000033cdc7e: cmp    $0x0,%edi
  0x00000000033cdc81: je     0x00000000033cdeb8  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0

  0x00000000033cdc87: movl   $0x0,0x14(%rdx)
  0x00000000033cdc8e: mov    %rdx,%rsi
  0x00000000033cdc91: shr    $0x9,%rsi
  0x00000000033cdc95: movabs $0xf074000,%rdi
  0x00000000033cdc9f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2

  0x00000000033cdca3: mov    %rdx,%rsi
  0x00000000033cdca6: movabs $0x1c127f70,%rdi   ;   {metadata(method data for {method} {0x000000001bf7be78} 'append' '(C)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x00000000033cdcb0: addq   $0x1,0x108(%rdi)
  0x00000000033cdcb8: movabs $0x1c1280c8,%rsi   ;   {metadata(method data for {method} {0x000000001bf80888} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdcc2: mov    0xdc(%rsi),%edi
  0x00000000033cdcc8: add    $0x8,%edi
  0x00000000033cdccb: mov    %edi,0xdc(%rsi)
  0x00000000033cdcd1: movabs $0x1bf80880,%rsi   ;   {metadata({method} {0x000000001bf80888} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdcdb: and    $0x7ffff8,%edi
  0x00000000033cdce1: cmp    $0x0,%edi
  0x00000000033cdce4: je     0x00000000033cdecf
  0x00000000033cdcea: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cdced: inc    %esi
  0x00000000033cdcef: mov    %rdx,%rdi
  0x00000000033cdcf2: movabs $0x1c1280c8,%rbx   ;   {metadata(method data for {method} {0x000000001bf80888} 'append' '(C)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdcfc: addq   $0x1,0x108(%rbx)
  0x00000000033cdd04: movabs $0x1c116dd8,%rdi   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdd0e: mov    0xdc(%rdi),%ebx
  0x00000000033cdd14: add    $0x8,%ebx
  0x00000000033cdd17: mov    %ebx,0xdc(%rdi)
  0x00000000033cdd1d: movabs $0x1bf7f8c8,%rdi   ;   {metadata({method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdd27: and    $0x7ffff8,%ebx
  0x00000000033cdd2d: cmp    $0x0,%ebx
  0x00000000033cdd30: je     0x00000000033cdee6
  0x00000000033cdd36: mov    0x10(%rdx),%edi
  0x00000000033cdd39: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cdd3d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ; implicit exception: dispatches to 0x00000000033cdefd
  0x00000000033cdd40: mov    %rsi,%rbx
  0x00000000033cdd43: sub    %edi,%ebx
  0x00000000033cdd45: cmp    $0x0,%ebx
  0x00000000033cdd48: movabs $0x1c116dd8,%rdi   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdd52: movabs $0x108,%rbx
  0x00000000033cdd5c: jle    0x00000000033cdd6c
  0x00000000033cdd62: movabs $0x118,%rbx
  0x00000000033cdd6c: mov    (%rdi,%rbx,1),%rax
  0x00000000033cdd70: lea    0x1(%rax),%rax
  0x00000000033cdd74: mov    %rax,(%rdi,%rbx,1)
  0x00000000033cdd78: mov    %r8d,0x68(%rsp)
  0x00000000033cdd7d: jg     0x00000000033cdd8d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cdd83: mov    %rdx,0x60(%rsp)
  0x00000000033cdd88: jmpq   0x00000000033cde34  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@15
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cdd8d: mov    %rdx,%rdi
  0x00000000033cdd90: movabs $0x1c116dd8,%rbx   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033cdd9a: mov    0x8(%rdi),%edi
  0x00000000033cdd9d: shl    $0x3,%rdi
  0x00000000033cdda1: cmp    0x130(%rbx),%rdi
  0x00000000033cdda8: jne    0x00000000033cddb7
  0x00000000033cddaa: addq   $0x1,0x138(%rbx)
  0x00000000033cddb2: jmpq   0x00000000033cde1d
  0x00000000033cddb7: cmp    0x140(%rbx),%rdi
  0x00000000033cddbe: jne    0x00000000033cddcd
  0x00000000033cddc0: addq   $0x1,0x148(%rbx)
  0x00000000033cddc8: jmpq   0x00000000033cde1d
  0x00000000033cddcd: cmpq   $0x0,0x130(%rbx)
  0x00000000033cddd8: jne    0x00000000033cddf1
  0x00000000033cddda: mov    %rdi,0x130(%rbx)
  0x00000000033cdde1: movq   $0x1,0x138(%rbx)
  0x00000000033cddec: jmpq   0x00000000033cde1d
  0x00000000033cddf1: cmpq   $0x0,0x140(%rbx)
  0x00000000033cddfc: jne    0x00000000033cde15
  0x00000000033cddfe: mov    %rdi,0x140(%rbx)
  0x00000000033cde05: movq   $0x1,0x148(%rbx)
  0x00000000033cde10: jmpq   0x00000000033cde1d
  0x00000000033cde15: addq   $0x1,0x128(%rbx)
  0x00000000033cde1d: mov    %rsi,%r8
  0x00000000033cde20: mov    %rdx,%rsi
  0x00000000033cde23: mov    %rsi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cde26: mov    %rsi,0x60(%rsp)
  0x00000000033cde2b: nop
  0x00000000033cde2c: nop
  0x00000000033cde2d: nop
  0x00000000033cde2e: nop
  0x00000000033cde2f: callq  0x00000000033061a0  ; OopMap{[96]=Oop [120]=Oop off=724}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {optimized virtual_call}
  0x00000000033cde34: mov    0x68(%rsp),%r8d
  0x00000000033cde39: mov    0x60(%rsp),%rdx
  0x00000000033cde3e: mov    0x10(%rdx),%eax
  0x00000000033cde41: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cde45: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cde48: mov    %rsi,%rdi
  0x00000000033cde4b: inc    %edi
  0x00000000033cde4d: mov    %edi,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cde50: movslq %esi,%rdi
  0x00000000033cde53: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000033cdf02
  0x00000000033cde56: jae    0x00000000033cdf0c
  0x00000000033cde5c: mov    %r8w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7

  0x00000000033cde62: lea    0x70(%rsp),%rax
  0x00000000033cde67: mov    0x8(%rax),%rdi
  0x00000000033cde6b: mov    (%rdi),%rsi
  0x00000000033cde6e: and    $0x7,%rsi
  0x00000000033cde72: cmp    $0x5,%rsi
  0x00000000033cde76: je     0x00000000033cde93
  0x00000000033cde7c: mov    (%rax),%rsi
  0x00000000033cde7f: test   %rsi,%rsi
  0x00000000033cde82: je     0x00000000033cde93
  0x00000000033cde88: lock cmpxchg %rsi,(%rdi)
  0x00000000033cde8d: jne    0x00000000033cdf15  ;*areturn
                                                ; - java.lang.StringBuffer::append@12

  0x00000000033cde93: mov    %rdx,%rax
  0x00000000033cde96: add    $0x90,%rsp
  0x00000000033cde9d: pop    %rbp
  0x00000000033cde9e: test   %eax,-0x73dda4(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cdea4: retq   
  0x00000000033cdea5: mov    %rdx,0x8(%rsp)
  0x00000000033cdeaa: mov    %rsi,(%rsp)
  0x00000000033cdeae: callq  0x00000000033bd0e0  ; OopMap{rdx=Oop [120]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1
                                                ;   {runtime_call}
  0x00000000033cdeb3: jmpq   0x00000000033cdc55
  0x00000000033cdeb8: mov    %rsi,0x8(%rsp)
  0x00000000033cdebd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cdec5: callq  0x00000000033bede0  ; OopMap{rdx=Oop [120]=Oop off=874}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1
                                                ;   {runtime_call}
  0x00000000033cdeca: jmpq   0x00000000033cdc87
  0x00000000033cdecf: mov    %rsi,0x8(%rsp)
  0x00000000033cded4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cdedc: callq  0x00000000033bede0  ; OopMap{rdx=Oop [120]=Oop off=897}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdee1: jmpq   0x00000000033cdcea
  0x00000000033cdee6: mov    %rdi,0x8(%rsp)
  0x00000000033cdeeb: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cdef3: callq  0x00000000033bede0  ; OopMap{rdx=Oop [120]=Oop off=920}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdef8: jmpq   0x00000000033cdd36
  0x00000000033cdefd: callq  0x00000000033ba700  ; OopMap{rdx=Oop [120]=Oop off=930}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@7
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdf02: callq  0x00000000033ba700  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=935}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdf07: callq  0x00000000033ba700  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=940}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdf0c: mov    %rsi,(%rsp)
  0x00000000033cdf10: callq  0x000000000332cc80  ; OopMap{rdx=Oop rax=Oop [120]=Oop off=949}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26
                                                ; - java.lang.StringBuffer::append@7
                                                ;   {runtime_call}
  0x00000000033cdf15: lea    0x70(%rsp),%rax
  0x00000000033cdf1a: mov    %rax,(%rsp)
  0x00000000033cdf1e: callq  0x00000000033bd4e0  ;   {runtime_call}
  0x00000000033cdf23: jmpq   0x00000000033cde93
  0x00000000033cdf28: nop
  0x00000000033cdf29: nop
  0x00000000033cdf2a: mov    0x2a8(%r15),%rax
  0x00000000033cdf31: movabs $0x0,%r10
  0x00000000033cdf3b: mov    %r10,0x2a8(%r15)
  0x00000000033cdf42: movabs $0x0,%r10
  0x00000000033cdf4c: mov    %r10,0x2b0(%r15)
  0x00000000033cdf53: mov    %rax,%rbx
  0x00000000033cdf56: lea    0x70(%rsp),%rax
  0x00000000033cdf5b: mov    0x8(%rax),%rsi
  0x00000000033cdf5f: mov    (%rsi),%rdi
  0x00000000033cdf62: and    $0x7,%rdi
  0x00000000033cdf66: cmp    $0x5,%rdi
  0x00000000033cdf6a: je     0x00000000033cdf87
  0x00000000033cdf70: mov    (%rax),%rdi
  0x00000000033cdf73: test   %rdi,%rdi
  0x00000000033cdf76: je     0x00000000033cdf87
  0x00000000033cdf7c: lock cmpxchg %rdi,(%rsi)
  0x00000000033cdf81: jne    0x00000000033cdf97
  0x00000000033cdf87: mov    %rbx,%rax
  0x00000000033cdf8a: add    $0x90,%rsp
  0x00000000033cdf91: pop    %rbp
  0x00000000033cdf92: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033cdf97: lea    0x70(%rsp),%rax
  0x00000000033cdf9c: mov    %rax,(%rsp)
  0x00000000033cdfa0: callq  0x00000000033bd4e0  ;   {runtime_call}
  0x00000000033cdfa5: jmp    0x00000000033cdf87
  0x00000000033cdfa7: hlt    
  0x00000000033cdfa8: hlt    
  0x00000000033cdfa9: hlt    
  0x00000000033cdfaa: hlt    
  0x00000000033cdfab: hlt    
  0x00000000033cdfac: hlt    
  0x00000000033cdfad: hlt    
  0x00000000033cdfae: hlt    
  0x00000000033cdfaf: hlt    
  0x00000000033cdfb0: hlt    
  0x00000000033cdfb1: hlt    
  0x00000000033cdfb2: hlt    
  0x00000000033cdfb3: hlt    
  0x00000000033cdfb4: hlt    
  0x00000000033cdfb5: hlt    
  0x00000000033cdfb6: hlt    
  0x00000000033cdfb7: hlt    
  0x00000000033cdfb8: hlt    
  0x00000000033cdfb9: hlt    
  0x00000000033cdfba: hlt    
  0x00000000033cdfbb: hlt    
  0x00000000033cdfbc: hlt    
  0x00000000033cdfbd: hlt    
  0x00000000033cdfbe: hlt    
  0x00000000033cdfbf: hlt    
[Stub Code]
  0x00000000033cdfc0: nop                       ;   {no_reloc}
  0x00000000033cdfc1: nop
  0x00000000033cdfc2: nop
  0x00000000033cdfc3: nop
  0x00000000033cdfc4: nop
  0x00000000033cdfc5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cdfcf: jmpq   0x00000000033cdfcf  ;   {runtime_call}
[Exception Handler]
  0x00000000033cdfd4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033cdfd9: mov    %rsp,-0x28(%rsp)
  0x00000000033cdfde: sub    $0x80,%rsp
  0x00000000033cdfe5: mov    %rax,0x78(%rsp)
  0x00000000033cdfea: mov    %rcx,0x70(%rsp)
  0x00000000033cdfef: mov    %rdx,0x68(%rsp)
  0x00000000033cdff4: mov    %rbx,0x60(%rsp)
  0x00000000033cdff9: mov    %rbp,0x50(%rsp)
  0x00000000033cdffe: mov    %rsi,0x48(%rsp)
  0x00000000033ce003: mov    %rdi,0x40(%rsp)
  0x00000000033ce008: mov    %r8,0x38(%rsp)
  0x00000000033ce00d: mov    %r9,0x30(%rsp)
  0x00000000033ce012: mov    %r10,0x28(%rsp)
  0x00000000033ce017: mov    %r11,0x20(%rsp)
  0x00000000033ce01c: mov    %r12,0x18(%rsp)
  0x00000000033ce021: mov    %r13,0x10(%rsp)
  0x00000000033ce026: mov    %r14,0x8(%rsp)
  0x00000000033ce02b: mov    %r15,(%rsp)
  0x00000000033ce02f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033ce039: movabs $0x33cdfd9,%rdx    ;   {internal_word}
  0x00000000033ce043: mov    %rsp,%r8
  0x00000000033ce046: and    $0xfffffffffffffff0,%rsp
  0x00000000033ce04a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033ce04f: hlt    
[Deopt Handler Code]
  0x00000000033ce050: movabs $0x33ce050,%r10    ;   {section_word}
  0x00000000033ce05a: push   %r10
  0x00000000033ce05c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033ce061: hlt    
  0x00000000033ce062: hlt    
  0x00000000033ce063: hlt    
  0x00000000033ce064: hlt    
  0x00000000033ce065: hlt    
  0x00000000033ce066: hlt    
  0x00000000033ce067: hlt    
Decoding compiled method 0x00000000033cd0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = '[C'
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000033cd280: mov    0x8(%rdx),%r10d
  0x00000000033cd284: shl    $0x3,%r10
  0x00000000033cd288: cmp    %rax,%r10
  0x00000000033cd28b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033cd291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033cd29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033cd2a0: mov    %eax,-0x6000(%rsp)
  0x00000000033cd2a7: push   %rbp
  0x00000000033cd2a8: sub    $0x60,%rsp
  0x00000000033cd2ac: movabs $0x1c128d70,%rbx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd2b6: mov    0xdc(%rbx),%eax
  0x00000000033cd2bc: add    $0x8,%eax
  0x00000000033cd2bf: mov    %eax,0xdc(%rbx)
  0x00000000033cd2c5: movabs $0x1bf14010,%rbx   ;   {metadata({method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd2cf: and    $0x1ff8,%eax
  0x00000000033cd2d5: cmp    $0x0,%eax
  0x00000000033cd2d8: je     0x00000000033cd50e  ;*iload_1
                                                ; - java.lang.String::getChars@0

  0x00000000033cd2de: cmp    $0x0,%r8d
  0x00000000033cd2e2: movabs $0x1c128d70,%rbx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd2ec: movabs $0x108,%rax
  0x00000000033cd2f6: jge    0x00000000033cd306
  0x00000000033cd2fc: movabs $0x118,%rax
  0x00000000033cd306: mov    (%rbx,%rax,1),%rcx
  0x00000000033cd30a: lea    0x1(%rcx),%rcx
  0x00000000033cd30e: mov    %rcx,(%rbx,%rax,1)
  0x00000000033cd312: jl     0x00000000033cd4ce  ;*ifge
                                                ; - java.lang.String::getChars@1

  0x00000000033cd318: mov    0xc(%rdx),%edx
  0x00000000033cd31b: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15

  0x00000000033cd31f: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18
                                                ; implicit exception: dispatches to 0x00000000033cd525
  0x00000000033cd322: cmp    %ebx,%r9d
  0x00000000033cd325: movabs $0x1c128d70,%rbx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd32f: movabs $0x138,%rax
  0x00000000033cd339: jle    0x00000000033cd349
  0x00000000033cd33f: movabs $0x148,%rax
  0x00000000033cd349: mov    (%rbx,%rax,1),%rcx
  0x00000000033cd34d: lea    0x1(%rcx),%rcx
  0x00000000033cd351: mov    %rcx,(%rbx,%rax,1)
  0x00000000033cd355: jg     0x00000000033cd48e  ;*if_icmple
                                                ; - java.lang.String::getChars@19

  0x00000000033cd35b: cmp    %r9d,%r8d
  0x00000000033cd35e: movabs $0x1c128d70,%rbx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd368: movabs $0x168,%rax
  0x00000000033cd372: jle    0x00000000033cd382
  0x00000000033cd378: movabs $0x178,%rax
  0x00000000033cd382: mov    (%rbx,%rax,1),%rcx
  0x00000000033cd386: lea    0x1(%rcx),%rcx
  0x00000000033cd38a: mov    %rcx,(%rbx,%rax,1)
  0x00000000033cd38e: jg     0x00000000033cd442  ;*if_icmple
                                                ; - java.lang.String::getChars@33

  0x00000000033cd394: movabs $0x1c128d70,%rbx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd39e: addq   $0x1,0x198(%rbx)
  0x00000000033cd3a6: mov    %r9,%rbx
  0x00000000033cd3a9: sub    %r8d,%ebx
  0x00000000033cd3ac: mov    %rdi,%r9
  0x00000000033cd3af: mov    %rsi,%rdi
  0x00000000033cd3b2: mov    %rbx,%rsi
  0x00000000033cd3b5: test   %r9,%r9
  0x00000000033cd3b8: je     0x00000000033cd52a
  0x00000000033cd3be: test   %r8d,%r8d
  0x00000000033cd3c1: jl     0x00000000033cd52a
  0x00000000033cd3c7: test   %edi,%edi
  0x00000000033cd3c9: jl     0x00000000033cd52a
  0x00000000033cd3cf: lea    (%r8,%rsi,1),%rcx
  0x00000000033cd3d3: cmp    0xc(%rdx),%ecx
  0x00000000033cd3d6: ja     0x00000000033cd52a
  0x00000000033cd3dc: lea    (%rdi,%rsi,1),%rcx
  0x00000000033cd3e0: cmp    0xc(%r9),%ecx
  0x00000000033cd3e4: ja     0x00000000033cd52a
  0x00000000033cd3ea: test   %esi,%esi
  0x00000000033cd3ec: jl     0x00000000033cd52a
  0x00000000033cd3f2: je     0x00000000033cd436
  0x00000000033cd3f8: movslq %r8d,%r8
  0x00000000033cd3fb: movslq %edi,%rdi
  0x00000000033cd3fe: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000033cd403: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000033cd408: mov    %rsi,%r8
  0x00000000033cd40b: sub    $0x20,%rsp
  0x00000000033cd40f: test   $0xf,%esp
  0x00000000033cd415: je     0x00000000033cd42d
  0x00000000033cd41b: sub    $0x8,%rsp
  0x00000000033cd41f: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000033cd424: add    $0x8,%rsp
  0x00000000033cd428: jmpq   0x00000000033cd432
  0x00000000033cd42d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000033cd432: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58

  0x00000000033cd436: add    $0x60,%rsp
  0x00000000033cd43a: pop    %rbp
  0x00000000033cd43b: test   %eax,-0x73d341(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033cd441: retq                      ;*return
                                                ; - java.lang.String::getChars@61

  0x00000000033cd442: nopw   0x0(%rax,%rax,1)
  0x00000000033cd448: jmpq   0x00000000033cd548  ;   {no_reloc}
  0x00000000033cd44d: add    %al,(%rax)
  0x00000000033cd44f: add    %al,(%rax)
  0x00000000033cd451: add    %ch,%cl
  0x00000000033cd453: sti    
  0x00000000033cd454: add    %al,(%rax)
  0x00000000033cd456: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36

  0x00000000033cd459: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd45c: jo     0x00000000033cd3eb
  0x00000000033cd45e: adc    (%rax,%rax,1),%bl
  0x00000000033cd461: add    %al,(%rax)
  0x00000000033cd463: add    %cl,-0x7d(%rax)
  0x00000000033cd466: xchg   %cl,0x1000001(%rax)
  0x00000000033cd46c: sub    %r8d,%r9d
  0x00000000033cd46f: mov    %r9,%r8
  0x00000000033cd472: mov    %rax,%rdx          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43

  0x00000000033cd475: mov    %rax,0x38(%rsp)
  0x00000000033cd47a: nop
  0x00000000033cd47b: nop
  0x00000000033cd47c: nop
  0x00000000033cd47d: nop
  0x00000000033cd47e: nop
  0x00000000033cd47f: callq  0x00000000033061a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43
                                                ;   {optimized virtual_call}
  0x00000000033cd484: mov    0x38(%rsp),%rax
  0x00000000033cd489: jmpq   0x00000000033cd5d6  ;*athrow
                                                ; - java.lang.String::getChars@46

  0x00000000033cd48e: xchg   %ax,%ax
  0x00000000033cd490: jmpq   0x00000000033cd56e  ;   {no_reloc}
  0x00000000033cd495: add    %al,(%rax)
  0x00000000033cd497: add    %al,(%rax)
  0x00000000033cd499: add    %ch,%cl
  0x00000000033cd49b: flds   (%rax)
  0x00000000033cd49d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22

  0x00000000033cd49f: mov    %rax,%r8
  0x00000000033cd4a2: movabs $0x1c128d70,%rdx   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd4ac: addq   $0x1,0x158(%rdx)
  0x00000000033cd4b4: mov    %r9,%r8
  0x00000000033cd4b7: mov    %rax,%rdx          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27

  0x00000000033cd4ba: mov    %rax,0x40(%rsp)
  0x00000000033cd4bf: callq  0x00000000033061a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27
                                                ;   {optimized virtual_call}
  0x00000000033cd4c4: mov    0x40(%rsp),%rax
  0x00000000033cd4c9: jmpq   0x00000000033cd5d6  ;*athrow
                                                ; - java.lang.String::getChars@30

  0x00000000033cd4ce: xchg   %ax,%ax
  0x00000000033cd4d0: jmpq   0x00000000033cd594  ;   {no_reloc}
  0x00000000033cd4d5: add    %al,(%rax)
  0x00000000033cd4d7: add    %al,(%rax)
  0x00000000033cd4d9: add    %ch,%cl
  0x00000000033cd4db: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4

  0x00000000033cd4e0: mov    %eax,%edx
  0x00000000033cd4e2: movabs $0x1c128d70,%rsi   ;   {metadata(method data for {method} {0x000000001bf14018} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x00000000033cd4ec: addq   $0x1,0x128(%rsi)
  0x00000000033cd4f4: mov    %rax,%rdx          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9

  0x00000000033cd4f7: mov    %rax,0x48(%rsp)
  0x00000000033cd4fc: nop
  0x00000000033cd4fd: nop
  0x00000000033cd4fe: nop
  0x00000000033cd4ff: callq  0x00000000033061a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9
                                                ;   {optimized virtual_call}
  0x00000000033cd504: mov    0x48(%rsp),%rax
  0x00000000033cd509: jmpq   0x00000000033cd5d6
  0x00000000033cd50e: mov    %rbx,0x8(%rsp)
  0x00000000033cd513: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033cd51b: callq  0x00000000033bede0  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1
                                                ;   {runtime_call}
  0x00000000033cd520: jmpq   0x00000000033cd2de
  0x00000000033cd525: callq  0x00000000033ba700  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18
                                                ;   {runtime_call}
  0x00000000033cd52a: nop
  0x00000000033cd52b: nop
  0x00000000033cd52c: nop
  0x00000000033cd52d: nop
  0x00000000033cd52e: nop
  0x00000000033cd52f: callq  0x0000000003306620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58
                                                ;   {static_call}
  0x00000000033cd534: jmpq   0x00000000033cd436
  0x00000000033cd539: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000033cd543: mov    $0xa050f00,%eax
  0x00000000033cd548: callq  0x00000000033bdd20  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36
                                                ;   {runtime_call}
  0x00000000033cd54d: jmpq   0x00000000033cd448
  0x00000000033cd552: mov    %rdx,%rdx
  0x00000000033cd555: callq  0x00000000033baba0  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36
                                                ;   {runtime_call}
  0x00000000033cd55a: jmpq   0x00000000033cd457
  0x00000000033cd55f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000033cd569: mov    $0xa050f00,%eax
  0x00000000033cd56e: callq  0x00000000033bdd20  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22
                                                ;   {runtime_call}
  0x00000000033cd573: jmpq   0x00000000033cd490
  0x00000000033cd578: mov    %rdx,%rdx
  0x00000000033cd57b: callq  0x00000000033baba0  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22
                                                ;   {runtime_call}
  0x00000000033cd580: jmpq   0x00000000033cd49f
  0x00000000033cd585: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000033cd58f: mov    $0xa050f00,%eax
  0x00000000033cd594: callq  0x00000000033bdd20  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4
                                                ;   {runtime_call}
  0x00000000033cd599: jmpq   0x00000000033cd4d0
  0x00000000033cd59e: mov    %rdx,%rdx
  0x00000000033cd5a1: callq  0x00000000033baba0  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4
                                                ;   {runtime_call}
  0x00000000033cd5a6: jmpq   0x00000000033cd4df
  0x00000000033cd5ab: nop
  0x00000000033cd5ac: nop
  0x00000000033cd5ad: mov    0x2a8(%r15),%rax
  0x00000000033cd5b4: movabs $0x0,%r10
  0x00000000033cd5be: mov    %r10,0x2a8(%r15)
  0x00000000033cd5c5: movabs $0x0,%r10
  0x00000000033cd5cf: mov    %r10,0x2b0(%r15)
  0x00000000033cd5d6: add    $0x60,%rsp
  0x00000000033cd5da: pop    %rbp
  0x00000000033cd5db: jmpq   0x000000000332d120  ;   {runtime_call}
[Stub Code]
  0x00000000033cd5e0: nop                       ;   {no_reloc}
  0x00000000033cd5e1: nop
  0x00000000033cd5e2: nop
  0x00000000033cd5e3: nop
  0x00000000033cd5e4: nop
  0x00000000033cd5e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cd5ef: jmpq   0x00000000033cd5ef  ;   {runtime_call}
  0x00000000033cd5f4: nop
  0x00000000033cd5f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cd5ff: jmpq   0x00000000033cd5ff  ;   {runtime_call}
  0x00000000033cd604: nop
  0x00000000033cd605: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cd60f: jmpq   0x00000000033cd60f  ;   {runtime_call}
  0x00000000033cd614: nop
  0x00000000033cd615: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033cd61f: jmpq   0x00000000033cd61f  ;   {runtime_call}
[Exception Handler]
  0x00000000033cd624: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033cd629: mov    %rsp,-0x28(%rsp)
  0x00000000033cd62e: sub    $0x80,%rsp
  0x00000000033cd635: mov    %rax,0x78(%rsp)
  0x00000000033cd63a: mov    %rcx,0x70(%rsp)
  0x00000000033cd63f: mov    %rdx,0x68(%rsp)
  0x00000000033cd644: mov    %rbx,0x60(%rsp)
  0x00000000033cd649: mov    %rbp,0x50(%rsp)
  0x00000000033cd64e: mov    %rsi,0x48(%rsp)
  0x00000000033cd653: mov    %rdi,0x40(%rsp)
  0x00000000033cd658: mov    %r8,0x38(%rsp)
  0x00000000033cd65d: mov    %r9,0x30(%rsp)
  0x00000000033cd662: mov    %r10,0x28(%rsp)
  0x00000000033cd667: mov    %r11,0x20(%rsp)
  0x00000000033cd66c: mov    %r12,0x18(%rsp)
  0x00000000033cd671: mov    %r13,0x10(%rsp)
  0x00000000033cd676: mov    %r14,0x8(%rsp)
  0x00000000033cd67b: mov    %r15,(%rsp)
  0x00000000033cd67f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033cd689: movabs $0x33cd629,%rdx    ;   {internal_word}
  0x00000000033cd693: mov    %rsp,%r8
  0x00000000033cd696: and    $0xfffffffffffffff0,%rsp
  0x00000000033cd69a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033cd69f: hlt    
[Deopt Handler Code]
  0x00000000033cd6a0: movabs $0x33cd6a0,%r10    ;   {section_word}
  0x00000000033cd6aa: push   %r10
  0x00000000033cd6ac: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033cd6b1: hlt    
  0x00000000033cd6b2: hlt    
  0x00000000033cd6b3: hlt    
  0x00000000033cd6b4: hlt    
  0x00000000033cd6b5: hlt    
  0x00000000033cd6b6: hlt    
  0x00000000033cd6b7: hlt    
Decoding compiled method 0x00000000033d2d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf14dc0} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rdx:rdx   = 'java/lang/String'
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000033d2f00: mov    0x8(%rdx),%r10d
  0x00000000033d2f04: shl    $0x3,%r10
  0x00000000033d2f08: cmp    %rax,%r10
  0x00000000033d2f0b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033d2f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033d2f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033d2f20: mov    %eax,-0x6000(%rsp)
  0x00000000033d2f27: push   %rbp
  0x00000000033d2f28: sub    $0x30,%rsp
  0x00000000033d2f2c: movabs $0x1c14bee8,%r9    ;   {metadata(method data for {method} {0x000000001bf14dc0} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000000033d2f36: mov    0xdc(%r9),%esi
  0x00000000033d2f3d: add    $0x8,%esi
  0x00000000033d2f40: mov    %esi,0xdc(%r9)
  0x00000000033d2f47: movabs $0x1bf14db8,%r9    ;   {metadata({method} {0x000000001bf14dc0} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000000033d2f51: and    $0x1ff8,%esi
  0x00000000033d2f57: cmp    $0x0,%esi
  0x00000000033d2f5a: je     0x00000000033d3008  ;*aload_0
                                                ; - java.lang.String::indexOf@0

  0x00000000033d2f60: mov    %rdx,%r9
  0x00000000033d2f63: movabs $0x1c14bee8,%rsi   ;   {metadata(method data for {method} {0x000000001bf14dc0} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000000033d2f6d: mov    0x8(%r9),%r9d
  0x00000000033d2f71: shl    $0x3,%r9
  0x00000000033d2f75: cmp    0x110(%rsi),%r9
  0x00000000033d2f7c: jne    0x00000000033d2f8b
  0x00000000033d2f7e: addq   $0x1,0x118(%rsi)
  0x00000000033d2f86: jmpq   0x00000000033d2ff1
  0x00000000033d2f8b: cmp    0x120(%rsi),%r9
  0x00000000033d2f92: jne    0x00000000033d2fa1
  0x00000000033d2f94: addq   $0x1,0x128(%rsi)
  0x00000000033d2f9c: jmpq   0x00000000033d2ff1
  0x00000000033d2fa1: cmpq   $0x0,0x110(%rsi)
  0x00000000033d2fac: jne    0x00000000033d2fc5
  0x00000000033d2fae: mov    %r9,0x110(%rsi)
  0x00000000033d2fb5: movq   $0x1,0x118(%rsi)
  0x00000000033d2fc0: jmpq   0x00000000033d2ff1
  0x00000000033d2fc5: cmpq   $0x0,0x120(%rsi)
  0x00000000033d2fd0: jne    0x00000000033d2fe9
  0x00000000033d2fd2: mov    %r9,0x120(%rsi)
  0x00000000033d2fd9: movq   $0x1,0x128(%rsi)
  0x00000000033d2fe4: jmpq   0x00000000033d2ff1
  0x00000000033d2fe9: addq   $0x1,0x108(%rsi)
  0x00000000033d2ff1: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3

  0x00000000033d2ff7: callq  0x00000000033061a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3
                                                ;   {optimized virtual_call}
  0x00000000033d2ffc: add    $0x30,%rsp
  0x00000000033d3000: pop    %rbp
  0x00000000033d3001: test   %eax,-0x742f07(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d3007: retq   
  0x00000000033d3008: mov    %r9,0x8(%rsp)
  0x00000000033d300d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d3015: callq  0x00000000033bede0  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1
                                                ;   {runtime_call}
  0x00000000033d301a: jmpq   0x00000000033d2f60
  0x00000000033d301f: nop
  0x00000000033d3020: nop
  0x00000000033d3021: mov    0x2a8(%r15),%rax
  0x00000000033d3028: movabs $0x0,%r10
  0x00000000033d3032: mov    %r10,0x2a8(%r15)
  0x00000000033d3039: movabs $0x0,%r10
  0x00000000033d3043: mov    %r10,0x2b0(%r15)
  0x00000000033d304a: add    $0x30,%rsp
  0x00000000033d304e: pop    %rbp
  0x00000000033d304f: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d3054: hlt    
  0x00000000033d3055: hlt    
  0x00000000033d3056: hlt    
  0x00000000033d3057: hlt    
  0x00000000033d3058: hlt    
  0x00000000033d3059: hlt    
  0x00000000033d305a: hlt    
  0x00000000033d305b: hlt    
  0x00000000033d305c: hlt    
  0x00000000033d305d: hlt    
  0x00000000033d305e: hlt    
  0x00000000033d305f: hlt    
[Stub Code]
  0x00000000033d3060: nop                       ;   {no_reloc}
  0x00000000033d3061: nop
  0x00000000033d3062: nop
  0x00000000033d3063: nop
  0x00000000033d3064: nop
  0x00000000033d3065: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d306f: jmpq   0x00000000033d306f  ;   {runtime_call}
[Exception Handler]
  0x00000000033d3074: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033d3079: mov    %rsp,-0x28(%rsp)
  0x00000000033d307e: sub    $0x80,%rsp
  0x00000000033d3085: mov    %rax,0x78(%rsp)
  0x00000000033d308a: mov    %rcx,0x70(%rsp)
  0x00000000033d308f: mov    %rdx,0x68(%rsp)
  0x00000000033d3094: mov    %rbx,0x60(%rsp)
  0x00000000033d3099: mov    %rbp,0x50(%rsp)
  0x00000000033d309e: mov    %rsi,0x48(%rsp)
  0x00000000033d30a3: mov    %rdi,0x40(%rsp)
  0x00000000033d30a8: mov    %r8,0x38(%rsp)
  0x00000000033d30ad: mov    %r9,0x30(%rsp)
  0x00000000033d30b2: mov    %r10,0x28(%rsp)
  0x00000000033d30b7: mov    %r11,0x20(%rsp)
  0x00000000033d30bc: mov    %r12,0x18(%rsp)
  0x00000000033d30c1: mov    %r13,0x10(%rsp)
  0x00000000033d30c6: mov    %r14,0x8(%rsp)
  0x00000000033d30cb: mov    %r15,(%rsp)
  0x00000000033d30cf: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d30d9: movabs $0x33d3079,%rdx    ;   {internal_word}
  0x00000000033d30e3: mov    %rsp,%r8
  0x00000000033d30e6: and    $0xfffffffffffffff0,%rsp
  0x00000000033d30ea: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d30ef: hlt    
[Deopt Handler Code]
  0x00000000033d30f0: movabs $0x33d30f0,%r10    ;   {section_word}
  0x00000000033d30fa: push   %r10
  0x00000000033d30fc: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d3101: hlt    
  0x00000000033d3102: hlt    
  0x00000000033d3103: hlt    
  0x00000000033d3104: hlt    
  0x00000000033d3105: hlt    
  0x00000000033d3106: hlt    
  0x00000000033d3107: hlt    
Decoding compiled method 0x00000000033d31d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rdx:rdx   = 'java/lang/AbstractStringBuilder'
  # parm0:    r8:r8     = 'java/lang/String'
  #           [sp+0x80]  (sp of caller)
  0x00000000033d3360: mov    0x8(%rdx),%r10d
  0x00000000033d3364: shl    $0x3,%r10
  0x00000000033d3368: cmp    %rax,%r10
  0x00000000033d336b: jne    0x0000000003305f60  ;   {runtime_call}
  0x00000000033d3371: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000033d337c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000033d3380: mov    %eax,-0x6000(%rsp)
  0x00000000033d3387: push   %rbp
  0x00000000033d3388: sub    $0x70,%rsp
  0x00000000033d338c: mov    %rdx,0x48(%rsp)
  0x00000000033d3391: movabs $0x1c120f30,%rsi   ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d339b: mov    0xdc(%rsi),%edi
  0x00000000033d33a1: add    $0x8,%edi
  0x00000000033d33a4: mov    %edi,0xdc(%rsi)
  0x00000000033d33aa: movabs $0x1bf80118,%rsi   ;   {metadata({method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d33b4: and    $0x1ff8,%edi
  0x00000000033d33ba: cmp    $0x0,%edi
  0x00000000033d33bd: je     0x00000000033d3710  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0

  0x00000000033d33c3: cmp    $0x0,%r8
  0x00000000033d33c7: movabs $0x1c120f30,%rsi   ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d33d1: movabs $0x108,%rdi
  0x00000000033d33db: jne    0x00000000033d33eb
  0x00000000033d33e1: movabs $0x118,%rdi
  0x00000000033d33eb: mov    (%rsi,%rdi,1),%rbx
  0x00000000033d33ef: lea    0x1(%rbx),%rbx
  0x00000000033d33f3: mov    %rbx,(%rsi,%rdi,1)
  0x00000000033d33f7: je     0x00000000033d36ea  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1

  0x00000000033d33fd: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ; implicit exception: dispatches to 0x00000000033d3727
  0x00000000033d3400: mov    %r8,%rsi
  0x00000000033d3403: movabs $0x1c120f30,%rdi   ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d340d: mov    0x8(%rsi),%esi
  0x00000000033d3410: shl    $0x3,%rsi
  0x00000000033d3414: cmp    0x140(%rdi),%rsi
  0x00000000033d341b: jne    0x00000000033d342a
  0x00000000033d341d: addq   $0x1,0x148(%rdi)
  0x00000000033d3425: jmpq   0x00000000033d3490
  0x00000000033d342a: cmp    0x150(%rdi),%rsi
  0x00000000033d3431: jne    0x00000000033d3440
  0x00000000033d3433: addq   $0x1,0x158(%rdi)
  0x00000000033d343b: jmpq   0x00000000033d3490
  0x00000000033d3440: cmpq   $0x0,0x140(%rdi)
  0x00000000033d344b: jne    0x00000000033d3464
  0x00000000033d344d: mov    %rsi,0x140(%rdi)
  0x00000000033d3454: movq   $0x1,0x148(%rdi)
  0x00000000033d345f: jmpq   0x00000000033d3490
  0x00000000033d3464: cmpq   $0x0,0x150(%rdi)
  0x00000000033d346f: jne    0x00000000033d3488
  0x00000000033d3471: mov    %rsi,0x150(%rdi)
  0x00000000033d3478: movq   $0x1,0x158(%rdi)
  0x00000000033d3483: jmpq   0x00000000033d3490
  0x00000000033d3488: addq   $0x1,0x138(%rdi)
  0x00000000033d3490: movabs $0x1c037488,%rsi   ;   {metadata(method data for {method} {0x000000001bf13ab8} 'length' '()I' in 'java/lang/String')}
  0x00000000033d349a: mov    0xdc(%rsi),%edi
  0x00000000033d34a0: add    $0x8,%edi
  0x00000000033d34a3: mov    %edi,0xdc(%rsi)
  0x00000000033d34a9: movabs $0x1bf13ab0,%rsi   ;   {metadata({method} {0x000000001bf13ab8} 'length' '()I' in 'java/lang/String')}
  0x00000000033d34b3: and    $0x7ffff8,%edi
  0x00000000033d34b9: cmp    $0x0,%edi
  0x00000000033d34bc: je     0x00000000033d372c
  0x00000000033d34c2: mov    0xc(%r8),%esi
  0x00000000033d34c6: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1
                                                ; - java.lang.AbstractStringBuilder::append@10

  0x00000000033d34ca: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ; implicit exception: dispatches to 0x00000000033d3743
  0x00000000033d34cd: mov    %esi,0x58(%rsp)
  0x00000000033d34d1: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16

  0x00000000033d34d4: add    %esi,%edi
  0x00000000033d34d6: mov    %rdx,%rbx
  0x00000000033d34d9: movabs $0x1c120f30,%rax   ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d34e3: addq   $0x1,0x168(%rax)
  0x00000000033d34eb: movabs $0x1c116dd8,%rbx   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d34f5: mov    0xdc(%rbx),%eax
  0x00000000033d34fb: add    $0x8,%eax
  0x00000000033d34fe: mov    %eax,0xdc(%rbx)
  0x00000000033d3504: movabs $0x1bf7f8c8,%rbx   ;   {metadata({method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d350e: and    $0x7ffff8,%eax
  0x00000000033d3514: cmp    $0x0,%eax
  0x00000000033d3517: je     0x00000000033d3748
  0x00000000033d351d: mov    0x10(%rdx),%ebx
  0x00000000033d3520: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x00000000033d3524: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ; implicit exception: dispatches to 0x00000000033d375f
  0x00000000033d3527: mov    %rdi,%rax
  0x00000000033d352a: sub    %ebx,%eax
  0x00000000033d352c: cmp    $0x0,%eax
  0x00000000033d352f: movabs $0x1c116dd8,%rbx   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d3539: movabs $0x108,%rax
  0x00000000033d3543: jle    0x00000000033d3553
  0x00000000033d3549: movabs $0x118,%rax
  0x00000000033d3553: mov    (%rbx,%rax,1),%rcx
  0x00000000033d3557: lea    0x1(%rcx),%rcx
  0x00000000033d355b: mov    %rcx,(%rbx,%rax,1)
  0x00000000033d355f: mov    %r8,0x50(%rsp)
  0x00000000033d3564: jle    0x00000000033d360c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x00000000033d356a: mov    %rdx,%rbx
  0x00000000033d356d: movabs $0x1c116dd8,%rax   ;   {metadata(method data for {method} {0x000000001bf7f8d0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d3577: mov    0x8(%rbx),%ebx
  0x00000000033d357a: shl    $0x3,%rbx
  0x00000000033d357e: cmp    0x130(%rax),%rbx
  0x00000000033d3585: jne    0x00000000033d3594
  0x00000000033d3587: addq   $0x1,0x138(%rax)
  0x00000000033d358f: jmpq   0x00000000033d35fa
  0x00000000033d3594: cmp    0x140(%rax),%rbx
  0x00000000033d359b: jne    0x00000000033d35aa
  0x00000000033d359d: addq   $0x1,0x148(%rax)
  0x00000000033d35a5: jmpq   0x00000000033d35fa
  0x00000000033d35aa: cmpq   $0x0,0x130(%rax)
  0x00000000033d35b5: jne    0x00000000033d35ce
  0x00000000033d35b7: mov    %rbx,0x130(%rax)
  0x00000000033d35be: movq   $0x1,0x138(%rax)
  0x00000000033d35c9: jmpq   0x00000000033d35fa
  0x00000000033d35ce: cmpq   $0x0,0x140(%rax)
  0x00000000033d35d9: jne    0x00000000033d35f2
  0x00000000033d35db: mov    %rbx,0x140(%rax)
  0x00000000033d35e2: movq   $0x1,0x148(%rax)
  0x00000000033d35ed: jmpq   0x00000000033d35fa
  0x00000000033d35f2: addq   $0x1,0x128(%rax)
  0x00000000033d35fa: mov    %rdi,%r8
  0x00000000033d35fd: mov    %rdx,%rdi
  0x00000000033d3600: mov    %rdi,%rdx          ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12
                                                ; - java.lang.AbstractStringBuilder::append@21

  0x00000000033d3603: nop
  0x00000000033d3604: nop
  0x00000000033d3605: nop
  0x00000000033d3606: nop
  0x00000000033d3607: callq  0x00000000033061a0  ; OopMap{[72]=Oop [80]=Oop off=684}
                                                ;*invokevirtual expandCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {optimized virtual_call}
  0x00000000033d360c: mov    0x58(%rsp),%esi
  0x00000000033d3610: mov    0x50(%rsp),%rbx
  0x00000000033d3615: mov    0x48(%rsp),%rdx
  0x00000000033d361a: mov    0x10(%rdx),%edi
  0x00000000033d361d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28

  0x00000000033d3621: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32

  0x00000000033d3624: mov    %rbx,%r8
  0x00000000033d3627: movabs $0x1c120f30,%r9    ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d3631: mov    0x8(%r8),%r8d
  0x00000000033d3635: shl    $0x3,%r8
  0x00000000033d3639: cmp    0x180(%r9),%r8
  0x00000000033d3640: jne    0x00000000033d364f
  0x00000000033d3642: addq   $0x1,0x188(%r9)
  0x00000000033d364a: jmpq   0x00000000033d36b5
  0x00000000033d364f: cmp    0x190(%r9),%r8
  0x00000000033d3656: jne    0x00000000033d3665
  0x00000000033d3658: addq   $0x1,0x198(%r9)
  0x00000000033d3660: jmpq   0x00000000033d36b5
  0x00000000033d3665: cmpq   $0x0,0x180(%r9)
  0x00000000033d3670: jne    0x00000000033d3689
  0x00000000033d3672: mov    %r8,0x180(%r9)
  0x00000000033d3679: movq   $0x1,0x188(%r9)
  0x00000000033d3684: jmpq   0x00000000033d36b5
  0x00000000033d3689: cmpq   $0x0,0x190(%r9)
  0x00000000033d3694: jne    0x00000000033d36ad
  0x00000000033d3696: mov    %r8,0x190(%r9)
  0x00000000033d369d: movq   $0x1,0x198(%r9)
  0x00000000033d36a8: jmpq   0x00000000033d36b5
  0x00000000033d36ad: addq   $0x1,0x178(%r9)
  0x00000000033d36b5: mov    $0x0,%r8d
  0x00000000033d36bb: mov    %rsi,%r9
  0x00000000033d36be: mov    %rax,%rsi
  0x00000000033d36c1: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35

  0x00000000033d36c4: nop
  0x00000000033d36c5: nop
  0x00000000033d36c6: nop
  0x00000000033d36c7: callq  0x00000000033061a0  ; OopMap{[72]=Oop off=876}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35
                                                ;   {optimized virtual_call}
  0x00000000033d36cc: mov    0x48(%rsp),%rdx
  0x00000000033d36d1: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40

  0x00000000033d36d4: add    0x58(%rsp),%eax
  0x00000000033d36d8: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45

  0x00000000033d36db: mov    %rdx,%rax
  0x00000000033d36de: add    $0x70,%rsp
  0x00000000033d36e2: pop    %rbp
  0x00000000033d36e3: test   %eax,-0x7435e9(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d36e9: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49

  0x00000000033d36ea: mov    %rdx,%rsi
  0x00000000033d36ed: movabs $0x1c120f30,%rdi   ;   {metadata(method data for {method} {0x000000001bf80120} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x00000000033d36f7: addq   $0x1,0x128(%rdi)
  0x00000000033d36ff: callq  0x00000000033061a0  ; OopMap{off=932}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5
                                                ;   {optimized virtual_call}
  0x00000000033d3704: add    $0x70,%rsp
  0x00000000033d3708: pop    %rbp
  0x00000000033d3709: test   %eax,-0x74360f(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d370f: retq   
  0x00000000033d3710: mov    %rsi,0x8(%rsp)
  0x00000000033d3715: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d371d: callq  0x00000000033bede0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1
                                                ;   {runtime_call}
  0x00000000033d3722: jmpq   0x00000000033d33c3
  0x00000000033d3727: callq  0x00000000033ba700  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=972}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x00000000033d372c: mov    %rsi,0x8(%rsp)
  0x00000000033d3731: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d3739: callq  0x00000000033bede0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=990}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x00000000033d373e: jmpq   0x00000000033d34c2
  0x00000000033d3743: callq  0x00000000033ba700  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1000}
                                                ;*arraylength
                                                ; - java.lang.String::length@4
                                                ; - java.lang.AbstractStringBuilder::append@10
                                                ;   {runtime_call}
  0x00000000033d3748: mov    %rbx,0x8(%rsp)
  0x00000000033d374d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d3755: callq  0x00000000033bede0  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1018}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x00000000033d375a: jmpq   0x00000000033d351d
  0x00000000033d375f: callq  0x00000000033ba700  ; OopMap{rdx=Oop [72]=Oop r8=Oop off=1028}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5
                                                ; - java.lang.AbstractStringBuilder::append@21
                                                ;   {runtime_call}
  0x00000000033d3764: nop
  0x00000000033d3765: nop
  0x00000000033d3766: mov    0x2a8(%r15),%rax
  0x00000000033d376d: movabs $0x0,%r10
  0x00000000033d3777: mov    %r10,0x2a8(%r15)
  0x00000000033d377e: movabs $0x0,%r10
  0x00000000033d3788: mov    %r10,0x2b0(%r15)
  0x00000000033d378f: add    $0x70,%rsp
  0x00000000033d3793: pop    %rbp
  0x00000000033d3794: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d3799: hlt    
  0x00000000033d379a: hlt    
  0x00000000033d379b: hlt    
  0x00000000033d379c: hlt    
  0x00000000033d379d: hlt    
  0x00000000033d379e: hlt    
  0x00000000033d379f: hlt    
[Stub Code]
  0x00000000033d37a0: nop                       ;   {no_reloc}
  0x00000000033d37a1: nop
  0x00000000033d37a2: nop
  0x00000000033d37a3: nop
  0x00000000033d37a4: nop
  0x00000000033d37a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d37af: jmpq   0x00000000033d37af  ;   {runtime_call}
  0x00000000033d37b4: nop
  0x00000000033d37b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d37bf: jmpq   0x00000000033d37bf  ;   {runtime_call}
  0x00000000033d37c4: nop
  0x00000000033d37c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000033d37cf: jmpq   0x00000000033d37cf  ;   {runtime_call}
[Exception Handler]
  0x00000000033d37d4: callq  0x00000000033bc5a0  ;   {runtime_call}
  0x00000000033d37d9: mov    %rsp,-0x28(%rsp)
  0x00000000033d37de: sub    $0x80,%rsp
  0x00000000033d37e5: mov    %rax,0x78(%rsp)
  0x00000000033d37ea: mov    %rcx,0x70(%rsp)
  0x00000000033d37ef: mov    %rdx,0x68(%rsp)
  0x00000000033d37f4: mov    %rbx,0x60(%rsp)
  0x00000000033d37f9: mov    %rbp,0x50(%rsp)
  0x00000000033d37fe: mov    %rsi,0x48(%rsp)
  0x00000000033d3803: mov    %rdi,0x40(%rsp)
  0x00000000033d3808: mov    %r8,0x38(%rsp)
  0x00000000033d380d: mov    %r9,0x30(%rsp)
  0x00000000033d3812: mov    %r10,0x28(%rsp)
  0x00000000033d3817: mov    %r11,0x20(%rsp)
  0x00000000033d381c: mov    %r12,0x18(%rsp)
  0x00000000033d3821: mov    %r13,0x10(%rsp)
  0x00000000033d3826: mov    %r14,0x8(%rsp)
  0x00000000033d382b: mov    %r15,(%rsp)
  0x00000000033d382f: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d3839: movabs $0x33d37d9,%rdx    ;   {internal_word}
  0x00000000033d3843: mov    %rsp,%r8
  0x00000000033d3846: and    $0xfffffffffffffff0,%rsp
  0x00000000033d384a: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d384f: hlt    
[Deopt Handler Code]
  0x00000000033d3850: movabs $0x33d3850,%r10    ;   {section_word}
  0x00000000033d385a: push   %r10
  0x00000000033d385c: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d3861: hlt    
  0x00000000033d3862: hlt    
  0x00000000033d3863: hlt    
  0x00000000033d3864: hlt    
  0x00000000033d3865: hlt    
  0x00000000033d3866: hlt    
  0x00000000033d3867: hlt    
Decoding compiled method 0x00000000033d3b90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bf28710} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x00000000033d3ce0: mov    %eax,-0x6000(%rsp)
  0x00000000033d3ce7: push   %rbp
  0x00000000033d3ce8: sub    $0x30,%rsp
  0x00000000033d3cec: movabs $0x1c165ba0,%rax   ;   {metadata(method data for {method} {0x000000001bf28710} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x00000000033d3cf6: mov    0xdc(%rax),%esi
  0x00000000033d3cfc: add    $0x8,%esi
  0x00000000033d3cff: mov    %esi,0xdc(%rax)
  0x00000000033d3d05: movabs $0x1bf28708,%rax   ;   {metadata({method} {0x000000001bf28710} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x00000000033d3d0f: and    $0x1ff8,%esi
  0x00000000033d3d15: cmp    $0x0,%esi
  0x00000000033d3d18: je     0x00000000033d3d3b
  0x00000000033d3d1e: movabs $0x76b300c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x00000000033d3d28: mov    0x74(%rax),%eax
  0x00000000033d3d2b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0

  0x00000000033d3d2f: add    $0x30,%rsp
  0x00000000033d3d33: pop    %rbp
  0x00000000033d3d34: test   %eax,-0x743c3a(%rip)        # 0x0000000002c90100
                                                ;   {poll_return}
  0x00000000033d3d3a: retq   
  0x00000000033d3d3b: mov    %rax,0x8(%rsp)
  0x00000000033d3d40: movq   $0xffffffffffffffff,(%rsp)
  0x00000000033d3d48: callq  0x00000000033bede0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1
                                                ;   {runtime_call}
  0x00000000033d3d4d: jmp    0x00000000033d3d1e
  0x00000000033d3d4f: nop
  0x00000000033d3d50: nop
  0x00000000033d3d51: mov    0x2a8(%r15),%rax
  0x00000000033d3d58: movabs $0x0,%r10
  0x00000000033d3d62: mov    %r10,0x2a8(%r15)
  0x00000000033d3d69: movabs $0x0,%r10
  0x00000000033d3d73: mov    %r10,0x2b0(%r15)
  0x00000000033d3d7a: add    $0x30,%rsp
  0x00000000033d3d7e: pop    %rbp
  0x00000000033d3d7f: jmpq   0x000000000332d120  ;   {runtime_call}
  0x00000000033d3d84: hlt    
  0x00000000033d3d85: hlt    
  0x00000000033d3d86: hlt    
  0x00000000033d3d87: hlt    
  0x00000000033d3d88: hlt    
  0x00000000033d3d89: hlt    
  0x00000000033d3d8a: hlt    
  0x00000000033d3d8b: hlt    
  0x00000000033d3d8c: hlt    
  0x00000000033d3d8d: hlt    
  0x00000000033d3d8e: hlt    
  0x00000000033d3d8f: hlt    
  0x00000000033d3d90: hlt    
  0x00000000033d3d91: hlt    
  0x00000000033d3d92: hlt    
  0x00000000033d3d93: hlt    
  0x00000000033d3d94: hlt    
  0x00000000033d3d95: hlt    
  0x00000000033d3d96: hlt    
  0x00000000033d3d97: hlt    
  0x00000000033d3d98: hlt    
  0x00000000033d3d99: hlt    
  0x00000000033d3d9a: hlt    
  0x00000000033d3d9b: hlt    
  0x00000000033d3d9c: hlt    
  0x00000000033d3d9d: hlt    
  0x00000000033d3d9e: hlt    
  0x00000000033d3d9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000033d3da0: callq  0x00000000033bc5a0  ;   {no_reloc}
  0x00000000033d3da5: mov    %rsp,-0x28(%rsp)
  0x00000000033d3daa: sub    $0x80,%rsp
  0x00000000033d3db1: mov    %rax,0x78(%rsp)
  0x00000000033d3db6: mov    %rcx,0x70(%rsp)
  0x00000000033d3dbb: mov    %rdx,0x68(%rsp)
  0x00000000033d3dc0: mov    %rbx,0x60(%rsp)
  0x00000000033d3dc5: mov    %rbp,0x50(%rsp)
  0x00000000033d3dca: mov    %rsi,0x48(%rsp)
  0x00000000033d3dcf: mov    %rdi,0x40(%rsp)
  0x00000000033d3dd4: mov    %r8,0x38(%rsp)
  0x00000000033d3dd9: mov    %r9,0x30(%rsp)
  0x00000000033d3dde: mov    %r10,0x28(%rsp)
  0x00000000033d3de3: mov    %r11,0x20(%rsp)
  0x00000000033d3de8: mov    %r12,0x18(%rsp)
  0x00000000033d3ded: mov    %r13,0x10(%rsp)
  0x00000000033d3df2: mov    %r14,0x8(%rsp)
  0x00000000033d3df7: mov    %r15,(%rsp)
  0x00000000033d3dfb: movabs $0x596e1230,%rcx   ;   {external_word}
  0x00000000033d3e05: movabs $0x33d3da5,%rdx    ;   {internal_word}
  0x00000000033d3e0f: mov    %rsp,%r8
  0x00000000033d3e12: and    $0xfffffffffffffff0,%rsp
  0x00000000033d3e16: callq  0x000000005939fb10  ;   {runtime_call}
  0x00000000033d3e1b: hlt    
[Deopt Handler Code]
  0x00000000033d3e1c: movabs $0x33d3e1c,%r10    ;   {section_word}
  0x00000000033d3e26: push   %r10
  0x00000000033d3e28: jmpq   0x0000000003307600  ;   {runtime_call}
  0x00000000033d3e2d: hlt    
  0x00000000033d3e2e: hlt    
  0x00000000033d3e2f: hlt    
