Compiled method (c1)      64    1       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000001a980590010,0x000001a9805905b0] = 1440
 relocation     [0x000001a980590188,0x000001a9805901c8] = 64
 main code      [0x000001a9805901e0,0x000001a980590440] = 608
 stub code      [0x000001a980590440,0x000001a9805904d8] = 152
 oops           [0x000001a9805904d8,0x000001a9805904e0] = 8
 metadata       [0x000001a9805904e0,0x000001a9805904f8] = 24
 scopes data    [0x000001a9805904f8,0x000001a980590538] = 64
 scopes pcs     [0x000001a980590538,0x000001a9805905a8] = 112
 dependencies   [0x000001a9805905a8,0x000001a9805905b0] = 8
Loaded disassembler from hsdis-amd64.dll
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x000001a9805901e0, 0x000001a9805904d8]  760 bytes
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000001a9805901e0: mov    %eax,-0x7000(%rsp)
  0x000001a9805901e7: push   %rbp
  0x000001a9805901e8: sub    $0x70,%rsp
  0x000001a9805901ec: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805901f6: mov    0xfc(%rcx),%eax
  0x000001a9805901fc: add    $0x8,%eax
  0x000001a9805901ff: mov    %eax,0xfc(%rcx)
  0x000001a980590205: and    $0x1ff8,%eax
  0x000001a98059020b: cmp    $0x0,%eax
  0x000001a98059020e: je     0x000001a9805903aa  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x000001a980590214: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059021e: lea    0x170(%rcx),%rcx
  0x000001a980590225: mov    %rdx,%rax
  0x000001a980590228: test   %rax,%rax
  0x000001a98059022b: jne    0x000001a980590237
  0x000001a98059022d: orq    $0x1,0x8(%rcx)
  0x000001a980590235: jmp    0x000001a98059025a
  0x000001a980590237: mov    0x8(%rax),%eax
  0x000001a98059023a: shl    $0x3,%rax
  0x000001a98059023e: xor    0x8(%rcx),%rax
  0x000001a980590242: test   $0xfffffffffffffffc,%rax
  0x000001a980590248: je     0x000001a98059025a
  0x000001a98059024a: test   $0x2,%rax
  0x000001a980590250: jne    0x000001a98059025a
  0x000001a980590252: orq    $0x2,0x8(%rcx)
  0x000001a98059025a: movabs $0x6d1708638,%rcx  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a980590264: movabs $0x1a9ff75fd90,%rax  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059026e: addq   $0x1,0x138(%rax)
  0x000001a980590276: movslq %r8d,%r8
  0x000001a980590279: mov    $0x2,%ecx
  0x000001a98059027e: shl    %cl,%r8
  0x000001a980590281: movabs $0x10,%r10
  0x000001a98059028b: add    %r10,%r8
  0x000001a98059028e: movabs $0x1a9ff761288,%rax  ;   {metadata(method data for {method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a980590298: mov    0xfc(%rax),%esi
  0x000001a98059029e: add    $0x8,%esi
  0x000001a9805902a1: mov    %esi,0xfc(%rax)
  0x000001a9805902a7: and    $0x7ffff8,%esi
  0x000001a9805902ad: cmp    $0x0,%esi
  0x000001a9805902b0: je     0x000001a9805903cb
  0x000001a9805902b6: mov    (%rdx,%r8,1),%eax
  0x000001a9805902ba: shl    $0x3,%rax
  0x000001a9805902be: cmp    $0x0,%rax
  0x000001a9805902c2: jne    0x000001a9805902dd
  0x000001a9805902c4: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805902ce: orl    $0x100,0x180(%rdi)
  0x000001a9805902d8: jmpq   0x000001a98059039d
  0x000001a9805902dd: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a9805902e7: mov    0x8(%rax),%esi
  0x000001a9805902ea: shl    $0x3,%rsi
  0x000001a9805902ee: cmp    %rsi,%rbx
  0x000001a9805902f1: jne    0x000001a980590381
  0x000001a9805902f7: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980590301: mov    0x8(%rax),%ebx
  0x000001a980590304: shl    $0x3,%rbx
  0x000001a980590308: cmp    0x198(%rdi),%rbx
  0x000001a98059030f: jne    0x000001a98059031e
  0x000001a980590311: addq   $0x1,0x1a0(%rdi)
  0x000001a980590319: jmpq   0x000001a98059039d
  0x000001a98059031e: cmp    0x1a8(%rdi),%rbx
  0x000001a980590325: jne    0x000001a980590334
  0x000001a980590327: addq   $0x1,0x1b0(%rdi)
  0x000001a98059032f: jmpq   0x000001a98059039d
  0x000001a980590334: cmpq   $0x0,0x198(%rdi)
  0x000001a98059033f: jne    0x000001a980590358
  0x000001a980590341: mov    %rbx,0x198(%rdi)
  0x000001a980590348: movq   $0x1,0x1a0(%rdi)
  0x000001a980590353: jmpq   0x000001a98059039d
  0x000001a980590358: cmpq   $0x0,0x1a8(%rdi)
  0x000001a980590363: jne    0x000001a98059037c
  0x000001a980590365: mov    %rbx,0x1a8(%rdi)
  0x000001a98059036c: movq   $0x1,0x1b0(%rdi)
  0x000001a980590377: jmpq   0x000001a98059039d
  0x000001a98059037c: jmpq   0x000001a98059039d
  0x000001a980590381: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059038b: subq   $0x1,0x188(%rdi)
  0x000001a980590393: jmpq   0x000001a9805903ec
  0x000001a980590398: jmpq   0x000001a98059039d  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18

  0x000001a98059039d: add    $0x70,%rsp
  0x000001a9805903a1: pop    %rbp
  0x000001a9805903a2: mov    0x70(%r15),%r10
  0x000001a9805903a6: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805903a9: retq   
  0x000001a9805903aa: movabs $0x1a9ff693250,%r10  ;   {metadata({method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805903b4: mov    %r10,0x8(%rsp)
  0x000001a9805903b9: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805903c1: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805903c6: jmpq   0x000001a980590214
  0x000001a9805903cb: movabs $0x1a9ff61e6a0,%r10  ;   {metadata({method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a9805903d5: mov    %r10,0x8(%rsp)
  0x000001a9805903da: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805903e2: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805903e7: jmpq   0x000001a9805902b6
  0x000001a9805903ec: mov    %rax,(%rsp)
  0x000001a9805903f0: callq  0x000001a9800eeca0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a9805903f5: nop
  0x000001a9805903f6: nop
  0x000001a9805903f7: mov    0x350(%r15),%rax
  0x000001a9805903fe: movabs $0x0,%r10
  0x000001a980590408: mov    %r10,0x350(%r15)
  0x000001a98059040f: movabs $0x0,%r10
  0x000001a980590419: mov    %r10,0x358(%r15)
  0x000001a980590420: add    $0x70,%rsp
  0x000001a980590424: pop    %rbp
  0x000001a980590425: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a98059042a: hlt    
  0x000001a98059042b: hlt    
  0x000001a98059042c: hlt    
  0x000001a98059042d: hlt    
  0x000001a98059042e: hlt    
  0x000001a98059042f: hlt    
  0x000001a980590430: hlt    
  0x000001a980590431: hlt    
  0x000001a980590432: hlt    
  0x000001a980590433: hlt    
  0x000001a980590434: hlt    
  0x000001a980590435: hlt    
  0x000001a980590436: hlt    
  0x000001a980590437: hlt    
  0x000001a980590438: hlt    
  0x000001a980590439: hlt    
  0x000001a98059043a: hlt    
  0x000001a98059043b: hlt    
  0x000001a98059043c: hlt    
  0x000001a98059043d: hlt    
  0x000001a98059043e: hlt    
  0x000001a98059043f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980590440: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980590445: mov    %rsp,-0x28(%rsp)
  0x000001a98059044a: sub    $0x80,%rsp
  0x000001a980590451: mov    %rax,0x78(%rsp)
  0x000001a980590456: mov    %rcx,0x70(%rsp)
  0x000001a98059045b: mov    %rdx,0x68(%rsp)
  0x000001a980590460: mov    %rbx,0x60(%rsp)
  0x000001a980590465: mov    %rbp,0x50(%rsp)
  0x000001a98059046a: mov    %rsi,0x48(%rsp)
  0x000001a98059046f: mov    %rdi,0x40(%rsp)
  0x000001a980590474: mov    %r8,0x38(%rsp)
  0x000001a980590479: mov    %r9,0x30(%rsp)
  0x000001a98059047e: mov    %r10,0x28(%rsp)
  0x000001a980590483: mov    %r11,0x20(%rsp)
  0x000001a980590488: mov    %r12,0x18(%rsp)
  0x000001a98059048d: mov    %r13,0x10(%rsp)
  0x000001a980590492: mov    %r14,0x8(%rsp)
  0x000001a980590497: mov    %r15,(%rsp)
  0x000001a98059049b: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a9805904a5: movabs $0x1a980590445,%rdx  ;   {internal_word}
  0x000001a9805904af: mov    %rsp,%r8
  0x000001a9805904b2: and    $0xfffffffffffffff0,%rsp
  0x000001a9805904b6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a9805904c0: callq  *%r10
  0x000001a9805904c3: hlt    
[Deopt Handler Code]
  0x000001a9805904c4: movabs $0x1a9805904c4,%r10  ;   {section_word}
  0x000001a9805904ce: push   %r10
  0x000001a9805904d0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a9805904d5: hlt    
  0x000001a9805904d6: hlt    
  0x000001a9805904d7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 486 519 
ImmutableOopMap{}pc offsets: 533 Compiled method (c1)      70    5       3       java.lang.StringLatin1::hashCode (42 bytes)
 total in heap  [0x000001a980590610,0x000001a980590b28] = 1304
 relocation     [0x000001a980590788,0x000001a9805907c0] = 56
 main code      [0x000001a9805907c0,0x000001a980590940] = 384
 stub code      [0x000001a980590940,0x000001a9805909d8] = 152
 metadata       [0x000001a9805909d8,0x000001a9805909e0] = 8
 scopes data    [0x000001a9805909e0,0x000001a980590a40] = 96
 scopes pcs     [0x000001a980590a40,0x000001a980590b10] = 208
 dependencies   [0x000001a980590b10,0x000001a980590b18] = 8
 nul chk table  [0x000001a980590b18,0x000001a980590b28] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000001a9805907c0, 0x000001a9805909d8]  536 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000001a9805907c0: mov    %eax,-0x7000(%rsp)
  0x000001a9805907c7: push   %rbp
  0x000001a9805907c8: sub    $0x30,%rsp
  0x000001a9805907cc: movabs $0x1a9ff7a2c88,%rax  ;   {metadata(method data for {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a9805907d6: mov    0xfc(%rax),%esi
  0x000001a9805907dc: add    $0x8,%esi
  0x000001a9805907df: mov    %esi,0xfc(%rax)
  0x000001a9805907e5: and    $0x1ff8,%esi
  0x000001a9805907eb: cmp    $0x0,%esi
  0x000001a9805907ee: je     0x000001a9805908a9  ;*iconst_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@0

  0x000001a9805907f4: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; implicit exception: dispatches to 0x000001a9805908ca
  0x000001a9805907f7: mov    $0x0,%esi
  0x000001a9805907fc: mov    $0x0,%edi
  0x000001a980590801: jmpq   0x000001a980590861  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10

  0x000001a980590806: xchg   %ax,%ax
  0x000001a980590808: movslq %esi,%rbx
  0x000001a98059080b: movsbl 0x10(%rdx,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000001a980590810: mov    %rdi,%rcx
  0x000001a980590813: shl    $0x5,%edi
  0x000001a980590816: sub    %ecx,%edi
  0x000001a980590818: and    $0xff,%ebx
  0x000001a98059081e: add    %ebx,%edi
  0x000001a980590820: inc    %esi
  0x000001a980590822: movabs $0x1a9ff7a2c88,%rbx  ;   {metadata(method data for {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a98059082c: mov    0x100(%rbx),%ecx
  0x000001a980590832: add    $0x8,%ecx
  0x000001a980590835: mov    %ecx,0x100(%rbx)
  0x000001a98059083b: and    $0xfff8,%ecx
  0x000001a980590841: cmp    $0x0,%ecx
  0x000001a980590844: je     0x000001a9805908cf  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a98059084a: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a98059084e: test   %eax,(%r10)        ;   {poll}
  0x000001a980590851: movabs $0x1a9ff7a2c88,%rbx  ;   {metadata(method data for {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a98059085b: incl   0x158(%rbx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a980590861: cmp    %eax,%esi
  0x000001a980590863: movabs $0x1a9ff7a2c88,%rbx  ;   {metadata(method data for {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a98059086d: movabs $0x148,%rcx
  0x000001a980590877: jl     0x000001a980590887
  0x000001a98059087d: movabs $0x138,%rcx
  0x000001a980590887: mov    (%rbx,%rcx,1),%r8
  0x000001a98059088b: lea    0x1(%r8),%r8
  0x000001a98059088f: mov    %r8,(%rbx,%rcx,1)
  0x000001a980590893: jl     0x000001a980590808  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a980590899: mov    %rdi,%rax
  0x000001a98059089c: add    $0x30,%rsp
  0x000001a9805908a0: pop    %rbp
  0x000001a9805908a1: mov    0x70(%r15),%r10
  0x000001a9805908a5: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805908a8: retq   
  0x000001a9805908a9: movabs $0x1a9ff6752d0,%r10  ;   {metadata({method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a9805908b3: mov    %r10,0x8(%rsp)
  0x000001a9805908b8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805908c0: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805908c5: jmpq   0x000001a9805907f4
  0x000001a9805908ca: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a9805908cf: movabs $0x1a9ff6752d0,%r10  ;   {metadata({method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1')}
  0x000001a9805908d9: mov    %r10,0x8(%rsp)
  0x000001a9805908de: movq   $0x25,(%rsp)
  0x000001a9805908e6: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805908eb: jmpq   0x000001a98059084a
  0x000001a9805908f0: nop
  0x000001a9805908f1: nop
  0x000001a9805908f2: mov    0x350(%r15),%rax
  0x000001a9805908f9: movabs $0x0,%r10
  0x000001a980590903: mov    %r10,0x350(%r15)
  0x000001a98059090a: movabs $0x0,%r10
  0x000001a980590914: mov    %r10,0x358(%r15)
  0x000001a98059091b: add    $0x30,%rsp
  0x000001a98059091f: pop    %rbp
  0x000001a980590920: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980590925: hlt    
  0x000001a980590926: hlt    
  0x000001a980590927: hlt    
  0x000001a980590928: hlt    
  0x000001a980590929: hlt    
  0x000001a98059092a: hlt    
  0x000001a98059092b: hlt    
  0x000001a98059092c: hlt    
  0x000001a98059092d: hlt    
  0x000001a98059092e: hlt    
  0x000001a98059092f: hlt    
  0x000001a980590930: hlt    
  0x000001a980590931: hlt    
  0x000001a980590932: hlt    
  0x000001a980590933: hlt    
  0x000001a980590934: hlt    
  0x000001a980590935: hlt    
  0x000001a980590936: hlt    
  0x000001a980590937: hlt    
  0x000001a980590938: hlt    
  0x000001a980590939: hlt    
  0x000001a98059093a: hlt    
  0x000001a98059093b: hlt    
  0x000001a98059093c: hlt    
  0x000001a98059093d: hlt    
  0x000001a98059093e: hlt    
  0x000001a98059093f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980590940: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980590945: mov    %rsp,-0x28(%rsp)
  0x000001a98059094a: sub    $0x80,%rsp
  0x000001a980590951: mov    %rax,0x78(%rsp)
  0x000001a980590956: mov    %rcx,0x70(%rsp)
  0x000001a98059095b: mov    %rdx,0x68(%rsp)
  0x000001a980590960: mov    %rbx,0x60(%rsp)
  0x000001a980590965: mov    %rbp,0x50(%rsp)
  0x000001a98059096a: mov    %rsi,0x48(%rsp)
  0x000001a98059096f: mov    %rdi,0x40(%rsp)
  0x000001a980590974: mov    %r8,0x38(%rsp)
  0x000001a980590979: mov    %r9,0x30(%rsp)
  0x000001a98059097e: mov    %r10,0x28(%rsp)
  0x000001a980590983: mov    %r11,0x20(%rsp)
  0x000001a980590988: mov    %r12,0x18(%rsp)
  0x000001a98059098d: mov    %r13,0x10(%rsp)
  0x000001a980590992: mov    %r14,0x8(%rsp)
  0x000001a980590997: mov    %r15,(%rsp)
  0x000001a98059099b: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a9805909a5: movabs $0x1a980590945,%rdx  ;   {internal_word}
  0x000001a9805909af: mov    %rsp,%r8
  0x000001a9805909b2: and    $0xfffffffffffffff0,%rsp
  0x000001a9805909b6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a9805909c0: callq  *%r10
  0x000001a9805909c3: hlt    
[Deopt Handler Code]
  0x000001a9805909c4: movabs $0x1a9805909c4,%r10  ;   {section_word}
  0x000001a9805909ce: push   %r10
  0x000001a9805909d0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a9805909d5: hlt    
  0x000001a9805909d6: hlt    
  0x000001a9805909d7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 142 261 271 299 Compiled method (c1)      73   11       3       java.util.ImmutableCollections$SetN::probe (60 bytes)
 total in heap  [0x000001a980590b90,0x000001a980591748] = 3000
 relocation     [0x000001a980590d08,0x000001a980590d88] = 128
 main code      [0x000001a980590da0,0x000001a9805912e0] = 1344
 stub code      [0x000001a9805912e0,0x000001a9805913a0] = 192
 metadata       [0x000001a9805913a0,0x000001a9805913b8] = 24
 scopes data    [0x000001a9805913b8,0x000001a980591500] = 328
 scopes pcs     [0x000001a980591500,0x000001a980591710] = 528
 dependencies   [0x000001a980591710,0x000001a980591718] = 8
 nul chk table  [0x000001a980591718,0x000001a980591748] = 48
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN.probe(Ljava/lang/Object;)I  [0x000001a980590da0, 0x000001a9805913a0]  1536 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN'
  # this:     rdx:rdx   = 'java/util/ImmutableCollections$SetN'
  # parm0:    r8:r8     = 'java/lang/Object'
  #           [sp+0x80]  (sp of caller)
  0x000001a980590da0: mov    0x8(%rdx),%r10d
  0x000001a980590da4: shl    $0x3,%r10
  0x000001a980590da8: cmp    %rax,%r10
  0x000001a980590dab: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980590db1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a980590dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980590dc0: mov    %eax,-0x7000(%rsp)
  0x000001a980590dc7: push   %rbp
  0x000001a980590dc8: sub    $0x70,%rsp
  0x000001a980590dcc: mov    %rdx,0x50(%rsp)
  0x000001a980590dd1: mov    %r8,0x58(%rsp)
  0x000001a980590dd6: movabs $0x1a9ff7aeee8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a980590de0: mov    0xfc(%rsi),%edi
  0x000001a980590de6: add    $0x8,%edi
  0x000001a980590de9: mov    %edi,0xfc(%rsi)
  0x000001a980590def: and    $0x1ff8,%edi
  0x000001a980590df5: cmp    $0x0,%edi
  0x000001a980590df8: je     0x000001a9805911e9  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@0

  0x000001a980590dfe: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000001a98059120a
  0x000001a980590e01: mov    %r8,%rsi
  0x000001a980590e04: movabs $0x1a9ff7aeee8,%rdi  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a980590e0e: mov    0x8(%rsi),%esi
  0x000001a980590e11: shl    $0x3,%rsi
  0x000001a980590e15: cmp    0x148(%rdi),%rsi
  0x000001a980590e1c: jne    0x000001a980590e2b
  0x000001a980590e1e: addq   $0x1,0x150(%rdi)
  0x000001a980590e26: jmpq   0x000001a980590e91
  0x000001a980590e2b: cmp    0x158(%rdi),%rsi
  0x000001a980590e32: jne    0x000001a980590e41
  0x000001a980590e34: addq   $0x1,0x160(%rdi)
  0x000001a980590e3c: jmpq   0x000001a980590e91
  0x000001a980590e41: cmpq   $0x0,0x148(%rdi)
  0x000001a980590e4c: jne    0x000001a980590e65
  0x000001a980590e4e: mov    %rsi,0x148(%rdi)
  0x000001a980590e55: movq   $0x1,0x150(%rdi)
  0x000001a980590e60: jmpq   0x000001a980590e91
  0x000001a980590e65: cmpq   $0x0,0x158(%rdi)
  0x000001a980590e70: jne    0x000001a980590e89
  0x000001a980590e72: mov    %rsi,0x158(%rdi)
  0x000001a980590e79: movq   $0x1,0x160(%rdi)
  0x000001a980590e84: jmpq   0x000001a980590e91
  0x000001a980590e89: addq   $0x1,0x138(%rdi)
  0x000001a980590e91: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1

  0x000001a980590e94: nop
  0x000001a980590e95: movabs $0xffffffffffffffff,%rax
  0x000001a980590e9f: callq  0x000001a980028c20  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {virtual_call}
  0x000001a980590ea4: mov    %rax,%r8
  0x000001a980590ea7: xor    $0xb0f49740,%r8d
  0x000001a980590eae: mov    0x50(%rsp),%rdx
  0x000001a980590eb3: mov    0x10(%rdx),%eax
  0x000001a980590eb6: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@9

  0x000001a980590eba: mov    0xc(%rax),%esi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ; implicit exception: dispatches to 0x000001a98059120f
  0x000001a980590ebd: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a980590ec7: addq   $0x1,0x170(%rax)
  0x000001a980590ecf: movabs $0x1a9ff7aebb8,%rax  ;   {metadata(method data for {method} {0x000001a9ff6d2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a980590ed9: mov    0xfc(%rax),%edi
  0x000001a980590edf: add    $0x8,%edi
  0x000001a980590ee2: mov    %edi,0xfc(%rax)
  0x000001a980590ee8: and    $0x7ffff8,%edi
  0x000001a980590eee: cmp    $0x0,%edi
  0x000001a980590ef1: je     0x000001a980591214
  0x000001a980590ef7: movabs $0x1a9ff7aebb8,%rax  ;   {metadata(method data for {method} {0x000001a9ff6d2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a980590f01: addq   $0x1,0x138(%rax)
  0x000001a980590f09: movabs $0x1a9ff7aed48,%rax  ;   {metadata(method data for {method} {0x000001a9ff6d2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a980590f13: mov    0xfc(%rax),%edi
  0x000001a980590f19: add    $0x8,%edi
  0x000001a980590f1c: mov    %edi,0xfc(%rax)
  0x000001a980590f22: and    $0x7ffff8,%edi
  0x000001a980590f28: cmp    $0x0,%edi
  0x000001a980590f2b: je     0x000001a980591235
  0x000001a980590f31: mov    %r8,%rax
  0x000001a980590f34: mov    %rdx,%rdi
  0x000001a980590f37: cmp    $0x80000000,%eax
  0x000001a980590f3d: jne    0x000001a980590f4e
  0x000001a980590f43: xor    %edx,%edx
  0x000001a980590f45: cmp    $0xffffffff,%esi
  0x000001a980590f48: je     0x000001a980590f51
  0x000001a980590f4e: cltd   
  0x000001a980590f4f: idiv   %esi               ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ; implicit exception: dispatches to 0x000001a980591256
  0x000001a980590f51: mov    %rsi,%rdx
  0x000001a980590f54: xor    %r8,%rdx
  0x000001a980590f57: cmp    $0x0,%edx
  0x000001a980590f5a: movabs $0x1a9ff7aed48,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6d2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a980590f64: movabs $0x138,%rbx
  0x000001a980590f6e: jge    0x000001a980590f7e
  0x000001a980590f74: movabs $0x148,%rbx
  0x000001a980590f7e: mov    (%rdx,%rbx,1),%rcx
  0x000001a980590f82: lea    0x1(%rcx),%rcx
  0x000001a980590f86: mov    %rcx,(%rdx,%rbx,1)
  0x000001a980590f8a: jge    0x000001a980590fd1  ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@7
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x000001a980590f90: mov    %rax,%rdx
  0x000001a980590f93: imul   %esi,%edx
  0x000001a980590f96: cmp    %r8d,%edx
  0x000001a980590f99: movabs $0x1a9ff7aed48,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6d2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a980590fa3: movabs $0x158,%rbx
  0x000001a980590fad: je     0x000001a980590fbd
  0x000001a980590fb3: movabs $0x168,%rbx
  0x000001a980590fbd: mov    (%rdx,%rbx,1),%rcx
  0x000001a980590fc1: lea    0x1(%rcx),%rcx
  0x000001a980590fc5: mov    %rcx,(%rdx,%rbx,1)
  0x000001a980590fc9: je     0x000001a980590fd1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@14
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13

  0x000001a980590fcf: dec    %eax
  0x000001a980590fd1: imul   %esi,%eax
  0x000001a980590fd4: sub    %eax,%r8d
  0x000001a980590fd7: mov    0x58(%rsp),%rsi
  0x000001a980590fdc: nopl   0x0(%rax)
  0x000001a980590fe0: mov    0x10(%rdi),%edx
  0x000001a980590fe3: shl    $0x3,%rdx          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@18

  0x000001a980590fe7: mov    0xc(%rdx),%ebx     ; implicit exception: dispatches to 0x000001a98059125b
  0x000001a980590fea: movslq %r8d,%rax
  0x000001a980590fed: cmp    %r8d,%ebx
  0x000001a980590ff0: jbe    0x000001a980591260
  0x000001a980590ff6: mov    0x10(%rdx,%rax,4),%edx
  0x000001a980590ffa: shl    $0x3,%rdx          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22

  0x000001a980590ffe: cmp    $0x0,%rdx
  0x000001a980591002: movabs $0x1a9ff7aeee8,%rbx  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a98059100c: movabs $0x190,%rax
  0x000001a980591016: je     0x000001a980591026
  0x000001a98059101c: movabs $0x180,%rax
  0x000001a980591026: mov    (%rbx,%rax,1),%rcx
  0x000001a98059102a: lea    0x1(%rcx),%rcx
  0x000001a98059102e: mov    %rcx,(%rbx,%rax,1)
  0x000001a980591032: je     0x000001a9805911d4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@25

  0x000001a980591038: mov    %r8d,0x60(%rsp)
  0x000001a98059103d: mov    %rsi,%rbx
  0x000001a980591040: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a98059104a: mov    0x8(%rbx),%ebx
  0x000001a98059104d: shl    $0x3,%rbx
  0x000001a980591051: cmp    0x1b0(%rax),%rbx
  0x000001a980591058: jne    0x000001a980591067
  0x000001a98059105a: addq   $0x1,0x1b8(%rax)
  0x000001a980591062: jmpq   0x000001a9805910cd
  0x000001a980591067: cmp    0x1c0(%rax),%rbx
  0x000001a98059106e: jne    0x000001a98059107d
  0x000001a980591070: addq   $0x1,0x1c8(%rax)
  0x000001a980591078: jmpq   0x000001a9805910cd
  0x000001a98059107d: cmpq   $0x0,0x1b0(%rax)
  0x000001a980591088: jne    0x000001a9805910a1
  0x000001a98059108a: mov    %rbx,0x1b0(%rax)
  0x000001a980591091: movq   $0x1,0x1b8(%rax)
  0x000001a98059109c: jmpq   0x000001a9805910cd
  0x000001a9805910a1: cmpq   $0x0,0x1c0(%rax)
  0x000001a9805910ac: jne    0x000001a9805910c5
  0x000001a9805910ae: mov    %rbx,0x1c0(%rax)
  0x000001a9805910b5: movq   $0x1,0x1c8(%rax)
  0x000001a9805910c0: jmpq   0x000001a9805910cd
  0x000001a9805910c5: addq   $0x1,0x1a0(%rax)
  0x000001a9805910cd: mov    %rdx,%r8
  0x000001a9805910d0: mov    %rsi,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35

  0x000001a9805910d3: xchg   %ax,%ax
  0x000001a9805910d5: movabs $0xffffffffffffffff,%rax
  0x000001a9805910df: callq  0x000001a980028c60  ; ImmutableOopMap{[88]=Oop [80]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@35
                                                ;   {virtual_call}
  0x000001a9805910e4: cmp    $0x0,%eax
  0x000001a9805910e7: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a9805910f1: movabs $0x1e8,%rsi
  0x000001a9805910fb: jne    0x000001a98059110b
  0x000001a980591101: movabs $0x1d8,%rsi
  0x000001a98059110b: mov    (%rax,%rsi,1),%rdi
  0x000001a98059110f: lea    0x1(%rdi),%rdi
  0x000001a980591113: mov    %rdi,(%rax,%rsi,1)
  0x000001a980591117: jne    0x000001a9805911bf  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@38

  0x000001a98059111d: mov    0x50(%rsp),%rdx
  0x000001a980591122: mov    0x60(%rsp),%r8d
  0x000001a980591127: inc    %r8d
  0x000001a98059112a: mov    0x10(%rdx),%eax
  0x000001a98059112d: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@48

  0x000001a980591131: mov    0xc(%rax),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ; implicit exception: dispatches to 0x000001a980591269
  0x000001a980591134: cmp    %eax,%r8d
  0x000001a980591137: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a980591141: movabs $0x1f8,%rsi
  0x000001a98059114b: jne    0x000001a98059115b
  0x000001a980591151: movabs $0x208,%rsi
  0x000001a98059115b: mov    (%rax,%rsi,1),%rdi
  0x000001a98059115f: lea    0x1(%rdi),%rdi
  0x000001a980591163: mov    %rdi,(%rax,%rsi,1)
  0x000001a980591167: jne    0x000001a980591173  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@52

  0x000001a98059116d: mov    $0x0,%r8d
  0x000001a980591173: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a98059117d: mov    0x100(%rax),%esi
  0x000001a980591183: add    $0x8,%esi
  0x000001a980591186: mov    %esi,0x100(%rax)
  0x000001a98059118c: and    $0xfff8,%esi
  0x000001a980591192: cmp    $0x0,%esi
  0x000001a980591195: je     0x000001a98059126e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a98059119b: mov    0x70(%r15),%r10    ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a98059119f: test   %eax,(%r10)        ;   {poll}
  0x000001a9805911a2: movabs $0x1a9ff7aeee8,%rax  ;   {metadata(method data for {method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a9805911ac: incl   0x218(%rax)
  0x000001a9805911b2: mov    0x58(%rsp),%rsi
  0x000001a9805911b7: mov    %rdx,%rdi
  0x000001a9805911ba: jmpq   0x000001a980590fe0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57

  0x000001a9805911bf: mov    0x60(%rsp),%r8d
  0x000001a9805911c4: mov    %r8,%rax
  0x000001a9805911c7: add    $0x70,%rsp
  0x000001a9805911cb: pop    %rbp
  0x000001a9805911cc: mov    0x70(%r15),%r10
  0x000001a9805911d0: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805911d3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@42

  0x000001a9805911d4: neg    %r8d
  0x000001a9805911d7: mov    %r8,%rax
  0x000001a9805911da: dec    %eax
  0x000001a9805911dc: add    $0x70,%rsp
  0x000001a9805911e0: pop    %rbp
  0x000001a9805911e1: mov    0x70(%r15),%r10
  0x000001a9805911e5: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805911e8: retq   
  0x000001a9805911e9: movabs $0x1a9ff7a15d0,%r10  ;   {metadata({method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a9805911f3: mov    %r10,0x8(%rsp)
  0x000001a9805911f8: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980591200: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN::probe@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980591205: jmpq   0x000001a980590dfe
  0x000001a98059120a: callq  0x000001a9800ecba0  ; ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059120f: callq  0x000001a9800ecba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980591214: movabs $0x1a9ff6d2fb8,%r10  ;   {metadata({method} {0x000001a9ff6d2fc0} 'floorMod' '(II)I' in 'java/lang/Math')}
  0x000001a98059121e: mov    %r10,0x8(%rsp)
  0x000001a980591223: movq   $0xffffffffffffffff,(%rsp)
  0x000001a98059122b: callq  0x000001a9800f1a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorMod@-1
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980591230: jmpq   0x000001a980590ef7
  0x000001a980591235: movabs $0x1a9ff6d2dd0,%r10  ;   {metadata({method} {0x000001a9ff6d2dd8} 'floorDiv' '(II)I' in 'java/lang/Math')}
  0x000001a98059123f: mov    %r10,0x8(%rsp)
  0x000001a980591244: movq   $0xffffffffffffffff,(%rsp)
  0x000001a98059124c: callq  0x000001a9800f1a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Math::floorDiv@-1
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980591251: jmpq   0x000001a980590f31
  0x000001a980591256: callq  0x000001a9800ec920  ; ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }
                                                ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Math::floorDiv@2
                                                ; - java.lang.Math::floorMod@3
                                                ; - java.util.ImmutableCollections$SetN::probe@13
                                                ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000001a98059125b: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980591260: mov    %r8,(%rsp)
  0x000001a980591264: callq  0x000001a98005eda0  ; ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@22
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a980591269: callq  0x000001a9800ecba0  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@51
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059126e: movabs $0x1a9ff7a15d0,%r10  ;   {metadata({method} {0x000001a9ff7a15d8} 'probe' '(Ljava/lang/Object;)I' in 'java/util/ImmutableCollections$SetN')}
  0x000001a980591278: mov    %r10,0x8(%rsp)
  0x000001a98059127d: movq   $0x39,(%rsp)
  0x000001a980591285: callq  0x000001a9800f1a80  ; ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN::probe@57
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a98059128a: jmpq   0x000001a98059119b
  0x000001a98059128f: nop
  0x000001a980591290: nop
  0x000001a980591291: mov    0x350(%r15),%rax
  0x000001a980591298: movabs $0x0,%r10
  0x000001a9805912a2: mov    %r10,0x350(%r15)
  0x000001a9805912a9: movabs $0x0,%r10
  0x000001a9805912b3: mov    %r10,0x358(%r15)
  0x000001a9805912ba: add    $0x70,%rsp
  0x000001a9805912be: pop    %rbp
  0x000001a9805912bf: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a9805912c4: hlt    
  0x000001a9805912c5: hlt    
  0x000001a9805912c6: hlt    
  0x000001a9805912c7: hlt    
  0x000001a9805912c8: hlt    
  0x000001a9805912c9: hlt    
  0x000001a9805912ca: hlt    
  0x000001a9805912cb: hlt    
  0x000001a9805912cc: hlt    
  0x000001a9805912cd: hlt    
  0x000001a9805912ce: hlt    
  0x000001a9805912cf: hlt    
  0x000001a9805912d0: hlt    
  0x000001a9805912d1: hlt    
  0x000001a9805912d2: hlt    
  0x000001a9805912d3: hlt    
  0x000001a9805912d4: hlt    
  0x000001a9805912d5: hlt    
  0x000001a9805912d6: hlt    
  0x000001a9805912d7: hlt    
  0x000001a9805912d8: hlt    
  0x000001a9805912d9: hlt    
  0x000001a9805912da: hlt    
  0x000001a9805912db: hlt    
  0x000001a9805912dc: hlt    
  0x000001a9805912dd: hlt    
  0x000001a9805912de: hlt    
  0x000001a9805912df: hlt    
[Stub Code]
  0x000001a9805912e0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a9805912e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805912ef: jmpq   0x000001a9805912ef  ;   {runtime_call}
  0x000001a9805912f4: nop
  0x000001a9805912f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805912ff: jmpq   0x000001a9805912ff  ;   {runtime_call}
[Exception Handler]
  0x000001a980591304: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a980591309: mov    %rsp,-0x28(%rsp)
  0x000001a98059130e: sub    $0x80,%rsp
  0x000001a980591315: mov    %rax,0x78(%rsp)
  0x000001a98059131a: mov    %rcx,0x70(%rsp)
  0x000001a98059131f: mov    %rdx,0x68(%rsp)
  0x000001a980591324: mov    %rbx,0x60(%rsp)
  0x000001a980591329: mov    %rbp,0x50(%rsp)
  0x000001a98059132e: mov    %rsi,0x48(%rsp)
  0x000001a980591333: mov    %rdi,0x40(%rsp)
  0x000001a980591338: mov    %r8,0x38(%rsp)
  0x000001a98059133d: mov    %r9,0x30(%rsp)
  0x000001a980591342: mov    %r10,0x28(%rsp)
  0x000001a980591347: mov    %r11,0x20(%rsp)
  0x000001a98059134c: mov    %r12,0x18(%rsp)
  0x000001a980591351: mov    %r13,0x10(%rsp)
  0x000001a980591356: mov    %r14,0x8(%rsp)
  0x000001a98059135b: mov    %r15,(%rsp)
  0x000001a98059135f: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980591369: movabs $0x1a980591309,%rdx  ;   {internal_word}
  0x000001a980591373: mov    %rsp,%r8
  0x000001a980591376: and    $0xfffffffffffffff0,%rsp
  0x000001a98059137a: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980591384: callq  *%r10
  0x000001a980591387: hlt    
[Deopt Handler Code]
  0x000001a980591388: movabs $0x1a980591388,%r10  ;   {section_word}
  0x000001a980591392: push   %r10
  0x000001a980591394: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980591399: hlt    
  0x000001a98059139a: hlt    
  0x000001a98059139b: hlt    
  0x000001a98059139c: hlt    
  0x000001a98059139d: hlt    
  0x000001a98059139e: hlt    
  0x000001a98059139f: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop }pc offsets: 260 836 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1023 
ImmutableOopMap{rdx=Oop [80]=Oop r8=Oop [88]=Oop }pc offsets: 1125 
ImmutableOopMap{r8=Oop [88]=Oop [80]=Oop }pc offsets: 1135 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1140 1168 1201 
ImmutableOopMap{[88]=Oop rdi=Oop [80]=Oop }pc offsets: 1211 
ImmutableOopMap{rdi=Oop [80]=Oop rsi=Oop [88]=Oop rdx=Oop }pc offsets: 1216 1225 
ImmutableOopMap{[88]=Oop rdx=Oop [80]=Oop }pc offsets: 1230 1258 Compiled method (c2)      81   17 %     4       java.lang.StringLatin1::hashCode @ 10 (42 bytes)
 total in heap  [0x000001a987ac0010,0x000001a987ac0610] = 1536
 relocation     [0x000001a987ac0188,0x000001a987ac01a0] = 24
 main code      [0x000001a987ac01a0,0x000001a987ac03c0] = 544
 stub code      [0x000001a987ac03c0,0x000001a987ac03d8] = 24
 metadata       [0x000001a987ac03d8,0x000001a987ac03e8] = 16
 scopes data    [0x000001a987ac03e8,0x000001a987ac0478] = 144
 scopes pcs     [0x000001a987ac0478,0x000001a987ac05f8] = 384
 dependencies   [0x000001a987ac05f8,0x000001a987ac0600] = 8
 nul chk table  [0x000001a987ac0600,0x000001a987ac0610] = 16
----------------------------------------------------------------------
java/lang/StringLatin1.hashCode([B)I  [0x000001a987ac01a0, 0x000001a987ac03d8]  568 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff6752d8} 'hashCode' '([B)I' in 'java/lang/StringLatin1'
  0x000001a987ac01a0: int3   
  0x000001a987ac01a1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a987ac01ac: data16 data16 xchg %ax,%ax
  0x000001a987ac01b0: mov    %eax,-0x7000(%rsp)
  0x000001a987ac01b7: push   %rbp
  0x000001a987ac01b8: sub    $0x50,%rsp
  0x000001a987ac01bc: mov    0x18(%rdx),%r14
  0x000001a987ac01c0: mov    0x20(%rdx),%ebx
  0x000001a987ac01c3: mov    0x8(%rdx),%ebp
  0x000001a987ac01c6: mov    0x10(%rdx),%r13d
  0x000001a987ac01ca: mov    %rdx,%rcx
  0x000001a987ac01cd: movabs $0x54eeb700,%r10
  0x000001a987ac01d7: callq  *%r10
  0x000001a987ac01da: test   %r14,%r14
  0x000001a987ac01dd: je     0x000001a987ac0365
  0x000001a987ac01e3: mov    0x8(%r14),%r10d
  0x000001a987ac01e7: cmp    $0xf80000f2,%r10d  ;   {metadata({type array byte})}
  0x000001a987ac01ee: jne    0x000001a987ac038a  ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10

  0x000001a987ac01f4: cmp    %r13d,%ebp
  0x000001a987ac01f7: jge    0x000001a987ac0356  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a987ac01fd: mov    %ebp,%r10d
  0x000001a987ac0200: inc    %r10d
  0x000001a987ac0203: xor    %r11d,%r11d
  0x000001a987ac0206: cmp    %r11d,%r10d
  0x000001a987ac0209: cmovl  %r11d,%r10d
  0x000001a987ac020d: cmp    %r13d,%r10d
  0x000001a987ac0210: cmovg  %r13d,%r10d
  0x000001a987ac0214: mov    0xc(%r14),%r11d    ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19
                                                ; implicit exception: dispatches to 0x000001a987ac03a6
  0x000001a987ac0218: cmp    %r11d,%ebp
  0x000001a987ac021b: jae    0x000001a987ac036d
  0x000001a987ac0221: movzbl 0x10(%r14,%rbp,1),%r9d
  0x000001a987ac0227: mov    %ebx,%ecx
  0x000001a987ac0229: shl    $0x5,%ecx
  0x000001a987ac022c: sub    %ebx,%ecx
  0x000001a987ac022e: add    %r9d,%ecx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32

  0x000001a987ac0231: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34

  0x000001a987ac0233: cmp    %r10d,%ebp
  0x000001a987ac0236: jge    0x000001a987ac023c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a987ac0238: mov    %ecx,%ebx
  0x000001a987ac023a: jmp    0x000001a987ac0214
  0x000001a987ac023c: cmp    %r11d,%r13d
  0x000001a987ac023f: mov    %r13d,%r10d
  0x000001a987ac0242: cmovg  %r11d,%r10d
  0x000001a987ac0246: mov    %r10d,%esi
  0x000001a987ac0249: add    $0xfffffff9,%esi
  0x000001a987ac024c: mov    $0x80000000,%r8d
  0x000001a987ac0252: cmp    %esi,%r10d
  0x000001a987ac0255: cmovl  %r8d,%esi
  0x000001a987ac0259: cmp    %esi,%ebp
  0x000001a987ac025b: jge    0x000001a987ac032f  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a987ac0261: jmp    0x000001a987ac026d
  0x000001a987ac0263: vmovd  %xmm0,%r13d
  0x000001a987ac0268: vmovd  %xmm1,%r11d
  0x000001a987ac026d: vmovd  %r13d,%xmm0
  0x000001a987ac0272: vmovd  %r11d,%xmm1
  0x000001a987ac0277: nopw   0x0(%rax,%rax,1)   ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000001a987ac0280: movzbl 0x10(%r14,%rbp,1),%r10d
  0x000001a987ac0286: movslq %ebp,%rdi
  0x000001a987ac0289: movzbl 0x11(%r14,%rdi,1),%r13d
  0x000001a987ac028f: movzbl 0x17(%r14,%rdi,1),%r11d
  0x000001a987ac0295: movzbl 0x16(%r14,%rdi,1),%r9d
  0x000001a987ac029b: movzbl 0x15(%r14,%rdi,1),%r8d
  0x000001a987ac02a1: movzbl 0x14(%r14,%rdi,1),%ebx
  0x000001a987ac02a7: movzbl 0x13(%r14,%rdi,1),%edx
  0x000001a987ac02ad: movzbl 0x12(%r14,%rdi,1),%edi
  0x000001a987ac02b3: mov    %ecx,%eax
  0x000001a987ac02b5: shl    $0x5,%eax
  0x000001a987ac02b8: sub    %ecx,%eax
  0x000001a987ac02ba: add    %r10d,%eax
  0x000001a987ac02bd: mov    %eax,%ecx
  0x000001a987ac02bf: shl    $0x5,%ecx
  0x000001a987ac02c2: sub    %eax,%ecx
  0x000001a987ac02c4: add    %r13d,%ecx
  0x000001a987ac02c7: mov    %ecx,%eax
  0x000001a987ac02c9: shl    $0x5,%eax
  0x000001a987ac02cc: sub    %ecx,%eax
  0x000001a987ac02ce: add    %edi,%eax
  0x000001a987ac02d0: mov    %eax,%ecx
  0x000001a987ac02d2: shl    $0x5,%ecx
  0x000001a987ac02d5: sub    %eax,%ecx
  0x000001a987ac02d7: add    %edx,%ecx
  0x000001a987ac02d9: mov    %ecx,%r10d
  0x000001a987ac02dc: shl    $0x5,%r10d
  0x000001a987ac02e0: sub    %ecx,%r10d
  0x000001a987ac02e3: add    %ebx,%r10d
  0x000001a987ac02e6: mov    %r10d,%ecx
  0x000001a987ac02e9: shl    $0x5,%ecx
  0x000001a987ac02ec: sub    %r10d,%ecx
  0x000001a987ac02ef: add    %r8d,%ecx
  0x000001a987ac02f2: mov    %ecx,%r10d
  0x000001a987ac02f5: shl    $0x5,%r10d
  0x000001a987ac02f9: sub    %ecx,%r10d
  0x000001a987ac02fc: add    %r9d,%r10d
  0x000001a987ac02ff: mov    %r10d,%ecx
  0x000001a987ac0302: shl    $0x5,%ecx
  0x000001a987ac0305: sub    %r10d,%ecx
  0x000001a987ac0308: add    %r11d,%ecx         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32

  0x000001a987ac030b: add    $0x8,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34

  0x000001a987ac030e: cmp    %esi,%ebp
  0x000001a987ac0310: jl     0x000001a987ac0280  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a987ac0316: mov    0x70(%r15),%r10    ; ImmutableOopMap{r14=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37

  0x000001a987ac031a: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ;   {poll}
  0x000001a987ac031d: cmp    %esi,%ebp
  0x000001a987ac031f: jl     0x000001a987ac0263
  0x000001a987ac0325: vmovd  %xmm0,%r13d
  0x000001a987ac032a: vmovd  %xmm1,%r11d
  0x000001a987ac032f: cmp    %r13d,%ebp
  0x000001a987ac0332: jge    0x000001a987ac0354  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000001a987ac0334: cmp    %r11d,%ebp
  0x000001a987ac0337: jae    0x000001a987ac036f
  0x000001a987ac0339: movzbl 0x10(%r14,%rbp,1),%r8d
  0x000001a987ac033f: mov    %ecx,%ebx
  0x000001a987ac0341: shl    $0x5,%ebx
  0x000001a987ac0344: sub    %ecx,%ebx
  0x000001a987ac0346: add    %r8d,%ebx          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32

  0x000001a987ac0349: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34

  0x000001a987ac034b: cmp    %r13d,%ebp
  0x000001a987ac034e: jge    0x000001a987ac0356  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13

  0x000001a987ac0350: mov    %ebx,%ecx
  0x000001a987ac0352: jmp    0x000001a987ac0334
  0x000001a987ac0354: mov    %ecx,%ebx          ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10

  0x000001a987ac0356: mov    %ebx,%eax
  0x000001a987ac0358: add    $0x50,%rsp
  0x000001a987ac035c: pop    %rbp
  0x000001a987ac035d: mov    0x70(%r15),%r10
  0x000001a987ac0361: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac0364: retq   
  0x000001a987ac0365: xor    %r14d,%r14d
  0x000001a987ac0368: jmpq   0x000001a987ac01f4
  0x000001a987ac036d: mov    %ebx,%ecx
  0x000001a987ac036f: mov    $0xffffffe4,%edx
  0x000001a987ac0374: mov    %ecx,0x20(%rsp)
  0x000001a987ac0378: mov    %r13d,0x24(%rsp)
  0x000001a987ac037d: mov    %r14,0x30(%rsp)
  0x000001a987ac0382: nop
  0x000001a987ac0383: callq  0x000001a980028a00  ; ImmutableOopMap{[48]=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac0388: ud2    
  0x000001a987ac038a: mov    $0xffffff9d,%edx
  0x000001a987ac038f: mov    %r14,0x20(%rsp)
  0x000001a987ac0394: mov    %r13d,0x28(%rsp)
  0x000001a987ac0399: mov    %ebx,0x2c(%rsp)
  0x000001a987ac039d: xchg   %ax,%ax
  0x000001a987ac039f: callq  0x000001a980028a00  ; ImmutableOopMap{[32]=Oop }
                                                ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@10
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac03a4: ud2    
  0x000001a987ac03a6: mov    $0xfffffff6,%edx
  0x000001a987ac03ab: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac03b0: ud2                       ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19

  0x000001a987ac03b2: hlt    
  0x000001a987ac03b3: hlt    
  0x000001a987ac03b4: hlt    
  0x000001a987ac03b5: hlt    
  0x000001a987ac03b6: hlt    
  0x000001a987ac03b7: hlt    
  0x000001a987ac03b8: hlt    
  0x000001a987ac03b9: hlt    
  0x000001a987ac03ba: hlt    
  0x000001a987ac03bb: hlt    
  0x000001a987ac03bc: hlt    
  0x000001a987ac03bd: hlt    
  0x000001a987ac03be: hlt    
  0x000001a987ac03bf: hlt    
[Exception Handler]
[Stub Code]
  0x000001a987ac03c0: jmpq   0x000001a9800ec480  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a987ac03c5: callq  0x000001a987ac03ca
  0x000001a987ac03ca: subq   $0x5,(%rsp)
  0x000001a987ac03cf: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac03d4: hlt    
  0x000001a987ac03d5: hlt    
  0x000001a987ac03d6: hlt    
  0x000001a987ac03d7: hlt    

ImmutableOopMap{r14=Oop }pc offsets: 378 
ImmutableOopMap{[48]=Oop }pc offsets: 488 
ImmutableOopMap{[32]=Oop }pc offsets: 516 
ImmutableOopMap{}pc offsets: 528 Compiled method (c1)      84   14       3       java.lang.StringLatin1::equals (36 bytes)
 total in heap  [0x000001a980591790,0x000001a980591e10] = 1664
 relocation     [0x000001a980591908,0x000001a980591948] = 64
 main code      [0x000001a980591960,0x000001a980591b80] = 544
 stub code      [0x000001a980591b80,0x000001a980591c18] = 152
 metadata       [0x000001a980591c18,0x000001a980591c20] = 8
 scopes data    [0x000001a980591c20,0x000001a980591ca0] = 128
 scopes pcs     [0x000001a980591ca0,0x000001a980591df0] = 336
 dependencies   [0x000001a980591df0,0x000001a980591df8] = 8
 nul chk table  [0x000001a980591df8,0x000001a980591e10] = 24
----------------------------------------------------------------------
java/lang/StringLatin1.equals([B[B)Z  [0x000001a980591960, 0x000001a980591c18]  696 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1'
  # parm0:    rdx:rdx   = '[B'
  # parm1:    r8:r8     = '[B'
  #           [sp+0x40]  (sp of caller)
  0x000001a980591960: mov    %eax,-0x7000(%rsp)
  0x000001a980591967: push   %rbp
  0x000001a980591968: sub    $0x30,%rsp
  0x000001a98059196c: movabs $0x1a9ff7b11f8,%rax  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591976: mov    0xfc(%rax),%esi
  0x000001a98059197c: add    $0x8,%esi
  0x000001a98059197f: mov    %esi,0xfc(%rax)
  0x000001a980591985: and    $0x1ff8,%esi
  0x000001a98059198b: cmp    $0x0,%esi
  0x000001a98059198e: je     0x000001a980591ae7  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@0

  0x000001a980591994: mov    0xc(%rdx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ; implicit exception: dispatches to 0x000001a980591b08
  0x000001a980591997: mov    0xc(%r8),%esi      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ; implicit exception: dispatches to 0x000001a980591b0d
  0x000001a98059199b: cmp    %esi,%eax
  0x000001a98059199d: movabs $0x1a9ff7b11f8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a9805919a7: movabs $0x138,%rdi
  0x000001a9805919b1: jne    0x000001a9805919c1
  0x000001a9805919b7: movabs $0x148,%rdi
  0x000001a9805919c1: mov    (%rsi,%rdi,1),%rbx
  0x000001a9805919c5: lea    0x1(%rbx),%rbx
  0x000001a9805919c9: mov    %rbx,(%rsi,%rdi,1)
  0x000001a9805919cd: jne    0x000001a980591ad5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@4

  0x000001a9805919d3: mov    $0x0,%esi
  0x000001a9805919d8: jmpq   0x000001a980591a74  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@9

  0x000001a9805919dd: data16 xchg %ax,%ax
  0x000001a9805919e0: movslq %esi,%rdi
  0x000001a9805919e3: movsbl 0x10(%rdx,%rdi,1),%edi  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@17

  0x000001a9805919e8: movslq %esi,%rbx
  0x000001a9805919eb: cmp    0xc(%r8),%esi
  0x000001a9805919ef: jae    0x000001a980591b12
  0x000001a9805919f5: movsbl 0x10(%r8,%rbx,1),%ebx  ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20

  0x000001a9805919fb: cmp    %ebx,%edi
  0x000001a9805919fd: movabs $0x1a9ff7b11f8,%rdi  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591a07: movabs $0x188,%rbx
  0x000001a980591a11: jne    0x000001a980591a21
  0x000001a980591a17: movabs $0x178,%rbx
  0x000001a980591a21: mov    (%rdi,%rbx,1),%rcx
  0x000001a980591a25: lea    0x1(%rcx),%rcx
  0x000001a980591a29: mov    %rcx,(%rdi,%rbx,1)
  0x000001a980591a2d: jne    0x000001a980591ab1  ;*if_icmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@21

  0x000001a980591a33: inc    %esi
  0x000001a980591a35: movabs $0x1a9ff7b11f8,%rdi  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591a3f: mov    0x100(%rdi),%ebx
  0x000001a980591a45: add    $0x8,%ebx
  0x000001a980591a48: mov    %ebx,0x100(%rdi)
  0x000001a980591a4e: and    $0xfff8,%ebx
  0x000001a980591a54: cmp    $0x0,%ebx
  0x000001a980591a57: je     0x000001a980591b1b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a980591a5d: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a980591a61: test   %eax,(%r10)        ;   {poll}
  0x000001a980591a64: movabs $0x1a9ff7b11f8,%rdi  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591a6e: incl   0x198(%rdi)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29

  0x000001a980591a74: cmp    %eax,%esi
  0x000001a980591a76: movabs $0x1a9ff7b11f8,%rdi  ;   {metadata(method data for {method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591a80: movabs $0x158,%rbx
  0x000001a980591a8a: jge    0x000001a980591a9a
  0x000001a980591a90: movabs $0x168,%rbx
  0x000001a980591a9a: mov    (%rdi,%rbx,1),%rcx
  0x000001a980591a9e: lea    0x1(%rcx),%rcx
  0x000001a980591aa2: mov    %rcx,(%rdi,%rbx,1)
  0x000001a980591aa6: jge    0x000001a980591ac3
  0x000001a980591aac: jmpq   0x000001a9805919e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@12

  0x000001a980591ab1: mov    $0x0,%eax
  0x000001a980591ab6: add    $0x30,%rsp
  0x000001a980591aba: pop    %rbp
  0x000001a980591abb: mov    0x70(%r15),%r10
  0x000001a980591abf: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980591ac2: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@25

  0x000001a980591ac3: mov    $0x1,%eax
  0x000001a980591ac8: add    $0x30,%rsp
  0x000001a980591acc: pop    %rbp
  0x000001a980591acd: mov    0x70(%r15),%r10
  0x000001a980591ad1: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980591ad4: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@33

  0x000001a980591ad5: mov    $0x0,%eax
  0x000001a980591ada: add    $0x30,%rsp
  0x000001a980591ade: pop    %rbp
  0x000001a980591adf: mov    0x70(%r15),%r10
  0x000001a980591ae3: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980591ae6: retq   
  0x000001a980591ae7: movabs $0x1a9ff674e10,%r10  ;   {metadata({method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591af1: mov    %r10,0x8(%rsp)
  0x000001a980591af6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980591afe: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringLatin1::equals@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980591b03: jmpq   0x000001a980591994
  0x000001a980591b08: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@1
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980591b0d: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@3
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980591b12: mov    %rsi,(%rsp)
  0x000001a980591b16: callq  0x000001a98005eda0  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@20
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a980591b1b: movabs $0x1a9ff674e10,%r10  ;   {metadata({method} {0x000001a9ff674e18} 'equals' '([B[B)Z' in 'java/lang/StringLatin1')}
  0x000001a980591b25: mov    %r10,0x8(%rsp)
  0x000001a980591b2a: movq   $0x1d,(%rsp)
  0x000001a980591b32: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop r8=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::equals@29
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980591b37: jmpq   0x000001a980591a5d
  0x000001a980591b3c: nop
  0x000001a980591b3d: nop
  0x000001a980591b3e: mov    0x350(%r15),%rax
  0x000001a980591b45: movabs $0x0,%r10
  0x000001a980591b4f: mov    %r10,0x350(%r15)
  0x000001a980591b56: movabs $0x0,%r10
  0x000001a980591b60: mov    %r10,0x358(%r15)
  0x000001a980591b67: add    $0x30,%rsp
  0x000001a980591b6b: pop    %rbp
  0x000001a980591b6c: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980591b71: hlt    
  0x000001a980591b72: hlt    
  0x000001a980591b73: hlt    
  0x000001a980591b74: hlt    
  0x000001a980591b75: hlt    
  0x000001a980591b76: hlt    
  0x000001a980591b77: hlt    
  0x000001a980591b78: hlt    
  0x000001a980591b79: hlt    
  0x000001a980591b7a: hlt    
  0x000001a980591b7b: hlt    
  0x000001a980591b7c: hlt    
  0x000001a980591b7d: hlt    
  0x000001a980591b7e: hlt    
  0x000001a980591b7f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980591b80: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980591b85: mov    %rsp,-0x28(%rsp)
  0x000001a980591b8a: sub    $0x80,%rsp
  0x000001a980591b91: mov    %rax,0x78(%rsp)
  0x000001a980591b96: mov    %rcx,0x70(%rsp)
  0x000001a980591b9b: mov    %rdx,0x68(%rsp)
  0x000001a980591ba0: mov    %rbx,0x60(%rsp)
  0x000001a980591ba5: mov    %rbp,0x50(%rsp)
  0x000001a980591baa: mov    %rsi,0x48(%rsp)
  0x000001a980591baf: mov    %rdi,0x40(%rsp)
  0x000001a980591bb4: mov    %r8,0x38(%rsp)
  0x000001a980591bb9: mov    %r9,0x30(%rsp)
  0x000001a980591bbe: mov    %r10,0x28(%rsp)
  0x000001a980591bc3: mov    %r11,0x20(%rsp)
  0x000001a980591bc8: mov    %r12,0x18(%rsp)
  0x000001a980591bcd: mov    %r13,0x10(%rsp)
  0x000001a980591bd2: mov    %r14,0x8(%rsp)
  0x000001a980591bd7: mov    %r15,(%rsp)
  0x000001a980591bdb: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980591be5: movabs $0x1a980591b85,%rdx  ;   {internal_word}
  0x000001a980591bef: mov    %rsp,%r8
  0x000001a980591bf2: and    $0xfffffffffffffff0,%rsp
  0x000001a980591bf6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980591c00: callq  *%r10
  0x000001a980591c03: hlt    
[Deopt Handler Code]
  0x000001a980591c04: movabs $0x1a980591c04,%r10  ;   {section_word}
  0x000001a980591c0e: push   %r10
  0x000001a980591c10: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980591c15: hlt    
  0x000001a980591c16: hlt    
  0x000001a980591c17: hlt    

ImmutableOopMap{rdx=Oop r8=Oop }pc offsets: 257 419 429 434 443 471 Compiled method (c1)      87   21       3       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x000001a980591e90,0x000001a9805924c8] = 1592
 relocation     [0x000001a980592008,0x000001a980592048] = 64
 main code      [0x000001a980592060,0x000001a980592260] = 512
 stub code      [0x000001a980592260,0x000001a9805922f8] = 152
 metadata       [0x000001a9805922f8,0x000001a980592300] = 8
 scopes data    [0x000001a980592300,0x000001a980592368] = 104
 scopes pcs     [0x000001a980592368,0x000001a9805924a8] = 320
 dependencies   [0x000001a9805924a8,0x000001a9805924b0] = 8
 nul chk table  [0x000001a9805924b0,0x000001a9805924c8] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x000001a980592060, 0x000001a9805922f8]  664 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x40]  (sp of caller)
  0x000001a980592060: mov    0x8(%rdx),%r10d
  0x000001a980592064: shl    $0x3,%r10
  0x000001a980592068: cmp    %rax,%r10
  0x000001a98059206b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980592071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a98059207c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980592080: mov    %eax,-0x7000(%rsp)
  0x000001a980592087: push   %rbp
  0x000001a980592088: sub    $0x30,%rsp
  0x000001a98059208c: movabs $0x1a9ff7e3948,%rax  ;   {metadata(method data for {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980592096: mov    0xfc(%rax),%esi
  0x000001a98059209c: add    $0x8,%esi
  0x000001a98059209f: mov    %esi,0xfc(%rax)
  0x000001a9805920a5: and    $0x1ff8,%esi
  0x000001a9805920ab: cmp    $0x0,%esi
  0x000001a9805920ae: je     0x000001a9805921c6
  0x000001a9805920b4: jmpq   0x000001a980592151  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@0

  0x000001a9805920b9: nopl   0x0(%rax)
  0x000001a9805920c0: movslq %eax,%rbx
  0x000001a9805920c3: cmp    %eax,%edi
  0x000001a9805920c5: jbe    0x000001a9805921e7
  0x000001a9805920cb: mov    0x10(%rsi,%rbx,4),%esi
  0x000001a9805920cf: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x000001a9805920d3: cmp    $0x0,%rsi
  0x000001a9805920d7: movabs $0x1a9ff7e3948,%rsi  ;   {metadata(method data for {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a9805920e1: movabs $0x168,%rdi
  0x000001a9805920eb: jne    0x000001a9805920fb
  0x000001a9805920f1: movabs $0x158,%rdi
  0x000001a9805920fb: mov    (%rsi,%rdi,1),%rbx
  0x000001a9805920ff: lea    0x1(%rbx),%rbx
  0x000001a980592103: mov    %rbx,(%rsi,%rdi,1)
  0x000001a980592107: jne    0x000001a9805921a2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x000001a98059210d: inc    %eax
  0x000001a98059210f: mov    %eax,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x000001a980592112: movabs $0x1a9ff7e3948,%rax  ;   {metadata(method data for {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a98059211c: mov    0x100(%rax),%esi
  0x000001a980592122: add    $0x8,%esi
  0x000001a980592125: mov    %esi,0x100(%rax)
  0x000001a98059212b: and    $0xfff8,%esi
  0x000001a980592131: cmp    $0x0,%esi
  0x000001a980592134: je     0x000001a9805921f0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a98059213a: mov    0x70(%r15),%r10    ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a98059213e: test   %eax,(%r10)        ;   {poll}
  0x000001a980592141: movabs $0x1a9ff7e3948,%rax  ;   {metadata(method data for {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a98059214b: incl   0x178(%rax)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a980592151: mov    0xc(%rdx),%eax     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x000001a980592154: mov    0x10(%rdx),%esi
  0x000001a980592157: shl    $0x3,%rsi          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x000001a98059215b: mov    0x10(%rsi),%esi    ; implicit exception: dispatches to 0x000001a980592211
  0x000001a98059215e: shl    $0x3,%rsi          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x000001a980592162: mov    0xc(%rsi),%edi     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x000001a980592216
  0x000001a980592165: cmp    %edi,%eax
  0x000001a980592167: movabs $0x1a9ff7e3948,%rbx  ;   {metadata(method data for {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980592171: movabs $0x138,%rcx
  0x000001a98059217b: jge    0x000001a98059218b
  0x000001a980592181: movabs $0x148,%rcx
  0x000001a98059218b: mov    (%rbx,%rcx,1),%r8
  0x000001a98059218f: lea    0x1(%r8),%r8
  0x000001a980592193: mov    %r8,(%rbx,%rcx,1)
  0x000001a980592197: jge    0x000001a9805921b4
  0x000001a98059219d: jmpq   0x000001a9805920c0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a9805921a2: mov    $0x1,%eax
  0x000001a9805921a7: add    $0x30,%rsp
  0x000001a9805921ab: pop    %rbp
  0x000001a9805921ac: mov    0x70(%r15),%r10
  0x000001a9805921b0: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805921b3: retq                      ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@31

  0x000001a9805921b4: mov    $0x0,%eax
  0x000001a9805921b9: add    $0x30,%rsp
  0x000001a9805921bd: pop    %rbp
  0x000001a9805921be: mov    0x70(%r15),%r10
  0x000001a9805921c2: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805921c5: retq   
  0x000001a9805921c6: movabs $0x1a9ff7e26a0,%r10  ;   {metadata({method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a9805921d0: mov    %r10,0x8(%rsp)
  0x000001a9805921d5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805921dd: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805921e2: jmpq   0x000001a9805920b4
  0x000001a9805921e7: mov    %rax,(%rsp)
  0x000001a9805921eb: callq  0x000001a98005eda0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a9805921f0: movabs $0x1a9ff7e26a0,%r10  ;   {metadata({method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a9805921fa: mov    %r10,0x8(%rsp)
  0x000001a9805921ff: movq   $0x2a,(%rsp)
  0x000001a980592207: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a98059220c: jmpq   0x000001a98059213a
  0x000001a980592211: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980592216: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop rsi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059221b: nop
  0x000001a98059221c: nop
  0x000001a98059221d: mov    0x350(%r15),%rax
  0x000001a980592224: movabs $0x0,%r10
  0x000001a98059222e: mov    %r10,0x350(%r15)
  0x000001a980592235: movabs $0x0,%r10
  0x000001a98059223f: mov    %r10,0x358(%r15)
  0x000001a980592246: add    $0x30,%rsp
  0x000001a98059224a: pop    %rbp
  0x000001a98059224b: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980592250: hlt    
  0x000001a980592251: hlt    
  0x000001a980592252: hlt    
  0x000001a980592253: hlt    
  0x000001a980592254: hlt    
  0x000001a980592255: hlt    
  0x000001a980592256: hlt    
  0x000001a980592257: hlt    
  0x000001a980592258: hlt    
  0x000001a980592259: hlt    
  0x000001a98059225a: hlt    
  0x000001a98059225b: hlt    
  0x000001a98059225c: hlt    
  0x000001a98059225d: hlt    
  0x000001a98059225e: hlt    
  0x000001a98059225f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980592260: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980592265: mov    %rsp,-0x28(%rsp)
  0x000001a98059226a: sub    $0x80,%rsp
  0x000001a980592271: mov    %rax,0x78(%rsp)
  0x000001a980592276: mov    %rcx,0x70(%rsp)
  0x000001a98059227b: mov    %rdx,0x68(%rsp)
  0x000001a980592280: mov    %rbx,0x60(%rsp)
  0x000001a980592285: mov    %rbp,0x50(%rsp)
  0x000001a98059228a: mov    %rsi,0x48(%rsp)
  0x000001a98059228f: mov    %rdi,0x40(%rsp)
  0x000001a980592294: mov    %r8,0x38(%rsp)
  0x000001a980592299: mov    %r9,0x30(%rsp)
  0x000001a98059229e: mov    %r10,0x28(%rsp)
  0x000001a9805922a3: mov    %r11,0x20(%rsp)
  0x000001a9805922a8: mov    %r12,0x18(%rsp)
  0x000001a9805922ad: mov    %r13,0x10(%rsp)
  0x000001a9805922b2: mov    %r14,0x8(%rsp)
  0x000001a9805922b7: mov    %r15,(%rsp)
  0x000001a9805922bb: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a9805922c5: movabs $0x1a980592265,%rdx  ;   {internal_word}
  0x000001a9805922cf: mov    %rsp,%r8
  0x000001a9805922d2: and    $0xfffffffffffffff0,%rsp
  0x000001a9805922d6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a9805922e0: callq  *%r10
  0x000001a9805922e3: hlt    
[Deopt Handler Code]
  0x000001a9805922e4: movabs $0x1a9805922e4,%r10  ;   {section_word}
  0x000001a9805922ee: push   %r10
  0x000001a9805922f0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a9805922f5: hlt    
  0x000001a9805922f6: hlt    
  0x000001a9805922f7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 222 386 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 400 
ImmutableOopMap{rdx=Oop }pc offsets: 428 438 
ImmutableOopMap{rdx=Oop rsi=Oop }pc offsets: 443 ----------------------------------------------------------------------
jdk/internal/misc/Unsafe.compareAndSetLong(Ljava/lang/Object;JJJ)Z  [0x000001a987ac0840, 0x000001a987ac0a98]  600 bytes
[Entry Point]
  # {method} {0x000001a9ff61d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rdx:rdx   = 'jdk/internal/misc/Unsafe'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = long
  # parm2:    rdi:rdi   = long
  # parm3:    rsi:rsi   = long
  #           [sp+0x80]  (sp of caller)
  0x000001a987ac0840: mov    0x8(%rdx),%r10d
  0x000001a987ac0844: shl    $0x3,%r10
  0x000001a987ac0848: cmp    %r10,%rax
  0x000001a987ac084b: je     0x000001a987ac0858
  0x000001a987ac0851: jmpq   0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac0856: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a987ac0858: mov    %eax,-0x7000(%rsp)
  0x000001a987ac085f: push   %rbp
  0x000001a987ac0860: mov    %rsp,%rbp
  0x000001a987ac0863: sub    $0x70,%rsp
  0x000001a987ac0867: mov    %rsi,0x28(%rsp)
  0x000001a987ac086c: mov    %rdi,0x20(%rsp)
  0x000001a987ac0871: mov    %r8,0x38(%rsp)
  0x000001a987ac0876: cmp    $0x0,%r8
  0x000001a987ac087a: lea    0x38(%rsp),%r8
  0x000001a987ac087f: cmove  0x38(%rsp),%r8
  0x000001a987ac0885: mov    %rdx,0x30(%rsp)
  0x000001a987ac088a: cmp    $0x0,%rdx
  0x000001a987ac088e: lea    0x30(%rsp),%rdx
  0x000001a987ac0893: cmove  0x30(%rsp),%rdx    ; ImmutableOopMap{[56]=Oop [48]=Oop }
  0x000001a987ac0899: vzeroupper 
  0x000001a987ac089c: movabs $0x1a987ac0899,%r10  ;   {internal_word}
  0x000001a987ac08a6: mov    %r10,0x258(%r15)
  0x000001a987ac08ad: mov    %rsp,0x250(%r15)
  0x000001a987ac08b4: movabs $0x557caf1e,%r10   ;   {external_word}
  0x000001a987ac08be: cmpb   $0x0,(%r10)
  0x000001a987ac08c2: je     0x000001a987ac091a
  0x000001a987ac08c8: push   %rdx
  0x000001a987ac08c9: push   %r8
  0x000001a987ac08cb: push   %r9
  0x000001a987ac08cd: movabs $0x1a9ff61d318,%rdx  ;   {metadata({method} {0x000001a9ff61d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000001a987ac08d7: mov    %r15,%rcx
  0x000001a987ac08da: sub    $0x20,%rsp
  0x000001a987ac08de: test   $0xf,%esp
  0x000001a987ac08e4: je     0x000001a987ac0904
  0x000001a987ac08ea: sub    $0x8,%rsp
  0x000001a987ac08ee: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac08f8: callq  *%r10
  0x000001a987ac08fb: add    $0x8,%rsp
  0x000001a987ac08ff: jmpq   0x000001a987ac0911
  0x000001a987ac0904: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac090e: callq  *%r10
  0x000001a987ac0911: add    $0x20,%rsp
  0x000001a987ac0915: pop    %r9
  0x000001a987ac0917: pop    %r8
  0x000001a987ac0919: pop    %rdx
  0x000001a987ac091a: lea    0x270(%r15),%rcx
  0x000001a987ac0921: movl   $0x4,0x2e8(%r15)
  0x000001a987ac092c: movabs $0x554d0ad0,%r10   ;   {runtime_call}
  0x000001a987ac0936: callq  *%r10
  0x000001a987ac0939: vzeroupper 
  0x000001a987ac093c: and    $0xff,%eax
  0x000001a987ac0942: setne  %al
  0x000001a987ac0945: movl   $0x5,0x2e8(%r15)
  0x000001a987ac0950: lock addl $0x0,-0x40(%rsp)
  0x000001a987ac0956: testb  $0x8,0x70(%r15)
  0x000001a987ac095b: jne    0x000001a987ac096f
  0x000001a987ac0961: cmpl   $0x0,0x48(%r15)
  0x000001a987ac0969: je     0x000001a987ac099b
  0x000001a987ac096f: vzeroupper 
  0x000001a987ac0972: mov    %rax,-0x8(%rbp)
  0x000001a987ac0976: mov    %r15,%rcx
  0x000001a987ac0979: mov    %rsp,%r12
  0x000001a987ac097c: sub    $0x20,%rsp
  0x000001a987ac0980: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac0984: movabs $0x554b4790,%r10   ;   {runtime_call}
  0x000001a987ac098e: callq  *%r10
  0x000001a987ac0991: mov    %r12,%rsp
  0x000001a987ac0994: xor    %r12,%r12
  0x000001a987ac0997: mov    -0x8(%rbp),%rax
  0x000001a987ac099b: movl   $0x8,0x2e8(%r15)
  0x000001a987ac09a6: cmpl   $0x2,0x338(%r15)
  0x000001a987ac09b1: je     0x000001a987ac0a63
  0x000001a987ac09b7: movabs $0x557caf1e,%r10   ;   {external_word}
  0x000001a987ac09c1: cmpb   $0x0,(%r10)
  0x000001a987ac09c5: je     0x000001a987ac0a1b
  0x000001a987ac09cb: mov    %rax,-0x8(%rbp)
  0x000001a987ac09cf: movabs $0x1a9ff61d318,%rdx  ;   {metadata({method} {0x000001a9ff61d320} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x000001a987ac09d9: mov    %r15,%rcx
  0x000001a987ac09dc: sub    $0x20,%rsp
  0x000001a987ac09e0: test   $0xf,%esp
  0x000001a987ac09e6: je     0x000001a987ac0a06
  0x000001a987ac09ec: sub    $0x8,%rsp
  0x000001a987ac09f0: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac09fa: callq  *%r10
  0x000001a987ac09fd: add    $0x8,%rsp
  0x000001a987ac0a01: jmpq   0x000001a987ac0a13
  0x000001a987ac0a06: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac0a10: callq  *%r10
  0x000001a987ac0a13: add    $0x20,%rsp
  0x000001a987ac0a17: mov    -0x8(%rbp),%rax
  0x000001a987ac0a1b: movabs $0x0,%r10
  0x000001a987ac0a25: mov    %r10,0x250(%r15)
  0x000001a987ac0a2c: movabs $0x0,%r10
  0x000001a987ac0a36: mov    %r10,0x258(%r15)
  0x000001a987ac0a3d: vzeroupper 
  0x000001a987ac0a40: mov    0x50(%r15),%rcx
  0x000001a987ac0a44: movl   $0x0,0x100(%rcx)
  0x000001a987ac0a4e: leaveq 
  0x000001a987ac0a4f: cmpq   $0x0,0x8(%r15)
  0x000001a987ac0a57: jne    0x000001a987ac0a5e
  0x000001a987ac0a5d: retq   
  0x000001a987ac0a5e: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a987ac0a63: vzeroupper 
  0x000001a987ac0a66: mov    %rax,-0x8(%rbp)
  0x000001a987ac0a6a: mov    %rsp,%r12
  0x000001a987ac0a6d: sub    $0x20,%rsp
  0x000001a987ac0a71: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac0a75: movabs $0x5543c310,%r10   ;   {runtime_call}
  0x000001a987ac0a7f: callq  *%r10
  0x000001a987ac0a82: mov    %r12,%rsp
  0x000001a987ac0a85: xor    %r12,%r12
  0x000001a987ac0a88: mov    -0x8(%rbp),%rax
  0x000001a987ac0a8c: jmpq   0x000001a987ac09b7
  0x000001a987ac0a91: hlt    
  0x000001a987ac0a92: hlt    
  0x000001a987ac0a93: hlt    
  0x000001a987ac0a94: hlt    
  0x000001a987ac0a95: hlt    
  0x000001a987ac0a96: hlt    
  0x000001a987ac0a97: hlt    
Compiled method (c1)      92   24       3       java.util.concurrent.ConcurrentHashMap::tabAt (22 bytes)
 total in heap  [0x000001a980592510,0x000001a980592aa8] = 1432
 relocation     [0x000001a980592688,0x000001a9805926c8] = 64
 main code      [0x000001a9805926e0,0x000001a980592940] = 608
 stub code      [0x000001a980592940,0x000001a9805929d8] = 152
 oops           [0x000001a9805929d8,0x000001a9805929e0] = 8
 metadata       [0x000001a9805929e0,0x000001a9805929f0] = 16
 scopes data    [0x000001a9805929f0,0x000001a980592a30] = 64
 scopes pcs     [0x000001a980592a30,0x000001a980592aa0] = 112
 dependencies   [0x000001a980592aa0,0x000001a980592aa8] = 8
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;  [0x000001a9805926e0, 0x000001a9805929d8]  760 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    rdx:rdx   = '[Ljava/util/concurrent/ConcurrentHashMap$Node;'
  # parm1:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000001a9805926e0: mov    %eax,-0x7000(%rsp)
  0x000001a9805926e7: push   %rbp
  0x000001a9805926e8: sub    $0x70,%rsp
  0x000001a9805926ec: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805926f6: mov    0xfc(%rcx),%eax
  0x000001a9805926fc: add    $0x8,%eax
  0x000001a9805926ff: mov    %eax,0xfc(%rcx)
  0x000001a980592705: and    $0x1ff8,%eax
  0x000001a98059270b: cmp    $0x0,%eax
  0x000001a98059270e: je     0x000001a9805928ab  ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@0

  0x000001a980592714: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059271e: lea    0x170(%rcx),%rcx
  0x000001a980592725: mov    %rdx,%rax
  0x000001a980592728: test   %rax,%rax
  0x000001a98059272b: jne    0x000001a980592737
  0x000001a98059272d: orq    $0x1,0x8(%rcx)
  0x000001a980592735: jmp    0x000001a98059275a
  0x000001a980592737: mov    0x8(%rax),%eax
  0x000001a98059273a: shl    $0x3,%rax
  0x000001a98059273e: xor    0x8(%rcx),%rax
  0x000001a980592742: test   $0xfffffffffffffffc,%rax
  0x000001a980592748: je     0x000001a98059275a
  0x000001a98059274a: test   $0x2,%rax
  0x000001a980592750: jne    0x000001a98059275a
  0x000001a980592752: orq    $0x2,0x8(%rcx)
  0x000001a98059275a: movabs $0x6d1708638,%rcx  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a980592764: movabs $0x1a9ff75fd90,%rax  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059276e: addq   $0x1,0x138(%rax)
  0x000001a980592776: movslq %r8d,%r8
  0x000001a980592779: mov    $0x2,%ecx
  0x000001a98059277e: shl    %cl,%r8
  0x000001a980592781: movabs $0x10,%r10
  0x000001a98059278b: add    %r10,%r8
  0x000001a98059278e: movabs $0x1a9ff761288,%rax  ;   {metadata(method data for {method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a980592798: mov    0xfc(%rax),%esi
  0x000001a98059279e: add    $0x8,%esi
  0x000001a9805927a1: mov    %esi,0xfc(%rax)
  0x000001a9805927a7: and    $0x7ffff8,%esi
  0x000001a9805927ad: cmp    $0x0,%esi
  0x000001a9805927b0: je     0x000001a9805928cc
  0x000001a9805927b6: mov    (%rdx,%r8,1),%eax
  0x000001a9805927ba: shl    $0x3,%rax
  0x000001a9805927be: cmp    $0x0,%rax
  0x000001a9805927c2: jne    0x000001a9805927dd
  0x000001a9805927c4: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805927ce: orl    $0x100,0x180(%rdi)
  0x000001a9805927d8: jmpq   0x000001a98059289e
  0x000001a9805927dd: movabs $0x7c001acb8,%rbx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a9805927e7: mov    0x8(%rax),%edi
  0x000001a9805927ea: shl    $0x3,%rdi
  0x000001a9805927ee: cmp    0x30(%rdi),%rbx
  0x000001a9805927f2: jne    0x000001a980592882
  0x000001a9805927f8: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980592802: mov    0x8(%rax),%ebx
  0x000001a980592805: shl    $0x3,%rbx
  0x000001a980592809: cmp    0x198(%rdi),%rbx
  0x000001a980592810: jne    0x000001a98059281f
  0x000001a980592812: addq   $0x1,0x1a0(%rdi)
  0x000001a98059281a: jmpq   0x000001a98059289e
  0x000001a98059281f: cmp    0x1a8(%rdi),%rbx
  0x000001a980592826: jne    0x000001a980592835
  0x000001a980592828: addq   $0x1,0x1b0(%rdi)
  0x000001a980592830: jmpq   0x000001a98059289e
  0x000001a980592835: cmpq   $0x0,0x198(%rdi)
  0x000001a980592840: jne    0x000001a980592859
  0x000001a980592842: mov    %rbx,0x198(%rdi)
  0x000001a980592849: movq   $0x1,0x1a0(%rdi)
  0x000001a980592854: jmpq   0x000001a98059289e
  0x000001a980592859: cmpq   $0x0,0x1a8(%rdi)
  0x000001a980592864: jne    0x000001a98059287d
  0x000001a980592866: mov    %rbx,0x1a8(%rdi)
  0x000001a98059286d: movq   $0x1,0x1b0(%rdi)
  0x000001a980592878: jmpq   0x000001a98059289e
  0x000001a98059287d: jmpq   0x000001a98059289e
  0x000001a980592882: movabs $0x1a9ff75fd90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059288c: subq   $0x1,0x188(%rdi)
  0x000001a980592894: jmpq   0x000001a9805928ed
  0x000001a980592899: jmpq   0x000001a98059289e  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18

  0x000001a98059289e: add    $0x70,%rsp
  0x000001a9805928a2: pop    %rbp
  0x000001a9805928a3: mov    0x70(%r15),%r10
  0x000001a9805928a7: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805928aa: retq   
  0x000001a9805928ab: movabs $0x1a9ff693250,%r10  ;   {metadata({method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805928b5: mov    %r10,0x8(%rsp)
  0x000001a9805928ba: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805928c2: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805928c7: jmpq   0x000001a980592714
  0x000001a9805928cc: movabs $0x1a9ff61e6a0,%r10  ;   {metadata({method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a9805928d6: mov    %r10,0x8(%rsp)
  0x000001a9805928db: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805928e3: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805928e8: jmpq   0x000001a9805927b6
  0x000001a9805928ed: mov    %rax,(%rsp)
  0x000001a9805928f1: callq  0x000001a9800eeca0  ; ImmutableOopMap{}
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a9805928f6: nop
  0x000001a9805928f7: nop
  0x000001a9805928f8: mov    0x350(%r15),%rax
  0x000001a9805928ff: movabs $0x0,%r10
  0x000001a980592909: mov    %r10,0x350(%r15)
  0x000001a980592910: movabs $0x0,%r10
  0x000001a98059291a: mov    %r10,0x358(%r15)
  0x000001a980592921: add    $0x70,%rsp
  0x000001a980592925: pop    %rbp
  0x000001a980592926: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a98059292b: hlt    
  0x000001a98059292c: hlt    
  0x000001a98059292d: hlt    
  0x000001a98059292e: hlt    
  0x000001a98059292f: hlt    
  0x000001a980592930: hlt    
  0x000001a980592931: hlt    
  0x000001a980592932: hlt    
  0x000001a980592933: hlt    
  0x000001a980592934: hlt    
  0x000001a980592935: hlt    
  0x000001a980592936: hlt    
  0x000001a980592937: hlt    
  0x000001a980592938: hlt    
  0x000001a980592939: hlt    
  0x000001a98059293a: hlt    
  0x000001a98059293b: hlt    
  0x000001a98059293c: hlt    
  0x000001a98059293d: hlt    
  0x000001a98059293e: hlt    
  0x000001a98059293f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980592940: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980592945: mov    %rsp,-0x28(%rsp)
  0x000001a98059294a: sub    $0x80,%rsp
  0x000001a980592951: mov    %rax,0x78(%rsp)
  0x000001a980592956: mov    %rcx,0x70(%rsp)
  0x000001a98059295b: mov    %rdx,0x68(%rsp)
  0x000001a980592960: mov    %rbx,0x60(%rsp)
  0x000001a980592965: mov    %rbp,0x50(%rsp)
  0x000001a98059296a: mov    %rsi,0x48(%rsp)
  0x000001a98059296f: mov    %rdi,0x40(%rsp)
  0x000001a980592974: mov    %r8,0x38(%rsp)
  0x000001a980592979: mov    %r9,0x30(%rsp)
  0x000001a98059297e: mov    %r10,0x28(%rsp)
  0x000001a980592983: mov    %r11,0x20(%rsp)
  0x000001a980592988: mov    %r12,0x18(%rsp)
  0x000001a98059298d: mov    %r13,0x10(%rsp)
  0x000001a980592992: mov    %r14,0x8(%rsp)
  0x000001a980592997: mov    %r15,(%rsp)
  0x000001a98059299b: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a9805929a5: movabs $0x1a980592945,%rdx  ;   {internal_word}
  0x000001a9805929af: mov    %rsp,%r8
  0x000001a9805929b2: and    $0xfffffffffffffff0,%rsp
  0x000001a9805929b6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a9805929c0: callq  *%r10
  0x000001a9805929c3: hlt    
[Deopt Handler Code]
  0x000001a9805929c4: movabs $0x1a9805929c4,%r10  ;   {section_word}
  0x000001a9805929ce: push   %r10
  0x000001a9805929d0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a9805929d5: hlt    
  0x000001a9805929d6: hlt    
  0x000001a9805929d7: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 487 520 
ImmutableOopMap{}pc offsets: 534 Compiled method (c1)      96    4       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a980592b10,0x000001a980592e80] = 880
 relocation     [0x000001a980592c88,0x000001a980592cb0] = 40
 main code      [0x000001a980592cc0,0x000001a980592d80] = 192
 stub code      [0x000001a980592d80,0x000001a980592e18] = 152
 metadata       [0x000001a980592e18,0x000001a980592e28] = 16
 scopes data    [0x000001a980592e28,0x000001a980592e38] = 16
 scopes pcs     [0x000001a980592e38,0x000001a980592e78] = 64
 dependencies   [0x000001a980592e78,0x000001a980592e80] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a980592cc0, 0x000001a980592e18]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a980592cc0: mov    0x8(%rdx),%r10d
  0x000001a980592cc4: shl    $0x3,%r10
  0x000001a980592cc8: cmp    %rax,%r10
  0x000001a980592ccb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980592cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a980592cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980592ce0: mov    %eax,-0x7000(%rsp)
  0x000001a980592ce7: push   %rbp
  0x000001a980592ce8: sub    $0x30,%rsp
  0x000001a980592cec: movabs $0x1a9ff7532f0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a980592cf6: mov    0xfc(%rsi),%edi
  0x000001a980592cfc: add    $0x8,%edi
  0x000001a980592cff: mov    %edi,0xfc(%rsi)
  0x000001a980592d05: and    $0x1ff8,%edi
  0x000001a980592d0b: cmp    $0x0,%edi
  0x000001a980592d0e: je     0x000001a980592d21  ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a980592d14: add    $0x30,%rsp
  0x000001a980592d18: pop    %rbp
  0x000001a980592d19: mov    0x70(%r15),%r10
  0x000001a980592d1d: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980592d20: retq   
  0x000001a980592d21: movabs $0x1a9ff580588,%r10  ;   {metadata({method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a980592d2b: mov    %r10,0x8(%rsp)
  0x000001a980592d30: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980592d38: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980592d3d: jmp    0x000001a980592d14
  0x000001a980592d3f: nop
  0x000001a980592d40: nop
  0x000001a980592d41: mov    0x350(%r15),%rax
  0x000001a980592d48: movabs $0x0,%r10
  0x000001a980592d52: mov    %r10,0x350(%r15)
  0x000001a980592d59: movabs $0x0,%r10
  0x000001a980592d63: mov    %r10,0x358(%r15)
  0x000001a980592d6a: add    $0x30,%rsp
  0x000001a980592d6e: pop    %rbp
  0x000001a980592d6f: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980592d74: hlt    
  0x000001a980592d75: hlt    
  0x000001a980592d76: hlt    
  0x000001a980592d77: hlt    
  0x000001a980592d78: hlt    
  0x000001a980592d79: hlt    
  0x000001a980592d7a: hlt    
  0x000001a980592d7b: hlt    
  0x000001a980592d7c: hlt    
  0x000001a980592d7d: hlt    
  0x000001a980592d7e: hlt    
  0x000001a980592d7f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a980592d80: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a980592d85: mov    %rsp,-0x28(%rsp)
  0x000001a980592d8a: sub    $0x80,%rsp
  0x000001a980592d91: mov    %rax,0x78(%rsp)
  0x000001a980592d96: mov    %rcx,0x70(%rsp)
  0x000001a980592d9b: mov    %rdx,0x68(%rsp)
  0x000001a980592da0: mov    %rbx,0x60(%rsp)
  0x000001a980592da5: mov    %rbp,0x50(%rsp)
  0x000001a980592daa: mov    %rsi,0x48(%rsp)
  0x000001a980592daf: mov    %rdi,0x40(%rsp)
  0x000001a980592db4: mov    %r8,0x38(%rsp)
  0x000001a980592db9: mov    %r9,0x30(%rsp)
  0x000001a980592dbe: mov    %r10,0x28(%rsp)
  0x000001a980592dc3: mov    %r11,0x20(%rsp)
  0x000001a980592dc8: mov    %r12,0x18(%rsp)
  0x000001a980592dcd: mov    %r13,0x10(%rsp)
  0x000001a980592dd2: mov    %r14,0x8(%rsp)
  0x000001a980592dd7: mov    %r15,(%rsp)
  0x000001a980592ddb: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980592de5: movabs $0x1a980592d85,%rdx  ;   {internal_word}
  0x000001a980592def: mov    %rsp,%r8
  0x000001a980592df2: and    $0xfffffffffffffff0,%rsp
  0x000001a980592df6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980592e00: callq  *%r10
  0x000001a980592e03: hlt    
[Deopt Handler Code]
  0x000001a980592e04: movabs $0x1a980592e04,%r10  ;   {section_word}
  0x000001a980592e0e: push   %r10
  0x000001a980592e10: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980592e15: hlt    
  0x000001a980592e16: hlt    
  0x000001a980592e17: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 125 Compiled method (c1)      97    6       2       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000001a980592e90,0x000001a980593520] = 1680
 relocation     [0x000001a980593008,0x000001a980593048] = 64
 main code      [0x000001a980593060,0x000001a980593200] = 416
 stub code      [0x000001a980593200,0x000001a9805932b0] = 176
 metadata       [0x000001a9805932b0,0x000001a9805932c8] = 24
 scopes data    [0x000001a9805932c8,0x000001a980593378] = 176
 scopes pcs     [0x000001a980593378,0x000001a980593508] = 400
 dependencies   [0x000001a980593508,0x000001a980593510] = 8
 nul chk table  [0x000001a980593510,0x000001a980593520] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000001a980593060, 0x000001a9805932b0]  592 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x000001a980593060: mov    0x8(%rdx),%r10d
  0x000001a980593064: shl    $0x3,%r10
  0x000001a980593068: cmp    %rax,%r10
  0x000001a98059306b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980593071: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a98059307c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980593080: mov    %eax,-0x7000(%rsp)
  0x000001a980593087: push   %rbp
  0x000001a980593088: sub    $0x50,%rsp
  0x000001a98059308c: movabs $0x1a9ff6b1440,%rsi
  0x000001a980593096: mov    0x18(%rsi),%edi
  0x000001a980593099: add    $0x8,%edi
  0x000001a98059309c: mov    %edi,0x18(%rsi)
  0x000001a98059309f: and    $0x3ff8,%edi
  0x000001a9805930a5: cmp    $0x0,%edi
  0x000001a9805930a8: je     0x000001a98059317f  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0

  0x000001a9805930ae: mov    0x10(%rdx),%esi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x000001a9805930b1: cmp    $0x0,%esi
  0x000001a9805930b4: jne    0x000001a98059316f  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x000001a9805930ba: mov    0xc(%rdx),%edi
  0x000001a9805930bd: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000001a9805930c1: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x000001a9805931a0
  0x000001a9805930c4: cmp    $0x0,%ebx
  0x000001a9805930c7: jle    0x000001a98059316f  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000001a9805930cd: movsbl 0x14(%rdx),%esi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x000001a9805930d1: cmp    $0x0,%esi
  0x000001a9805930d4: mov    $0x0,%esi
  0x000001a9805930d9: jne    0x000001a9805930e4
  0x000001a9805930df: mov    $0x1,%esi
  0x000001a9805930e4: and    $0x1,%esi
  0x000001a9805930e7: cmp    $0x0,%esi
  0x000001a9805930ea: mov    %rdx,0x40(%rsp)
  0x000001a9805930ef: je     0x000001a980593109  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000001a9805930f5: mov    %rdi,%rdx          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29

  0x000001a9805930f8: nopl   0x0(%rax)
  0x000001a9805930ff: callq  0x000001a980027500  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29
                                                ;   {static_call}
  0x000001a980593104: jmpq   0x000001a980593164  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32

  0x000001a980593109: sar    %ebx
  0x000001a98059310b: mov    $0x0,%eax
  0x000001a980593110: mov    $0x0,%esi
  0x000001a980593115: jmpq   0x000001a98059315d  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@9
                                                ; - java.lang.String::hashCode@39

  0x000001a98059311a: nopw   0x0(%rax,%rax,1)
  0x000001a980593120: movslq %eax,%rdx
  0x000001a980593123: movzwl 0x10(%rdi,%rdx,2),%edx  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@20
                                                ; - java.lang.String::hashCode@39

  0x000001a980593128: mov    %rsi,%rcx
  0x000001a98059312b: shl    $0x5,%esi
  0x000001a98059312e: sub    %ecx,%esi
  0x000001a980593130: add    %edx,%esi
  0x000001a980593132: inc    %eax
  0x000001a980593134: movabs $0x1a9ff7fa0f0,%rdx
  0x000001a98059313e: mov    0x1c(%rdx),%ecx
  0x000001a980593141: add    $0x8,%ecx
  0x000001a980593144: mov    %ecx,0x1c(%rdx)
  0x000001a980593147: and    $0x1fff8,%ecx
  0x000001a98059314d: cmp    $0x0,%ecx
  0x000001a980593150: je     0x000001a9805931a5  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a980593156: mov    0x70(%r15),%r10    ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a98059315a: test   %eax,(%r10)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {poll}
  0x000001a98059315d: cmp    %ebx,%eax
  0x000001a98059315f: jl     0x000001a980593120  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@11
                                                ; - java.lang.String::hashCode@39

  0x000001a980593161: mov    %rsi,%rax          ;*dup {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@42

  0x000001a980593164: mov    0x40(%rsp),%rdx
  0x000001a980593169: mov    %eax,0x10(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44

  0x000001a98059316c: mov    %rax,%rsi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47

  0x000001a98059316f: mov    %rsi,%rax
  0x000001a980593172: add    $0x50,%rsp
  0x000001a980593176: pop    %rbp
  0x000001a980593177: mov    0x70(%r15),%r10
  0x000001a98059317b: test   %eax,(%r10)        ;   {poll_return}
  0x000001a98059317e: retq   
  0x000001a98059317f: movabs $0x1a9ff585808,%r10  ;   {metadata({method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980593189: mov    %r10,0x8(%rsp)
  0x000001a98059318e: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980593196: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a98059319b: jmpq   0x000001a9805930ae
  0x000001a9805931a0: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a9805931a5: movabs $0x1a9ff6f5698,%r10  ;   {metadata({method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a9805931af: mov    %r10,0x8(%rsp)
  0x000001a9805931b4: movq   $0x1c,(%rsp)
  0x000001a9805931bc: callq  0x000001a9800f1a80  ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805931c1: jmp    0x000001a980593156
  0x000001a9805931c3: nop
  0x000001a9805931c4: nop
  0x000001a9805931c5: mov    0x350(%r15),%rax
  0x000001a9805931cc: movabs $0x0,%r10
  0x000001a9805931d6: mov    %r10,0x350(%r15)
  0x000001a9805931dd: movabs $0x0,%r10
  0x000001a9805931e7: mov    %r10,0x358(%r15)
  0x000001a9805931ee: add    $0x50,%rsp
  0x000001a9805931f2: pop    %rbp
  0x000001a9805931f3: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a9805931f8: hlt    
  0x000001a9805931f9: hlt    
  0x000001a9805931fa: hlt    
  0x000001a9805931fb: hlt    
  0x000001a9805931fc: hlt    
  0x000001a9805931fd: hlt    
  0x000001a9805931fe: hlt    
  0x000001a9805931ff: hlt    
[Stub Code]
  0x000001a980593200: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a980593205: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059320f: jmpq   0x000001a98059320f  ;   {runtime_call}
[Exception Handler]
  0x000001a980593214: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a980593219: mov    %rsp,-0x28(%rsp)
  0x000001a98059321e: sub    $0x80,%rsp
  0x000001a980593225: mov    %rax,0x78(%rsp)
  0x000001a98059322a: mov    %rcx,0x70(%rsp)
  0x000001a98059322f: mov    %rdx,0x68(%rsp)
  0x000001a980593234: mov    %rbx,0x60(%rsp)
  0x000001a980593239: mov    %rbp,0x50(%rsp)
  0x000001a98059323e: mov    %rsi,0x48(%rsp)
  0x000001a980593243: mov    %rdi,0x40(%rsp)
  0x000001a980593248: mov    %r8,0x38(%rsp)
  0x000001a98059324d: mov    %r9,0x30(%rsp)
  0x000001a980593252: mov    %r10,0x28(%rsp)
  0x000001a980593257: mov    %r11,0x20(%rsp)
  0x000001a98059325c: mov    %r12,0x18(%rsp)
  0x000001a980593261: mov    %r13,0x10(%rsp)
  0x000001a980593266: mov    %r14,0x8(%rsp)
  0x000001a98059326b: mov    %r15,(%rsp)
  0x000001a98059326f: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980593279: movabs $0x1a980593219,%rdx  ;   {internal_word}
  0x000001a980593283: mov    %rsp,%r8
  0x000001a980593286: and    $0xfffffffffffffff0,%rsp
  0x000001a98059328a: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980593294: callq  *%r10
  0x000001a980593297: hlt    
[Deopt Handler Code]
  0x000001a980593298: movabs $0x1a980593298,%r10  ;   {section_word}
  0x000001a9805932a2: push   %r10
  0x000001a9805932a4: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a9805932a9: hlt    
  0x000001a9805932aa: hlt    
  0x000001a9805932ab: hlt    
  0x000001a9805932ac: hlt    
  0x000001a9805932ad: hlt    
  0x000001a9805932ae: hlt    
  0x000001a9805932af: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 164 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 250 
ImmutableOopMap{rdx=Oop }pc offsets: 315 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 325 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 353 Compiled method (c2)     100   33       4       java.util.ImmutableCollections$SetN$1::hasNext (47 bytes)
 total in heap  [0x000001a987ac0b10,0x000001a987ac0fa0] = 1168
 relocation     [0x000001a987ac0c88,0x000001a987ac0ca0] = 24
 main code      [0x000001a987ac0ca0,0x000001a987ac0d60] = 192
 stub code      [0x000001a987ac0d60,0x000001a987ac0d78] = 24
 metadata       [0x000001a987ac0d78,0x000001a987ac0d80] = 8
 scopes data    [0x000001a987ac0d80,0x000001a987ac0df0] = 112
 scopes pcs     [0x000001a987ac0df0,0x000001a987ac0f80] = 400
 dependencies   [0x000001a987ac0f80,0x000001a987ac0f88] = 8
 nul chk table  [0x000001a987ac0f88,0x000001a987ac0fa0] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.hasNext()Z  [0x000001a987ac0ca0, 0x000001a987ac0d78]  216 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff7e26a8} 'hasNext' '()Z' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x20]  (sp of caller)
  0x000001a987ac0ca0: mov    0x8(%rdx),%r10d
  0x000001a987ac0ca4: shl    $0x3,%r10
  0x000001a987ac0ca8: cmp    %r10,%rax
  0x000001a987ac0cab: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac0cb1: data16 xchg %ax,%ax
  0x000001a987ac0cb4: nopl   0x0(%rax,%rax,1)
  0x000001a987ac0cbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a987ac0cc0: mov    %eax,-0x7000(%rsp)
  0x000001a987ac0cc7: push   %rbp
  0x000001a987ac0cc8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000001a987ac0ccc: mov    0x10(%rdx),%r10d   ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@5

  0x000001a987ac0cd0: mov    0x10(%r12,%r10,8),%r11d  ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ; implicit exception: dispatches to 0x000001a987ac0d3e
  0x000001a987ac0cd5: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ; implicit exception: dispatches to 0x000001a987ac0d4a
  0x000001a987ac0cda: mov    0xc(%rdx),%r9d     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@1

  0x000001a987ac0cde: cmp    %r10d,%r9d
  0x000001a987ac0ce1: jge    0x000001a987ac0d19  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a987ac0ce3: cmp    %r10d,%r9d
  0x000001a987ac0ce6: jae    0x000001a987ac0d2f
  0x000001a987ac0ce8: mov    %r10d,%r8d
  0x000001a987ac0ceb: dec    %r8d
  0x000001a987ac0cee: cmp    %r10d,%r8d
  0x000001a987ac0cf1: jae    0x000001a987ac0d2f
  0x000001a987ac0cf3: shl    $0x3,%r11          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a987ac0cf7: mov    0x10(%r11,%r9,4),%r8d  ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@26

  0x000001a987ac0cfc: test   %r8d,%r8d
  0x000001a987ac0cff: jne    0x000001a987ac0d1d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@27

  0x000001a987ac0d01: inc    %r9d               ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@38

  0x000001a987ac0d04: mov    %r9d,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@39

  0x000001a987ac0d08: cmp    %r10d,%r9d
  0x000001a987ac0d0b: jl     0x000001a987ac0cf7  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a987ac0d0d: mov    0x70(%r15),%r8     ; ImmutableOopMap{r11=Oop rdx=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42

  0x000001a987ac0d11: test   %eax,(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@42
                                                ;   {poll}
  0x000001a987ac0d14: cmp    %r10d,%r9d
  0x000001a987ac0d17: jl     0x000001a987ac0cf7  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@12

  0x000001a987ac0d19: xor    %eax,%eax
  0x000001a987ac0d1b: jmp    0x000001a987ac0d22  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a987ac0d1d: mov    $0x1,%eax          ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@-1

  0x000001a987ac0d22: add    $0x10,%rsp
  0x000001a987ac0d26: pop    %rbp
  0x000001a987ac0d27: mov    0x70(%r15),%r10
  0x000001a987ac0d2b: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac0d2e: retq   
  0x000001a987ac0d2f: mov    %rdx,%rbp
  0x000001a987ac0d32: mov    $0xffffff86,%edx
  0x000001a987ac0d37: callq  0x000001a980028a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac0d3c: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a987ac0d3e: mov    $0xfffffff6,%edx
  0x000001a987ac0d43: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac0d48: ud2                       ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@8

  0x000001a987ac0d4a: mov    $0xfffffff6,%edx
  0x000001a987ac0d4f: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@11
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac0d54: ud2                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::hasNext@15

  0x000001a987ac0d56: hlt    
  0x000001a987ac0d57: hlt    
  0x000001a987ac0d58: hlt    
  0x000001a987ac0d59: hlt    
  0x000001a987ac0d5a: hlt    
  0x000001a987ac0d5b: hlt    
  0x000001a987ac0d5c: hlt    
  0x000001a987ac0d5d: hlt    
  0x000001a987ac0d5e: hlt    
  0x000001a987ac0d5f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a987ac0d60: jmpq   0x000001a9800ec480  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a987ac0d65: callq  0x000001a987ac0d6a
  0x000001a987ac0d6a: subq   $0x5,(%rsp)
  0x000001a987ac0d6f: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac0d74: hlt    
  0x000001a987ac0d75: hlt    
  0x000001a987ac0d76: hlt    
  0x000001a987ac0d77: hlt    

ImmutableOopMap{r11=Oop rdx=Oop }pc offsets: 113 
ImmutableOopMap{rbp=Oop }pc offsets: 156 
ImmutableOopMap{}pc offsets: 168 180 Compiled method (c1)     102   39       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a987ac1010,0x000001a987ac1328] = 792
 relocation     [0x000001a987ac1188,0x000001a987ac11b0] = 40
 main code      [0x000001a987ac11c0,0x000001a987ac1240] = 128
 stub code      [0x000001a987ac1240,0x000001a987ac12d8] = 152
 metadata       [0x000001a987ac12d8,0x000001a987ac12e8] = 16
 scopes data    [0x000001a987ac12e8,0x000001a987ac12f0] = 8
 scopes pcs     [0x000001a987ac12f0,0x000001a987ac1320] = 48
 dependencies   [0x000001a987ac1320,0x000001a987ac1328] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a987ac11c0, 0x000001a987ac12d8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000001a987ac11c0: mov    0x8(%rdx),%r10d
  0x000001a987ac11c4: shl    $0x3,%r10
  0x000001a987ac11c8: cmp    %rax,%r10
  0x000001a987ac11cb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac11d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a987ac11dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a987ac11e0: mov    %eax,-0x7000(%rsp)
  0x000001a987ac11e7: push   %rbp
  0x000001a987ac11e8: sub    $0x30,%rsp         ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a987ac11ec: add    $0x30,%rsp
  0x000001a987ac11f0: pop    %rbp
  0x000001a987ac11f1: mov    0x70(%r15),%r10
  0x000001a987ac11f5: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac11f8: retq   
  0x000001a987ac11f9: nop
  0x000001a987ac11fa: nop
  0x000001a987ac11fb: mov    0x350(%r15),%rax
  0x000001a987ac1202: movabs $0x0,%r10
  0x000001a987ac120c: mov    %r10,0x350(%r15)
  0x000001a987ac1213: movabs $0x0,%r10
  0x000001a987ac121d: mov    %r10,0x358(%r15)
  0x000001a987ac1224: add    $0x30,%rsp
  0x000001a987ac1228: pop    %rbp
  0x000001a987ac1229: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a987ac122e: hlt    
  0x000001a987ac122f: hlt    
  0x000001a987ac1230: hlt    
  0x000001a987ac1231: hlt    
  0x000001a987ac1232: hlt    
  0x000001a987ac1233: hlt    
  0x000001a987ac1234: hlt    
  0x000001a987ac1235: hlt    
  0x000001a987ac1236: hlt    
  0x000001a987ac1237: hlt    
  0x000001a987ac1238: hlt    
  0x000001a987ac1239: hlt    
  0x000001a987ac123a: hlt    
  0x000001a987ac123b: hlt    
  0x000001a987ac123c: hlt    
  0x000001a987ac123d: hlt    
  0x000001a987ac123e: hlt    
  0x000001a987ac123f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a987ac1240: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a987ac1245: mov    %rsp,-0x28(%rsp)
  0x000001a987ac124a: sub    $0x80,%rsp
  0x000001a987ac1251: mov    %rax,0x78(%rsp)
  0x000001a987ac1256: mov    %rcx,0x70(%rsp)
  0x000001a987ac125b: mov    %rdx,0x68(%rsp)
  0x000001a987ac1260: mov    %rbx,0x60(%rsp)
  0x000001a987ac1265: mov    %rbp,0x50(%rsp)
  0x000001a987ac126a: mov    %rsi,0x48(%rsp)
  0x000001a987ac126f: mov    %rdi,0x40(%rsp)
  0x000001a987ac1274: mov    %r8,0x38(%rsp)
  0x000001a987ac1279: mov    %r9,0x30(%rsp)
  0x000001a987ac127e: mov    %r10,0x28(%rsp)
  0x000001a987ac1283: mov    %r11,0x20(%rsp)
  0x000001a987ac1288: mov    %r12,0x18(%rsp)
  0x000001a987ac128d: mov    %r13,0x10(%rsp)
  0x000001a987ac1292: mov    %r14,0x8(%rsp)
  0x000001a987ac1297: mov    %r15,(%rsp)
  0x000001a987ac129b: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a987ac12a5: movabs $0x1a987ac1245,%rdx  ;   {internal_word}
  0x000001a987ac12af: mov    %rsp,%r8
  0x000001a987ac12b2: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac12b6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a987ac12c0: callq  *%r10
  0x000001a987ac12c3: hlt    
[Deopt Handler Code]
  0x000001a987ac12c4: movabs $0x1a987ac12c4,%r10  ;   {section_word}
  0x000001a987ac12ce: push   %r10
  0x000001a987ac12d0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac12d5: hlt    
  0x000001a987ac12d6: hlt    
  0x000001a987ac12d7: hlt    
Compiled method (c1)     104   42       3       java.util.HashMap::putVal (300 bytes)
 total in heap  [0x000001a980593590,0x000001a9805954e8] = 8024
 relocation     [0x000001a980593708,0x000001a980593850] = 328
 main code      [0x000001a980593860,0x000001a980594980] = 4384
 stub code      [0x000001a980594980,0x000001a980594ac0] = 320
 metadata       [0x000001a980594ac0,0x000001a980594ac8] = 8
 scopes data    [0x000001a980594ac8,0x000001a980594e68] = 928
 scopes pcs     [0x000001a980594e68,0x000001a980595478] = 1552
 dependencies   [0x000001a980595478,0x000001a980595480] = 8
 nul chk table  [0x000001a980595480,0x000001a9805954e8] = 104
----------------------------------------------------------------------
java/util/HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;  [0x000001a980593860, 0x000001a980594ac0]  4704 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rdx:rdx   = 'java/util/HashMap'
  # parm0:    r8        = int
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi:rdi   = 'java/lang/Object'
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000001a980593860: mov    0x8(%rdx),%r10d
  0x000001a980593864: shl    $0x3,%r10
  0x000001a980593868: cmp    %rax,%r10
  0x000001a98059386b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980593871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a98059387c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980593880: mov    %eax,-0x7000(%rsp)
  0x000001a980593887: push   %rbp
  0x000001a980593888: sub    $0xa0,%rsp
  0x000001a98059388f: mov    %rdx,0x48(%rsp)
  0x000001a980593894: mov    %r8d,0x40(%rsp)
  0x000001a980593899: mov    %r9,0x50(%rsp)
  0x000001a98059389e: movabs $0x1a9ff7f8b90,%rbx  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805938a8: mov    0xfc(%rbx),%eax
  0x000001a9805938ae: add    $0x8,%eax
  0x000001a9805938b1: mov    %eax,0xfc(%rbx)
  0x000001a9805938b7: and    $0x1ff8,%eax
  0x000001a9805938bd: cmp    $0x0,%eax
  0x000001a9805938c0: je     0x000001a9805947e6  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@0

  0x000001a9805938c6: mov    0x24(%rdx),%ebx
  0x000001a9805938c9: shl    $0x3,%rbx          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@1

  0x000001a9805938cd: cmp    $0x0,%rbx
  0x000001a9805938d1: movabs $0x1a9ff7f8b90,%rax  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805938db: movabs $0x138,%r11
  0x000001a9805938e5: je     0x000001a9805938f5
  0x000001a9805938eb: movabs $0x148,%r11
  0x000001a9805938f5: mov    (%rax,%r11,1),%r13
  0x000001a9805938f9: lea    0x1(%r13),%r13
  0x000001a9805938fd: mov    %r13,(%rax,%r11,1)
  0x000001a980593901: je     0x000001a980593955  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@7

  0x000001a980593907: mov    0xc(%rbx),%eax     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ; implicit exception: dispatches to 0x000001a980594807
  0x000001a98059390a: cmp    $0x0,%eax
  0x000001a98059390d: movabs $0x1a9ff7f8b90,%r11  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593917: movabs $0x168,%r13
  0x000001a980593921: je     0x000001a980593931
  0x000001a980593927: movabs $0x158,%r13
  0x000001a980593931: mov    (%r11,%r13,1),%r14
  0x000001a980593935: lea    0x1(%r14),%r14
  0x000001a980593939: mov    %r14,(%r11,%r13,1)
  0x000001a98059393d: je     0x000001a980593955  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@16

  0x000001a980593943: mov    %ecx,0x60(%rsp)
  0x000001a980593947: mov    %esi,0x44(%rsp)
  0x000001a98059394b: mov    %rdi,0x58(%rsp)
  0x000001a980593950: jmpq   0x000001a980593991  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x000001a980593955: mov    %ecx,0x60(%rsp)
  0x000001a980593959: mov    %esi,0x44(%rsp)
  0x000001a98059395d: mov    %rdi,0x58(%rsp)
  0x000001a980593962: mov    %rdx,%rbx
  0x000001a980593965: movabs $0x1a9ff7f8b90,%rax  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a98059396f: addq   $0x1,0x178(%rax)
  0x000001a980593977: mov    %rdx,%rbx
  0x000001a98059397a: mov    %rbx,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x000001a98059397d: xchg   %ax,%ax
  0x000001a98059397f: callq  0x000001a980027000  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20
                                                ;   {optimized virtual_call}
  0x000001a980593984: mov    %rax,%r8           ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@20

  0x000001a980593987: mov    0xc(%r8),%r9d      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ; implicit exception: dispatches to 0x000001a98059480c
  0x000001a98059398b: mov    %r9,%rax
  0x000001a98059398e: mov    %r8,%rbx           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@29

  0x000001a980593991: dec    %eax
  0x000001a980593993: and    0x40(%rsp),%eax
  0x000001a980593997: movslq %eax,%r8
  0x000001a98059399a: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000001a980594811
  0x000001a98059399d: jae    0x000001a98059481b
  0x000001a9805939a3: mov    0x10(%rbx,%r8,4),%esi
  0x000001a9805939a8: shl    $0x3,%rsi          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40

  0x000001a9805939ac: cmp    $0x0,%rsi
  0x000001a9805939b0: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805939ba: movabs $0x1b0,%r9
  0x000001a9805939c4: jne    0x000001a9805939d4
  0x000001a9805939ca: movabs $0x1c0,%r9
  0x000001a9805939d4: mov    (%r8,%r9,1),%rdi
  0x000001a9805939d8: lea    0x1(%rdi),%rdi
  0x000001a9805939dc: mov    %rdi,(%r8,%r9,1)
  0x000001a9805939e0: jne    0x000001a980593c1f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@44

  0x000001a9805939e6: mov    %eax,0x64(%rsp)
  0x000001a9805939ea: mov    %rbx,0x68(%rsp)
  0x000001a9805939ef: mov    0x48(%rsp),%rdx
  0x000001a9805939f4: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805939fe: mov    0x8(%rdx),%edx
  0x000001a980593a01: shl    $0x3,%rdx
  0x000001a980593a05: cmp    0x1e0(%r8),%rdx
  0x000001a980593a0c: jne    0x000001a980593a1b
  0x000001a980593a0e: addq   $0x1,0x1e8(%r8)
  0x000001a980593a16: jmpq   0x000001a980593a81
  0x000001a980593a1b: cmp    0x1f0(%r8),%rdx
  0x000001a980593a22: jne    0x000001a980593a31
  0x000001a980593a24: addq   $0x1,0x1f8(%r8)
  0x000001a980593a2c: jmpq   0x000001a980593a81
  0x000001a980593a31: cmpq   $0x0,0x1e0(%r8)
  0x000001a980593a3c: jne    0x000001a980593a55
  0x000001a980593a3e: mov    %rdx,0x1e0(%r8)
  0x000001a980593a45: movq   $0x1,0x1e8(%r8)
  0x000001a980593a50: jmpq   0x000001a980593a81
  0x000001a980593a55: cmpq   $0x0,0x1f0(%r8)
  0x000001a980593a60: jne    0x000001a980593a79
  0x000001a980593a62: mov    %rdx,0x1f0(%r8)
  0x000001a980593a69: movq   $0x1,0x1f8(%r8)
  0x000001a980593a74: jmpq   0x000001a980593a81
  0x000001a980593a79: addq   $0x1,0x1d0(%r8)
  0x000001a980593a81: mov    0x40(%rsp),%r8d
  0x000001a980593a86: mov    0x50(%rsp),%r9
  0x000001a980593a8b: mov    0x58(%rsp),%rdi
  0x000001a980593a90: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a980593a9a: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56

  0x000001a980593a9f: nopw   0x0(%rax,%rax,1)
  0x000001a980593aa5: movabs $0xffffffffffffffff,%rax
  0x000001a980593aaf: callq  0x000001a980028c20  ; ImmutableOopMap{[72]=Oop [104]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@56
                                                ;   {virtual_call}
  0x000001a980593ab4: mov    0x64(%rsp),%r8d
  0x000001a980593ab9: movslq %r8d,%rdx
  0x000001a980593abc: mov    0x68(%rsp),%rbx
  0x000001a980593ac1: lea    0x10(%rbx,%rdx,4),%rdx
  0x000001a980593ac6: cmp    0xc(%rbx),%r8d
  0x000001a980593aca: jae    0x000001a980594824
  0x000001a980593ad0: cmp    $0x0,%rax
  0x000001a980593ad4: jne    0x000001a980593aef
  0x000001a980593ad6: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593ae0: orl    $0x100,0x200(%rsi)
  0x000001a980593aea: jmpq   0x000001a980593bd9
  0x000001a980593aef: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x000001a98059482d
  0x000001a980593af3: shl    $0x3,%r8
  0x000001a980593af7: mov    0x8(%rax),%esi
  0x000001a980593afa: shl    $0x3,%rsi
  0x000001a980593afe: mov    0xe0(%r8),%r8
  0x000001a980593b05: cmp    %r8,%rsi
  0x000001a980593b08: je     0x000001a980593b3a
  0x000001a980593b0e: mov    0xc(%r8),%edi
  0x000001a980593b12: cmp    (%rsi,%rdi,1),%r8
  0x000001a980593b16: je     0x000001a980593b3a
  0x000001a980593b1c: cmp    $0x18,%edi
  0x000001a980593b1f: jne    0x000001a980593bc2
  0x000001a980593b25: push   %rsi
  0x000001a980593b26: push   %r8
  0x000001a980593b28: callq  0x000001a9800ef180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a980593b2d: pop    %rsi
  0x000001a980593b2e: pop    %r8
  0x000001a980593b30: cmp    $0x0,%r8d
  0x000001a980593b34: je     0x000001a980593bc2
  0x000001a980593b3a: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593b44: mov    0x8(%rax),%r8d
  0x000001a980593b48: shl    $0x3,%r8
  0x000001a980593b4c: cmp    0x218(%rsi),%r8
  0x000001a980593b53: jne    0x000001a980593b62
  0x000001a980593b55: addq   $0x1,0x220(%rsi)
  0x000001a980593b5d: jmpq   0x000001a980593bd9
  0x000001a980593b62: cmp    0x228(%rsi),%r8
  0x000001a980593b69: jne    0x000001a980593b78
  0x000001a980593b6b: addq   $0x1,0x230(%rsi)
  0x000001a980593b73: jmpq   0x000001a980593bd9
  0x000001a980593b78: cmpq   $0x0,0x218(%rsi)
  0x000001a980593b83: jne    0x000001a980593b9c
  0x000001a980593b85: mov    %r8,0x218(%rsi)
  0x000001a980593b8c: movq   $0x1,0x220(%rsi)
  0x000001a980593b97: jmpq   0x000001a980593bd9
  0x000001a980593b9c: cmpq   $0x0,0x228(%rsi)
  0x000001a980593ba7: jne    0x000001a980593bc0
  0x000001a980593ba9: mov    %r8,0x228(%rsi)
  0x000001a980593bb0: movq   $0x1,0x230(%rsi)
  0x000001a980593bbb: jmpq   0x000001a980593bd9
  0x000001a980593bc0: jmp    0x000001a980593bd9
  0x000001a980593bc2: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593bcc: subq   $0x1,0x208(%rsi)
  0x000001a980593bd4: jmpq   0x000001a980594832
  0x000001a980593bd9: movsbl 0x398(%r15),%r8d
  0x000001a980593be1: cmp    $0x0,%r8d
  0x000001a980593be5: jne    0x000001a98059483b
  0x000001a980593beb: mov    %rax,%r10
  0x000001a980593bee: shr    $0x3,%r10
  0x000001a980593bf2: mov    %r10d,(%rdx)
  0x000001a980593bf5: mov    %rdx,%r8
  0x000001a980593bf8: xor    %rax,%r8
  0x000001a980593bfb: shr    $0x14,%r8
  0x000001a980593bff: cmp    $0x0,%r8
  0x000001a980593c03: jne    0x000001a98059485a  ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59

  0x000001a980593c09: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593c13: incl   0x240(%r8)
  0x000001a980593c1a: jmpq   0x000001a980594520  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@60

  0x000001a980593c1f: mov    0xc(%rsi),%r8d     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ; implicit exception: dispatches to 0x000001a980594872
  0x000001a980593c23: cmp    0x40(%rsp),%r8d
  0x000001a980593c28: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593c32: movabs $0x268,%rdx
  0x000001a980593c3c: je     0x000001a980593c4c
  0x000001a980593c42: movabs $0x258,%rdx
  0x000001a980593c4c: mov    (%r8,%rdx,1),%rdi
  0x000001a980593c50: lea    0x1(%rdi),%rdi
  0x000001a980593c54: mov    %rdi,(%r8,%rdx,1)
  0x000001a980593c58: je     0x000001a980593c68  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@69

  0x000001a980593c5e: mov    %rbx,0x68(%rsp)
  0x000001a980593c63: jmpq   0x000001a980593de2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x000001a980593c68: mov    0x50(%rsp),%r9
  0x000001a980593c6d: mov    0x10(%rsi),%r8d
  0x000001a980593c71: shl    $0x3,%r8           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@74

  0x000001a980593c75: cmp    %r9,%r8
  0x000001a980593c78: movabs $0x1a9ff7f8b90,%rdx  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593c82: movabs $0x278,%rdi
  0x000001a980593c8c: je     0x000001a980593c9c
  0x000001a980593c92: movabs $0x288,%rdi
  0x000001a980593c9c: mov    (%rdx,%rdi,1),%rax
  0x000001a980593ca0: lea    0x1(%rax),%rax
  0x000001a980593ca4: mov    %rax,(%rdx,%rdi,1)
  0x000001a980593ca8: je     0x000001a9805944d2  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@81

  0x000001a980593cae: cmp    $0x0,%r9
  0x000001a980593cb2: movabs $0x1a9ff7f8b90,%rdx  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593cbc: movabs $0x2a8,%rdi
  0x000001a980593cc6: jne    0x000001a980593cd6
  0x000001a980593ccc: movabs $0x298,%rdi
  0x000001a980593cd6: mov    (%rdx,%rdi,1),%rax
  0x000001a980593cda: lea    0x1(%rax),%rax
  0x000001a980593cde: mov    %rax,(%rdx,%rdi,1)
  0x000001a980593ce2: jne    0x000001a980593cf2  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@85

  0x000001a980593ce8: mov    %rbx,0x68(%rsp)
  0x000001a980593ced: jmpq   0x000001a980593de2  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@104

  0x000001a980593cf2: mov    %rsi,0x70(%rsp)
  0x000001a980593cf7: mov    %rbx,0x68(%rsp)
  0x000001a980593cfc: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a980594877
  0x000001a980593cff: mov    %r9,%rdx
  0x000001a980593d02: movabs $0x1a9ff7f8b90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593d0c: mov    0x8(%rdx),%edx
  0x000001a980593d0f: shl    $0x3,%rdx
  0x000001a980593d13: cmp    0x2c8(%rdi),%rdx
  0x000001a980593d1a: jne    0x000001a980593d29
  0x000001a980593d1c: addq   $0x1,0x2d0(%rdi)
  0x000001a980593d24: jmpq   0x000001a980593d8f
  0x000001a980593d29: cmp    0x2d8(%rdi),%rdx
  0x000001a980593d30: jne    0x000001a980593d3f
  0x000001a980593d32: addq   $0x1,0x2e0(%rdi)
  0x000001a980593d3a: jmpq   0x000001a980593d8f
  0x000001a980593d3f: cmpq   $0x0,0x2c8(%rdi)
  0x000001a980593d4a: jne    0x000001a980593d63
  0x000001a980593d4c: mov    %rdx,0x2c8(%rdi)
  0x000001a980593d53: movq   $0x1,0x2d0(%rdi)
  0x000001a980593d5e: jmpq   0x000001a980593d8f
  0x000001a980593d63: cmpq   $0x0,0x2d8(%rdi)
  0x000001a980593d6e: jne    0x000001a980593d87
  0x000001a980593d70: mov    %rdx,0x2d8(%rdi)
  0x000001a980593d77: movq   $0x1,0x2e0(%rdi)
  0x000001a980593d82: jmpq   0x000001a980593d8f
  0x000001a980593d87: addq   $0x1,0x2b8(%rdi)
  0x000001a980593d8f: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91

  0x000001a980593d92: data16 xchg %ax,%ax
  0x000001a980593d95: movabs $0xffffffffffffffff,%rax
  0x000001a980593d9f: callq  0x000001a980027280  ; ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {virtual_call}
  0x000001a980593da4: cmp    $0x0,%eax
  0x000001a980593da7: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593db1: movabs $0x300,%r9
  0x000001a980593dbb: jne    0x000001a980593dcb
  0x000001a980593dc1: movabs $0x2f0,%r9
  0x000001a980593dcb: mov    (%r8,%r9,1),%rdi
  0x000001a980593dcf: lea    0x1(%rdi),%rdi
  0x000001a980593dd3: mov    %rdi,(%r8,%r9,1)
  0x000001a980593dd7: mov    0x70(%rsp),%rsi
  0x000001a980593ddc: jne    0x000001a9805944d2  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@94

  0x000001a980593de2: cmp    $0x0,%rsi
  0x000001a980593de6: jne    0x000001a980593e01
  0x000001a980593de8: movabs $0x1a9ff7f8b90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593df2: orl    $0x100,0x320(%rdi)
  0x000001a980593dfc: jmpq   0x000001a980593ec2
  0x000001a980593e01: movabs $0x7c0037bc8,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000001a980593e0b: mov    0x8(%rsi),%r9d
  0x000001a980593e0f: shl    $0x3,%r9
  0x000001a980593e13: cmp    %r9,%rcx
  0x000001a980593e16: jne    0x000001a980593ea6
  0x000001a980593e1c: movabs $0x1a9ff7f8b90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593e26: mov    0x8(%rsi),%ecx
  0x000001a980593e29: shl    $0x3,%rcx
  0x000001a980593e2d: cmp    0x338(%rdi),%rcx
  0x000001a980593e34: jne    0x000001a980593e43
  0x000001a980593e36: addq   $0x1,0x340(%rdi)
  0x000001a980593e3e: jmpq   0x000001a980593ec7
  0x000001a980593e43: cmp    0x348(%rdi),%rcx
  0x000001a980593e4a: jne    0x000001a980593e59
  0x000001a980593e4c: addq   $0x1,0x350(%rdi)
  0x000001a980593e54: jmpq   0x000001a980593ec7
  0x000001a980593e59: cmpq   $0x0,0x338(%rdi)
  0x000001a980593e64: jne    0x000001a980593e7d
  0x000001a980593e66: mov    %rcx,0x338(%rdi)
  0x000001a980593e6d: movq   $0x1,0x340(%rdi)
  0x000001a980593e78: jmpq   0x000001a980593ec7
  0x000001a980593e7d: cmpq   $0x0,0x348(%rdi)
  0x000001a980593e88: jne    0x000001a980593ea1
  0x000001a980593e8a: mov    %rcx,0x348(%rdi)
  0x000001a980593e91: movq   $0x1,0x350(%rdi)
  0x000001a980593e9c: jmpq   0x000001a980593ec7
  0x000001a980593ea1: jmpq   0x000001a980593ec7
  0x000001a980593ea6: movabs $0x1a9ff7f8b90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593eb0: subq   $0x1,0x328(%rdi)
  0x000001a980593eb8: jmpq   0x000001a980593ec2
  0x000001a980593ebd: jmpq   0x000001a980593ec7
  0x000001a980593ec2: xor    %r8,%r8
  0x000001a980593ec5: jmp    0x000001a980593ed1
  0x000001a980593ec7: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@106

  0x000001a980593ed1: cmp    $0x0,%r8d
  0x000001a980593ed5: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593edf: movabs $0x360,%r9
  0x000001a980593ee9: je     0x000001a980593ef9
  0x000001a980593eef: movabs $0x370,%r9
  0x000001a980593ef9: mov    (%r8,%r9,1),%rdi
  0x000001a980593efd: lea    0x1(%rdi),%rdi
  0x000001a980593f01: mov    %rdi,(%r8,%r9,1)
  0x000001a980593f05: je     0x000001a9805940ba  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@109

  0x000001a980593f0b: cmp    $0x0,%rsi
  0x000001a980593f0f: jne    0x000001a980593f2b
  0x000001a980593f11: movabs $0x1a9ff7f8b90,%r9  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593f1b: orl    $0x100,0x378(%r9)
  0x000001a980593f26: jmpq   0x000001a980593fec
  0x000001a980593f2b: movabs $0x7c0037bc8,%rdi  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000001a980593f35: mov    0x8(%rsi),%r8d
  0x000001a980593f39: shl    $0x3,%r8
  0x000001a980593f3d: cmp    %r8,%rdi
  0x000001a980593f40: jne    0x000001a980593fd0
  0x000001a980593f46: movabs $0x1a9ff7f8b90,%r9  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593f50: mov    0x8(%rsi),%edi
  0x000001a980593f53: shl    $0x3,%rdi
  0x000001a980593f57: cmp    0x390(%r9),%rdi
  0x000001a980593f5e: jne    0x000001a980593f6d
  0x000001a980593f60: addq   $0x1,0x398(%r9)
  0x000001a980593f68: jmpq   0x000001a980593fec
  0x000001a980593f6d: cmp    0x3a0(%r9),%rdi
  0x000001a980593f74: jne    0x000001a980593f83
  0x000001a980593f76: addq   $0x1,0x3a8(%r9)
  0x000001a980593f7e: jmpq   0x000001a980593fec
  0x000001a980593f83: cmpq   $0x0,0x390(%r9)
  0x000001a980593f8e: jne    0x000001a980593fa7
  0x000001a980593f90: mov    %rdi,0x390(%r9)
  0x000001a980593f97: movq   $0x1,0x398(%r9)
  0x000001a980593fa2: jmpq   0x000001a980593fec
  0x000001a980593fa7: cmpq   $0x0,0x3a0(%r9)
  0x000001a980593fb2: jne    0x000001a980593fcb
  0x000001a980593fb4: mov    %rdi,0x3a0(%r9)
  0x000001a980593fbb: movq   $0x1,0x3a8(%r9)
  0x000001a980593fc6: jmpq   0x000001a980593fec
  0x000001a980593fcb: jmpq   0x000001a980593fec
  0x000001a980593fd0: movabs $0x1a9ff7f8b90,%r9  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593fda: subq   $0x1,0x380(%r9)
  0x000001a980593fe2: jmpq   0x000001a98059487c
  0x000001a980593fe7: jmpq   0x000001a980593fec
  0x000001a980593fec: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114

  0x000001a980593fef: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000001a980594885
  0x000001a980593ff2: mov    %rdx,%r8
  0x000001a980593ff5: movabs $0x1a9ff7f8b90,%r9  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980593fff: mov    0x8(%r8),%r8d
  0x000001a980594003: shl    $0x3,%r8
  0x000001a980594007: cmp    0x3c8(%r9),%r8
  0x000001a98059400e: jne    0x000001a98059401d
  0x000001a980594010: addq   $0x1,0x3d0(%r9)
  0x000001a980594018: jmpq   0x000001a980594083
  0x000001a98059401d: cmp    0x3d8(%r9),%r8
  0x000001a980594024: jne    0x000001a980594033
  0x000001a980594026: addq   $0x1,0x3e0(%r9)
  0x000001a98059402e: jmpq   0x000001a980594083
  0x000001a980594033: cmpq   $0x0,0x3c8(%r9)
  0x000001a98059403e: jne    0x000001a980594057
  0x000001a980594040: mov    %r8,0x3c8(%r9)
  0x000001a980594047: movq   $0x1,0x3d0(%r9)
  0x000001a980594052: jmpq   0x000001a980594083
  0x000001a980594057: cmpq   $0x0,0x3d8(%r9)
  0x000001a980594062: jne    0x000001a98059407b
  0x000001a980594064: mov    %r8,0x3d8(%r9)
  0x000001a98059406b: movq   $0x1,0x3e0(%r9)
  0x000001a980594076: jmpq   0x000001a980594083
  0x000001a98059407b: addq   $0x1,0x3b8(%r9)
  0x000001a980594083: mov    0x48(%rsp),%r8
  0x000001a980594088: mov    0x68(%rsp),%r9
  0x000001a98059408d: mov    0x40(%rsp),%edi
  0x000001a980594091: mov    0x50(%rsp),%rsi
  0x000001a980594096: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123

  0x000001a98059409b: nopl   0x0(%rax)
  0x000001a98059409f: callq  0x000001a980027000  ; ImmutableOopMap{[72]=Oop [88]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {optimized virtual_call}
  0x000001a9805940a4: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805940ae: incl   0x3f0(%r8)
  0x000001a9805940b5: jmpq   0x000001a9805944e6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@128

  0x000001a9805940ba: mov    $0x0,%edi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@134

  0x000001a9805940bf: nop
  0x000001a9805940c0: mov    %edi,0x78(%rsp)
  0x000001a9805940c4: mov    0x50(%rsp),%r9
  0x000001a9805940c9: mov    0x40(%rsp),%r8d
  0x000001a9805940ce: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x000001a98059488a
  0x000001a9805940d1: shl    $0x3,%rbx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136

  0x000001a9805940d5: mov    %rbx,0x80(%rsp)
  0x000001a9805940dd: cmp    $0x0,%rbx
  0x000001a9805940e1: movabs $0x1a9ff7f8b90,%rdx  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805940eb: movabs $0x418,%rax
  0x000001a9805940f5: je     0x000001a980594105
  0x000001a9805940fb: movabs $0x408,%rax
  0x000001a980594105: mov    (%rdx,%rax,1),%rcx
  0x000001a980594109: lea    0x1(%rcx),%rcx
  0x000001a98059410d: mov    %rcx,(%rdx,%rax,1)
  0x000001a980594111: je     0x000001a980594338  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@142

  0x000001a980594117: mov    0xc(%rbx),%edx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ; implicit exception: dispatches to 0x000001a98059488f
  0x000001a98059411a: cmp    %r8d,%edx
  0x000001a98059411d: movabs $0x1a9ff7f8b90,%rdx  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594127: movabs $0x4d0,%rsi
  0x000001a980594131: jne    0x000001a980594141
  0x000001a980594137: movabs $0x4e0,%rsi
  0x000001a980594141: mov    (%rdx,%rsi,1),%rax
  0x000001a980594145: lea    0x1(%rax),%rax
  0x000001a980594149: mov    %rax,(%rdx,%rsi,1)
  0x000001a98059414d: jne    0x000001a9805942b5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@181

  0x000001a980594153: mov    0x10(%rbx),%edx
  0x000001a980594156: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@186

  0x000001a98059415a: cmp    %r9,%rdx
  0x000001a98059415d: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594167: movabs $0x4f0,%rax
  0x000001a980594171: je     0x000001a980594181
  0x000001a980594177: movabs $0x500,%rax
  0x000001a980594181: mov    (%rsi,%rax,1),%rcx
  0x000001a980594185: lea    0x1(%rcx),%rcx
  0x000001a980594189: mov    %rcx,(%rsi,%rax,1)
  0x000001a98059418d: je     0x000001a98059430d  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@193

  0x000001a980594193: cmp    $0x0,%r9
  0x000001a980594197: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805941a1: movabs $0x510,%rax
  0x000001a9805941ab: je     0x000001a9805941bb
  0x000001a9805941b1: movabs $0x520,%rax
  0x000001a9805941bb: mov    (%rsi,%rax,1),%rcx
  0x000001a9805941bf: lea    0x1(%rcx),%rcx
  0x000001a9805941c3: mov    %rcx,(%rsi,%rax,1)
  0x000001a9805941c7: je     0x000001a9805942b5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@197

  0x000001a9805941cd: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x000001a980594894
  0x000001a9805941d0: mov    %r9,%rsi
  0x000001a9805941d3: movabs $0x1a9ff7f8b90,%rax  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805941dd: mov    0x8(%rsi),%esi
  0x000001a9805941e0: shl    $0x3,%rsi
  0x000001a9805941e4: cmp    0x540(%rax),%rsi
  0x000001a9805941eb: jne    0x000001a9805941fa
  0x000001a9805941ed: addq   $0x1,0x548(%rax)
  0x000001a9805941f5: jmpq   0x000001a980594260
  0x000001a9805941fa: cmp    0x550(%rax),%rsi
  0x000001a980594201: jne    0x000001a980594210
  0x000001a980594203: addq   $0x1,0x558(%rax)
  0x000001a98059420b: jmpq   0x000001a980594260
  0x000001a980594210: cmpq   $0x0,0x540(%rax)
  0x000001a98059421b: jne    0x000001a980594234
  0x000001a98059421d: mov    %rsi,0x540(%rax)
  0x000001a980594224: movq   $0x1,0x548(%rax)
  0x000001a98059422f: jmpq   0x000001a980594260
  0x000001a980594234: cmpq   $0x0,0x550(%rax)
  0x000001a98059423f: jne    0x000001a980594258
  0x000001a980594241: mov    %rsi,0x550(%rax)
  0x000001a980594248: movq   $0x1,0x558(%rax)
  0x000001a980594253: jmpq   0x000001a980594260
  0x000001a980594258: addq   $0x1,0x530(%rax)
  0x000001a980594260: mov    %rdx,%r8
  0x000001a980594263: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203

  0x000001a980594266: nopl   0x0(%rax)
  0x000001a98059426d: movabs $0xffffffffffffffff,%rax
  0x000001a980594277: callq  0x000001a980027280  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {virtual_call}
  0x000001a98059427c: cmp    $0x0,%eax
  0x000001a98059427f: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594289: movabs $0x578,%r9
  0x000001a980594293: jne    0x000001a9805942a3
  0x000001a980594299: movabs $0x568,%r9
  0x000001a9805942a3: mov    (%r8,%r9,1),%rdi
  0x000001a9805942a7: lea    0x1(%rdi),%rdi
  0x000001a9805942ab: mov    %rdi,(%r8,%r9,1)
  0x000001a9805942af: jne    0x000001a98059431a  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@206

  0x000001a9805942b5: mov    0x78(%rsp),%edi
  0x000001a9805942b9: inc    %edi
  0x000001a9805942bb: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805942c5: mov    0x100(%r8),%r9d
  0x000001a9805942cc: add    $0x8,%r9d
  0x000001a9805942d0: mov    %r9d,0x100(%r8)
  0x000001a9805942d7: and    $0xfff8,%r9d
  0x000001a9805942de: cmp    $0x0,%r9d
  0x000001a9805942e2: je     0x000001a980594899  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a9805942e8: mov    0x70(%r15),%r10    ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a9805942ec: test   %eax,(%r10)        ;   {poll}
  0x000001a9805942ef: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805942f9: incl   0x5a0(%r8)
  0x000001a980594300: mov    0x80(%rsp),%rsi
  0x000001a980594308: jmpq   0x000001a9805940c0  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219

  0x000001a98059430d: mov    0x80(%rsp),%rax
  0x000001a980594315: jmpq   0x000001a9805944e6  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x000001a98059431a: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594324: incl   0x588(%r8)
  0x000001a98059432b: mov    0x80(%rsp),%rax
  0x000001a980594333: jmpq   0x000001a9805944e6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@209

  0x000001a980594338: mov    %rsi,0x88(%rsp)
  0x000001a980594340: mov    0x48(%rsp),%rdx
  0x000001a980594345: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a98059434f: mov    0x8(%rdx),%edx
  0x000001a980594352: shl    $0x3,%rdx
  0x000001a980594356: cmp    0x438(%r8),%rdx
  0x000001a98059435d: jne    0x000001a98059436c
  0x000001a98059435f: addq   $0x1,0x440(%r8)
  0x000001a980594367: jmpq   0x000001a9805943d2
  0x000001a98059436c: cmp    0x448(%r8),%rdx
  0x000001a980594373: jne    0x000001a980594382
  0x000001a980594375: addq   $0x1,0x450(%r8)
  0x000001a98059437d: jmpq   0x000001a9805943d2
  0x000001a980594382: cmpq   $0x0,0x438(%r8)
  0x000001a98059438d: jne    0x000001a9805943a6
  0x000001a98059438f: mov    %rdx,0x438(%r8)
  0x000001a980594396: movq   $0x1,0x440(%r8)
  0x000001a9805943a1: jmpq   0x000001a9805943d2
  0x000001a9805943a6: cmpq   $0x0,0x448(%r8)
  0x000001a9805943b1: jne    0x000001a9805943ca
  0x000001a9805943b3: mov    %rdx,0x448(%r8)
  0x000001a9805943ba: movq   $0x1,0x450(%r8)
  0x000001a9805943c5: jmpq   0x000001a9805943d2
  0x000001a9805943ca: addq   $0x1,0x428(%r8)
  0x000001a9805943d2: mov    0x40(%rsp),%r8d
  0x000001a9805943d7: mov    0x58(%rsp),%rdi
  0x000001a9805943dc: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a9805943e6: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152

  0x000001a9805943eb: xchg   %ax,%ax
  0x000001a9805943ed: movabs $0xffffffffffffffff,%rax
  0x000001a9805943f7: callq  0x000001a980027280  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }
                                                ;*invokevirtual newNode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@152
                                                ;   {virtual_call}
  0x000001a9805943fc: movsbl 0x398(%r15),%r8d
  0x000001a980594404: cmp    $0x0,%r8d
  0x000001a980594408: mov    0x88(%rsp),%rsi
  0x000001a980594410: jne    0x000001a9805948ba
  0x000001a980594416: mov    %rax,%r10
  0x000001a980594419: shr    $0x3,%r10
  0x000001a98059441d: mov    %r10d,0x18(%rsi)
  0x000001a980594421: mov    %rsi,%r8
  0x000001a980594424: xor    %rax,%r8
  0x000001a980594427: shr    $0x14,%r8
  0x000001a98059442b: cmp    $0x0,%r8
  0x000001a98059442f: jne    0x000001a9805948da  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@155

  0x000001a980594435: mov    0x78(%rsp),%edi
  0x000001a980594439: cmp    $0x7,%edi
  0x000001a98059443c: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594446: movabs $0x470,%r9
  0x000001a980594450: jge    0x000001a980594460
  0x000001a980594456: movabs $0x460,%r9
  0x000001a980594460: mov    (%r8,%r9,1),%rdx
  0x000001a980594464: lea    0x1(%rdx),%rdx
  0x000001a980594468: mov    %rdx,(%r8,%r9,1)
  0x000001a98059446c: jge    0x000001a98059447f  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@162

  0x000001a980594472: mov    0x80(%rsp),%rax
  0x000001a98059447a: jmpq   0x000001a9805944e6  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@222

  0x000001a98059447f: mov    0x68(%rsp),%rbx
  0x000001a980594484: mov    0x40(%rsp),%r9d
  0x000001a980594489: mov    0x48(%rsp),%rdx
  0x000001a98059448e: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594498: addq   $0x1,0x480(%r8)
  0x000001a9805944a0: mov    %rbx,%r8
  0x000001a9805944a3: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169

  0x000001a9805944a8: nopl   0x0(%rax)
  0x000001a9805944af: callq  0x000001a980027000  ; ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }
                                                ;*invokevirtual treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@169
                                                ;   {optimized virtual_call}
  0x000001a9805944b4: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805944be: incl   0x4b8(%r8)
  0x000001a9805944c5: mov    0x80(%rsp),%rax
  0x000001a9805944cd: jmpq   0x000001a9805944e6  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@172

  0x000001a9805944d2: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805944dc: incl   0x310(%r8)
  0x000001a9805944e3: mov    %rsi,%rax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@101

  0x000001a9805944e6: cmp    $0x0,%rax
  0x000001a9805944ea: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805944f4: movabs $0x5c8,%rdx
  0x000001a9805944fe: jne    0x000001a98059450e
  0x000001a980594504: movabs $0x5b8,%rdx
  0x000001a98059450e: mov    (%r8,%rdx,1),%rsi
  0x000001a980594512: lea    0x1(%rsi),%rsi
  0x000001a980594516: mov    %rsi,(%r8,%rdx,1)
  0x000001a98059451a: jne    0x000001a980594580  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@224

  0x000001a980594520: mov    0x48(%rsp),%rdx
  0x000001a980594525: mov    0x18(%rdx),%r8d    ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@261

  0x000001a980594529: inc    %r8d
  0x000001a98059452c: mov    %r8d,0x18(%rdx)    ;*putfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@266

  0x000001a980594530: mov    0x14(%rdx),%r8d    ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@271

  0x000001a980594534: inc    %r8d
  0x000001a980594537: mov    %r8d,0x14(%rdx)    ;*putfield size {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@277

  0x000001a98059453b: mov    0x1c(%rdx),%esi    ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@281

  0x000001a98059453e: cmp    %esi,%r8d
  0x000001a980594541: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a98059454b: movabs $0x660,%rsi
  0x000001a980594555: jg     0x000001a980594565
  0x000001a98059455b: movabs $0x650,%rsi
  0x000001a980594565: mov    (%r8,%rsi,1),%rdi
  0x000001a980594569: lea    0x1(%rdi),%rdi
  0x000001a98059456d: mov    %rdi,(%r8,%rsi,1)
  0x000001a980594571: jg     0x000001a9805946fc  ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@284

  0x000001a980594577: mov    0x60(%rsp),%ecx
  0x000001a98059457b: jmpq   0x000001a980594725  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@292

  0x000001a980594580: mov    0x44(%rsp),%esi
  0x000001a980594584: mov    0x48(%rsp),%rdx
  0x000001a980594589: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000001a9805948f2
  0x000001a98059458c: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229

  0x000001a980594590: cmp    $0x0,%esi
  0x000001a980594593: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a98059459d: movabs $0x5d8,%rsi
  0x000001a9805945a7: je     0x000001a9805945b7
  0x000001a9805945ad: movabs $0x5e8,%rsi
  0x000001a9805945b7: mov    (%r8,%rsi,1),%rbx
  0x000001a9805945bb: lea    0x1(%rbx),%rbx
  0x000001a9805945bf: mov    %rbx,(%r8,%rsi,1)
  0x000001a9805945c3: je     0x000001a980594603  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@236

  0x000001a9805945c9: cmp    $0x0,%rdi
  0x000001a9805945cd: movabs $0x1a9ff7f8b90,%r8  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805945d7: movabs $0x5f8,%rsi
  0x000001a9805945e1: jne    0x000001a9805945f1
  0x000001a9805945e7: movabs $0x608,%rsi
  0x000001a9805945f1: mov    (%r8,%rsi,1),%rbx
  0x000001a9805945f5: lea    0x1(%rbx),%rbx
  0x000001a9805945f9: mov    %rbx,(%r8,%rsi,1)
  0x000001a9805945fd: jne    0x000001a980594638  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@241

  0x000001a980594603: mov    0x58(%rsp),%r8
  0x000001a980594608: movsbl 0x398(%r15),%esi
  0x000001a980594610: cmp    $0x0,%esi
  0x000001a980594613: jne    0x000001a9805948f7
  0x000001a980594619: mov    %r8,%r10
  0x000001a98059461c: shr    $0x3,%r10
  0x000001a980594620: mov    %r10d,0x14(%rax)
  0x000001a980594624: mov    %rax,%rsi
  0x000001a980594627: xor    %r8,%rsi
  0x000001a98059462a: shr    $0x14,%rsi
  0x000001a98059462e: cmp    $0x0,%rsi
  0x000001a980594632: jne    0x000001a980594916  ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@247

  0x000001a980594638: mov    %rdi,0x90(%rsp)
  0x000001a980594640: mov    %rdx,%r8
  0x000001a980594643: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a98059464d: mov    0x8(%r8),%r8d
  0x000001a980594651: shl    $0x3,%r8
  0x000001a980594655: cmp    0x628(%rsi),%r8
  0x000001a98059465c: jne    0x000001a98059466b
  0x000001a98059465e: addq   $0x1,0x630(%rsi)
  0x000001a980594666: jmpq   0x000001a9805946d1
  0x000001a98059466b: cmp    0x638(%rsi),%r8
  0x000001a980594672: jne    0x000001a980594681
  0x000001a980594674: addq   $0x1,0x640(%rsi)
  0x000001a98059467c: jmpq   0x000001a9805946d1
  0x000001a980594681: cmpq   $0x0,0x628(%rsi)
  0x000001a98059468c: jne    0x000001a9805946a5
  0x000001a98059468e: mov    %r8,0x628(%rsi)
  0x000001a980594695: movq   $0x1,0x630(%rsi)
  0x000001a9805946a0: jmpq   0x000001a9805946d1
  0x000001a9805946a5: cmpq   $0x0,0x638(%rsi)
  0x000001a9805946b0: jne    0x000001a9805946c9
  0x000001a9805946b2: mov    %r8,0x638(%rsi)
  0x000001a9805946b9: movq   $0x1,0x640(%rsi)
  0x000001a9805946c4: jmpq   0x000001a9805946d1
  0x000001a9805946c9: addq   $0x1,0x618(%rsi)
  0x000001a9805946d1: mov    %rax,%r8           ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253

  0x000001a9805946d4: nop
  0x000001a9805946d5: movabs $0xffffffffffffffff,%rax
  0x000001a9805946df: callq  0x000001a980027280  ; ImmutableOopMap{[144]=Oop }
                                                ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@253
                                                ;   {virtual_call}
  0x000001a9805946e4: mov    0x90(%rsp),%rax
  0x000001a9805946ec: add    $0xa0,%rsp
  0x000001a9805946f3: pop    %rbp
  0x000001a9805946f4: mov    0x70(%r15),%r10
  0x000001a9805946f8: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805946fb: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@258

  0x000001a9805946fc: mov    %rdx,%rsi
  0x000001a9805946ff: movabs $0x1a9ff7f8b90,%rdi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594709: addq   $0x1,0x670(%rdi)
  0x000001a980594711: mov    %rdx,%rsi
  0x000001a980594714: mov    %rsi,%rdx          ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288

  0x000001a980594717: callq  0x000001a980027000  ; ImmutableOopMap{[72]=Oop }
                                                ;*invokevirtual resize {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@288
                                                ;   {optimized virtual_call}
  0x000001a98059471c: mov    0x60(%rsp),%ecx
  0x000001a980594720: mov    0x48(%rsp),%rdx
  0x000001a980594725: mov    %rdx,%r8
  0x000001a980594728: movabs $0x1a9ff7f8b90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a980594732: mov    0x8(%r8),%r8d
  0x000001a980594736: shl    $0x3,%r8
  0x000001a98059473a: cmp    0x6b8(%rsi),%r8
  0x000001a980594741: jne    0x000001a980594750
  0x000001a980594743: addq   $0x1,0x6c0(%rsi)
  0x000001a98059474b: jmpq   0x000001a9805947b6
  0x000001a980594750: cmp    0x6c8(%rsi),%r8
  0x000001a980594757: jne    0x000001a980594766
  0x000001a980594759: addq   $0x1,0x6d0(%rsi)
  0x000001a980594761: jmpq   0x000001a9805947b6
  0x000001a980594766: cmpq   $0x0,0x6b8(%rsi)
  0x000001a980594771: jne    0x000001a98059478a
  0x000001a980594773: mov    %r8,0x6b8(%rsi)
  0x000001a98059477a: movq   $0x1,0x6c0(%rsi)
  0x000001a980594785: jmpq   0x000001a9805947b6
  0x000001a98059478a: cmpq   $0x0,0x6c8(%rsi)
  0x000001a980594795: jne    0x000001a9805947ae
  0x000001a980594797: mov    %r8,0x6c8(%rsi)
  0x000001a98059479e: movq   $0x1,0x6d0(%rsi)
  0x000001a9805947a9: jmpq   0x000001a9805947b6
  0x000001a9805947ae: addq   $0x1,0x6a8(%rsi)
  0x000001a9805947b6: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295

  0x000001a9805947b9: nopl   0x0(%rax)
  0x000001a9805947bd: movabs $0xffffffffffffffff,%rax
  0x000001a9805947c7: callq  0x000001a980028c60  ; ImmutableOopMap{}
                                                ;*invokevirtual afterNodeInsertion {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@295
                                                ;   {virtual_call}
  0x000001a9805947cc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a9805947d6: add    $0xa0,%rsp
  0x000001a9805947dd: pop    %rbp
  0x000001a9805947de: mov    0x70(%r15),%r10
  0x000001a9805947e2: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805947e5: retq   
  0x000001a9805947e6: movabs $0x1a9ff689a70,%r10  ;   {metadata({method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805947f0: mov    %r10,0x8(%rsp)
  0x000001a9805947f5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805947fd: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980594802: jmpq   0x000001a9805938c6
  0x000001a980594807: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@12
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059480c: callq  0x000001a9800ecba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@26
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594811: callq  0x000001a9800ecba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594816: callq  0x000001a9800ecba0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059481b: mov    %rax,(%rsp)
  0x000001a98059481f: callq  0x000001a98005eda0  ; ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@40
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a980594824: mov    %r8,(%rsp)
  0x000001a980594828: callq  0x000001a98005eda0  ; ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a98059482d: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594832: mov    %rax,(%rsp)
  0x000001a980594836: callq  0x000001a9800eea20  ; ImmutableOopMap{[72]=Oop rax=Oop }
                                                ;*aastore {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@59
                                                ;   {runtime_call throw_array_store_exception Runtime1 stub}
  0x000001a98059483b: mov    (%rdx),%r8d
  0x000001a98059483e: shl    $0x3,%r8
  0x000001a980594842: cmp    $0x0,%r8
  0x000001a980594846: je     0x000001a980593beb
  0x000001a98059484c: mov    %r8,(%rsp)
  0x000001a980594850: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980594855: jmpq   0x000001a980593beb
  0x000001a98059485a: cmp    $0x0,%rax
  0x000001a98059485e: je     0x000001a980593c09
  0x000001a980594864: mov    %rdx,(%rsp)
  0x000001a980594868: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a98059486d: jmpq   0x000001a980593c09
  0x000001a980594872: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@65
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594877: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@91
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059487c: mov    %rsi,(%rsp)
  0x000001a980594880: callq  0x000001a9800eeca0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@114
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a980594885: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@123
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059488a: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }
                                                ;*getfield next {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@136
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059488f: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@177
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594894: callq  0x000001a9800ecba0  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@203
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980594899: movabs $0x1a9ff689a70,%r10  ;   {metadata({method} {0x000001a9ff689a78} 'putVal' '(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000001a9805948a3: mov    %r10,0x8(%rsp)
  0x000001a9805948a8: movq   $0xdb,(%rsp)
  0x000001a9805948b0: callq  0x000001a9800f1a80  ; ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@219
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805948b5: jmpq   0x000001a9805942e8
  0x000001a9805948ba: mov    0x18(%rsi),%r8d
  0x000001a9805948be: shl    $0x3,%r8
  0x000001a9805948c2: cmp    $0x0,%r8
  0x000001a9805948c6: je     0x000001a980594416
  0x000001a9805948cc: mov    %r8,(%rsp)
  0x000001a9805948d0: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a9805948d5: jmpq   0x000001a980594416
  0x000001a9805948da: cmp    $0x0,%rax
  0x000001a9805948de: je     0x000001a980594435
  0x000001a9805948e4: mov    %rsi,(%rsp)
  0x000001a9805948e8: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a9805948ed: jmpq   0x000001a980594435
  0x000001a9805948f2: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }
                                                ;*getfield value {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.HashMap::putVal@229
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a9805948f7: mov    0x14(%rax),%esi
  0x000001a9805948fa: shl    $0x3,%rsi
  0x000001a9805948fe: cmp    $0x0,%rsi
  0x000001a980594902: je     0x000001a980594619
  0x000001a980594908: mov    %rsi,(%rsp)
  0x000001a98059490c: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980594911: jmpq   0x000001a980594619
  0x000001a980594916: cmp    $0x0,%r8
  0x000001a98059491a: je     0x000001a980594638
  0x000001a980594920: mov    %rax,(%rsp)
  0x000001a980594924: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980594929: jmpq   0x000001a980594638
  0x000001a98059492e: nop
  0x000001a98059492f: nop
  0x000001a980594930: mov    0x350(%r15),%rax
  0x000001a980594937: movabs $0x0,%r10
  0x000001a980594941: mov    %r10,0x350(%r15)
  0x000001a980594948: movabs $0x0,%r10
  0x000001a980594952: mov    %r10,0x358(%r15)
  0x000001a980594959: add    $0xa0,%rsp
  0x000001a980594960: pop    %rbp
  0x000001a980594961: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980594966: hlt    
  0x000001a980594967: hlt    
  0x000001a980594968: hlt    
  0x000001a980594969: hlt    
  0x000001a98059496a: hlt    
  0x000001a98059496b: hlt    
  0x000001a98059496c: hlt    
  0x000001a98059496d: hlt    
  0x000001a98059496e: hlt    
  0x000001a98059496f: hlt    
  0x000001a980594970: hlt    
  0x000001a980594971: hlt    
  0x000001a980594972: hlt    
  0x000001a980594973: hlt    
  0x000001a980594974: hlt    
  0x000001a980594975: hlt    
  0x000001a980594976: hlt    
  0x000001a980594977: hlt    
  0x000001a980594978: hlt    
  0x000001a980594979: hlt    
  0x000001a98059497a: hlt    
  0x000001a98059497b: hlt    
  0x000001a98059497c: hlt    
  0x000001a98059497d: hlt    
  0x000001a98059497e: hlt    
  0x000001a98059497f: hlt    
[Stub Code]
  0x000001a980594980: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a980594985: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059498f: jmpq   0x000001a98059498f  ;   {runtime_call}
  0x000001a980594994: nop
  0x000001a980594995: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059499f: jmpq   0x000001a98059499f  ;   {runtime_call}
  0x000001a9805949a4: nop
  0x000001a9805949a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949af: jmpq   0x000001a9805949af  ;   {runtime_call}
  0x000001a9805949b4: nop
  0x000001a9805949b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949bf: jmpq   0x000001a9805949bf  ;   {runtime_call}
  0x000001a9805949c4: nop
  0x000001a9805949c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949cf: jmpq   0x000001a9805949cf  ;   {runtime_call}
  0x000001a9805949d4: nop
  0x000001a9805949d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949df: jmpq   0x000001a9805949df  ;   {runtime_call}
  0x000001a9805949e4: nop
  0x000001a9805949e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949ef: jmpq   0x000001a9805949ef  ;   {runtime_call}
  0x000001a9805949f4: nop
  0x000001a9805949f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805949ff: jmpq   0x000001a9805949ff  ;   {runtime_call}
  0x000001a980594a04: nop
  0x000001a980594a05: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a980594a0f: jmpq   0x000001a980594a0f  ;   {runtime_call}
  0x000001a980594a14: nop
  0x000001a980594a15: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a980594a1f: jmpq   0x000001a980594a1f  ;   {runtime_call}
[Exception Handler]
  0x000001a980594a24: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a980594a29: mov    %rsp,-0x28(%rsp)
  0x000001a980594a2e: sub    $0x80,%rsp
  0x000001a980594a35: mov    %rax,0x78(%rsp)
  0x000001a980594a3a: mov    %rcx,0x70(%rsp)
  0x000001a980594a3f: mov    %rdx,0x68(%rsp)
  0x000001a980594a44: mov    %rbx,0x60(%rsp)
  0x000001a980594a49: mov    %rbp,0x50(%rsp)
  0x000001a980594a4e: mov    %rsi,0x48(%rsp)
  0x000001a980594a53: mov    %rdi,0x40(%rsp)
  0x000001a980594a58: mov    %r8,0x38(%rsp)
  0x000001a980594a5d: mov    %r9,0x30(%rsp)
  0x000001a980594a62: mov    %r10,0x28(%rsp)
  0x000001a980594a67: mov    %r11,0x20(%rsp)
  0x000001a980594a6c: mov    %r12,0x18(%rsp)
  0x000001a980594a71: mov    %r13,0x10(%rsp)
  0x000001a980594a76: mov    %r14,0x8(%rsp)
  0x000001a980594a7b: mov    %r15,(%rsp)
  0x000001a980594a7f: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980594a89: movabs $0x1a980594a29,%rdx  ;   {internal_word}
  0x000001a980594a93: mov    %rsp,%r8
  0x000001a980594a96: and    $0xfffffffffffffff0,%rsp
  0x000001a980594a9a: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980594aa4: callq  *%r10
  0x000001a980594aa7: hlt    
[Deopt Handler Code]
  0x000001a980594aa8: movabs $0x1a980594aa8,%r10  ;   {section_word}
  0x000001a980594ab2: push   %r10
  0x000001a980594ab4: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980594ab9: hlt    
  0x000001a980594aba: hlt    
  0x000001a980594abb: hlt    
  0x000001a980594abc: hlt    
  0x000001a980594abd: hlt    
  0x000001a980594abe: hlt    
  0x000001a980594abf: hlt    

ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop }pc offsets: 292 
ImmutableOopMap{[72]=Oop [104]=Oop }pc offsets: 596 
ImmutableOopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop }pc offsets: 1348 
ImmutableOopMap{[72]=Oop [88]=Oop }pc offsets: 2116 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 2588 2700 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop }pc offsets: 2972 
ImmutableOopMap{[72]=Oop [88]=Oop [128]=Oop }pc offsets: 3156 
ImmutableOopMap{[144]=Oop }pc offsets: 3716 
ImmutableOopMap{[72]=Oop }pc offsets: 3772 
ImmutableOopMap{}pc offsets: 3948 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop }pc offsets: 4002 
ImmutableOopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop }pc offsets: 4012 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop }pc offsets: 4017 
ImmutableOopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop }pc offsets: 4022 4027 4036 
ImmutableOopMap{[72]=Oop rax=Oop rbx=Oop }pc offsets: 4045 
ImmutableOopMap{[72]=Oop rax=Oop }pc offsets: 4050 4059 
ImmutableOopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop }pc offsets: 4119 
ImmutableOopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop }pc offsets: 4124 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop }pc offsets: 4133 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop }pc offsets: 4138 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop }pc offsets: 4143 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop }pc offsets: 4148 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop }pc offsets: 4153 
ImmutableOopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop }pc offsets: 4181 
ImmutableOopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop }pc offsets: 4247 Compiled method (c2)     122   44       4       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000001a987ac1390,0x000001a987ac1a80] = 1776
 relocation     [0x000001a987ac1508,0x000001a987ac1520] = 24
 main code      [0x000001a987ac1520,0x000001a987ac1720] = 512
 stub code      [0x000001a987ac1720,0x000001a987ac1738] = 24
 metadata       [0x000001a987ac1738,0x000001a987ac1750] = 24
 scopes data    [0x000001a987ac1750,0x000001a987ac1838] = 232
 scopes pcs     [0x000001a987ac1838,0x000001a987ac1a68] = 560
 dependencies   [0x000001a987ac1a68,0x000001a987ac1a70] = 8
 nul chk table  [0x000001a987ac1a70,0x000001a987ac1a80] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000001a987ac1520, 0x000001a987ac1738]  536 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x30]  (sp of caller)
  0x000001a987ac1520: mov    0x8(%rdx),%r10d
  0x000001a987ac1524: shl    $0x3,%r10
  0x000001a987ac1528: cmp    %r10,%rax
  0x000001a987ac152b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac1531: data16 xchg %ax,%ax
  0x000001a987ac1534: nopl   0x0(%rax,%rax,1)
  0x000001a987ac153c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a987ac1540: jmpq   0x000001a980008280
  0x000001a987ac1545: (bad)  
  0x000001a987ac1546: callq  *0x48(%rbp)
  0x000001a987ac1549: sub    $0x20,%esp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x000001a987ac154c: mov    %rdx,%r14
  0x000001a987ac154f: mov    0x10(%rdx),%eax    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x000001a987ac1552: test   %eax,%eax
  0x000001a987ac1554: jne    0x000001a987ac16a0  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x000001a987ac155a: mov    0xc(%rdx),%ecx     ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000001a987ac155d: mov    0xc(%r12,%rcx,8),%r9d  ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@5
                                                ; - java.lang.String::hashCode@29
                                                ; implicit exception: dispatches to 0x000001a987ac16fa
  0x000001a987ac1562: test   %r9d,%r9d
  0x000001a987ac1565: jbe    0x000001a987ac16c6  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000001a987ac156b: movsbl 0x14(%rdx),%r10d   ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x000001a987ac1570: test   %r10d,%r10d
  0x000001a987ac1573: jne    0x000001a987ac16da  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000001a987ac1579: mov    %r9d,%r10d
  0x000001a987ac157c: dec    %r10d
  0x000001a987ac157f: cmp    %r9d,%r10d
  0x000001a987ac1582: jae    0x000001a987ac16ad
  0x000001a987ac1588: movzbl 0x10(%r12,%rcx,8),%edi  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@31
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac158e: mov    %r9d,%r11d
  0x000001a987ac1591: add    $0xfffffff9,%r11d
  0x000001a987ac1595: lea    (%r12,%rcx,8),%r8  ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000001a987ac1599: mov    $0x1,%ebp
  0x000001a987ac159e: cmp    $0x1,%r11d
  0x000001a987ac15a2: jle    0x000001a987ac1691
  0x000001a987ac15a8: mov    %edi,%r10d
  0x000001a987ac15ab: shl    $0x5,%r10d
  0x000001a987ac15af: sub    %edi,%r10d         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15b2: jmp    0x000001a987ac15d8  ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15b4: movzbl 0x10(%r8,%rbp,1),%r10d
  0x000001a987ac15ba: mov    %edi,%eax
  0x000001a987ac15bc: shl    $0x5,%eax
  0x000001a987ac15bf: sub    %edi,%eax
  0x000001a987ac15c1: add    %r10d,%eax         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15c4: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15c6: cmp    %r9d,%ebp
  0x000001a987ac15c9: jge    0x000001a987ac169c  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15cf: mov    %eax,%edi
  0x000001a987ac15d1: jmp    0x000001a987ac15b4
  0x000001a987ac15d3: vmovd  %xmm1,%r9d
  0x000001a987ac15d8: vmovd  %r9d,%xmm1
  0x000001a987ac15dd: data16 xchg %ax,%ax       ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15e0: movslq %ebp,%rdx          ;*baload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@19
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac15e3: movzbl 0x10(%r8,%rdx,1),%r13d
  0x000001a987ac15e9: movzbl 0x17(%r8,%rdx,1),%ecx
  0x000001a987ac15ef: movzbl 0x11(%r8,%rdx,1),%eax
  0x000001a987ac15f5: movzbl 0x16(%r8,%rdx,1),%r9d
  0x000001a987ac15fb: movzbl 0x15(%r8,%rdx,1),%edi
  0x000001a987ac1601: movzbl 0x14(%r8,%rdx,1),%ebx
  0x000001a987ac1607: movzbl 0x13(%r8,%rdx,1),%esi
  0x000001a987ac160d: movzbl 0x12(%r8,%rdx,1),%edx
  0x000001a987ac1613: add    %r13d,%r10d
  0x000001a987ac1616: mov    %r10d,%r13d
  0x000001a987ac1619: shl    $0x5,%r13d
  0x000001a987ac161d: sub    %r10d,%r13d
  0x000001a987ac1620: add    %eax,%r13d
  0x000001a987ac1623: mov    %r13d,%r10d
  0x000001a987ac1626: shl    $0x5,%r10d
  0x000001a987ac162a: sub    %r13d,%r10d
  0x000001a987ac162d: add    %edx,%r10d
  0x000001a987ac1630: mov    %r10d,%edx
  0x000001a987ac1633: shl    $0x5,%edx
  0x000001a987ac1636: sub    %r10d,%edx
  0x000001a987ac1639: add    %esi,%edx
  0x000001a987ac163b: mov    %edx,%esi
  0x000001a987ac163d: shl    $0x5,%esi
  0x000001a987ac1640: sub    %edx,%esi
  0x000001a987ac1642: add    %ebx,%esi
  0x000001a987ac1644: mov    %esi,%r10d
  0x000001a987ac1647: shl    $0x5,%r10d
  0x000001a987ac164b: sub    %esi,%r10d
  0x000001a987ac164e: add    %edi,%r10d
  0x000001a987ac1651: mov    %r10d,%ebx
  0x000001a987ac1654: shl    $0x5,%ebx
  0x000001a987ac1657: sub    %r10d,%ebx
  0x000001a987ac165a: add    %r9d,%ebx
  0x000001a987ac165d: mov    %ebx,%edi
  0x000001a987ac165f: shl    $0x5,%edi
  0x000001a987ac1662: sub    %ebx,%edi
  0x000001a987ac1664: add    %ecx,%edi          ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@32
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac1666: mov    %edi,%r10d
  0x000001a987ac1669: shl    $0x5,%r10d
  0x000001a987ac166d: sub    %edi,%r10d         ;*imul {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@25
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac1670: add    $0x8,%ebp          ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@34
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac1673: cmp    %r11d,%ebp
  0x000001a987ac1676: jl     0x000001a987ac15e0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@13
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac167c: mov    0x70(%r15),%r9     ; ImmutableOopMap{r8=Oop r14=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac1680: test   %eax,(%r9)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@37
                                                ; - java.lang.String::hashCode@29
                                                ;   {poll}
  0x000001a987ac1683: cmp    %r11d,%ebp
  0x000001a987ac1686: jl     0x000001a987ac15d3
  0x000001a987ac168c: vmovd  %xmm1,%r9d
  0x000001a987ac1691: cmp    %r9d,%ebp
  0x000001a987ac1694: jl     0x000001a987ac15b4
  0x000001a987ac169a: mov    %edi,%eax
  0x000001a987ac169c: mov    %eax,0x10(%r14)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1

  0x000001a987ac16a0: add    $0x20,%rsp
  0x000001a987ac16a4: pop    %rbp
  0x000001a987ac16a5: mov    0x70(%r15),%r10
  0x000001a987ac16a9: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac16ac: retq   
  0x000001a987ac16ad: mov    $0xffffff86,%edx
  0x000001a987ac16b2: mov    %r14,%rbp
  0x000001a987ac16b5: mov    %ecx,(%rsp)
  0x000001a987ac16b8: mov    %r9d,0x4(%rsp)
  0x000001a987ac16bd: xchg   %ax,%ax
  0x000001a987ac16bf: callq  0x000001a980028a00  ; ImmutableOopMap{rbp=Oop [0]=NarrowOop }
                                                ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac16c4: ud2                       ;*aload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringLatin1::hashCode@16
                                                ; - java.lang.String::hashCode@29

  0x000001a987ac16c6: mov    $0xffffff55,%edx
  0x000001a987ac16cb: mov    %r14,%rbp
  0x000001a987ac16ce: mov    %r9d,(%rsp)
  0x000001a987ac16d2: nop
  0x000001a987ac16d3: callq  0x000001a980028a00  ; ImmutableOopMap{rbp=Oop }
                                                ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac16d8: ud2                       ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000001a987ac16da: test   %r10d,%r10d
  0x000001a987ac16dd: setne  %bpl
  0x000001a987ac16e1: movzbl %bpl,%ebp
  0x000001a987ac16e5: xor    $0x1,%ebp          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::hashCode@19

  0x000001a987ac16e8: mov    $0xffffff55,%edx
  0x000001a987ac16ed: mov    %r14,0x8(%rsp)
  0x000001a987ac16f2: nop
  0x000001a987ac16f3: callq  0x000001a980028a00  ; ImmutableOopMap{[8]=Oop }
                                                ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac16f8: ud2                       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000001a987ac16fa: mov    $0xfffffff6,%edx
  0x000001a987ac16ff: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1704: ud2                       ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13

  0x000001a987ac1706: hlt    
  0x000001a987ac1707: hlt    
  0x000001a987ac1708: hlt    
  0x000001a987ac1709: hlt    
  0x000001a987ac170a: hlt    
  0x000001a987ac170b: hlt    
  0x000001a987ac170c: hlt    
  0x000001a987ac170d: hlt    
  0x000001a987ac170e: hlt    
  0x000001a987ac170f: hlt    
  0x000001a987ac1710: hlt    
  0x000001a987ac1711: hlt    
  0x000001a987ac1712: hlt    
  0x000001a987ac1713: hlt    
  0x000001a987ac1714: hlt    
  0x000001a987ac1715: hlt    
  0x000001a987ac1716: hlt    
  0x000001a987ac1717: hlt    
  0x000001a987ac1718: hlt    
  0x000001a987ac1719: hlt    
  0x000001a987ac171a: hlt    
  0x000001a987ac171b: hlt    
  0x000001a987ac171c: hlt    
  0x000001a987ac171d: hlt    
  0x000001a987ac171e: hlt    
  0x000001a987ac171f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a987ac1720: jmpq   0x000001a9800ec480  ;   {no_reloc}
[Deopt Handler Code]
  0x000001a987ac1725: callq  0x000001a987ac172a
  0x000001a987ac172a: subq   $0x5,(%rsp)
  0x000001a987ac172f: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac1734: hlt    
  0x000001a987ac1735: hlt    
  0x000001a987ac1736: hlt    
  0x000001a987ac1737: hlt    

ImmutableOopMap{r8=Oop r14=Oop }pc offsets: 352 
ImmutableOopMap{rbp=Oop [0]=NarrowOop }pc offsets: 420 
ImmutableOopMap{rbp=Oop }pc offsets: 440 
ImmutableOopMap{[8]=Oop }pc offsets: 472 
ImmutableOopMap{}pc offsets: 484 Compiled method (c1)     126   23       3       java.util.ImmutableCollections$SetN$1::next (35 bytes)
 total in heap  [0x000001a980595510,0x000001a980595b78] = 1640
 relocation     [0x000001a980595688,0x000001a9805956e0] = 88
 main code      [0x000001a9805956e0,0x000001a9805958c0] = 480
 stub code      [0x000001a9805958c0,0x000001a980595980] = 192
 metadata       [0x000001a980595980,0x000001a980595990] = 16
 scopes data    [0x000001a980595990,0x000001a980595a08] = 120
 scopes pcs     [0x000001a980595a08,0x000001a980595b58] = 336
 dependencies   [0x000001a980595b58,0x000001a980595b60] = 8
 nul chk table  [0x000001a980595b60,0x000001a980595b78] = 24
----------------------------------------------------------------------
java/util/ImmutableCollections$SetN$1.next()Ljava/lang/Object;  [0x000001a9805956e0, 0x000001a980595980]  672 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1'
  #           [sp+0x60]  (sp of caller)
  0x000001a9805956e0: mov    0x8(%rdx),%r10d
  0x000001a9805956e4: shl    $0x3,%r10
  0x000001a9805956e8: cmp    %rax,%r10
  0x000001a9805956eb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a9805956f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a9805956fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980595700: mov    %eax,-0x7000(%rsp)
  0x000001a980595707: push   %rbp
  0x000001a980595708: sub    $0x50,%rsp
  0x000001a98059570c: movabs $0x1a9ff7ec9f0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980595716: mov    0xfc(%rsi),%edi
  0x000001a98059571c: add    $0x8,%edi
  0x000001a98059571f: mov    %edi,0xfc(%rsi)
  0x000001a980595725: and    $0x1ff8,%edi
  0x000001a98059572b: cmp    $0x0,%edi
  0x000001a98059572e: je     0x000001a980595816  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@0

  0x000001a980595734: mov    %rdx,%rsi
  0x000001a980595737: movabs $0x1a9ff7ec9f0,%rdi  ;   {metadata(method data for {method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980595741: addq   $0x1,0x150(%rdi)
  0x000001a980595749: mov    %rdx,%rsi
  0x000001a98059574c: mov    %rsi,%rdx          ;*invokevirtual hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@1

  0x000001a98059574f: mov    %rsi,0x30(%rsp)
  0x000001a980595754: data16 xchg %ax,%ax
  0x000001a980595757: callq  0x000001a980027000  ; ImmutableOopMap{[48]=Oop }
                                                ;*invokevirtual hasNext {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@1
                                                ;   {optimized virtual_call}
  0x000001a98059575c: cmp    $0x0,%eax
  0x000001a98059575f: movabs $0x1a9ff7ec9f0,%rax  ;   {metadata(method data for {method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980595769: movabs $0x180,%rdx
  0x000001a980595773: je     0x000001a980595783
  0x000001a980595779: movabs $0x170,%rdx
  0x000001a980595783: mov    (%rax,%rdx,1),%rsi
  0x000001a980595787: lea    0x1(%rsi),%rsi
  0x000001a98059578b: mov    %rsi,(%rax,%rdx,1)
  0x000001a98059578f: je     0x000001a9805957d6  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@4

  0x000001a980595795: mov    0x30(%rsp),%rdx
  0x000001a98059579a: mov    0x10(%rdx),%eax
  0x000001a98059579d: shl    $0x3,%rax          ;*getfield this$0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@16

  0x000001a9805957a1: mov    0x10(%rax),%eax    ; implicit exception: dispatches to 0x000001a980595837
  0x000001a9805957a4: shl    $0x3,%rax          ;*getfield elements {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@19

  0x000001a9805957a8: mov    0xc(%rdx),%esi     ;*getfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@24

  0x000001a9805957ab: mov    %rsi,%rdi
  0x000001a9805957ae: inc    %edi
  0x000001a9805957b0: mov    %edi,0xc(%rdx)     ;*putfield idx {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@30

  0x000001a9805957b3: mov    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000001a98059583c
  0x000001a9805957b6: movslq %esi,%rdi
  0x000001a9805957b9: cmp    %esi,%edx
  0x000001a9805957bb: jbe    0x000001a980595841
  0x000001a9805957c1: mov    0x10(%rax,%rdi,4),%eax
  0x000001a9805957c5: shl    $0x3,%rax          ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33

  0x000001a9805957c9: add    $0x50,%rsp
  0x000001a9805957cd: pop    %rbp
  0x000001a9805957ce: mov    0x70(%r15),%r10
  0x000001a9805957d2: test   %eax,(%r10)        ;   {poll_return}
  0x000001a9805957d5: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@34

  0x000001a9805957d6: xchg   %ax,%ax
  0x000001a9805957d8: jmpq   0x000001a980595859  ;   {no_reloc}
  0x000001a9805957dd: add    %al,(%rax)
  0x000001a9805957df: add    %al,(%rax)
  0x000001a9805957e1: add    %ch,%cl
  0x000001a9805957e3: jl     0x000001a9805957e5
  0x000001a9805957e5: add    %al,(%rax)         ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7

  0x000001a9805957e7: mov    %rax,%rdx
  0x000001a9805957ea: movabs $0x1a9ff7ec9f0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a9805957f4: addq   $0x1,0x190(%rsi)
  0x000001a9805957fc: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@11

  0x000001a9805957ff: mov    %rax,0x38(%rsp)
  0x000001a980595804: data16 xchg %ax,%ax
  0x000001a980595807: callq  0x000001a980027000  ; ImmutableOopMap{[56]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@11
                                                ;   {optimized virtual_call}
  0x000001a98059580c: mov    0x38(%rsp),%rax
  0x000001a980595811: jmpq   0x000001a98059589b
  0x000001a980595816: movabs $0x1a9ff7e2758,%r10  ;   {metadata({method} {0x000001a9ff7e2760} 'next' '()Ljava/lang/Object;' in 'java/util/ImmutableCollections$SetN$1')}
  0x000001a980595820: mov    %r10,0x8(%rsp)
  0x000001a980595825: movq   $0xffffffffffffffff,(%rsp)
  0x000001a98059582d: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.ImmutableCollections$SetN$1::next@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980595832: jmpq   0x000001a980595734
  0x000001a980595837: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop }
                                                ;*getfield elements {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@19
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059583c: callq  0x000001a9800ecba0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980595841: mov    %rsi,(%rsp)
  0x000001a980595845: callq  0x000001a98005eda0  ; ImmutableOopMap{rax=Oop }
                                                ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@33
                                                ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000001a98059584a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a980595854: mov    $0xa050f00,%eax
  0x000001a980595859: callq  0x000001a9800f0500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a98059585e: jmpq   0x000001a9805957d8
  0x000001a980595863: mov    %rdx,%rdx
  0x000001a980595866: callq  0x000001a9800ed100  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.ImmutableCollections$SetN$1::next@7
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000001a98059586b: jmpq   0x000001a9805957e7
  0x000001a980595870: nop
  0x000001a980595871: nop
  0x000001a980595872: mov    0x350(%r15),%rax
  0x000001a980595879: movabs $0x0,%r10
  0x000001a980595883: mov    %r10,0x350(%r15)
  0x000001a98059588a: movabs $0x0,%r10
  0x000001a980595894: mov    %r10,0x358(%r15)
  0x000001a98059589b: add    $0x50,%rsp
  0x000001a98059589f: pop    %rbp
  0x000001a9805958a0: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a9805958a5: hlt    
  0x000001a9805958a6: hlt    
  0x000001a9805958a7: hlt    
  0x000001a9805958a8: hlt    
  0x000001a9805958a9: hlt    
  0x000001a9805958aa: hlt    
  0x000001a9805958ab: hlt    
  0x000001a9805958ac: hlt    
  0x000001a9805958ad: hlt    
  0x000001a9805958ae: hlt    
  0x000001a9805958af: hlt    
  0x000001a9805958b0: hlt    
  0x000001a9805958b1: hlt    
  0x000001a9805958b2: hlt    
  0x000001a9805958b3: hlt    
  0x000001a9805958b4: hlt    
  0x000001a9805958b5: hlt    
  0x000001a9805958b6: hlt    
  0x000001a9805958b7: hlt    
  0x000001a9805958b8: hlt    
  0x000001a9805958b9: hlt    
  0x000001a9805958ba: hlt    
  0x000001a9805958bb: hlt    
  0x000001a9805958bc: hlt    
  0x000001a9805958bd: hlt    
  0x000001a9805958be: hlt    
  0x000001a9805958bf: hlt    
[Stub Code]
  0x000001a9805958c0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a9805958c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805958cf: jmpq   0x000001a9805958cf  ;   {runtime_call}
  0x000001a9805958d4: nop
  0x000001a9805958d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a9805958df: jmpq   0x000001a9805958df  ;   {runtime_call}
[Exception Handler]
  0x000001a9805958e4: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a9805958e9: mov    %rsp,-0x28(%rsp)
  0x000001a9805958ee: sub    $0x80,%rsp
  0x000001a9805958f5: mov    %rax,0x78(%rsp)
  0x000001a9805958fa: mov    %rcx,0x70(%rsp)
  0x000001a9805958ff: mov    %rdx,0x68(%rsp)
  0x000001a980595904: mov    %rbx,0x60(%rsp)
  0x000001a980595909: mov    %rbp,0x50(%rsp)
  0x000001a98059590e: mov    %rsi,0x48(%rsp)
  0x000001a980595913: mov    %rdi,0x40(%rsp)
  0x000001a980595918: mov    %r8,0x38(%rsp)
  0x000001a98059591d: mov    %r9,0x30(%rsp)
  0x000001a980595922: mov    %r10,0x28(%rsp)
  0x000001a980595927: mov    %r11,0x20(%rsp)
  0x000001a98059592c: mov    %r12,0x18(%rsp)
  0x000001a980595931: mov    %r13,0x10(%rsp)
  0x000001a980595936: mov    %r14,0x8(%rsp)
  0x000001a98059593b: mov    %r15,(%rsp)
  0x000001a98059593f: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980595949: movabs $0x1a9805958e9,%rdx  ;   {internal_word}
  0x000001a980595953: mov    %rsp,%r8
  0x000001a980595956: and    $0xfffffffffffffff0,%rsp
  0x000001a98059595a: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980595964: callq  *%r10
  0x000001a980595967: hlt    
[Deopt Handler Code]
  0x000001a980595968: movabs $0x1a980595968,%r10  ;   {section_word}
  0x000001a980595972: push   %r10
  0x000001a980595974: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980595979: hlt    
  0x000001a98059597a: hlt    
  0x000001a98059597b: hlt    
  0x000001a98059597c: hlt    
  0x000001a98059597d: hlt    
  0x000001a98059597e: hlt    
  0x000001a98059597f: hlt    

ImmutableOopMap{[48]=Oop }pc offsets: 124 
ImmutableOopMap{[56]=Oop }pc offsets: 300 
ImmutableOopMap{rdx=Oop }pc offsets: 338 348 
ImmutableOopMap{rax=Oop }pc offsets: 353 362 
ImmutableOopMap{}pc offsets: 382 395 Compiled method (c1)     132   27   !   3       java.util.concurrent.ConcurrentHashMap::putVal (433 bytes)
 total in heap  [0x000001a980595b90,0x000001a980599480] = 14576
 relocation     [0x000001a980595d08,0x000001a980595f20] = 536
 main code      [0x000001a980595f20,0x000001a980597fe0] = 8384
 stub code      [0x000001a980597fe0,0x000001a980598120] = 320
 oops           [0x000001a980598120,0x000001a980598128] = 8
 metadata       [0x000001a980598128,0x000001a980598168] = 64
 scopes data    [0x000001a980598168,0x000001a9805989e8] = 2176
 scopes pcs     [0x000001a9805989e8,0x000001a9805992f8] = 2320
 dependencies   [0x000001a9805992f8,0x000001a980599300] = 8
 handler table  [0x000001a980599300,0x000001a980599450] = 336
 nul chk table  [0x000001a980599450,0x000001a980599480] = 48
----------------------------------------------------------------------
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;  [0x000001a980595f20, 0x000001a980598120]  8704 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap'
  # this:     rdx:rdx   = 'java/util/concurrent/ConcurrentHashMap'
  # parm0:    r8:r8     = 'java/lang/Object'
  # parm1:    r9:r9     = 'java/lang/Object'
  # parm2:    rdi       = boolean
  #           [sp+0x140]  (sp of caller)
  0x000001a980595f20: mov    0x8(%rdx),%r10d
  0x000001a980595f24: shl    $0x3,%r10
  0x000001a980595f28: cmp    %rax,%r10
  0x000001a980595f2b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980595f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a980595f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980595f40: mov    %eax,-0x7000(%rsp)
  0x000001a980595f47: push   %rbp
  0x000001a980595f48: sub    $0x130,%rsp
  0x000001a980595f4f: mov    %rdx,0xa8(%rsp)
  0x000001a980595f57: mov    %r8,0xb0(%rsp)
  0x000001a980595f5f: mov    %r9,0xb8(%rsp)
  0x000001a980595f67: mov    %edi,0xc0(%rsp)
  0x000001a980595f6e: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980595f78: mov    0xfc(%rsi),%ebx
  0x000001a980595f7e: add    $0x8,%ebx
  0x000001a980595f81: mov    %ebx,0xfc(%rsi)
  0x000001a980595f87: and    $0x1ff8,%ebx
  0x000001a980595f8d: cmp    $0x0,%ebx
  0x000001a980595f90: je     0x000001a980597adb  ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@0

  0x000001a980595f96: cmp    $0x0,%r8
  0x000001a980595f9a: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980595fa4: movabs $0x138,%rbx
  0x000001a980595fae: je     0x000001a980595fbe
  0x000001a980595fb4: movabs $0x148,%rbx
  0x000001a980595fbe: mov    (%rsi,%rbx,1),%rax
  0x000001a980595fc2: lea    0x1(%rax),%rax
  0x000001a980595fc6: mov    %rax,(%rsi,%rbx,1)
  0x000001a980595fca: je     0x000001a9805979f4  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@1

  0x000001a980595fd0: cmp    $0x0,%r9
  0x000001a980595fd4: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980595fde: movabs $0x168,%rbx
  0x000001a980595fe8: je     0x000001a980595ff8
  0x000001a980595fee: movabs $0x158,%rbx
  0x000001a980595ff8: mov    (%rsi,%rbx,1),%rax
  0x000001a980595ffc: lea    0x1(%rax),%rax
  0x000001a980596000: mov    %rax,(%rsi,%rbx,1)
  0x000001a980596004: je     0x000001a9805979f4  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@5

  0x000001a98059600a: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x000001a980597afc
  0x000001a98059600d: mov    %r8,%rsi
  0x000001a980596010: movabs $0x1a9ff7edce0,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059601a: mov    0x8(%rsi),%esi
  0x000001a98059601d: shl    $0x3,%rsi
  0x000001a980596021: cmp    0x198(%rbx),%rsi
  0x000001a980596028: jne    0x000001a980596037
  0x000001a98059602a: addq   $0x1,0x1a0(%rbx)
  0x000001a980596032: jmpq   0x000001a98059609d
  0x000001a980596037: cmp    0x1a8(%rbx),%rsi
  0x000001a98059603e: jne    0x000001a98059604d
  0x000001a980596040: addq   $0x1,0x1b0(%rbx)
  0x000001a980596048: jmpq   0x000001a98059609d
  0x000001a98059604d: cmpq   $0x0,0x198(%rbx)
  0x000001a980596058: jne    0x000001a980596071
  0x000001a98059605a: mov    %rsi,0x198(%rbx)
  0x000001a980596061: movq   $0x1,0x1a0(%rbx)
  0x000001a98059606c: jmpq   0x000001a98059609d
  0x000001a980596071: cmpq   $0x0,0x1a8(%rbx)
  0x000001a98059607c: jne    0x000001a980596095
  0x000001a98059607e: mov    %rsi,0x1a8(%rbx)
  0x000001a980596085: movq   $0x1,0x1b0(%rbx)
  0x000001a980596090: jmpq   0x000001a98059609d
  0x000001a980596095: addq   $0x1,0x188(%rbx)
  0x000001a98059609d: mov    %r8,%rdx           ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17

  0x000001a9805960a0: nopl   0x0(%rax,%rax,1)
  0x000001a9805960a5: movabs $0xffffffffffffffff,%rax
  0x000001a9805960af: callq  0x000001a980028ce0  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {virtual_call}
  0x000001a9805960b4: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805960be: addq   $0x1,0x1c0(%rdx)
  0x000001a9805960c6: movabs $0x1a9ff7edb88,%rdx  ;   {metadata(method data for {method} {0x000001a9ff692f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805960d0: mov    0xfc(%rdx),%esi
  0x000001a9805960d6: add    $0x8,%esi
  0x000001a9805960d9: mov    %esi,0xfc(%rdx)
  0x000001a9805960df: and    $0x7ffff8,%esi
  0x000001a9805960e5: cmp    $0x0,%esi
  0x000001a9805960e8: je     0x000001a980597b01
  0x000001a9805960ee: mov    %rax,%rdx
  0x000001a9805960f1: shr    $0x10,%edx
  0x000001a9805960f4: xor    %rax,%rdx
  0x000001a9805960f7: and    $0x7fffffff,%edx
  0x000001a9805960fd: mov    %edx,0xc8(%rsp)
  0x000001a980596104: mov    0xa8(%rsp),%rsi
  0x000001a98059610c: mov    0x28(%rsi),%edi
  0x000001a98059610f: shl    $0x3,%rdi          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@29

  0x000001a980596113: mov    $0x0,%ebx          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@34

  0x000001a980596118: mov    %ebx,0xc4(%rsp)
  0x000001a98059611f: nop
  0x000001a980596120: cmp    $0x0,%rdi
  0x000001a980596124: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059612e: movabs $0x1d0,%r11
  0x000001a980596138: je     0x000001a980596148
  0x000001a98059613e: movabs $0x1e0,%r11
  0x000001a980596148: mov    (%rcx,%r11,1),%r13
  0x000001a98059614c: lea    0x1(%r13),%r13
  0x000001a980596150: mov    %r13,(%rcx,%r11,1)
  0x000001a980596154: je     0x000001a980596196  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@36

  0x000001a98059615a: mov    0xc(%rdi),%ecx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ; implicit exception: dispatches to 0x000001a980597b22
  0x000001a98059615d: cmp    $0x0,%ecx
  0x000001a980596160: movabs $0x1a9ff7edce0,%r11  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059616a: movabs $0x1f0,%r13
  0x000001a980596174: jne    0x000001a980596184
  0x000001a98059617a: movabs $0x200,%r13
  0x000001a980596184: mov    (%r11,%r13,1),%r14
  0x000001a980596188: lea    0x1(%r14),%r14
  0x000001a98059618c: mov    %r14,(%r11,%r13,1)
  0x000001a980596190: jne    0x000001a9805961df  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@45

  0x000001a980596196: mov    %rsi,%rax
  0x000001a980596199: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805961a3: addq   $0x1,0x210(%rcx)
  0x000001a9805961ab: mov    %rsi,%rdx          ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49

  0x000001a9805961ae: nop
  0x000001a9805961af: callq  0x000001a980597ff5  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }
                                                ;*invokespecial initTable {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@49
                                                ;   {optimized virtual_call}
  0x000001a9805961b4: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805961be: incl   0x220(%rcx)
  0x000001a9805961c4: mov    0xc4(%rsp),%ebx
  0x000001a9805961cb: mov    0xc0(%rsp),%edi
  0x000001a9805961d2: mov    0xb8(%rsp),%r9
  0x000001a9805961da: jmpq   0x000001a9805977d1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@54

  0x000001a9805961df: dec    %ecx
  0x000001a9805961e1: and    0xc8(%rsp),%ecx
  0x000001a9805961e8: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805961f2: addq   $0x1,0x238(%rdx)
  0x000001a9805961fa: movabs $0x1a9ff75fd90,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596204: mov    0xfc(%rdx),%esi
  0x000001a98059620a: add    $0x8,%esi
  0x000001a98059620d: mov    %esi,0xfc(%rdx)
  0x000001a980596213: and    $0x7ffff8,%esi
  0x000001a980596219: cmp    $0x0,%esi
  0x000001a98059621c: je     0x000001a980597b27
  0x000001a980596222: movslq %ecx,%rdx
  0x000001a980596225: mov    %ecx,0xe8(%rsp)
  0x000001a98059622c: mov    $0x2,%ecx
  0x000001a980596231: shl    %cl,%rdx
  0x000001a980596234: movabs $0x10,%r10
  0x000001a98059623e: add    %r10,%rdx
  0x000001a980596241: movabs $0x1a9ff75fd90,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059624b: lea    0x170(%rsi),%rsi
  0x000001a980596252: mov    %rdi,%rax
  0x000001a980596255: mov    0x8(%rax),%eax
  0x000001a980596258: shl    $0x3,%rax
  0x000001a98059625c: xor    0x8(%rsi),%rax
  0x000001a980596260: test   $0xfffffffffffffffc,%rax
  0x000001a980596266: je     0x000001a980596278
  0x000001a980596268: test   $0x2,%rax
  0x000001a98059626e: jne    0x000001a980596278
  0x000001a980596270: orq    $0x2,0x8(%rsi)
  0x000001a980596278: movabs $0x6d1708638,%rsi  ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a980596282: movabs $0x1a9ff75fd90,%rax  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059628c: addq   $0x1,0x138(%rax)
  0x000001a980596294: movabs $0x1a9ff761288,%rsi  ;   {metadata(method data for {method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a98059629e: mov    0xfc(%rsi),%eax
  0x000001a9805962a4: add    $0x8,%eax
  0x000001a9805962a7: mov    %eax,0xfc(%rsi)
  0x000001a9805962ad: and    $0x7ffff8,%eax
  0x000001a9805962b3: cmp    $0x0,%eax
  0x000001a9805962b6: je     0x000001a980597b48
  0x000001a9805962bc: mov    (%rdi,%rdx,1),%esi
  0x000001a9805962bf: shl    $0x3,%rsi
  0x000001a9805962c3: movabs $0xc,%rax
  0x000001a9805962cd: cmp    %rax,%rdx
  0x000001a9805962d0: jne    0x000001a980596308
  0x000001a9805962d6: cmp    $0x0,%rdi
  0x000001a9805962da: je     0x000001a980596308
  0x000001a9805962e0: mov    0x8(%rdi),%eax
  0x000001a9805962e3: shl    $0x3,%rax
  0x000001a9805962e7: movsbl 0x16b(%rax),%eax
  0x000001a9805962ee: cmp    $0x0,%eax
  0x000001a9805962f1: je     0x000001a980596308
  0x000001a9805962f7: movsbl 0x398(%r15),%eax
  0x000001a9805962ff: cmp    $0x0,%eax
  0x000001a980596302: jne    0x000001a980597b69
  0x000001a980596308: cmp    $0x0,%rsi
  0x000001a98059630c: jne    0x000001a980596327
  0x000001a98059630e: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596318: orl    $0x100,0x180(%rcx)
  0x000001a980596322: jmpq   0x000001a9805963e9
  0x000001a980596327: movabs $0x7c001acb8,%r8   ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980596331: mov    0x8(%rsi),%ecx
  0x000001a980596334: shl    $0x3,%rcx
  0x000001a980596338: cmp    0x30(%rcx),%r8
  0x000001a98059633c: jne    0x000001a9805963cd
  0x000001a980596342: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059634c: mov    0x8(%rsi),%r8d
  0x000001a980596350: shl    $0x3,%r8
  0x000001a980596354: cmp    0x198(%rcx),%r8
  0x000001a98059635b: jne    0x000001a98059636a
  0x000001a98059635d: addq   $0x1,0x1a0(%rcx)
  0x000001a980596365: jmpq   0x000001a9805963e9
  0x000001a98059636a: cmp    0x1a8(%rcx),%r8
  0x000001a980596371: jne    0x000001a980596380
  0x000001a980596373: addq   $0x1,0x1b0(%rcx)
  0x000001a98059637b: jmpq   0x000001a9805963e9
  0x000001a980596380: cmpq   $0x0,0x198(%rcx)
  0x000001a98059638b: jne    0x000001a9805963a4
  0x000001a98059638d: mov    %r8,0x198(%rcx)
  0x000001a980596394: movq   $0x1,0x1a0(%rcx)
  0x000001a98059639f: jmpq   0x000001a9805963e9
  0x000001a9805963a4: cmpq   $0x0,0x1a8(%rcx)
  0x000001a9805963af: jne    0x000001a9805963c8
  0x000001a9805963b1: mov    %r8,0x1a8(%rcx)
  0x000001a9805963b8: movq   $0x1,0x1b0(%rcx)
  0x000001a9805963c3: jmpq   0x000001a9805963e9
  0x000001a9805963c8: jmpq   0x000001a9805963e9
  0x000001a9805963cd: movabs $0x1a9ff75fd90,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805963d7: subq   $0x1,0x188(%rcx)
  0x000001a9805963df: jmpq   0x000001a980597b81
  0x000001a9805963e4: jmpq   0x000001a9805963e9  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69

  0x000001a9805963e9: mov    %rsi,0xd0(%rsp)
  0x000001a9805963f1: cmp    $0x0,%rsi
  0x000001a9805963f5: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805963ff: movabs $0x248,%rcx
  0x000001a980596409: jne    0x000001a980596419
  0x000001a98059640f: movabs $0x258,%rcx
  0x000001a980596419: mov    (%rax,%rcx,1),%r8
  0x000001a98059641d: lea    0x1(%r8),%r8
  0x000001a980596421: mov    %r8,(%rax,%rcx,1)
  0x000001a980596425: mov    %rdx,%r11
  0x000001a980596428: jne    0x000001a98059665f  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@75

  0x000001a98059642e: mov    0xc8(%rsp),%edx
  0x000001a980596435: mov    0xb8(%rsp),%r9
  0x000001a98059643d: mov    0xb0(%rsp),%r8
  0x000001a980596445: mov    %rdx,%r13
  0x000001a980596448: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980596452: mov    %rdi,%r14
  0x000001a980596455: mov    0x80(%r15),%rax
  0x000001a98059645c: lea    0x20(%rax),%rdi
  0x000001a980596460: cmp    0x90(%r15),%rdi
  0x000001a980596467: ja     0x000001a980597b8a
  0x000001a98059646d: mov    %rdi,0x80(%r15)
  0x000001a980596474: mov    0xb0(%rdx),%rcx
  0x000001a98059647b: mov    %rcx,(%rax)
  0x000001a98059647e: mov    %rdx,%rcx
  0x000001a980596481: shr    $0x3,%rcx
  0x000001a980596485: mov    %ecx,0x8(%rax)
  0x000001a980596488: xor    %rcx,%rcx
  0x000001a98059648b: mov    %ecx,0xc(%rax)
  0x000001a98059648e: xor    %rcx,%rcx
  0x000001a980596491: mov    %rcx,0x10(%rax)
  0x000001a980596495: mov    %rcx,0x18(%rax)
  0x000001a980596499: mov    %rax,%rdx          ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83

  0x000001a98059649c: mov    %rdx,%rax
  0x000001a98059649f: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805964a9: addq   $0x1,0x268(%rsi)
  0x000001a9805964b1: movabs $0x1a9ff7eeb68,%rax  ;   {metadata(method data for {method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a9805964bb: mov    0xfc(%rax),%esi
  0x000001a9805964c1: add    $0x8,%esi
  0x000001a9805964c4: mov    %esi,0xfc(%rax)
  0x000001a9805964ca: and    $0x7ffff8,%esi
  0x000001a9805964d0: cmp    $0x0,%esi
  0x000001a9805964d3: je     0x000001a980597b97
  0x000001a9805964d9: mov    %rdx,%rax
  0x000001a9805964dc: movabs $0x1a9ff7eeb68,%rsi  ;   {metadata(method data for {method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a9805964e6: addq   $0x1,0x138(%rsi)
  0x000001a9805964ee: movabs $0x1a9ff7532f0,%rax  ;   {metadata(method data for {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a9805964f8: mov    0xfc(%rax),%esi
  0x000001a9805964fe: add    $0x8,%esi
  0x000001a980596501: mov    %esi,0xfc(%rax)
  0x000001a980596507: and    $0x7ffff8,%esi
  0x000001a98059650d: cmp    $0x0,%esi
  0x000001a980596510: je     0x000001a980597bb8
  0x000001a980596516: mov    %r13d,0xc(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x000001a98059651a: movsbl 0x398(%r15),%eax
  0x000001a980596522: cmp    $0x0,%eax
  0x000001a980596525: jne    0x000001a980597bd9
  0x000001a98059652b: mov    %r8,%r10
  0x000001a98059652e: shr    $0x3,%r10
  0x000001a980596532: mov    %r10d,0x10(%rdx)
  0x000001a980596536: mov    %rdx,%rax
  0x000001a980596539: xor    %r8,%rax
  0x000001a98059653c: shr    $0x14,%rax
  0x000001a980596540: cmp    $0x0,%rax
  0x000001a980596544: jne    0x000001a980597bf8
  0x000001a98059654a: movsbl 0x398(%r15),%eax
  0x000001a980596552: cmp    $0x0,%eax
  0x000001a980596555: jne    0x000001a980597c10
  0x000001a98059655b: mov    %r9,%r10
  0x000001a98059655e: shr    $0x3,%r10
  0x000001a980596562: mov    %r10d,0x14(%rdx)
  0x000001a980596566: mov    %rdx,%rax
  0x000001a980596569: xor    %r9,%rax
  0x000001a98059656c: shr    $0x14,%rax
  0x000001a980596570: cmp    $0x0,%rax
  0x000001a980596574: jne    0x000001a980597c2f
  0x000001a98059657a: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@16
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91

  0x000001a980596580: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059658a: addq   $0x1,0x278(%rax)
  0x000001a980596592: movabs $0x1a9ff7eeeb8,%rax  ;   {metadata(method data for {method} {0x000001a9ff693300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059659c: mov    0xfc(%rax),%esi
  0x000001a9805965a2: add    $0x8,%esi
  0x000001a9805965a5: mov    %esi,0xfc(%rax)
  0x000001a9805965ab: and    $0x7ffff8,%esi
  0x000001a9805965b1: cmp    $0x0,%esi
  0x000001a9805965b4: je     0x000001a980597c47
  0x000001a9805965ba: lea    (%r14,%r11,1),%rsi
  0x000001a9805965be: movsbl 0x398(%r15),%eax
  0x000001a9805965c6: cmp    $0x0,%eax
  0x000001a9805965c9: jne    0x000001a980597c68
  0x000001a9805965cf: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a9805965d9: shr    $0x3,%rax
  0x000001a9805965dd: mov    %rdx,%r10
  0x000001a9805965e0: shr    $0x3,%r10
  0x000001a9805965e4: lock cmpxchg %r10d,(%rsi)
  0x000001a9805965e9: mov    $0x1,%edi
  0x000001a9805965ee: je     0x000001a9805965f9
  0x000001a9805965f4: mov    $0x0,%edi
  0x000001a9805965f9: mov    %rsi,%rbx
  0x000001a9805965fc: xor    %rdx,%rbx
  0x000001a9805965ff: shr    $0x14,%rbx
  0x000001a980596603: cmp    $0x0,%rbx
  0x000001a980596607: jne    0x000001a980597c86  ;*invokevirtual compareAndSetObject {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@17
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94

  0x000001a98059660d: and    $0x1,%edi
  0x000001a980596610: cmp    $0x0,%edi
  0x000001a980596613: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059661d: movabs $0x298,%rsi
  0x000001a980596627: jne    0x000001a980596637
  0x000001a98059662d: movabs $0x288,%rsi
  0x000001a980596637: mov    (%rdx,%rsi,1),%rdi
  0x000001a98059663b: lea    0x1(%rdi),%rdi
  0x000001a98059663f: mov    %rdi,(%rdx,%rsi,1)
  0x000001a980596643: jne    0x000001a980597930  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@97

  0x000001a980596649: mov    %r14,%rax
  0x000001a98059664c: mov    0xc4(%rsp),%ebx
  0x000001a980596653: mov    0xc0(%rsp),%edi
  0x000001a98059665a: jmpq   0x000001a9805977d1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a98059665f: mov    %rdi,%r14
  0x000001a980596662: mov    0xc8(%rsp),%r13d
  0x000001a98059666a: mov    0xb8(%rsp),%r9
  0x000001a980596672: mov    0xb0(%rsp),%r8
  0x000001a98059667a: mov    0xc(%rsi),%edi     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ; implicit exception: dispatches to 0x000001a980597c9e
  0x000001a98059667d: cmp    $0xffffffff,%edi
  0x000001a980596680: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059668a: movabs $0x2c0,%rax
  0x000001a980596694: jne    0x000001a9805966a4
  0x000001a98059669a: movabs $0x2d0,%rax
  0x000001a9805966a4: mov    (%rdx,%rax,1),%rcx
  0x000001a9805966a8: lea    0x1(%rcx),%rcx
  0x000001a9805966ac: mov    %rcx,(%rdx,%rax,1)
  0x000001a9805966b0: jne    0x000001a980596710  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@112

  0x000001a9805966b6: mov    0xa8(%rsp),%rdi
  0x000001a9805966be: movabs $0x1a9ff7edce0,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805966c8: addq   $0x1,0x2e0(%rbx)
  0x000001a9805966d0: mov    %r14,%r8
  0x000001a9805966d3: mov    %rsi,%r9
  0x000001a9805966d6: mov    0xa8(%rsp),%rdx    ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120

  0x000001a9805966de: nop
  0x000001a9805966df: callq  0x000001a980027000  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }
                                                ;*invokevirtual helpTransfer {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@120
                                                ;   {optimized virtual_call}
  0x000001a9805966e4: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805966ee: incl   0x318(%r8)
  0x000001a9805966f5: mov    0xc4(%rsp),%ebx
  0x000001a9805966fc: mov    0xc0(%rsp),%edi
  0x000001a980596703: mov    0xb8(%rsp),%r9
  0x000001a98059670b: jmpq   0x000001a9805977d1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@125

  0x000001a980596710: mov    0xc0(%rsp),%eax
  0x000001a980596717: cmp    $0x0,%eax
  0x000001a98059671a: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596724: movabs $0x340,%rdx
  0x000001a98059672e: jne    0x000001a98059673e
  0x000001a980596734: movabs $0x330,%rdx
  0x000001a98059673e: mov    (%r8,%rdx,1),%rcx
  0x000001a980596742: lea    0x1(%rcx),%rcx
  0x000001a980596746: mov    %rcx,(%r8,%rdx,1)
  0x000001a98059674a: jne    0x000001a98059676c  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@129

  0x000001a980596750: mov    %edi,0xcc(%rsp)
  0x000001a980596757: mov    %r11,0xe0(%rsp)
  0x000001a98059675f: mov    %r14,0xd8(%rsp)
  0x000001a980596767: jmpq   0x000001a9805969a6  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x000001a98059676c: cmp    0xc8(%rsp),%edi
  0x000001a980596773: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059677d: movabs $0x360,%rdx
  0x000001a980596787: je     0x000001a980596797
  0x000001a98059678d: movabs $0x350,%rdx
  0x000001a980596797: mov    (%r8,%rdx,1),%rcx
  0x000001a98059679b: lea    0x1(%rcx),%rcx
  0x000001a98059679f: mov    %rcx,(%r8,%rdx,1)
  0x000001a9805967a3: je     0x000001a9805967c5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@136

  0x000001a9805967a9: mov    %edi,0xcc(%rsp)
  0x000001a9805967b0: mov    %r11,0xe0(%rsp)
  0x000001a9805967b8: mov    %r14,0xd8(%rsp)
  0x000001a9805967c0: jmpq   0x000001a9805969a6  ;*aconst_null {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@179

  0x000001a9805967c5: mov    0xb0(%rsp),%r8
  0x000001a9805967cd: mov    0x10(%rsi),%edx
  0x000001a9805967d0: shl    $0x3,%rdx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@141

  0x000001a9805967d4: cmp    %r8,%rdx
  0x000001a9805967d7: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805967e1: movabs $0x380,%r9
  0x000001a9805967eb: jne    0x000001a9805967fb
  0x000001a9805967f1: movabs $0x370,%r9
  0x000001a9805967fb: mov    (%rcx,%r9,1),%r13
  0x000001a9805967ff: lea    0x1(%r13),%r13
  0x000001a980596803: mov    %r13,(%rcx,%r9,1)
  0x000001a980596807: jne    0x000001a980596829  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@148

  0x000001a98059680d: mov    %edi,0xcc(%rsp)
  0x000001a980596814: mov    %r11,0xe0(%rsp)
  0x000001a98059681c: mov    %r14,0xd8(%rsp)
  0x000001a980596824: jmpq   0x000001a980596965  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@165

  0x000001a980596829: cmp    $0x0,%rdx
  0x000001a98059682d: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596837: movabs $0x390,%r9
  0x000001a980596841: je     0x000001a980596851
  0x000001a980596847: movabs $0x3a0,%r9
  0x000001a980596851: mov    (%rcx,%r9,1),%r13
  0x000001a980596855: lea    0x1(%r13),%r13
  0x000001a980596859: mov    %r13,(%rcx,%r9,1)
  0x000001a98059685d: mov    %edi,0xcc(%rsp)
  0x000001a980596864: mov    %r11,0xe0(%rsp)
  0x000001a98059686c: mov    %r14,0xd8(%rsp)
  0x000001a980596874: je     0x000001a9805969a6  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@153

  0x000001a98059687a: mov    %r8,%r11
  0x000001a98059687d: movabs $0x1a9ff7edce0,%r13  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596887: mov    0x8(%r11),%r11d
  0x000001a98059688b: shl    $0x3,%r11
  0x000001a98059688f: cmp    0x3c0(%r13),%r11
  0x000001a980596896: jne    0x000001a9805968a5
  0x000001a980596898: addq   $0x1,0x3c8(%r13)
  0x000001a9805968a0: jmpq   0x000001a98059690b
  0x000001a9805968a5: cmp    0x3d0(%r13),%r11
  0x000001a9805968ac: jne    0x000001a9805968bb
  0x000001a9805968ae: addq   $0x1,0x3d8(%r13)
  0x000001a9805968b6: jmpq   0x000001a98059690b
  0x000001a9805968bb: cmpq   $0x0,0x3c0(%r13)
  0x000001a9805968c6: jne    0x000001a9805968df
  0x000001a9805968c8: mov    %r11,0x3c0(%r13)
  0x000001a9805968cf: movq   $0x1,0x3c8(%r13)
  0x000001a9805968da: jmpq   0x000001a98059690b
  0x000001a9805968df: cmpq   $0x0,0x3d0(%r13)
  0x000001a9805968ea: jne    0x000001a980596903
  0x000001a9805968ec: mov    %r11,0x3d0(%r13)
  0x000001a9805968f3: movq   $0x1,0x3d8(%r13)
  0x000001a9805968fe: jmpq   0x000001a98059690b
  0x000001a980596903: addq   $0x1,0x3b0(%r13)
  0x000001a98059690b: mov    %r8,%r11
  0x000001a98059690e: mov    %rdx,%r8
  0x000001a980596911: mov    %r11,%rdx          ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159

  0x000001a980596914: nop
  0x000001a980596915: movabs $0xffffffffffffffff,%rax
  0x000001a98059691f: callq  0x000001a980027280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@159
                                                ;   {virtual_call}
  0x000001a980596924: cmp    $0x0,%eax
  0x000001a980596927: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596931: movabs $0x3e8,%r8
  0x000001a98059693b: je     0x000001a98059694b
  0x000001a980596941: movabs $0x3f8,%r8
  0x000001a98059694b: mov    (%rax,%r8,1),%rdx
  0x000001a98059694f: lea    0x1(%rdx),%rdx
  0x000001a980596953: mov    %rdx,(%rax,%r8,1)
  0x000001a980596957: mov    0xd0(%rsp),%rsi
  0x000001a98059695f: je     0x000001a9805969a6  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@162

  0x000001a980596965: mov    0x14(%rsi),%edi
  0x000001a980596968: shl    $0x3,%rdi          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@167

  0x000001a98059696c: cmp    $0x0,%rdi
  0x000001a980596970: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059697a: movabs $0x418,%r8
  0x000001a980596984: jne    0x000001a980596994
  0x000001a98059698a: movabs $0x408,%r8
  0x000001a980596994: mov    (%rax,%r8,1),%rdx
  0x000001a980596998: lea    0x1(%rdx),%rdx
  0x000001a98059699c: mov    %rdx,(%rax,%r8,1)
  0x000001a9805969a0: jne    0x000001a98059791d  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@173

  0x000001a9805969a6: lea    0x118(%rsp),%r8
  0x000001a9805969ae: mov    %rsi,0x8(%r8)
  0x000001a9805969b2: mov    (%rsi),%rax
  0x000001a9805969b5: mov    %rax,%rdx
  0x000001a9805969b8: and    $0x7,%rdx
  0x000001a9805969bc: cmp    $0x5,%rdx
  0x000001a9805969c0: jne    0x000001a980596a47
  0x000001a9805969c6: mov    0x8(%rsi),%edx
  0x000001a9805969c9: shl    $0x3,%rdx
  0x000001a9805969cd: mov    0xb0(%rdx),%rdx
  0x000001a9805969d4: or     %r15,%rdx
  0x000001a9805969d7: xor    %rax,%rdx
  0x000001a9805969da: and    $0xffffffffffffff87,%rdx
  0x000001a9805969de: je     0x000001a980596a6f
  0x000001a9805969e4: test   $0x7,%rdx
  0x000001a9805969eb: jne    0x000001a980596a34
  0x000001a9805969ed: test   $0x300,%rdx
  0x000001a9805969f4: jne    0x000001a980596a13
  0x000001a9805969f6: and    $0x37f,%rax
  0x000001a9805969fd: mov    %rax,%rdx
  0x000001a980596a00: or     %r15,%rdx
  0x000001a980596a03: lock cmpxchg %rdx,(%rsi)
  0x000001a980596a08: jne    0x000001a980597ca3
  0x000001a980596a0e: jmpq   0x000001a980596a6f
  0x000001a980596a13: mov    0x8(%rsi),%edx
  0x000001a980596a16: shl    $0x3,%rdx
  0x000001a980596a1a: mov    0xb0(%rdx),%rdx
  0x000001a980596a21: or     %r15,%rdx
  0x000001a980596a24: lock cmpxchg %rdx,(%rsi)
  0x000001a980596a29: jne    0x000001a980597ca3
  0x000001a980596a2f: jmpq   0x000001a980596a6f
  0x000001a980596a34: mov    0x8(%rsi),%edx
  0x000001a980596a37: shl    $0x3,%rdx
  0x000001a980596a3b: mov    0xb0(%rdx),%rdx
  0x000001a980596a42: lock cmpxchg %rdx,(%rsi)
  0x000001a980596a47: mov    (%rsi),%rax
  0x000001a980596a4a: or     $0x1,%rax
  0x000001a980596a4e: mov    %rax,(%r8)
  0x000001a980596a51: lock cmpxchg %r8,(%rsi)
  0x000001a980596a56: je     0x000001a980596a6f
  0x000001a980596a5c: sub    %rsp,%rax
  0x000001a980596a5f: and    $0xfffffffffffff007,%rax
  0x000001a980596a66: mov    %rax,(%r8)
  0x000001a980596a69: jne    0x000001a980597ca3  ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187

  0x000001a980596a6f: mov    0xe0(%rsp),%rdx
  0x000001a980596a77: mov    0xd8(%rsp),%rdi
  0x000001a980596a7f: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596a89: addq   $0x1,0x428(%r8)
  0x000001a980596a91: movabs $0x1a9ff75fd90,%r8  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596a9b: mov    0xfc(%r8),%ebx
  0x000001a980596aa2: add    $0x8,%ebx
  0x000001a980596aa5: mov    %ebx,0xfc(%r8)
  0x000001a980596aac: and    $0x7ffff8,%ebx
  0x000001a980596ab2: cmp    $0x0,%ebx
  0x000001a980596ab5: je     0x000001a980597cb6
  0x000001a980596abb: movabs $0x1a9ff75fd90,%r8  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596ac5: lea    0x170(%r8),%r8
  0x000001a980596acc: mov    %rdi,%rbx
  0x000001a980596acf: mov    0x8(%rbx),%ebx
  0x000001a980596ad2: shl    $0x3,%rbx
  0x000001a980596ad6: xor    0x8(%r8),%rbx
  0x000001a980596ada: test   $0xfffffffffffffffc,%rbx
  0x000001a980596ae1: je     0x000001a980596af4
  0x000001a980596ae3: test   $0x2,%rbx
  0x000001a980596aea: jne    0x000001a980596af4
  0x000001a980596aec: orq    $0x2,0x8(%r8)
  0x000001a980596af4: movabs $0x6d1708638,%r8   ;   {oop(a 'jdk/internal/misc/Unsafe'{0x00000006d1708638})}
  0x000001a980596afe: movabs $0x1a9ff75fd90,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596b08: addq   $0x1,0x138(%rbx)
  0x000001a980596b10: movabs $0x1a9ff761288,%r8  ;   {metadata(method data for {method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a980596b1a: mov    0xfc(%r8),%ebx
  0x000001a980596b21: add    $0x8,%ebx
  0x000001a980596b24: mov    %ebx,0xfc(%r8)
  0x000001a980596b2b: and    $0x7ffff8,%ebx
  0x000001a980596b31: cmp    $0x0,%ebx
  0x000001a980596b34: je     0x000001a980597cd7
  0x000001a980596b3a: mov    (%rdi,%rdx,1),%r8d
  0x000001a980596b3e: shl    $0x3,%r8
  0x000001a980596b42: movabs $0xc,%rbx
  0x000001a980596b4c: cmp    %rbx,%rdx
  0x000001a980596b4f: jne    0x000001a980596b87
  0x000001a980596b55: cmp    $0x0,%rdi
  0x000001a980596b59: je     0x000001a980596b87
  0x000001a980596b5f: mov    0x8(%rdi),%edx
  0x000001a980596b62: shl    $0x3,%rdx
  0x000001a980596b66: movsbl 0x16b(%rdx),%edx
  0x000001a980596b6d: cmp    $0x0,%edx
  0x000001a980596b70: je     0x000001a980596b87
  0x000001a980596b76: movsbl 0x398(%r15),%edx
  0x000001a980596b7e: cmp    $0x0,%edx
  0x000001a980596b81: jne    0x000001a980597cf8
  0x000001a980596b87: cmp    $0x0,%r8
  0x000001a980596b8b: jne    0x000001a980596ba6
  0x000001a980596b8d: movabs $0x1a9ff75fd90,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596b97: orl    $0x100,0x180(%rbx)
  0x000001a980596ba1: jmpq   0x000001a980596c69
  0x000001a980596ba6: movabs $0x7c001acb8,%rax  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980596bb0: mov    0x8(%r8),%ebx
  0x000001a980596bb4: shl    $0x3,%rbx
  0x000001a980596bb8: cmp    0x30(%rbx),%rax
  0x000001a980596bbc: jne    0x000001a980596c4d
  0x000001a980596bc2: movabs $0x1a9ff75fd90,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596bcc: mov    0x8(%r8),%eax
  0x000001a980596bd0: shl    $0x3,%rax
  0x000001a980596bd4: cmp    0x198(%rbx),%rax
  0x000001a980596bdb: jne    0x000001a980596bea
  0x000001a980596bdd: addq   $0x1,0x1a0(%rbx)
  0x000001a980596be5: jmpq   0x000001a980596c69
  0x000001a980596bea: cmp    0x1a8(%rbx),%rax
  0x000001a980596bf1: jne    0x000001a980596c00
  0x000001a980596bf3: addq   $0x1,0x1b0(%rbx)
  0x000001a980596bfb: jmpq   0x000001a980596c69
  0x000001a980596c00: cmpq   $0x0,0x198(%rbx)
  0x000001a980596c0b: jne    0x000001a980596c24
  0x000001a980596c0d: mov    %rax,0x198(%rbx)
  0x000001a980596c14: movq   $0x1,0x1a0(%rbx)
  0x000001a980596c1f: jmpq   0x000001a980596c69
  0x000001a980596c24: cmpq   $0x0,0x1a8(%rbx)
  0x000001a980596c2f: jne    0x000001a980596c48
  0x000001a980596c31: mov    %rax,0x1a8(%rbx)
  0x000001a980596c38: movq   $0x1,0x1b0(%rbx)
  0x000001a980596c43: jmpq   0x000001a980596c69
  0x000001a980596c48: jmpq   0x000001a980596c69
  0x000001a980596c4d: movabs $0x1a9ff75fd90,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596c57: subq   $0x1,0x188(%rbx)
  0x000001a980596c5f: jmpq   0x000001a980597d10
  0x000001a980596c64: jmpq   0x000001a980596c69  ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192

  0x000001a980596c69: cmp    %rsi,%r8
  0x000001a980596c6c: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596c76: movabs $0x448,%rdx
  0x000001a980596c80: je     0x000001a980596c90
  0x000001a980596c86: movabs $0x438,%rdx
  0x000001a980596c90: mov    (%r8,%rdx,1),%rbx
  0x000001a980596c94: lea    0x1(%rbx),%rbx
  0x000001a980596c98: mov    %rbx,(%r8,%rdx,1)
  0x000001a980596c9c: je     0x000001a980596ccf  ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@197

  0x000001a980596ca2: mov    0xc4(%rsp),%ebx
  0x000001a980596ca9: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000001a980596cb3: mov    %rdi,0xd8(%rsp)
  0x000001a980596cbb: mov    0xc0(%rsp),%edi
  0x000001a980596cc2: mov    0xb8(%rsp),%r9
  0x000001a980596cca: jmpq   0x000001a98059774b  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379

  0x000001a980596ccf: mov    0xcc(%rsp),%r8d
  0x000001a980596cd7: cmp    $0x0,%r8d
  0x000001a980596cdb: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596ce5: movabs $0x458,%rdx
  0x000001a980596cef: jl     0x000001a980596cff
  0x000001a980596cf5: movabs $0x468,%rdx
  0x000001a980596cff: mov    (%r8,%rdx,1),%rbx
  0x000001a980596d03: lea    0x1(%rbx),%rbx
  0x000001a980596d07: mov    %rbx,(%r8,%rdx,1)
  0x000001a980596d0b: jl     0x000001a98059722a  ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@202

  0x000001a980596d11: mov    %rsi,%rbx
  0x000001a980596d14: mov    $0x1,%eax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@212

  0x000001a980596d19: mov    %eax,0xec(%rsp)
  0x000001a980596d20: mov    %rdi,0xd8(%rsp)
  0x000001a980596d28: mov    0xc8(%rsp),%edx
  0x000001a980596d2f: mov    0xb0(%rsp),%r8
  0x000001a980596d37: mov    0xc(%rbx),%ecx     ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ; implicit exception: dispatches to 0x000001a980597d19
  0x000001a980596d3a: cmp    %edx,%ecx
  0x000001a980596d3c: movabs $0x1a9ff7edce0,%rcx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596d46: movabs $0x478,%r9
  0x000001a980596d50: jne    0x000001a980596d60
  0x000001a980596d56: movabs $0x488,%r9
  0x000001a980596d60: mov    (%rcx,%r9,1),%r11
  0x000001a980596d64: lea    0x1(%r11),%r11
  0x000001a980596d68: mov    %r11,(%rcx,%r9,1)
  0x000001a980596d6c: jne    0x000001a980596ee5  ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@219

  0x000001a980596d72: mov    0x10(%rbx),%ecx
  0x000001a980596d75: shl    $0x3,%rcx          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@224

  0x000001a980596d79: cmp    %r8,%rcx
  0x000001a980596d7c: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596d86: movabs $0x498,%r11
  0x000001a980596d90: je     0x000001a980596da0
  0x000001a980596d96: movabs $0x4a8,%r11
  0x000001a980596da0: mov    (%r9,%r11,1),%r13
  0x000001a980596da4: lea    0x1(%r13),%r13
  0x000001a980596da8: mov    %r13,(%r9,%r11,1)
  0x000001a980596dac: je     0x000001a980596f95  ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@231

  0x000001a980596db2: cmp    $0x0,%rcx
  0x000001a980596db6: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596dc0: movabs $0x4b8,%r11
  0x000001a980596dca: je     0x000001a980596dda
  0x000001a980596dd0: movabs $0x4c8,%r11
  0x000001a980596dda: mov    (%r9,%r11,1),%r13
  0x000001a980596dde: lea    0x1(%r13),%r13
  0x000001a980596de2: mov    %r13,(%r9,%r11,1)
  0x000001a980596de6: je     0x000001a980596ee5  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@236

  0x000001a980596dec: mov    %rbx,0xf0(%rsp)
  0x000001a980596df4: mov    %r8,%r9
  0x000001a980596df7: movabs $0x1a9ff7edce0,%r11  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596e01: mov    0x8(%r9),%r9d
  0x000001a980596e05: shl    $0x3,%r9
  0x000001a980596e09: cmp    0x4e8(%r11),%r9
  0x000001a980596e10: jne    0x000001a980596e1f
  0x000001a980596e12: addq   $0x1,0x4f0(%r11)
  0x000001a980596e1a: jmpq   0x000001a980596e85
  0x000001a980596e1f: cmp    0x4f8(%r11),%r9
  0x000001a980596e26: jne    0x000001a980596e35
  0x000001a980596e28: addq   $0x1,0x500(%r11)
  0x000001a980596e30: jmpq   0x000001a980596e85
  0x000001a980596e35: cmpq   $0x0,0x4e8(%r11)
  0x000001a980596e40: jne    0x000001a980596e59
  0x000001a980596e42: mov    %r9,0x4e8(%r11)
  0x000001a980596e49: movq   $0x1,0x4f0(%r11)
  0x000001a980596e54: jmpq   0x000001a980596e85
  0x000001a980596e59: cmpq   $0x0,0x4f8(%r11)
  0x000001a980596e64: jne    0x000001a980596e7d
  0x000001a980596e66: mov    %r9,0x4f8(%r11)
  0x000001a980596e6d: movq   $0x1,0x500(%r11)
  0x000001a980596e78: jmpq   0x000001a980596e85
  0x000001a980596e7d: addq   $0x1,0x4d8(%r11)
  0x000001a980596e85: mov    %r8,%r9
  0x000001a980596e88: mov    %rcx,%r8
  0x000001a980596e8b: mov    %r9,%rdx           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242

  0x000001a980596e8e: nopl   0x0(%rax)
  0x000001a980596e95: movabs $0xffffffffffffffff,%rax
  0x000001a980596e9f: callq  0x000001a980027280  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }
                                                ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@242
                                                ;   {virtual_call}
  0x000001a980596ea4: cmp    $0x0,%eax
  0x000001a980596ea7: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596eb1: movabs $0x520,%rsi
  0x000001a980596ebb: jne    0x000001a980596ecb
  0x000001a980596ec1: movabs $0x510,%rsi
  0x000001a980596ecb: mov    (%rdx,%rsi,1),%rdi
  0x000001a980596ecf: lea    0x1(%rdi),%rdi
  0x000001a980596ed3: mov    %rdi,(%rdx,%rsi,1)
  0x000001a980596ed7: mov    0xf0(%rsp),%rbx
  0x000001a980596edf: jne    0x000001a980596f81  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@245

  0x000001a980596ee5: mov    0x18(%rbx),%edx
  0x000001a980596ee8: shl    $0x3,%rdx          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@274

  0x000001a980596eec: cmp    $0x0,%rdx
  0x000001a980596ef0: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596efa: movabs $0x578,%rdi
  0x000001a980596f04: je     0x000001a980596f14
  0x000001a980596f0a: movabs $0x568,%rdi
  0x000001a980596f14: mov    (%rsi,%rdi,1),%rax
  0x000001a980596f18: lea    0x1(%rax),%rax
  0x000001a980596f1c: mov    %rax,(%rsi,%rdi,1)
  0x000001a980596f20: je     0x000001a980597064  ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@280

  0x000001a980596f26: mov    0xec(%rsp),%eax
  0x000001a980596f2d: inc    %eax
  0x000001a980596f2f: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596f39: mov    0x100(%rsi),%edi
  0x000001a980596f3f: add    $0x8,%edi
  0x000001a980596f42: mov    %edi,0x100(%rsi)
  0x000001a980596f48: and    $0xfff8,%edi
  0x000001a980596f4e: cmp    $0x0,%edi
  0x000001a980596f51: je     0x000001a980597d1e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a980596f57: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a980596f5b: test   %eax,(%r10)        ;   {poll}
  0x000001a980596f5e: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596f68: incl   0x5b0(%rsi)
  0x000001a980596f6e: mov    %rdx,%rbx
  0x000001a980596f71: mov    %rax,%r8
  0x000001a980596f74: mov    %r8d,0xec(%rsp)
  0x000001a980596f7c: jmpq   0x000001a980596d28  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305

  0x000001a980596f81: mov    0xec(%rsp),%r8d
  0x000001a980596f89: mov    0xc0(%rsp),%edi
  0x000001a980596f90: jmpq   0x000001a980596fa4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@248

  0x000001a980596f95: mov    0xc0(%rsp),%edi
  0x000001a980596f9c: mov    0xec(%rsp),%r8d
  0x000001a980596fa4: mov    0x14(%rbx),%edx
  0x000001a980596fa7: shl    $0x3,%rdx          ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@250

  0x000001a980596fab: cmp    $0x0,%edi
  0x000001a980596fae: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980596fb8: movabs $0x540,%rax
  0x000001a980596fc2: je     0x000001a980596fd2
  0x000001a980596fc8: movabs $0x530,%rax
  0x000001a980596fd2: mov    (%rsi,%rax,1),%rcx
  0x000001a980596fd6: lea    0x1(%rcx),%rcx
  0x000001a980596fda: mov    %rcx,(%rsi,%rax,1)
  0x000001a980596fde: je     0x000001a980597001  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@256

  0x000001a980596fe4: mov    0xc8(%rsp),%r13d
  0x000001a980596fec: mov    0xb8(%rsp),%r9
  0x000001a980596ff4: mov    0xb0(%rsp),%r11
  0x000001a980596ffc: jmpq   0x000001a980597208  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x000001a980597001: mov    0xb8(%rsp),%r9
  0x000001a980597009: movsbl 0x398(%r15),%esi
  0x000001a980597011: cmp    $0x0,%esi
  0x000001a980597014: jne    0x000001a980597d3f
  0x000001a98059701a: mov    %r9,%r10
  0x000001a98059701d: shr    $0x3,%r10
  0x000001a980597021: mov    %r10d,0x14(%rbx)
  0x000001a980597025: mov    %rbx,%rsi
  0x000001a980597028: xor    %r9,%rsi
  0x000001a98059702b: shr    $0x14,%rsi
  0x000001a98059702f: cmp    $0x0,%rsi
  0x000001a980597033: jne    0x000001a980597d5e
  0x000001a980597039: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@262

  0x000001a98059703f: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597049: incl   0x550(%rsi)
  0x000001a98059704f: mov    0xc8(%rsp),%r13d
  0x000001a980597057: mov    0xb0(%rsp),%r11
  0x000001a98059705f: jmpq   0x000001a980597208  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@265

  0x000001a980597064: mov    0xec(%rsp),%r8d
  0x000001a98059706c: mov    0xc8(%rsp),%edx
  0x000001a980597073: mov    0xb8(%rsp),%r9
  0x000001a98059707b: mov    0xb0(%rsp),%r11
  0x000001a980597083: mov    %rdx,%r13
  0x000001a980597086: movabs $0x7c001acb8,%rdx  ;   {metadata('java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980597090: mov    0x80(%r15),%rax
  0x000001a980597097: lea    0x20(%rax),%rdi
  0x000001a98059709b: cmp    0x90(%r15),%rdi
  0x000001a9805970a2: ja     0x000001a980597d76
  0x000001a9805970a8: mov    %rdi,0x80(%r15)
  0x000001a9805970af: mov    0xb0(%rdx),%rcx
  0x000001a9805970b6: mov    %rcx,(%rax)
  0x000001a9805970b9: mov    %rdx,%rcx
  0x000001a9805970bc: shr    $0x3,%rcx
  0x000001a9805970c0: mov    %ecx,0x8(%rax)
  0x000001a9805970c3: xor    %rcx,%rcx
  0x000001a9805970c6: mov    %ecx,0xc(%rax)
  0x000001a9805970c9: xor    %rcx,%rcx
  0x000001a9805970cc: mov    %rcx,0x10(%rax)
  0x000001a9805970d0: mov    %rcx,0x18(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285

  0x000001a9805970d4: mov    %rax,%rdi
  0x000001a9805970d7: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805970e1: addq   $0x1,0x588(%rdx)
  0x000001a9805970e9: movabs $0x1a9ff7eeb68,%rdi  ;   {metadata(method data for {method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a9805970f3: mov    0xfc(%rdi),%edx
  0x000001a9805970f9: add    $0x8,%edx
  0x000001a9805970fc: mov    %edx,0xfc(%rdi)
  0x000001a980597102: and    $0x7ffff8,%edx
  0x000001a980597108: cmp    $0x0,%edx
  0x000001a98059710b: je     0x000001a980597d83
  0x000001a980597111: mov    %rax,%rdi
  0x000001a980597114: movabs $0x1a9ff7eeb68,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a98059711e: addq   $0x1,0x138(%rdx)
  0x000001a980597126: movabs $0x1a9ff7532f0,%rdi  ;   {metadata(method data for {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a980597130: mov    0xfc(%rdi),%edx
  0x000001a980597136: add    $0x8,%edx
  0x000001a980597139: mov    %edx,0xfc(%rdi)
  0x000001a98059713f: and    $0x7ffff8,%edx
  0x000001a980597145: cmp    $0x0,%edx
  0x000001a980597148: je     0x000001a980597da4
  0x000001a98059714e: mov    %r13d,0xc(%rax)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@6
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293

  0x000001a980597152: movsbl 0x398(%r15),%edi
  0x000001a98059715a: cmp    $0x0,%edi
  0x000001a98059715d: jne    0x000001a980597dc5
  0x000001a980597163: mov    %r11,%r10
  0x000001a980597166: shr    $0x3,%r10
  0x000001a98059716a: mov    %r10d,0x10(%rax)
  0x000001a98059716e: mov    %rax,%rdi
  0x000001a980597171: xor    %r11,%rdi
  0x000001a980597174: shr    $0x14,%rdi
  0x000001a980597178: cmp    $0x0,%rdi
  0x000001a98059717c: jne    0x000001a980597de4
  0x000001a980597182: movsbl 0x398(%r15),%edi
  0x000001a98059718a: cmp    $0x0,%edi
  0x000001a98059718d: jne    0x000001a980597dfc
  0x000001a980597193: mov    %r9,%r10
  0x000001a980597196: shr    $0x3,%r10
  0x000001a98059719a: mov    %r10d,0x14(%rax)
  0x000001a98059719e: mov    %rax,%rdi
  0x000001a9805971a1: xor    %r9,%rdi
  0x000001a9805971a4: shr    $0x14,%rdi
  0x000001a9805971a8: cmp    $0x0,%rdi
  0x000001a9805971ac: jne    0x000001a980597e1b
  0x000001a9805971b2: lock addl $0x0,-0x40(%rsp)
  0x000001a9805971b8: movsbl 0x398(%r15),%edi
  0x000001a9805971c0: cmp    $0x0,%edi
  0x000001a9805971c3: jne    0x000001a980597e33
  0x000001a9805971c9: mov    %rax,%r10
  0x000001a9805971cc: shr    $0x3,%r10
  0x000001a9805971d0: mov    %r10d,0x18(%rbx)
  0x000001a9805971d4: mov    %rbx,%rdi
  0x000001a9805971d7: xor    %rax,%rdi
  0x000001a9805971da: shr    $0x14,%rdi
  0x000001a9805971de: cmp    $0x0,%rdi
  0x000001a9805971e2: jne    0x000001a980597e52
  0x000001a9805971e8: lock addl $0x0,-0x40(%rsp)  ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@296

  0x000001a9805971ee: movabs $0x1a9ff7edce0,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805971f8: incl   0x598(%rdi)
  0x000001a9805971fe: movabs $0x0,%rdx          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@299
                                                ;   {oop(NULL)}
  0x000001a980597208: movabs $0x1a9ff7edce0,%rdi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597212: incl   0x5c8(%rdi)
  0x000001a980597218: mov    %rdx,%rsi
  0x000001a98059721b: mov    %r8,%rbx
  0x000001a98059721e: mov    0xc0(%rsp),%edi
  0x000001a980597225: jmpq   0x000001a98059774b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@308

  0x000001a98059722a: mov    %rdi,0xd8(%rsp)
  0x000001a980597232: mov    0xc8(%rsp),%r13d
  0x000001a98059723a: mov    0xb8(%rsp),%r9
  0x000001a980597242: mov    0xb0(%rsp),%r11
  0x000001a98059724a: cmp    $0x0,%rsi
  0x000001a98059724e: jne    0x000001a980597269
  0x000001a980597250: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059725a: orl    $0x100,0x5d8(%rdx)
  0x000001a980597264: jmpq   0x000001a980597358
  0x000001a980597269: nopl   0x0(%rax)
  0x000001a980597270: jmpq   0x000001a980597e79  ;   {no_reloc}
  0x000001a980597275: add    %al,(%rax)
  0x000001a980597277: add    %al,(%rax)
  0x000001a980597279: add    %cl,-0x3eb7f7aa(%rbx)
  0x000001a98059727f: loop   0x000001a980597284
  0x000001a980597281: cmp    %rbx,%rdx
  0x000001a980597284: je     0x000001a9805972b2
  0x000001a98059728a: mov    0xc(%rbx),%edi
  0x000001a98059728d: cmp    (%rdx,%rdi,1),%rbx
  0x000001a980597291: je     0x000001a9805972b2
  0x000001a980597297: cmp    $0x18,%edi
  0x000001a98059729a: jne    0x000001a98059733c
  0x000001a9805972a0: push   %rdx
  0x000001a9805972a1: push   %rbx
  0x000001a9805972a2: callq  0x000001a9800ef180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a9805972a7: pop    %rdx
  0x000001a9805972a8: pop    %rbx
  0x000001a9805972a9: cmp    $0x0,%ebx
  0x000001a9805972ac: je     0x000001a98059733c
  0x000001a9805972b2: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805972bc: mov    0x8(%rsi),%ebx
  0x000001a9805972bf: shl    $0x3,%rbx
  0x000001a9805972c3: cmp    0x5f0(%rdx),%rbx
  0x000001a9805972ca: jne    0x000001a9805972d9
  0x000001a9805972cc: addq   $0x1,0x5f8(%rdx)
  0x000001a9805972d4: jmpq   0x000001a98059735d
  0x000001a9805972d9: cmp    0x600(%rdx),%rbx
  0x000001a9805972e0: jne    0x000001a9805972ef
  0x000001a9805972e2: addq   $0x1,0x608(%rdx)
  0x000001a9805972ea: jmpq   0x000001a98059735d
  0x000001a9805972ef: cmpq   $0x0,0x5f0(%rdx)
  0x000001a9805972fa: jne    0x000001a980597313
  0x000001a9805972fc: mov    %rbx,0x5f0(%rdx)
  0x000001a980597303: movq   $0x1,0x5f8(%rdx)
  0x000001a98059730e: jmpq   0x000001a98059735d
  0x000001a980597313: cmpq   $0x0,0x600(%rdx)
  0x000001a98059731e: jne    0x000001a980597337
  0x000001a980597320: mov    %rbx,0x600(%rdx)
  0x000001a980597327: movq   $0x1,0x608(%rdx)
  0x000001a980597332: jmpq   0x000001a98059735d
  0x000001a980597337: jmpq   0x000001a98059735d
  0x000001a98059733c: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597346: subq   $0x1,0x5e0(%rdx)
  0x000001a98059734e: jmpq   0x000001a980597358
  0x000001a980597353: jmpq   0x000001a98059735d
  0x000001a980597358: xor    %r8,%r8
  0x000001a98059735b: jmp    0x000001a980597367
  0x000001a98059735d: movabs $0x1,%r8           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313

  0x000001a980597367: cmp    $0x0,%r8d
  0x000001a98059736b: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597375: movabs $0x618,%rdi
  0x000001a98059737f: je     0x000001a98059738f
  0x000001a980597385: movabs $0x628,%rdi
  0x000001a98059738f: mov    (%r8,%rdi,1),%rdx
  0x000001a980597393: lea    0x1(%rdx),%rdx
  0x000001a980597397: mov    %rdx,(%r8,%rdi,1)
  0x000001a98059739b: je     0x000001a9805975db  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@316

  0x000001a9805973a1: cmp    $0x0,%rsi
  0x000001a9805973a5: jne    0x000001a9805973c0
  0x000001a9805973a7: movabs $0x1a9ff7edce0,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805973b1: orl    $0x100,0x630(%rbx)
  0x000001a9805973bb: jmpq   0x000001a9805974aa
  0x000001a9805973c0: jmpq   0x000001a980597e92  ;   {no_reloc}
  0x000001a9805973c5: add    %al,(%rax)
  0x000001a9805973c7: add    %al,(%rax)
  0x000001a9805973c9: add    %cl,-0x3eb7f7a2(%rbx)
  0x000001a9805973cf: jrcxz  0x000001a9805973d4
  0x000001a9805973d1: cmp    %rax,%rbx
  0x000001a9805973d4: je     0x000001a980597404
  0x000001a9805973da: mov    0xc(%rax),%r8d
  0x000001a9805973de: cmp    (%rbx,%r8,1),%rax
  0x000001a9805973e2: je     0x000001a980597404
  0x000001a9805973e8: cmp    $0x18,%r8d
  0x000001a9805973ec: jne    0x000001a98059748e
  0x000001a9805973f2: push   %rbx
  0x000001a9805973f3: push   %rax
  0x000001a9805973f4: callq  0x000001a9800ef180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a9805973f9: pop    %rbx
  0x000001a9805973fa: pop    %rax
  0x000001a9805973fb: cmp    $0x0,%eax
  0x000001a9805973fe: je     0x000001a98059748e
  0x000001a980597404: movabs $0x1a9ff7edce0,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059740e: mov    0x8(%rsi),%eax
  0x000001a980597411: shl    $0x3,%rax
  0x000001a980597415: cmp    0x648(%rbx),%rax
  0x000001a98059741c: jne    0x000001a98059742b
  0x000001a98059741e: addq   $0x1,0x650(%rbx)
  0x000001a980597426: jmpq   0x000001a9805974aa
  0x000001a98059742b: cmp    0x658(%rbx),%rax
  0x000001a980597432: jne    0x000001a980597441
  0x000001a980597434: addq   $0x1,0x660(%rbx)
  0x000001a98059743c: jmpq   0x000001a9805974aa
  0x000001a980597441: cmpq   $0x0,0x648(%rbx)
  0x000001a98059744c: jne    0x000001a980597465
  0x000001a98059744e: mov    %rax,0x648(%rbx)
  0x000001a980597455: movq   $0x1,0x650(%rbx)
  0x000001a980597460: jmpq   0x000001a9805974aa
  0x000001a980597465: cmpq   $0x0,0x658(%rbx)
  0x000001a980597470: jne    0x000001a980597489
  0x000001a980597472: mov    %rax,0x658(%rbx)
  0x000001a980597479: movq   $0x1,0x660(%rbx)
  0x000001a980597484: jmpq   0x000001a9805974aa
  0x000001a980597489: jmpq   0x000001a9805974aa
  0x000001a98059748e: movabs $0x1a9ff7edce0,%rbx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597498: subq   $0x1,0x638(%rbx)
  0x000001a9805974a0: jmpq   0x000001a980597e9c
  0x000001a9805974a5: jmpq   0x000001a9805974aa
  0x000001a9805974aa: mov    %rsi,%rdx          ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324

  0x000001a9805974ad: mov    %r13,%r8
  0x000001a9805974b0: mov    %r9,%rbx
  0x000001a9805974b3: mov    %r11,%r9
  0x000001a9805974b6: mov    %rbx,%rdi          ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331

  0x000001a9805974b9: nopl   0x0(%rax)
  0x000001a9805974bd: movabs $0xffffffffffffffff,%rax
  0x000001a9805974c7: callq  0x000001a980027280  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }
                                                ;*invokevirtual putTreeVal {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@331
                                                ;   {virtual_call}
  0x000001a9805974cc: cmp    $0x0,%rax
  0x000001a9805974d0: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805974da: movabs $0x6b8,%r9
  0x000001a9805974e4: jne    0x000001a9805974f4
  0x000001a9805974ea: movabs $0x6a8,%r9
  0x000001a9805974f4: mov    (%r8,%r9,1),%rdx
  0x000001a9805974f8: lea    0x1(%rdx),%rdx
  0x000001a9805974fc: mov    %rdx,(%r8,%r9,1)
  0x000001a980597500: jne    0x000001a980597524  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@337

  0x000001a980597506: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a980597510: mov    0xc0(%rsp),%edi
  0x000001a980597517: mov    0xb8(%rsp),%r9
  0x000001a98059751f: jmpq   0x000001a9805975bd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a980597524: mov    0xc0(%rsp),%edi
  0x000001a98059752b: mov    0x14(%rax),%r8d    ; implicit exception: dispatches to 0x000001a980597ea5
  0x000001a98059752f: shl    $0x3,%r8           ;*getfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342

  0x000001a980597533: cmp    $0x0,%edi
  0x000001a980597536: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597540: movabs $0x6d8,%rdx
  0x000001a98059754a: je     0x000001a98059755a
  0x000001a980597550: movabs $0x6c8,%rdx
  0x000001a98059755a: mov    (%r9,%rdx,1),%rsi
  0x000001a98059755e: lea    0x1(%rsi),%rsi
  0x000001a980597562: mov    %rsi,(%r9,%rdx,1)
  0x000001a980597566: je     0x000001a98059757c  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@348

  0x000001a98059756c: mov    %r8,%rax
  0x000001a98059756f: mov    0xb8(%rsp),%r9
  0x000001a980597577: jmpq   0x000001a9805975bd  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a98059757c: mov    0xb8(%rsp),%r9
  0x000001a980597584: movsbl 0x398(%r15),%edx
  0x000001a98059758c: cmp    $0x0,%edx
  0x000001a98059758f: jne    0x000001a980597eaa
  0x000001a980597595: mov    %r9,%r10
  0x000001a980597598: shr    $0x3,%r10
  0x000001a98059759c: mov    %r10d,0x14(%rax)
  0x000001a9805975a0: mov    %rax,%rdx
  0x000001a9805975a3: xor    %r9,%rdx
  0x000001a9805975a6: shr    $0x14,%rdx
  0x000001a9805975aa: cmp    $0x0,%rdx
  0x000001a9805975ae: jne    0x000001a980597ec9
  0x000001a9805975b4: lock addl $0x0,-0x40(%rsp)  ;*putfield val {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@354

  0x000001a9805975ba: mov    %r8,%rax
  0x000001a9805975bd: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805975c7: incl   0x6e8(%r8)
  0x000001a9805975ce: mov    %rax,%rsi
  0x000001a9805975d1: mov    $0x2,%ebx
  0x000001a9805975d6: jmpq   0x000001a98059774b  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@357

  0x000001a9805975db: mov    0xc0(%rsp),%edi
  0x000001a9805975e2: cmp    $0x0,%rsi
  0x000001a9805975e6: jne    0x000001a980597601
  0x000001a9805975e8: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805975f2: orl    $0x100,0x6f8(%rdx)
  0x000001a9805975fc: jmpq   0x000001a9805976f2
  0x000001a980597601: nopl   0x0(%rax)
  0x000001a980597608: jmpq   0x000001a980597ef0  ;   {no_reloc}
  0x000001a98059760d: add    %al,(%rax)
  0x000001a98059760f: add    %al,(%rax)
  0x000001a980597611: add    %cl,-0x3eb7f7aa(%rbx)
  0x000001a980597617: loop   0x000001a98059761c
  0x000001a980597619: cmp    %rbx,%rdx
  0x000001a98059761c: je     0x000001a98059764c
  0x000001a980597622: mov    0xc(%rbx),%r8d
  0x000001a980597626: cmp    (%rdx,%r8,1),%rbx
  0x000001a98059762a: je     0x000001a98059764c
  0x000001a980597630: cmp    $0x18,%r8d
  0x000001a980597634: jne    0x000001a9805976d6
  0x000001a98059763a: push   %rdx
  0x000001a98059763b: push   %rbx
  0x000001a98059763c: callq  0x000001a9800ef180  ;   {runtime_call slow_subtype_check Runtime1 stub}
  0x000001a980597641: pop    %rdx
  0x000001a980597642: pop    %rbx
  0x000001a980597643: cmp    $0x0,%ebx
  0x000001a980597646: je     0x000001a9805976d6
  0x000001a98059764c: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597656: mov    0x8(%rsi),%ebx
  0x000001a980597659: shl    $0x3,%rbx
  0x000001a98059765d: cmp    0x710(%rdx),%rbx
  0x000001a980597664: jne    0x000001a980597673
  0x000001a980597666: addq   $0x1,0x718(%rdx)
  0x000001a98059766e: jmpq   0x000001a9805976f7
  0x000001a980597673: cmp    0x720(%rdx),%rbx
  0x000001a98059767a: jne    0x000001a980597689
  0x000001a98059767c: addq   $0x1,0x728(%rdx)
  0x000001a980597684: jmpq   0x000001a9805976f7
  0x000001a980597689: cmpq   $0x0,0x710(%rdx)
  0x000001a980597694: jne    0x000001a9805976ad
  0x000001a980597696: mov    %rbx,0x710(%rdx)
  0x000001a98059769d: movq   $0x1,0x718(%rdx)
  0x000001a9805976a8: jmpq   0x000001a9805976f7
  0x000001a9805976ad: cmpq   $0x0,0x720(%rdx)
  0x000001a9805976b8: jne    0x000001a9805976d1
  0x000001a9805976ba: mov    %rbx,0x720(%rdx)
  0x000001a9805976c1: movq   $0x1,0x728(%rdx)
  0x000001a9805976cc: jmpq   0x000001a9805976f7
  0x000001a9805976d1: jmpq   0x000001a9805976f7
  0x000001a9805976d6: movabs $0x1a9ff7edce0,%rdx  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805976e0: subq   $0x1,0x700(%rdx)
  0x000001a9805976e8: jmpq   0x000001a9805976f2
  0x000001a9805976ed: jmpq   0x000001a9805976f7
  0x000001a9805976f2: xor    %rax,%rax
  0x000001a9805976f5: jmp    0x000001a980597701
  0x000001a9805976f7: movabs $0x1,%rax          ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362

  0x000001a980597701: cmp    $0x0,%eax
  0x000001a980597704: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059770e: movabs $0x748,%r8
  0x000001a980597718: jne    0x000001a980597728
  0x000001a98059771e: movabs $0x738,%r8
  0x000001a980597728: mov    (%rax,%r8,1),%rdx
  0x000001a98059772c: lea    0x1(%rdx),%rdx
  0x000001a980597730: mov    %rdx,(%rax,%r8,1)
  0x000001a980597734: jne    0x000001a980597996  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@365

  0x000001a98059773a: mov    0xc4(%rsp),%ebx
  0x000001a980597741: movabs $0x0,%rsi          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@379
                                                ;   {oop(NULL)}
  0x000001a98059774b: lea    0x118(%rsp),%rax
  0x000001a980597753: mov    0x8(%rax),%rdx
  0x000001a980597757: mov    (%rdx),%r8
  0x000001a98059775a: and    $0x7,%r8
  0x000001a98059775e: cmp    $0x5,%r8
  0x000001a980597762: je     0x000001a98059777f
  0x000001a980597768: mov    (%rax),%r8
  0x000001a98059776b: test   %r8,%r8
  0x000001a98059776e: je     0x000001a98059777f
  0x000001a980597774: lock cmpxchg %r8,(%rdx)
  0x000001a980597779: jne    0x000001a980597efa  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@381

  0x000001a98059777f: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597789: incl   0x768(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@382

  0x000001a980597790: cmp    $0x0,%ebx
  0x000001a980597793: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059779d: movabs $0x790,%rdx
  0x000001a9805977a7: jne    0x000001a9805977b7
  0x000001a9805977ad: movabs $0x780,%rdx
  0x000001a9805977b7: mov    (%r8,%rdx,1),%rax
  0x000001a9805977bb: lea    0x1(%rax),%rax
  0x000001a9805977bf: mov    %rax,(%r8,%rdx,1)
  0x000001a9805977c3: jne    0x000001a98059782d  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@395

  0x000001a9805977c9: mov    0xd8(%rsp),%rax
  0x000001a9805977d1: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805977db: mov    0x100(%r8),%edx
  0x000001a9805977e2: add    $0x8,%edx
  0x000001a9805977e5: mov    %edx,0x100(%r8)
  0x000001a9805977ec: and    $0xfff8,%edx
  0x000001a9805977f2: cmp    $0x0,%edx
  0x000001a9805977f5: je     0x000001a980597f10  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a9805977fb: mov    0x70(%r15),%r10    ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a9805977ff: test   %eax,(%r10)        ;   {poll}
  0x000001a980597802: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059780c: incl   0x7f0(%r8)
  0x000001a980597813: mov    %rax,%r8
  0x000001a980597816: mov    %ebx,0xc4(%rsp)
  0x000001a98059781d: mov    0xa8(%rsp),%rsi
  0x000001a980597825: mov    %r8,%rdi
  0x000001a980597828: jmpq   0x000001a980596120  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421

  0x000001a98059782d: mov    0xd8(%rsp),%r8
  0x000001a980597835: cmp    $0x8,%ebx
  0x000001a980597838: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597842: movabs $0x7b0,%rdx
  0x000001a98059784c: jge    0x000001a98059785c
  0x000001a980597852: movabs $0x7a0,%rdx
  0x000001a98059785c: mov    (%r9,%rdx,1),%rdi
  0x000001a980597860: lea    0x1(%rdi),%rdi
  0x000001a980597864: mov    %rdi,(%r9,%rdx,1)
  0x000001a980597868: jge    0x000001a98059787a  ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@402

  0x000001a98059786e: mov    %ebx,0x100(%rsp)
  0x000001a980597875: jmpq   0x000001a9805978c4  ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@413

  0x000001a98059787a: mov    %rsi,0xf8(%rsp)
  0x000001a980597882: mov    %ebx,0x100(%rsp)
  0x000001a980597889: mov    0xe8(%rsp),%ecx
  0x000001a980597890: mov    0xa8(%rsp),%rdx
  0x000001a980597898: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805978a2: addq   $0x1,0x7c0(%r9)
  0x000001a9805978aa: mov    %rcx,%r9
  0x000001a9805978ad: mov    0xa8(%rsp),%rdx    ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410

  0x000001a9805978b5: xchg   %ax,%ax
  0x000001a9805978b7: callq  0x000001a980027000  ; ImmutableOopMap{[168]=Oop [248]=Oop }
                                                ;*invokespecial treeifyBin {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@410
                                                ;   {optimized virtual_call}
  0x000001a9805978bc: mov    0xf8(%rsp),%rsi
  0x000001a9805978c4: cmp    $0x0,%rsi
  0x000001a9805978c8: movabs $0x1a9ff7edce0,%rax  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805978d2: movabs $0x7e0,%r8
  0x000001a9805978dc: jne    0x000001a9805978ec
  0x000001a9805978e2: movabs $0x7d0,%r8
  0x000001a9805978ec: mov    (%rax,%r8,1),%r9
  0x000001a9805978f0: lea    0x1(%r9),%r9
  0x000001a9805978f4: mov    %r9,(%rax,%r8,1)
  0x000001a9805978f8: jne    0x000001a98059790a  ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@415

  0x000001a9805978fe: mov    0x100(%rsp),%ebx
  0x000001a980597905: jmpq   0x000001a980597948  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@424

  0x000001a98059790a: mov    %rsi,%rax
  0x000001a98059790d: add    $0x130,%rsp
  0x000001a980597914: pop    %rbp
  0x000001a980597915: mov    0x70(%r15),%r10
  0x000001a980597919: test   %eax,(%r10)        ;   {poll_return}
  0x000001a98059791c: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@420

  0x000001a98059791d: mov    %rdi,%rax
  0x000001a980597920: add    $0x130,%rsp
  0x000001a980597927: pop    %rbp
  0x000001a980597928: mov    0x70(%r15),%r10
  0x000001a98059792c: test   %eax,(%r10)        ;   {poll_return}
  0x000001a98059792f: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@178

  0x000001a980597930: mov    0xc4(%rsp),%ebx
  0x000001a980597937: movabs $0x1a9ff7edce0,%r8  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597941: incl   0x2a8(%r8)         ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@100

  0x000001a980597948: mov    0xa8(%rsp),%rdx
  0x000001a980597950: mov    %rdx,%r8
  0x000001a980597953: movabs $0x1a9ff7edce0,%r9  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a98059795d: addq   $0x1,0x808(%r9)
  0x000001a980597965: movabs $0x1,%r8
  0x000001a98059796f: mov    %rbx,%r9           ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428

  0x000001a980597972: nopl   0x0(%rax,%rax,1)
  0x000001a980597977: callq  0x000001a980598055  ; ImmutableOopMap{}
                                                ;*invokespecial addCount {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@428
                                                ;   {optimized virtual_call}
  0x000001a98059797c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000001a980597986: add    $0x130,%rsp
  0x000001a98059798d: pop    %rbp
  0x000001a98059798e: mov    0x70(%r15),%r10
  0x000001a980597992: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980597995: retq                      ;*areturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@432

  0x000001a980597996: xchg   %ax,%ax
  0x000001a980597998: jmpq   0x000001a980597f40  ;   {no_reloc}
  0x000001a98059799d: add    %al,(%rax)
  0x000001a98059799f: add    %al,(%rax)
  0x000001a9805979a1: add    %ch,%cl
  0x000001a9805979a3: movabs %eax,0xba48c08b4c000005  ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a9805979ac: loopne 0x000001a98059798a
  0x000001a9805979ae: jle    0x000001a9805979af
  0x000001a9805979b0: test   $0x48000001,%eax
  0x000001a9805979b5: addl   $0x1,0x758(%rdx)
  0x000001a9805979bc: movabs $0x6d168fe18,%r8   ;   {oop("Recursive update"{0x00000006d168fe18})}
  0x000001a9805979c6: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375

  0x000001a9805979c9: mov    %rax,0x108(%rsp)
  0x000001a9805979d1: nopw   0x0(%rax,%rax,1)
  0x000001a9805979d7: callq  0x000001a980027000  ; ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@375
                                                ;   {optimized virtual_call}
  0x000001a9805979dc: mov    0x108(%rsp),%rax   ; ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }
                                                ;*athrow {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x000001a9805979e4: movabs $0x1a9805979e4,%rdx  ;   {section_word}
  0x000001a9805979ee: callq  0x000001a9800ee300  ;   {runtime_call handle_exception_nofpu Runtime1 stub}
  0x000001a9805979f3: nop                       ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@378

  0x000001a9805979f4: nopl   0x0(%rax)
  0x000001a9805979f8: jmpq   0x000001a980597f66  ;   {no_reloc}
  0x000001a9805979fd: add    %al,(%rax)
  0x000001a9805979ff: add    %al,(%rax)
  0x000001a980597a01: add    %cl,-0x75(%rcx)
  0x000001a980597a04: xchg   %eax,0x48000000(%rax)
  0x000001a980597a0a: lea    0x28(%rax),%edi
  0x000001a980597a0d: cmp    0x90(%r15),%rdi
  0x000001a980597a14: ja     0x000001a980597f70
  0x000001a980597a1a: mov    %rdi,0x80(%r15)
  0x000001a980597a21: mov    0xb0(%rdx),%rcx
  0x000001a980597a28: mov    %rcx,(%rax)
  0x000001a980597a2b: mov    %rdx,%rcx
  0x000001a980597a2e: shr    $0x3,%rcx
  0x000001a980597a32: mov    %ecx,0x8(%rax)
  0x000001a980597a35: xor    %rcx,%rcx
  0x000001a980597a38: mov    %ecx,0xc(%rax)
  0x000001a980597a3b: xor    %rcx,%rcx
  0x000001a980597a3e: mov    %rcx,0x10(%rax)
  0x000001a980597a42: mov    %rcx,0x18(%rax)
  0x000001a980597a46: mov    %rcx,0x20(%rax)    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8

  0x000001a980597a4a: mov    %rax,%rdx
  0x000001a980597a4d: movabs $0x1a9ff7edce0,%rsi  ;   {metadata(method data for {method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597a57: addq   $0x1,0x178(%rsi)
  0x000001a980597a5f: mov    %rax,%rdx          ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12

  0x000001a980597a62: mov    %rax,0x110(%rsp)
  0x000001a980597a6a: nopl   0x0(%rax,%rax,1)
  0x000001a980597a6f: callq  0x000001a980027000  ; ImmutableOopMap{[272]=Oop }
                                                ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@12
                                                ;   {optimized virtual_call}
  0x000001a980597a74: mov    0x110(%rsp),%rax
  0x000001a980597a7c: jmpq   0x000001a980597fbe  ;*athrow {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@15

  0x000001a980597a81: mov    0x350(%r15),%rax
  0x000001a980597a88: xor    %r10,%r10
  0x000001a980597a8b: mov    %r10,0x350(%r15)
  0x000001a980597a92: xor    %r10,%r10
  0x000001a980597a95: mov    %r10,0x358(%r15)
  0x000001a980597a9c: mov    %rax,%rsi
  0x000001a980597a9f: lea    0x118(%rsp),%rax
  0x000001a980597aa7: mov    0x8(%rax),%rbx
  0x000001a980597aab: mov    (%rbx),%rdi
  0x000001a980597aae: and    $0x7,%rdi
  0x000001a980597ab2: cmp    $0x5,%rdi
  0x000001a980597ab6: je     0x000001a980597ad3
  0x000001a980597abc: mov    (%rax),%rdi
  0x000001a980597abf: test   %rdi,%rdi
  0x000001a980597ac2: je     0x000001a980597ad3
  0x000001a980597ac8: lock cmpxchg %rdi,(%rbx)
  0x000001a980597acd: jne    0x000001a980597f7d  ;*monitorexit {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@389

  0x000001a980597ad3: mov    %rsi,%rax
  0x000001a980597ad6: jmpq   0x000001a980597fbe
  0x000001a980597adb: movabs $0x1a9ff693e18,%r10  ;   {metadata({method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597ae5: mov    %r10,0x8(%rsp)
  0x000001a980597aea: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597af2: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597af7: jmpq   0x000001a980595f96
  0x000001a980597afc: callq  0x000001a9800ecba0  ; ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }
                                                ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@17
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980597b01: movabs $0x1a9ff692f28,%r10  ;   {metadata({method} {0x000001a9ff692f30} 'spread' '(I)I' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597b0b: mov    %r10,0x8(%rsp)
  0x000001a980597b10: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597b18: callq  0x000001a9800f1a80  ; ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::spread@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@20
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597b1d: jmpq   0x000001a9805960ee
  0x000001a980597b22: callq  0x000001a9800ecba0  ; ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@41
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980597b27: movabs $0x1a9ff693250,%r10  ;   {metadata({method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597b31: mov    %r10,0x8(%rsp)
  0x000001a980597b36: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597b3e: callq  0x000001a9800f1a80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597b43: jmpq   0x000001a980596222
  0x000001a980597b48: movabs $0x1a9ff61e6a0,%r10  ;   {metadata({method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a980597b52: mov    %r10,0x8(%rsp)
  0x000001a980597b57: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597b5f: callq  0x000001a9800f1a80  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597b64: jmpq   0x000001a9805962bc
  0x000001a980597b69: cmp    $0x0,%rsi
  0x000001a980597b6d: je     0x000001a980596308
  0x000001a980597b73: mov    %rsi,(%rsp)
  0x000001a980597b77: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597b7c: jmpq   0x000001a980596308
  0x000001a980597b81: mov    %rsi,(%rsp)
  0x000001a980597b85: callq  0x000001a9800eeca0  ; ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@69
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a980597b8a: mov    %rdx,%rdx
  0x000001a980597b8d: callq  0x000001a9800ed400  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@83
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a980597b92: jmpq   0x000001a980596499
  0x000001a980597b97: movabs $0x1a9ff6a18f0,%r10  ;   {metadata({method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980597ba1: mov    %r10,0x8(%rsp)
  0x000001a980597ba6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597bae: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597bb3: jmpq   0x000001a9805964d9
  0x000001a980597bb8: movabs $0x1a9ff580588,%r10  ;   {metadata({method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a980597bc2: mov    %r10,0x8(%rsp)
  0x000001a980597bc7: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597bcf: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@91
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597bd4: jmpq   0x000001a980596516
  0x000001a980597bd9: mov    0x10(%rdx),%eax
  0x000001a980597bdc: shl    $0x3,%rax
  0x000001a980597be0: cmp    $0x0,%rax
  0x000001a980597be4: je     0x000001a98059652b
  0x000001a980597bea: mov    %rax,(%rsp)
  0x000001a980597bee: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597bf3: jmpq   0x000001a98059652b
  0x000001a980597bf8: cmp    $0x0,%r8
  0x000001a980597bfc: je     0x000001a98059654a
  0x000001a980597c02: mov    %rdx,(%rsp)
  0x000001a980597c06: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597c0b: jmpq   0x000001a98059654a
  0x000001a980597c10: mov    0x14(%rdx),%eax
  0x000001a980597c13: shl    $0x3,%rax
  0x000001a980597c17: cmp    $0x0,%rax
  0x000001a980597c1b: je     0x000001a98059655b
  0x000001a980597c21: mov    %rax,(%rsp)
  0x000001a980597c25: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597c2a: jmpq   0x000001a98059655b
  0x000001a980597c2f: cmp    $0x0,%r9
  0x000001a980597c33: je     0x000001a98059657a
  0x000001a980597c39: mov    %rdx,(%rsp)
  0x000001a980597c3d: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597c42: jmpq   0x000001a98059657a
  0x000001a980597c47: movabs $0x1a9ff6932f8,%r10  ;   {metadata({method} {0x000001a9ff693300} 'casTabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597c51: mov    %r10,0x8(%rsp)
  0x000001a980597c56: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597c5e: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::casTabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@94
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597c63: jmpq   0x000001a9805965ba
  0x000001a980597c68: mov    (%rsi),%eax
  0x000001a980597c6a: shl    $0x3,%rax
  0x000001a980597c6e: cmp    $0x0,%rax
  0x000001a980597c72: je     0x000001a9805965cf
  0x000001a980597c78: mov    %rax,(%rsp)
  0x000001a980597c7c: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597c81: jmpq   0x000001a9805965cf
  0x000001a980597c86: cmp    $0x0,%rdx
  0x000001a980597c8a: je     0x000001a98059660d
  0x000001a980597c90: mov    %rsi,(%rsp)
  0x000001a980597c94: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597c99: jmpq   0x000001a98059660d
  0x000001a980597c9e: callq  0x000001a9800ecba0  ; ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@105
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980597ca3: mov    %rsi,0x8(%rsp)
  0x000001a980597ca8: mov    %r8,(%rsp)
  0x000001a980597cac: callq  0x000001a9800ef680  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@187
                                                ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x000001a980597cb1: jmpq   0x000001a980596a6f
  0x000001a980597cb6: movabs $0x1a9ff693250,%r10  ;   {metadata({method} {0x000001a9ff693258} 'tabAt' '([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597cc0: mov    %r10,0x8(%rsp)
  0x000001a980597cc5: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597ccd: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597cd2: jmpq   0x000001a980596abb
  0x000001a980597cd7: movabs $0x1a9ff61e6a0,%r10  ;   {metadata({method} {0x000001a9ff61e6a8} 'getObjectAcquire' '(Ljava/lang/Object;J)Ljava/lang/Object;' in 'jdk/internal/misc/Unsafe')}
  0x000001a980597ce1: mov    %r10,0x8(%rsp)
  0x000001a980597ce6: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597cee: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - jdk.internal.misc.Unsafe::getObjectAcquire@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@15
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597cf3: jmpq   0x000001a980596b3a
  0x000001a980597cf8: cmp    $0x0,%r8
  0x000001a980597cfc: je     0x000001a980596b87
  0x000001a980597d02: mov    %r8,(%rsp)
  0x000001a980597d06: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597d0b: jmpq   0x000001a980596b87
  0x000001a980597d10: mov    %r8,(%rsp)
  0x000001a980597d14: callq  0x000001a9800eeca0  ; ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::tabAt@18
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@192
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a980597d19: callq  0x000001a9800ecba0  ; ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }
                                                ;*getfield hash {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@214
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980597d1e: movabs $0x1a9ff693e18,%r10  ;   {metadata({method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597d28: mov    %r10,0x8(%rsp)
  0x000001a980597d2d: movq   $0x131,(%rsp)
  0x000001a980597d35: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@305
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597d3a: jmpq   0x000001a980596f57
  0x000001a980597d3f: mov    0x14(%rbx),%esi
  0x000001a980597d42: shl    $0x3,%rsi
  0x000001a980597d46: cmp    $0x0,%rsi
  0x000001a980597d4a: je     0x000001a98059701a
  0x000001a980597d50: mov    %rsi,(%rsp)
  0x000001a980597d54: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597d59: jmpq   0x000001a98059701a
  0x000001a980597d5e: cmp    $0x0,%r9
  0x000001a980597d62: je     0x000001a980597039
  0x000001a980597d68: mov    %rbx,(%rsp)
  0x000001a980597d6c: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597d71: jmpq   0x000001a980597039
  0x000001a980597d76: mov    %rdx,%rdx
  0x000001a980597d79: callq  0x000001a9800ed400  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@285
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a980597d7e: jmpq   0x000001a9805970d4
  0x000001a980597d83: movabs $0x1a9ff6a18f0,%r10  ;   {metadata({method} {0x000001a9ff6a18f8} '<init>' '(ILjava/lang/Object;Ljava/lang/Object;)V' in 'java/util/concurrent/ConcurrentHashMap$Node')}
  0x000001a980597d8d: mov    %r10,0x8(%rsp)
  0x000001a980597d92: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597d9a: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597d9f: jmpq   0x000001a980597111
  0x000001a980597da4: movabs $0x1a9ff580588,%r10  ;   {metadata({method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object')}
  0x000001a980597dae: mov    %r10,0x8(%rsp)
  0x000001a980597db3: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980597dbb: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1
                                                ; - java.util.concurrent.ConcurrentHashMap$Node::<init>@1
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@293
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597dc0: jmpq   0x000001a98059714e
  0x000001a980597dc5: mov    0x10(%rax),%edi
  0x000001a980597dc8: shl    $0x3,%rdi
  0x000001a980597dcc: cmp    $0x0,%rdi
  0x000001a980597dd0: je     0x000001a980597163
  0x000001a980597dd6: mov    %rdi,(%rsp)
  0x000001a980597dda: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597ddf: jmpq   0x000001a980597163
  0x000001a980597de4: cmp    $0x0,%r11
  0x000001a980597de8: je     0x000001a980597182
  0x000001a980597dee: mov    %rax,(%rsp)
  0x000001a980597df2: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597df7: jmpq   0x000001a980597182
  0x000001a980597dfc: mov    0x14(%rax),%edi
  0x000001a980597dff: shl    $0x3,%rdi
  0x000001a980597e03: cmp    $0x0,%rdi
  0x000001a980597e07: je     0x000001a980597193
  0x000001a980597e0d: mov    %rdi,(%rsp)
  0x000001a980597e11: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597e16: jmpq   0x000001a980597193
  0x000001a980597e1b: cmp    $0x0,%r9
  0x000001a980597e1f: je     0x000001a9805971b2
  0x000001a980597e25: mov    %rax,(%rsp)
  0x000001a980597e29: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597e2e: jmpq   0x000001a9805971b2
  0x000001a980597e33: mov    0x18(%rbx),%edi
  0x000001a980597e36: shl    $0x3,%rdi
  0x000001a980597e3a: cmp    $0x0,%rdi
  0x000001a980597e3e: je     0x000001a9805971c9
  0x000001a980597e44: mov    %rdi,(%rsp)
  0x000001a980597e48: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597e4d: jmpq   0x000001a9805971c9
  0x000001a980597e52: cmp    $0x0,%rax
  0x000001a980597e56: je     0x000001a9805971e8
  0x000001a980597e5c: mov    %rbx,(%rsp)
  0x000001a980597e60: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597e65: jmpq   0x000001a9805971e8
  0x000001a980597e6a: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x000001a980597e74: mov    $0xa050f00,%eax
  0x000001a980597e79: callq  0x000001a9800f0500  ; ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@313
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a980597e7e: jmpq   0x000001a980597270
  0x000001a980597e83: movabs $0x0,%rax          ;   {metadata(NULL)}
  0x000001a980597e8d: mov    $0xa050f00,%eax
  0x000001a980597e92: callq  0x000001a9800f0500  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a980597e97: jmpq   0x000001a9805973c0
  0x000001a980597e9c: mov    %rsi,(%rsp)
  0x000001a980597ea0: callq  0x000001a9800eeca0  ; ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }
                                                ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@324
                                                ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x000001a980597ea5: callq  0x000001a9800ecba0  ; ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }
                                                ;*getfield val {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@342
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a980597eaa: mov    0x14(%rax),%edx
  0x000001a980597ead: shl    $0x3,%rdx
  0x000001a980597eb1: cmp    $0x0,%rdx
  0x000001a980597eb5: je     0x000001a980597595
  0x000001a980597ebb: mov    %rdx,(%rsp)
  0x000001a980597ebf: callq  0x000001a9800f1280  ;   {runtime_call g1_pre_barrier_slow Runtime1 stub}
  0x000001a980597ec4: jmpq   0x000001a980597595
  0x000001a980597ec9: cmp    $0x0,%r9
  0x000001a980597ecd: je     0x000001a9805975b4
  0x000001a980597ed3: mov    %rax,(%rsp)
  0x000001a980597ed7: callq  0x000001a9800f1580  ;   {runtime_call g1_post_barrier_slow Runtime1 stub}
  0x000001a980597edc: jmpq   0x000001a9805975b4
  0x000001a980597ee1: movabs $0x0,%rbx          ;   {metadata(NULL)}
  0x000001a980597eeb: mov    $0xa050f00,%eax
  0x000001a980597ef0: callq  0x000001a9800f0500  ; ImmutableOopMap{[168]=Oop [216]=Oop [176]=Oop r9=Oop [184]=Oop rsi=Oop [208]=Oop [288]=Oop }
                                                ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@362
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a980597ef5: jmpq   0x000001a980597608
  0x000001a980597efa: lea    0x118(%rsp),%rax
  0x000001a980597f02: mov    %rax,(%rsp)
  0x000001a980597f06: callq  0x000001a9800efb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000001a980597f0b: jmpq   0x000001a98059777f
  0x000001a980597f10: movabs $0x1a9ff693e18,%r10  ;   {metadata({method} {0x000001a9ff693e20} 'putVal' '(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;' in 'java/util/concurrent/ConcurrentHashMap')}
  0x000001a980597f1a: mov    %r10,0x8(%rsp)
  0x000001a980597f1f: movq   $0x1a5,(%rsp)
  0x000001a980597f27: callq  0x000001a9800f1a80  ; ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@421
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980597f2c: jmpq   0x000001a9805977fb
  0x000001a980597f31: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a980597f3b: mov    $0xa050f00,%eax
  0x000001a980597f40: callq  0x000001a9800f0500  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a980597f45: jmpq   0x000001a980597998
  0x000001a980597f4a: mov    %rdx,%rdx
  0x000001a980597f4d: callq  0x000001a9800ed100  ; ImmutableOopMap{[208]=Oop [288]=Oop }
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@368
                                                ;   {runtime_call new_instance Runtime1 stub}
  0x000001a980597f52: jmpq   0x000001a9805979a7
  0x000001a980597f57: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000001a980597f61: mov    $0xa050f00,%eax
  0x000001a980597f66: callq  0x000001a9800f0500  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000001a980597f6b: jmpq   0x000001a9805979f8
  0x000001a980597f70: mov    %rdx,%rdx
  0x000001a980597f73: callq  0x000001a9800ed400  ; ImmutableOopMap{}
                                                ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.util.concurrent.ConcurrentHashMap::putVal@8
                                                ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000001a980597f78: jmpq   0x000001a980597a4a
  0x000001a980597f7d: lea    0x118(%rsp),%rax
  0x000001a980597f85: mov    %rax,(%rsp)
  0x000001a980597f89: callq  0x000001a9800efb80  ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x000001a980597f8e: jmpq   0x000001a980597ad3
  0x000001a980597f93: nop
  0x000001a980597f94: nop
  0x000001a980597f95: mov    0x350(%r15),%rax
  0x000001a980597f9c: movabs $0x0,%r10
  0x000001a980597fa6: mov    %r10,0x350(%r15)
  0x000001a980597fad: movabs $0x0,%r10
  0x000001a980597fb7: mov    %r10,0x358(%r15)
  0x000001a980597fbe: add    $0x130,%rsp
  0x000001a980597fc5: pop    %rbp
  0x000001a980597fc6: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980597fcb: hlt    
  0x000001a980597fcc: hlt    
  0x000001a980597fcd: hlt    
  0x000001a980597fce: hlt    
  0x000001a980597fcf: hlt    
  0x000001a980597fd0: hlt    
  0x000001a980597fd1: hlt    
  0x000001a980597fd2: hlt    
  0x000001a980597fd3: hlt    
  0x000001a980597fd4: hlt    
  0x000001a980597fd5: hlt    
  0x000001a980597fd6: hlt    
  0x000001a980597fd7: hlt    
  0x000001a980597fd8: hlt    
  0x000001a980597fd9: hlt    
  0x000001a980597fda: hlt    
  0x000001a980597fdb: hlt    
  0x000001a980597fdc: hlt    
  0x000001a980597fdd: hlt    
  0x000001a980597fde: hlt    
  0x000001a980597fdf: hlt    
[Stub Code]
  0x000001a980597fe0: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a980597fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a980597fef: jmpq   0x000001a980597fef  ;   {runtime_call}
  0x000001a980597ff4: nop
  0x000001a980597ff5: movabs $0x1a9ff696580,%rbx  ;   {static_stub}
  0x000001a980597fff: jmpq   0x000001a980027d50  ;   {runtime_call I2C/C2I adapters}
  0x000001a980598004: nop
  0x000001a980598005: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059800f: jmpq   0x000001a98059800f  ;   {runtime_call}
  0x000001a980598014: nop
  0x000001a980598015: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059801f: jmpq   0x000001a98059801f  ;   {runtime_call}
  0x000001a980598024: nop
  0x000001a980598025: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059802f: jmpq   0x000001a98059802f  ;   {runtime_call}
  0x000001a980598034: nop
  0x000001a980598035: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059803f: jmpq   0x000001a98059803f  ;   {runtime_call}
  0x000001a980598044: nop
  0x000001a980598045: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059804f: jmpq   0x000001a98059804f  ;   {runtime_call}
  0x000001a980598054: nop
  0x000001a980598055: movabs $0x1a9ff696738,%rbx  ;   {static_stub}
  0x000001a98059805f: jmpq   0x000001a9800277d8  ;   {runtime_call I2C/C2I adapters}
  0x000001a980598064: nop
  0x000001a980598065: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059806f: jmpq   0x000001a98059806f  ;   {runtime_call}
  0x000001a980598074: nop
  0x000001a980598075: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a98059807f: jmpq   0x000001a98059807f  ;   {runtime_call}
[Exception Handler]
  0x000001a980598084: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a980598089: mov    %rsp,-0x28(%rsp)
  0x000001a98059808e: sub    $0x80,%rsp
  0x000001a980598095: mov    %rax,0x78(%rsp)
  0x000001a98059809a: mov    %rcx,0x70(%rsp)
  0x000001a98059809f: mov    %rdx,0x68(%rsp)
  0x000001a9805980a4: mov    %rbx,0x60(%rsp)
  0x000001a9805980a9: mov    %rbp,0x50(%rsp)
  0x000001a9805980ae: mov    %rsi,0x48(%rsp)
  0x000001a9805980b3: mov    %rdi,0x40(%rsp)
  0x000001a9805980b8: mov    %r8,0x38(%rsp)
  0x000001a9805980bd: mov    %r9,0x30(%rsp)
  0x000001a9805980c2: mov    %r10,0x28(%rsp)
  0x000001a9805980c7: mov    %r11,0x20(%rsp)
  0x000001a9805980cc: mov    %r12,0x18(%rsp)
  0x000001a9805980d1: mov    %r13,0x10(%rsp)
  0x000001a9805980d6: mov    %r14,0x8(%rsp)
  0x000001a9805980db: mov    %r15,(%rsp)
  0x000001a9805980df: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a9805980e9: movabs $0x1a980598089,%rdx  ;   {internal_word}
  0x000001a9805980f3: mov    %rsp,%r8
  0x000001a9805980f6: and    $0xfffffffffffffff0,%rsp
  0x000001a9805980fa: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980598104: callq  *%r10
  0x000001a980598107: hlt    
[Deopt Handler Code]
  0x000001a980598108: movabs $0x1a980598108,%r10  ;   {section_word}
  0x000001a980598112: push   %r10
  0x000001a980598114: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980598119: hlt    
  0x000001a98059811a: hlt    
  0x000001a98059811b: hlt    
  0x000001a98059811c: hlt    
  0x000001a98059811d: hlt    
  0x000001a98059811e: hlt    
  0x000001a98059811f: hlt    

ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 404 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop }pc offsets: 660 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop }pc offsets: 1988 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [208]=Oop [176]=Oop }pc offsets: 2564 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop [240]=Oop [288]=Oop }pc offsets: 3972 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 4155 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop [288]=Oop }pc offsets: 5548 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 6367 
ImmutableOopMap{[168]=Oop [248]=Oop }pc offsets: 6556 
ImmutableOopMap{}pc offsets: 6748 
ImmutableOopMap{[208]=Oop [264]=Oop [288]=Oop }pc offsets: 6844 
ImmutableOopMap{[208]=Oop [288]=Oop rax=Oop }pc offsets: 6852 
ImmutableOopMap{[272]=Oop }pc offsets: 6996 
ImmutableOopMap{rdx=Oop [168]=Oop r8=Oop [176]=Oop r9=Oop [184]=Oop }pc offsets: 7127 
ImmutableOopMap{[168]=Oop [184]=Oop r8=Oop [176]=Oop }pc offsets: 7137 
ImmutableOopMap{[176]=Oop [168]=Oop [184]=Oop }pc offsets: 7165 
ImmutableOopMap{rsi=Oop [168]=Oop [176]=Oop [184]=Oop rdi=Oop }pc offsets: 7175 
ImmutableOopMap{[184]=Oop [176]=Oop [168]=Oop rdi=Oop }pc offsets: 7203 7236 7274 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop }pc offsets: 7282 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop r14=Oop rdx=Oop }pc offsets: 7315 7348 7491 
ImmutableOopMap{[168]=Oop r9=Oop [184]=Oop r8=Oop [176]=Oop rsi=Oop [208]=Oop r14=Oop }pc offsets: 7555 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 7569 
ImmutableOopMap{[168]=Oop [184]=Oop [176]=Oop rsi=Oop [208]=Oop rdi=Oop [288]=Oop }pc offsets: 7602 7635 7673 
ImmutableOopMap{[168]=Oop [184]=Oop rbx=Oop [216]=Oop [208]=Oop r8=Oop [176]=Oop [288]=Oop }pc offsets: 7678 
ImmutableOopMap{[168]=Oop [184]=Oop [216]=Oop [176]=Oop [208]=Oop rdx=Oop [288]=Oop }pc offsets: 7706 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop [288]=Oop }pc offsets: 7774 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop [208]=Oop rbx=Oop rax=Oop [288]=Oop }pc offsets: 7807 7840 
ImmutableOopMap{[168]=Oop [216]=Oop r9=Oop [184]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 8030 
ImmutableOopMap{[168]=Oop [216]=Oop r11=Oop [176]=Oop rsi=Oop [208]=Oop r9=Oop [184]=Oop [288]=Oop }pc offsets: 8055 8069 
ImmutableOopMap{[168]=Oop [216]=Oop [184]=Oop [176]=Oop [208]=Oop rax=Oop [288]=Oop }pc offsets: 8074 
ImmutableOopMap{[168]=Oop [216]=Oop [176]=Oop r9=Oop [184]=Oop rsi=Oop [208]=Oop [288]=Oop }pc offsets: 8149 
ImmutableOopMap{[168]=Oop [176]=Oop r9=Oop [184]=Oop rax=Oop }pc offsets: 8204 
ImmutableOopMap{[208]=Oop [288]=Oop }pc offsets: 8229 8242 
ImmutableOopMap{}pc offsets: 8267 8280 Compiled method (c2)     170   54 %     4       volatileTest.VolatileAdder$Task::run @ 2 (29 bytes)
 total in heap  [0x000001a987ac1c90,0x000001a987ac21d8] = 1352
 relocation     [0x000001a987ac1e08,0x000001a987ac1e38] = 48
 main code      [0x000001a987ac1e40,0x000001a987ac1f40] = 256
 stub code      [0x000001a987ac1f40,0x000001a987ac1f78] = 56
 oops           [0x000001a987ac1f78,0x000001a987ac1f80] = 8
 metadata       [0x000001a987ac1f80,0x000001a987ac1fa0] = 32
 scopes data    [0x000001a987ac1fa0,0x000001a987ac2008] = 104
 scopes pcs     [0x000001a987ac2008,0x000001a987ac2188] = 384
 dependencies   [0x000001a987ac2188,0x000001a987ac2190] = 8
 handler table  [0x000001a987ac2190,0x000001a987ac21c0] = 48
 nul chk table  [0x000001a987ac21c0,0x000001a987ac21d8] = 24
----------------------------------------------------------------------
volatileTest/VolatileAdder$Task.run()V  [0x000001a987ac1e40, 0x000001a987ac1f78]  312 bytes
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000001a9ff980bd0} 'run' '()V' in 'volatileTest/VolatileAdder$Task'
  0x000001a987ac1e40: int3   
  0x000001a987ac1e41: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a987ac1e4c: data16 data16 xchg %ax,%ax
  0x000001a987ac1e50: mov    %eax,-0x7000(%rsp)
  0x000001a987ac1e57: push   %rbp
  0x000001a987ac1e58: sub    $0x40,%rsp
  0x000001a987ac1e5c: mov    0x8(%rdx),%rbx
  0x000001a987ac1e60: mov    (%rdx),%ebp
  0x000001a987ac1e62: mov    %rdx,%rcx
  0x000001a987ac1e65: movabs $0x54eeb700,%r10
  0x000001a987ac1e6f: callq  *%r10
  0x000001a987ac1e72: test   %rbx,%rbx
  0x000001a987ac1e75: je     0x000001a987ac1ee5
  0x000001a987ac1e77: mov    0x8(%rbx),%r11d
  0x000001a987ac1e7b: cmp    $0xf800c045,%r11d  ;   {metadata('volatileTest/VolatileAdder$Task')}
  0x000001a987ac1e82: jne    0x000001a987ac1ef6
  0x000001a987ac1e84: jmp    0x000001a987ac1ea7
  0x000001a987ac1e86: data16 nopw 0x0(%rax,%rax,1)
  0x000001a987ac1e90: mov    %rbx,0x20(%rsp)    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@2 (line 42)

  0x000001a987ac1e95: lea    (%r12,%r11,8),%rdx  ;*getfield adder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@9 (line 44)

  0x000001a987ac1e99: xchg   %ax,%ax
  0x000001a987ac1e9b: callq  0x000001a980027000  ; ImmutableOopMap{[32]=Oop }
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@12 (line 44)
                                                ;   {optimized virtual_call}
  0x000001a987ac1ea0: inc    %ebp               ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@15 (line 42)

  0x000001a987ac1ea2: mov    0x20(%rsp),%rbx    ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@2 (line 42)

  0x000001a987ac1ea7: cmp    $0x186a0,%ebp
  0x000001a987ac1ead: jge    0x000001a987ac1ec6  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@5 (line 42)

  0x000001a987ac1eaf: mov    0xc(%rbx),%r11d    ;*getfield adder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@9 (line 44)
                                                ; implicit exception: dispatches to 0x000001a987ac1f1c
  0x000001a987ac1eb3: test   %r11d,%r11d
  0x000001a987ac1eb6: jne    0x000001a987ac1e90
  0x000001a987ac1eb8: mov    $0xfffffff6,%edx
  0x000001a987ac1ebd: xchg   %ax,%ax
  0x000001a987ac1ebf: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@12 (line 44)
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1ec4: ud2                       ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@12 (line 44)

  0x000001a987ac1ec6: mov    0x10(%rbx),%r11d   ;*getfield latch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@22 (line 46)
                                                ; implicit exception: dispatches to 0x000001a987ac1f2a
  0x000001a987ac1eca: test   %r11d,%r11d
  0x000001a987ac1ecd: je     0x000001a987ac1ee9  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@5 (line 42)

  0x000001a987ac1ecf: lea    (%r12,%r11,8),%rdx
  0x000001a987ac1ed3: callq  0x000001a980027000  ; ImmutableOopMap{}
                                                ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@25 (line 46)
                                                ;   {optimized virtual_call}
  0x000001a987ac1ed8: add    $0x40,%rsp
  0x000001a987ac1edc: pop    %rbp
  0x000001a987ac1edd: mov    0x70(%r15),%r10
  0x000001a987ac1ee1: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac1ee4: retq   
  0x000001a987ac1ee5: xor    %ebx,%ebx
  0x000001a987ac1ee7: jmp    0x000001a987ac1ea7
  0x000001a987ac1ee9: mov    $0xfffffff6,%edx
  0x000001a987ac1eee: nop
  0x000001a987ac1eef: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@25 (line 46)
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1ef4: ud2    
  0x000001a987ac1ef6: mov    $0xffffff9d,%edx
  0x000001a987ac1efb: mov    %rbx,0x20(%rsp)
  0x000001a987ac1f00: data16 xchg %ax,%ax
  0x000001a987ac1f03: callq  0x000001a980028a00  ; ImmutableOopMap{[32]=Oop }
                                                ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@2 (line 42)
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1f08: ud2                       ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@25 (line 46)

  0x000001a987ac1f0a: mov    %rax,%rdx
  0x000001a987ac1f0d: jmp    0x000001a987ac1f12  ;*invokevirtual add {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@12 (line 44)

  0x000001a987ac1f0f: mov    %rax,%rdx          ;*invokevirtual countDown {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@25 (line 46)

  0x000001a987ac1f12: add    $0x40,%rsp
  0x000001a987ac1f16: pop    %rbp
  0x000001a987ac1f17: jmpq   0x000001a9800f3980  ;*getfield adder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@9 (line 44)
                                                ;   {runtime_call _rethrow_Java}
  0x000001a987ac1f1c: mov    $0xfffffff6,%edx
  0x000001a987ac1f21: xchg   %ax,%ax
  0x000001a987ac1f23: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*getfield adder {reexecute=1 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@9 (line 44)
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1f28: ud2                       ;*getfield latch {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@22 (line 46)

  0x000001a987ac1f2a: mov    $0xfffffff6,%edx
  0x000001a987ac1f2f: callq  0x000001a980028a00  ; ImmutableOopMap{}
                                                ;*getfield latch {reexecute=1 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@22 (line 46)
                                                ;   {runtime_call UncommonTrapBlob}
  0x000001a987ac1f34: ud2                       ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder$Task::run@2 (line 42)

  0x000001a987ac1f36: hlt    
  0x000001a987ac1f37: hlt    
  0x000001a987ac1f38: hlt    
  0x000001a987ac1f39: hlt    
  0x000001a987ac1f3a: hlt    
  0x000001a987ac1f3b: hlt    
  0x000001a987ac1f3c: hlt    
  0x000001a987ac1f3d: hlt    
  0x000001a987ac1f3e: hlt    
  0x000001a987ac1f3f: hlt    
[Stub Code]
  0x000001a987ac1f40: movabs $0x0,%rbx          ;   {no_reloc}
  0x000001a987ac1f4a: jmpq   0x000001a987ac1f4a  ;   {runtime_call}
  0x000001a987ac1f4f: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a987ac1f59: jmpq   0x000001a987ac1f59  ;   {runtime_call}
[Exception Handler]
  0x000001a987ac1f5e: jmpq   0x000001a9800ec480  ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x000001a987ac1f63: callq  0x000001a987ac1f68
  0x000001a987ac1f68: subq   $0x5,(%rsp)
  0x000001a987ac1f6d: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac1f72: hlt    
  0x000001a987ac1f73: hlt    
  0x000001a987ac1f74: hlt    
  0x000001a987ac1f75: hlt    
  0x000001a987ac1f76: hlt    
  0x000001a987ac1f77: hlt    

ImmutableOopMap{[32]=Oop }pc offsets: 96 
ImmutableOopMap{}pc offsets: 132 152 180 
ImmutableOopMap{[32]=Oop }pc offsets: 200 
ImmutableOopMap{}pc offsets: 232 244 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V  [0x000001a987ac1c20, 0x000001a987ac1c40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a9ff8bf340} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a987ac1c20: mov    0x24(%rdi),%ebx
  0x000001a987ac1c23: shl    $0x3,%rbx
  0x000001a987ac1c27: mov    0x10(%rbx),%rbx
  0x000001a987ac1c2b: test   %rbx,%rbx
  0x000001a987ac1c2e: je     0x000001a987ac1c37
  0x000001a987ac1c34: jmpq   *0x38(%rbx)
  0x000001a987ac1c37: jmpq   0x000001a980040b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a987ac1c3c: hlt    
  0x000001a987ac1c3d: hlt    
  0x000001a987ac1c3e: hlt    
  0x000001a987ac1c3f: hlt    
Compiled method (c1)     173   49       3       java.lang.String::hashCode (49 bytes)
 total in heap  [0x000001a980599490,0x000001a980599df8] = 2408
 relocation     [0x000001a980599608,0x000001a980599670] = 104
 main code      [0x000001a980599680,0x000001a980599a40] = 960
 stub code      [0x000001a980599a40,0x000001a980599af0] = 176
 metadata       [0x000001a980599af0,0x000001a980599b08] = 24
 scopes data    [0x000001a980599b08,0x000001a980599bf0] = 232
 scopes pcs     [0x000001a980599bf0,0x000001a980599de0] = 496
 dependencies   [0x000001a980599de0,0x000001a980599de8] = 8
 nul chk table  [0x000001a980599de8,0x000001a980599df8] = 16
----------------------------------------------------------------------
java/lang/String.hashCode()I  [0x000001a980599680, 0x000001a980599af0]  1136 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x60]  (sp of caller)
  0x000001a980599680: mov    0x8(%rdx),%r10d
  0x000001a980599684: shl    $0x3,%r10
  0x000001a980599688: cmp    %rax,%r10
  0x000001a98059968b: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980599691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a98059969c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a9805996a0: mov    %eax,-0x7000(%rsp)
  0x000001a9805996a7: push   %rbp
  0x000001a9805996a8: sub    $0x50,%rsp
  0x000001a9805996ac: movabs $0x1a9ff7a2e28,%rsi  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a9805996b6: mov    0xfc(%rsi),%edi
  0x000001a9805996bc: add    $0x8,%edi
  0x000001a9805996bf: mov    %edi,0xfc(%rsi)
  0x000001a9805996c5: and    $0x1ff8,%edi
  0x000001a9805996cb: cmp    $0x0,%edi
  0x000001a9805996ce: je     0x000001a980599969  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@0

  0x000001a9805996d4: mov    0x10(%rdx),%esi    ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@1

  0x000001a9805996d7: cmp    $0x0,%esi
  0x000001a9805996da: movabs $0x1a9ff7a2e28,%rdi  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a9805996e4: movabs $0x138,%rbx
  0x000001a9805996ee: jne    0x000001a9805996fe
  0x000001a9805996f4: movabs $0x148,%rbx
  0x000001a9805996fe: mov    (%rdi,%rbx,1),%rax
  0x000001a980599702: lea    0x1(%rax),%rax
  0x000001a980599706: mov    %rax,(%rdi,%rbx,1)
  0x000001a98059970a: jne    0x000001a980599959  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@6

  0x000001a980599710: mov    0xc(%rdx),%edi
  0x000001a980599713: shl    $0x3,%rdi          ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@10

  0x000001a980599717: mov    0xc(%rdi),%ebx     ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ; implicit exception: dispatches to 0x000001a98059998a
  0x000001a98059971a: cmp    $0x0,%ebx
  0x000001a98059971d: movabs $0x1a9ff7a2e28,%rax  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980599727: movabs $0x158,%rcx
  0x000001a980599731: jle    0x000001a980599741
  0x000001a980599737: movabs $0x168,%rcx
  0x000001a980599741: mov    (%rax,%rcx,1),%r8
  0x000001a980599745: lea    0x1(%r8),%r8
  0x000001a980599749: mov    %r8,(%rax,%rcx,1)
  0x000001a98059974d: jle    0x000001a980599959  ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@14

  0x000001a980599753: mov    %rdx,%rsi
  0x000001a980599756: movabs $0x1a9ff7a2e28,%rax  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980599760: addq   $0x1,0x178(%rax)
  0x000001a980599768: movabs $0x1a9ff74eea8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff587f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a980599772: mov    0xfc(%rsi),%eax
  0x000001a980599778: add    $0x8,%eax
  0x000001a98059977b: mov    %eax,0xfc(%rsi)
  0x000001a980599781: and    $0x7ffff8,%eax
  0x000001a980599787: cmp    $0x0,%eax
  0x000001a98059978a: je     0x000001a98059998f
  0x000001a980599790: movabs $0x1a9ff74eea8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff587f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a98059979a: incl   0x148(%rsi)        ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@3
                                                ; - java.lang.String::hashCode@19

  0x000001a9805997a0: movsbl 0x14(%rdx),%esi    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@7
                                                ; - java.lang.String::hashCode@19

  0x000001a9805997a4: cmp    $0x0,%esi
  0x000001a9805997a7: movabs $0x1a9ff74eea8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff587f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a9805997b1: movabs $0x158,%rax
  0x000001a9805997bb: jne    0x000001a9805997cb
  0x000001a9805997c1: movabs $0x168,%rax
  0x000001a9805997cb: mov    (%rsi,%rax,1),%rcx
  0x000001a9805997cf: lea    0x1(%rcx),%rcx
  0x000001a9805997d3: mov    %rcx,(%rsi,%rax,1)
  0x000001a9805997d7: jne    0x000001a9805997f7  ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@10
                                                ; - java.lang.String::hashCode@19

  0x000001a9805997dd: movabs $0x1a9ff74eea8,%rsi  ;   {metadata(method data for {method} {0x000001a9ff587f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a9805997e7: incl   0x178(%rsi)
  0x000001a9805997ed: mov    $0x1,%esi
  0x000001a9805997f2: jmpq   0x000001a9805997fc  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@14
                                                ; - java.lang.String::hashCode@19

  0x000001a9805997f7: mov    $0x0,%esi          ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::isLatin1@18
                                                ; - java.lang.String::hashCode@19

  0x000001a9805997fc: and    $0x1,%esi
  0x000001a9805997ff: cmp    $0x0,%esi
  0x000001a980599802: movabs $0x1a9ff7a2e28,%rsi  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a98059980c: movabs $0x188,%rax
  0x000001a980599816: je     0x000001a980599826
  0x000001a98059981c: movabs $0x198,%rax
  0x000001a980599826: mov    (%rsi,%rax,1),%rcx
  0x000001a98059982a: lea    0x1(%rcx),%rcx
  0x000001a98059982e: mov    %rcx,(%rsi,%rax,1)
  0x000001a980599832: mov    %rdx,0x40(%rsp)
  0x000001a980599837: je     0x000001a980599871  ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@22

  0x000001a98059983d: movabs $0x1a9ff7a2e28,%rsi  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980599847: addq   $0x1,0x1a8(%rsi)
  0x000001a98059984f: mov    %rdi,%rdx          ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29

  0x000001a980599852: nopl   0x0(%rax,%rax,1)
  0x000001a980599857: callq  0x000001a980027500  ; ImmutableOopMap{[64]=Oop }
                                                ;*invokestatic hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@29
                                                ;   {static_call}
  0x000001a98059985c: movabs $0x1a9ff7a2e28,%rsi  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980599866: incl   0x1b8(%rsi)
  0x000001a98059986c: jmpq   0x000001a98059994e  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@32

  0x000001a980599871: movabs $0x1a9ff7a2e28,%rax  ;   {metadata(method data for {method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a98059987b: addq   $0x1,0x1d0(%rax)
  0x000001a980599883: movabs $0x1a9ff7f9f30,%rax  ;   {metadata(method data for {method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a98059988d: mov    0xfc(%rax),%esi
  0x000001a980599893: add    $0x8,%esi
  0x000001a980599896: mov    %esi,0xfc(%rax)
  0x000001a98059989c: and    $0x7ffff8,%esi
  0x000001a9805998a2: cmp    $0x0,%esi
  0x000001a9805998a5: je     0x000001a9805999b0
  0x000001a9805998ab: sar    %ebx
  0x000001a9805998ad: mov    $0x0,%eax
  0x000001a9805998b2: mov    $0x0,%esi
  0x000001a9805998b7: jmpq   0x000001a980599913  ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@9
                                                ; - java.lang.String::hashCode@39

  0x000001a9805998bc: nopl   0x0(%rax)
  0x000001a9805998c0: movslq %eax,%rdx
  0x000001a9805998c3: movzwl 0x10(%rdi,%rdx,2),%edx  ;*invokestatic getChar {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@20
                                                ; - java.lang.String::hashCode@39

  0x000001a9805998c8: mov    %rsi,%rcx
  0x000001a9805998cb: shl    $0x5,%esi
  0x000001a9805998ce: sub    %ecx,%esi
  0x000001a9805998d0: add    %edx,%esi
  0x000001a9805998d2: inc    %eax
  0x000001a9805998d4: movabs $0x1a9ff7f9f30,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a9805998de: mov    0x100(%rdx),%ecx
  0x000001a9805998e4: add    $0x8,%ecx
  0x000001a9805998e7: mov    %ecx,0x100(%rdx)
  0x000001a9805998ed: and    $0xfff8,%ecx
  0x000001a9805998f3: cmp    $0x0,%ecx
  0x000001a9805998f6: je     0x000001a9805999d1  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a9805998fc: mov    0x70(%r15),%r10    ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a980599900: test   %eax,(%r10)        ;   {poll}
  0x000001a980599903: movabs $0x1a9ff7f9f30,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a98059990d: incl   0x168(%rdx)        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39

  0x000001a980599913: cmp    %ebx,%eax
  0x000001a980599915: movabs $0x1a9ff7f9f30,%rdx  ;   {metadata(method data for {method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a98059991f: movabs $0x148,%rcx
  0x000001a980599929: jl     0x000001a980599939
  0x000001a98059992f: movabs $0x138,%rcx
  0x000001a980599939: mov    (%rdx,%rcx,1),%r8
  0x000001a98059993d: lea    0x1(%r8),%r8
  0x000001a980599941: mov    %r8,(%rdx,%rcx,1)
  0x000001a980599945: jl     0x000001a9805998c0  ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@11
                                                ; - java.lang.String::hashCode@39

  0x000001a98059994b: mov    %rsi,%rax          ;*dup {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@42

  0x000001a98059994e: mov    0x40(%rsp),%rdx
  0x000001a980599953: mov    %eax,0x10(%rdx)    ;*putfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@44

  0x000001a980599956: mov    %rax,%rsi          ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@47

  0x000001a980599959: mov    %rsi,%rax
  0x000001a98059995c: add    $0x50,%rsp
  0x000001a980599960: pop    %rbp
  0x000001a980599961: mov    0x70(%r15),%r10
  0x000001a980599965: test   %eax,(%r10)        ;   {poll_return}
  0x000001a980599968: retq   
  0x000001a980599969: movabs $0x1a9ff585808,%r10  ;   {metadata({method} {0x000001a9ff585810} 'hashCode' '()I' in 'java/lang/String')}
  0x000001a980599973: mov    %r10,0x8(%rsp)
  0x000001a980599978: movq   $0xffffffffffffffff,(%rsp)
  0x000001a980599980: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a980599985: jmpq   0x000001a9805996d4
  0x000001a98059998a: callq  0x000001a9800ecba0  ; ImmutableOopMap{rdx=Oop rdi=Oop }
                                                ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::hashCode@13
                                                ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000001a98059998f: movabs $0x1a9ff587f08,%r10  ;   {metadata({method} {0x000001a9ff587f10} 'isLatin1' '()Z' in 'java/lang/String')}
  0x000001a980599999: mov    %r10,0x8(%rsp)
  0x000001a98059999e: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805999a6: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdi=Oop rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::isLatin1@-1
                                                ; - java.lang.String::hashCode@19
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805999ab: jmpq   0x000001a980599790
  0x000001a9805999b0: movabs $0x1a9ff6f5698,%r10  ;   {metadata({method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a9805999ba: mov    %r10,0x8(%rsp)
  0x000001a9805999bf: movq   $0xffffffffffffffff,(%rsp)
  0x000001a9805999c7: callq  0x000001a9800f1a80  ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.StringUTF16::hashCode@-1
                                                ; - java.lang.String::hashCode@39
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805999cc: jmpq   0x000001a9805998ab
  0x000001a9805999d1: movabs $0x1a9ff6f5698,%r10  ;   {metadata({method} {0x000001a9ff6f56a0} 'hashCode' '([B)I' in 'java/lang/StringUTF16')}
  0x000001a9805999db: mov    %r10,0x8(%rsp)
  0x000001a9805999e0: movq   $0x1c,(%rsp)
  0x000001a9805999e8: callq  0x000001a9800f1a80  ; ImmutableOopMap{[64]=Oop rdi=Oop }
                                                ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.StringUTF16::hashCode@28
                                                ; - java.lang.String::hashCode@39
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a9805999ed: jmpq   0x000001a9805998fc
  0x000001a9805999f2: nop
  0x000001a9805999f3: nop
  0x000001a9805999f4: mov    0x350(%r15),%rax
  0x000001a9805999fb: movabs $0x0,%r10
  0x000001a980599a05: mov    %r10,0x350(%r15)
  0x000001a980599a0c: movabs $0x0,%r10
  0x000001a980599a16: mov    %r10,0x358(%r15)
  0x000001a980599a1d: add    $0x50,%rsp
  0x000001a980599a21: pop    %rbp
  0x000001a980599a22: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a980599a27: hlt    
  0x000001a980599a28: hlt    
  0x000001a980599a29: hlt    
  0x000001a980599a2a: hlt    
  0x000001a980599a2b: hlt    
  0x000001a980599a2c: hlt    
  0x000001a980599a2d: hlt    
  0x000001a980599a2e: hlt    
  0x000001a980599a2f: hlt    
  0x000001a980599a30: hlt    
  0x000001a980599a31: hlt    
  0x000001a980599a32: hlt    
  0x000001a980599a33: hlt    
  0x000001a980599a34: hlt    
  0x000001a980599a35: hlt    
  0x000001a980599a36: hlt    
  0x000001a980599a37: hlt    
  0x000001a980599a38: hlt    
  0x000001a980599a39: hlt    
  0x000001a980599a3a: hlt    
  0x000001a980599a3b: hlt    
  0x000001a980599a3c: hlt    
  0x000001a980599a3d: hlt    
  0x000001a980599a3e: hlt    
  0x000001a980599a3f: hlt    
[Stub Code]
  0x000001a980599a40: nopl   0x0(%rax,%rax,1)   ;   {no_reloc}
  0x000001a980599a45: movabs $0x0,%rbx          ;   {static_stub}
  0x000001a980599a4f: jmpq   0x000001a980599a4f  ;   {runtime_call}
[Exception Handler]
  0x000001a980599a54: callq  0x000001a9800ee800  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001a980599a59: mov    %rsp,-0x28(%rsp)
  0x000001a980599a5e: sub    $0x80,%rsp
  0x000001a980599a65: mov    %rax,0x78(%rsp)
  0x000001a980599a6a: mov    %rcx,0x70(%rsp)
  0x000001a980599a6f: mov    %rdx,0x68(%rsp)
  0x000001a980599a74: mov    %rbx,0x60(%rsp)
  0x000001a980599a79: mov    %rbp,0x50(%rsp)
  0x000001a980599a7e: mov    %rsi,0x48(%rsp)
  0x000001a980599a83: mov    %rdi,0x40(%rsp)
  0x000001a980599a88: mov    %r8,0x38(%rsp)
  0x000001a980599a8d: mov    %r9,0x30(%rsp)
  0x000001a980599a92: mov    %r10,0x28(%rsp)
  0x000001a980599a97: mov    %r11,0x20(%rsp)
  0x000001a980599a9c: mov    %r12,0x18(%rsp)
  0x000001a980599aa1: mov    %r13,0x10(%rsp)
  0x000001a980599aa6: mov    %r14,0x8(%rsp)
  0x000001a980599aab: mov    %r15,(%rsp)
  0x000001a980599aaf: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a980599ab9: movabs $0x1a980599a59,%rdx  ;   {internal_word}
  0x000001a980599ac3: mov    %rsp,%r8
  0x000001a980599ac6: and    $0xfffffffffffffff0,%rsp
  0x000001a980599aca: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a980599ad4: callq  *%r10
  0x000001a980599ad7: hlt    
[Deopt Handler Code]
  0x000001a980599ad8: movabs $0x1a980599ad8,%r10  ;   {section_word}
  0x000001a980599ae2: push   %r10
  0x000001a980599ae4: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a980599ae9: hlt    
  0x000001a980599aea: hlt    
  0x000001a980599aeb: hlt    
  0x000001a980599aec: hlt    
  0x000001a980599aed: hlt    
  0x000001a980599aee: hlt    
  0x000001a980599aef: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 476 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 640 
ImmutableOopMap{rdx=Oop }pc offsets: 773 
ImmutableOopMap{rdx=Oop rdi=Oop }pc offsets: 783 
ImmutableOopMap{rdi=Oop rdx=Oop }pc offsets: 811 
ImmutableOopMap{[64]=Oop rdi=Oop }pc offsets: 844 877 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x000001a987ac23a0, 0x000001a987ac23c0]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a9ff8bf700} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a987ac23a0: mov    0x24(%rsi),%ebx
  0x000001a987ac23a3: shl    $0x3,%rbx
  0x000001a987ac23a7: mov    0x10(%rbx),%rbx
  0x000001a987ac23ab: test   %rbx,%rbx
  0x000001a987ac23ae: je     0x000001a987ac23b7
  0x000001a987ac23b4: jmpq   *0x38(%rbx)
  0x000001a987ac23b7: jmpq   0x000001a980040b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a987ac23bc: hlt    
  0x000001a987ac23bd: hlt    
  0x000001a987ac23be: hlt    
  0x000001a987ac23bf: hlt    
Compiled method (c1)     178   48       1       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000001a987ac2410,0x000001a987ac2740] = 816
 relocation     [0x000001a987ac2588,0x000001a987ac25b0] = 40
 main code      [0x000001a987ac25c0,0x000001a987ac2640] = 128
 stub code      [0x000001a987ac2640,0x000001a987ac26d8] = 152
 metadata       [0x000001a987ac26d8,0x000001a987ac26e0] = 8
 scopes data    [0x000001a987ac26e0,0x000001a987ac26f8] = 24
 scopes pcs     [0x000001a987ac26f8,0x000001a987ac2738] = 64
 dependencies   [0x000001a987ac2738,0x000001a987ac2740] = 8
----------------------------------------------------------------------
java/lang/Object.<init>()V  [0x000001a987ac25c0, 0x000001a987ac26d8]  280 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff580590} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000001a987ac25c0: mov    0x8(%rdx),%r10d
  0x000001a987ac25c4: shl    $0x3,%r10
  0x000001a987ac25c8: cmp    %rax,%r10
  0x000001a987ac25cb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac25d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a987ac25dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a987ac25e0: mov    %eax,-0x7000(%rsp)
  0x000001a987ac25e7: push   %rbp
  0x000001a987ac25e8: sub    $0x50,%rsp
  0x000001a987ac25ec: mov    %rdx,%rcx          ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0

  0x000001a987ac25ef: mov    %rdx,0x40(%rsp)
  0x000001a987ac25f4: callq  0x000001a9800ece00  ; ImmutableOopMap{[64]=Oop }
                                                ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                ; - java.lang.Object::<init>@0
                                                ;   {runtime_call register_finalizer Runtime1 stub}
  0x000001a987ac25f9: add    $0x50,%rsp
  0x000001a987ac25fd: pop    %rbp
  0x000001a987ac25fe: mov    0x70(%r15),%r10
  0x000001a987ac2602: test   %eax,(%r10)        ;   {poll_return}
  0x000001a987ac2605: retq   
  0x000001a987ac2606: nop
  0x000001a987ac2607: nop
  0x000001a987ac2608: mov    0x350(%r15),%rax
  0x000001a987ac260f: movabs $0x0,%r10
  0x000001a987ac2619: mov    %r10,0x350(%r15)
  0x000001a987ac2620: movabs $0x0,%r10
  0x000001a987ac262a: mov    %r10,0x358(%r15)
  0x000001a987ac2631: add    $0x50,%rsp
  0x000001a987ac2635: pop    %rbp
  0x000001a987ac2636: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a987ac263b: hlt    
  0x000001a987ac263c: hlt    
  0x000001a987ac263d: hlt    
  0x000001a987ac263e: hlt    
  0x000001a987ac263f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a987ac2640: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a987ac2645: mov    %rsp,-0x28(%rsp)
  0x000001a987ac264a: sub    $0x80,%rsp
  0x000001a987ac2651: mov    %rax,0x78(%rsp)
  0x000001a987ac2656: mov    %rcx,0x70(%rsp)
  0x000001a987ac265b: mov    %rdx,0x68(%rsp)
  0x000001a987ac2660: mov    %rbx,0x60(%rsp)
  0x000001a987ac2665: mov    %rbp,0x50(%rsp)
  0x000001a987ac266a: mov    %rsi,0x48(%rsp)
  0x000001a987ac266f: mov    %rdi,0x40(%rsp)
  0x000001a987ac2674: mov    %r8,0x38(%rsp)
  0x000001a987ac2679: mov    %r9,0x30(%rsp)
  0x000001a987ac267e: mov    %r10,0x28(%rsp)
  0x000001a987ac2683: mov    %r11,0x20(%rsp)
  0x000001a987ac2688: mov    %r12,0x18(%rsp)
  0x000001a987ac268d: mov    %r13,0x10(%rsp)
  0x000001a987ac2692: mov    %r14,0x8(%rsp)
  0x000001a987ac2697: mov    %r15,(%rsp)
  0x000001a987ac269b: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a987ac26a5: movabs $0x1a987ac2645,%rdx  ;   {internal_word}
  0x000001a987ac26af: mov    %rsp,%r8
  0x000001a987ac26b2: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac26b6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a987ac26c0: callq  *%r10
  0x000001a987ac26c3: hlt    
[Deopt Handler Code]
  0x000001a987ac26c4: movabs $0x1a987ac26c4,%r10  ;   {section_word}
  0x000001a987ac26ce: push   %r10
  0x000001a987ac26d0: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a987ac26d5: hlt    
  0x000001a987ac26d6: hlt    
  0x000001a987ac26d7: hlt    

ImmutableOopMap{[64]=Oop }pc offsets: 57 ----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I  [0x000001a987ac2920, 0x000001a987ac2940]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a9ff8bf5e8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;IILjava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9        = int
  # parm3:    rdi       = int
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a987ac2920: mov    0x24(%rsi),%ebx
  0x000001a987ac2923: shl    $0x3,%rbx
  0x000001a987ac2927: mov    0x10(%rbx),%rbx
  0x000001a987ac292b: test   %rbx,%rbx
  0x000001a987ac292e: je     0x000001a987ac2937
  0x000001a987ac2934: jmpq   *0x38(%rbx)
  0x000001a987ac2937: jmpq   0x000001a980040b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a987ac293c: hlt    
  0x000001a987ac293d: hlt    
  0x000001a987ac293e: hlt    
  0x000001a987ac293f: hlt    
----------------------------------------------------------------------
java/lang/invoke/MethodHandle.linkToStatic(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I  [0x000001a987ac2b20, 0x000001a987ac2b40]  32 bytes
[Entry Point]
[Verified Entry Point]
  # {method} {0x000001a9ff8bf9a8} 'linkToStatic' '(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)I' in 'java/lang/invoke/MethodHandle'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    r8:r8     = 'java/lang/Object'
  # parm2:    r9:r9     = 'java/lang/Object'
  # parm3:    rdi:rdi   = 'java/lang/Object'
  # parm4:    rsi:rsi   = 'java/lang/invoke/MemberName'
  #           [sp+0x0]  (sp of caller)
  0x000001a987ac2b20: mov    0x24(%rsi),%ebx
  0x000001a987ac2b23: shl    $0x3,%rbx
  0x000001a987ac2b27: mov    0x10(%rbx),%rbx
  0x000001a987ac2b2b: test   %rbx,%rbx
  0x000001a987ac2b2e: je     0x000001a987ac2b37
  0x000001a987ac2b34: jmpq   *0x38(%rbx)
  0x000001a987ac2b37: jmpq   0x000001a980040b00  ;   {runtime_call AbstractMethodError throw_exception}
  0x000001a987ac2b3c: hlt    
  0x000001a987ac2b3d: hlt    
  0x000001a987ac2b3e: hlt    
  0x000001a987ac2b3f: hlt    
Compiled method (c1)     181   52       2       volatileTest.VolatileAdder::add (11 bytes)
 total in heap  [0x000001a980599e10,0x000001a98059a1b0] = 928
 relocation     [0x000001a980599f88,0x000001a980599fb0] = 40
 main code      [0x000001a980599fc0,0x000001a98059a080] = 192
 stub code      [0x000001a98059a080,0x000001a98059a118] = 152
 oops           [0x000001a98059a118,0x000001a98059a120] = 8
 metadata       [0x000001a98059a120,0x000001a98059a128] = 8
 scopes data    [0x000001a98059a128,0x000001a98059a148] = 32
 scopes pcs     [0x000001a98059a148,0x000001a98059a1a8] = 96
 dependencies   [0x000001a98059a1a8,0x000001a98059a1b0] = 8
----------------------------------------------------------------------
volatileTest/VolatileAdder.add()V  [0x000001a980599fc0, 0x000001a98059a118]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff980468} 'add' '()V' in 'volatileTest/VolatileAdder'
  #           [sp+0x40]  (sp of caller)
  0x000001a980599fc0: mov    0x8(%rdx),%r10d
  0x000001a980599fc4: shl    $0x3,%r10
  0x000001a980599fc8: cmp    %rax,%r10
  0x000001a980599fcb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a980599fd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a980599fdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a980599fe0: mov    %eax,-0x7000(%rsp)
  0x000001a980599fe7: push   %rbp
  0x000001a980599fe8: sub    $0x30,%rsp
  0x000001a980599fec: movabs $0x1a9ff980db0,%rsi
  0x000001a980599ff6: mov    0x18(%rsi),%edi
  0x000001a980599ff9: add    $0x8,%edi
  0x000001a980599ffc: mov    %edi,0x18(%rsi)
  0x000001a980599fff: and    $0x3ff8,%edi
  0x000001a98059a005: cmp    $0x0,%edi
  0x000001a98059a008: je     0x000001a98059a029  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder::add@0 (line 13)

  0x000001a98059a00e: mov    0xc(%rdx),%esi     ;*getfield x {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder::add@2 (line 13)

  0x000001a98059a011: inc    %esi
  0x000001a98059a013: mov    %esi,0xc(%rdx)
  0x000001a98059a016: lock addl $0x0,-0x40(%rsp)  ;*putfield x {reexecute=0 rethrow=0 return_oop=0}
                                                ; - volatileTest.VolatileAdder::add@7 (line 13)

  0x000001a98059a01c: add    $0x30,%rsp
  0x000001a98059a020: pop    %rbp
  0x000001a98059a021: mov    0x70(%r15),%r10
  0x000001a98059a025: test   %eax,(%r10)        ;   {poll_return}
  0x000001a98059a028: retq   
  0x000001a98059a029: movabs $0x1a9ff980460,%r10  ;   {metadata({method} {0x000001a9ff980468} 'add' '()V' in 'volatileTest/VolatileAdder')}
  0x000001a98059a033: mov    %r10,0x8(%rsp)
  0x000001a98059a038: movq   $0xffffffffffffffff,(%rsp)
  0x000001a98059a040: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - volatileTest.VolatileAdder::add@-1 (line 13)
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a98059a045: jmp    0x000001a98059a00e
  0x000001a98059a047: nop
  0x000001a98059a048: nop
  0x000001a98059a049: mov    0x350(%r15),%rax
  0x000001a98059a050: movabs $0x0,%r10
  0x000001a98059a05a: mov    %r10,0x350(%r15)
  0x000001a98059a061: movabs $0x0,%r10
  0x000001a98059a06b: mov    %r10,0x358(%r15)
  0x000001a98059a072: add    $0x30,%rsp
  0x000001a98059a076: pop    %rbp
  0x000001a98059a077: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a98059a07c: hlt    
  0x000001a98059a07d: hlt    
  0x000001a98059a07e: hlt    
  0x000001a98059a07f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a98059a080: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a98059a085: mov    %rsp,-0x28(%rsp)
  0x000001a98059a08a: sub    $0x80,%rsp
  0x000001a98059a091: mov    %rax,0x78(%rsp)
  0x000001a98059a096: mov    %rcx,0x70(%rsp)
  0x000001a98059a09b: mov    %rdx,0x68(%rsp)
  0x000001a98059a0a0: mov    %rbx,0x60(%rsp)
  0x000001a98059a0a5: mov    %rbp,0x50(%rsp)
  0x000001a98059a0aa: mov    %rsi,0x48(%rsp)
  0x000001a98059a0af: mov    %rdi,0x40(%rsp)
  0x000001a98059a0b4: mov    %r8,0x38(%rsp)
  0x000001a98059a0b9: mov    %r9,0x30(%rsp)
  0x000001a98059a0be: mov    %r10,0x28(%rsp)
  0x000001a98059a0c3: mov    %r11,0x20(%rsp)
  0x000001a98059a0c8: mov    %r12,0x18(%rsp)
  0x000001a98059a0cd: mov    %r13,0x10(%rsp)
  0x000001a98059a0d2: mov    %r14,0x8(%rsp)
  0x000001a98059a0d7: mov    %r15,(%rsp)
  0x000001a98059a0db: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a98059a0e5: movabs $0x1a98059a085,%rdx  ;   {internal_word}
  0x000001a98059a0ef: mov    %rsp,%r8
  0x000001a98059a0f2: and    $0xfffffffffffffff0,%rsp
  0x000001a98059a0f6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a98059a100: callq  *%r10
  0x000001a98059a103: hlt    
[Deopt Handler Code]
  0x000001a98059a104: movabs $0x1a98059a104,%r10  ;   {section_word}
  0x000001a98059a10e: push   %r10
  0x000001a98059a110: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a98059a115: hlt    
  0x000001a98059a116: hlt    
  0x000001a98059a117: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 133 ----------------------------------------------------------------------
java/lang/Object.hashCode()I  [0x000001a987ac2d40, 0x000001a987ac2f90]  592 bytes
[Entry Point]
  # {method} {0x000001a9ff580708} 'hashCode' '()I' in 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000001a987ac2d40: mov    0x8(%rdx),%r10d
  0x000001a987ac2d44: shl    $0x3,%r10
  0x000001a987ac2d48: cmp    %r10,%rax
  0x000001a987ac2d4b: je     0x000001a987ac2d58
  0x000001a987ac2d51: jmpq   0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a987ac2d56: xchg   %ax,%ax
[Verified Entry Point]
  0x000001a987ac2d58: mov    (%rdx),%rax
  0x000001a987ac2d5b: test   $0x1,%rax
  0x000001a987ac2d61: je     0x000001a987ac2d85
  0x000001a987ac2d67: test   $0x4,%rax
  0x000001a987ac2d6d: jne    0x000001a987ac2d85
  0x000001a987ac2d73: shr    $0x8,%rax
  0x000001a987ac2d77: and    $0x7fffffff,%rax
  0x000001a987ac2d7e: je     0x000001a987ac2d85
  0x000001a987ac2d84: retq   
  0x000001a987ac2d85: mov    %eax,-0x7000(%rsp)
  0x000001a987ac2d8c: push   %rbp
  0x000001a987ac2d8d: mov    %rsp,%rbp
  0x000001a987ac2d90: sub    $0x60,%rsp
  0x000001a987ac2d94: mov    %rdx,0x20(%rsp)
  0x000001a987ac2d99: cmp    $0x0,%rdx
  0x000001a987ac2d9d: lea    0x20(%rsp),%rdx
  0x000001a987ac2da2: cmove  0x20(%rsp),%rdx    ; ImmutableOopMap{[32]=Oop }
  0x000001a987ac2da8: vzeroupper 
  0x000001a987ac2dab: movabs $0x1a987ac2da8,%r10  ;   {internal_word}
  0x000001a987ac2db5: mov    %r10,0x258(%r15)
  0x000001a987ac2dbc: mov    %rsp,0x250(%r15)
  0x000001a987ac2dc3: movabs $0x557caf1e,%r10   ;   {external_word}
  0x000001a987ac2dcd: cmpb   $0x0,(%r10)
  0x000001a987ac2dd1: je     0x000001a987ac2e21
  0x000001a987ac2dd7: push   %rdx
  0x000001a987ac2dd8: movabs $0x1a9ff580700,%rdx  ;   {metadata({method} {0x000001a9ff580708} 'hashCode' '()I' in 'java/lang/Object')}
  0x000001a987ac2de2: mov    %r15,%rcx
  0x000001a987ac2de5: sub    $0x20,%rsp
  0x000001a987ac2de9: test   $0xf,%esp
  0x000001a987ac2def: je     0x000001a987ac2e0f
  0x000001a987ac2df5: sub    $0x8,%rsp
  0x000001a987ac2df9: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac2e03: callq  *%r10
  0x000001a987ac2e06: add    $0x8,%rsp
  0x000001a987ac2e0a: jmpq   0x000001a987ac2e1c
  0x000001a987ac2e0f: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac2e19: callq  *%r10
  0x000001a987ac2e1c: add    $0x20,%rsp
  0x000001a987ac2e20: pop    %rdx
  0x000001a987ac2e21: lea    0x270(%r15),%rcx
  0x000001a987ac2e28: movl   $0x4,0x2e8(%r15)
  0x000001a987ac2e33: movabs $0x7ff8f739019e,%r10  ;   {runtime_call}
  0x000001a987ac2e3d: callq  *%r10
  0x000001a987ac2e40: vzeroupper 
  0x000001a987ac2e43: movl   $0x5,0x2e8(%r15)
  0x000001a987ac2e4e: lock addl $0x0,-0x40(%rsp)
  0x000001a987ac2e54: testb  $0x8,0x70(%r15)
  0x000001a987ac2e59: jne    0x000001a987ac2e6d
  0x000001a987ac2e5f: cmpl   $0x0,0x48(%r15)
  0x000001a987ac2e67: je     0x000001a987ac2e99
  0x000001a987ac2e6d: vzeroupper 
  0x000001a987ac2e70: mov    %rax,-0x8(%rbp)
  0x000001a987ac2e74: mov    %r15,%rcx
  0x000001a987ac2e77: mov    %rsp,%r12
  0x000001a987ac2e7a: sub    $0x20,%rsp
  0x000001a987ac2e7e: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac2e82: movabs $0x554b4790,%r10   ;   {runtime_call}
  0x000001a987ac2e8c: callq  *%r10
  0x000001a987ac2e8f: mov    %r12,%rsp
  0x000001a987ac2e92: xor    %r12,%r12
  0x000001a987ac2e95: mov    -0x8(%rbp),%rax
  0x000001a987ac2e99: movl   $0x8,0x2e8(%r15)
  0x000001a987ac2ea4: cmpl   $0x2,0x338(%r15)
  0x000001a987ac2eaf: je     0x000001a987ac2f61
  0x000001a987ac2eb5: movabs $0x557caf1e,%r10   ;   {external_word}
  0x000001a987ac2ebf: cmpb   $0x0,(%r10)
  0x000001a987ac2ec3: je     0x000001a987ac2f19
  0x000001a987ac2ec9: mov    %rax,-0x8(%rbp)
  0x000001a987ac2ecd: movabs $0x1a9ff580700,%rdx  ;   {metadata({method} {0x000001a9ff580708} 'hashCode' '()I' in 'java/lang/Object')}
  0x000001a987ac2ed7: mov    %r15,%rcx
  0x000001a987ac2eda: sub    $0x20,%rsp
  0x000001a987ac2ede: test   $0xf,%esp
  0x000001a987ac2ee4: je     0x000001a987ac2f04
  0x000001a987ac2eea: sub    $0x8,%rsp
  0x000001a987ac2eee: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac2ef8: callq  *%r10
  0x000001a987ac2efb: add    $0x8,%rsp
  0x000001a987ac2eff: jmpq   0x000001a987ac2f11
  0x000001a987ac2f04: movabs $0x554395b0,%r10   ;   {runtime_call}
  0x000001a987ac2f0e: callq  *%r10
  0x000001a987ac2f11: add    $0x20,%rsp
  0x000001a987ac2f15: mov    -0x8(%rbp),%rax
  0x000001a987ac2f19: movabs $0x0,%r10
  0x000001a987ac2f23: mov    %r10,0x250(%r15)
  0x000001a987ac2f2a: movabs $0x0,%r10
  0x000001a987ac2f34: mov    %r10,0x258(%r15)
  0x000001a987ac2f3b: vzeroupper 
  0x000001a987ac2f3e: mov    0x50(%r15),%rcx
  0x000001a987ac2f42: movl   $0x0,0x100(%rcx)
  0x000001a987ac2f4c: leaveq 
  0x000001a987ac2f4d: cmpq   $0x0,0x8(%r15)
  0x000001a987ac2f55: jne    0x000001a987ac2f5c
  0x000001a987ac2f5b: retq   
  0x000001a987ac2f5c: jmpq   Stub::forward exception  ;   {runtime_call StubRoutines (1)}
  0x000001a987ac2f61: vzeroupper 
  0x000001a987ac2f64: mov    %rax,-0x8(%rbp)
  0x000001a987ac2f68: mov    %rsp,%r12
  0x000001a987ac2f6b: sub    $0x20,%rsp
  0x000001a987ac2f6f: and    $0xfffffffffffffff0,%rsp
  0x000001a987ac2f73: movabs $0x5543c310,%r10   ;   {runtime_call}
  0x000001a987ac2f7d: callq  *%r10
  0x000001a987ac2f80: mov    %r12,%rsp
  0x000001a987ac2f83: xor    %r12,%r12
  0x000001a987ac2f86: mov    -0x8(%rbp),%rax
  0x000001a987ac2f8a: jmpq   0x000001a987ac2eb5
  0x000001a987ac2f8f: hlt    
Compiled method (c1)     184    7       2       java.lang.String::coder (15 bytes)
 total in heap  [0x000001a98059a210,0x000001a98059a590] = 896
 relocation     [0x000001a98059a388,0x000001a98059a3b0] = 40
 main code      [0x000001a98059a3c0,0x000001a98059a480] = 192
 stub code      [0x000001a98059a480,0x000001a98059a518] = 152
 metadata       [0x000001a98059a518,0x000001a98059a520] = 8
 scopes data    [0x000001a98059a520,0x000001a98059a538] = 24
 scopes pcs     [0x000001a98059a538,0x000001a98059a588] = 80
 dependencies   [0x000001a98059a588,0x000001a98059a590] = 8
----------------------------------------------------------------------
java/lang/String.coder()B  [0x000001a98059a3c0, 0x000001a98059a518]  344 bytes
[Entry Point]
[Constants]
  # {method} {0x000001a9ff587dd0} 'coder' '()B' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000001a98059a3c0: mov    0x8(%rdx),%r10d
  0x000001a98059a3c4: shl    $0x3,%r10
  0x000001a98059a3c8: cmp    %rax,%r10
  0x000001a98059a3cb: jne    0x000001a980026d80  ;   {runtime_call ic_miss_stub}
  0x000001a98059a3d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000001a98059a3dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x000001a98059a3e0: mov    %eax,-0x7000(%rsp)
  0x000001a98059a3e7: push   %rbp
  0x000001a98059a3e8: sub    $0x30,%rsp
  0x000001a98059a3ec: movabs $0x1a9ff673d00,%rax
  0x000001a98059a3f6: mov    0x18(%rax)178021,%esi
  0x000001a98059a3f9: add    $0x8,%esi
  0x000001a98059a3fc: mov    %esi,0x18(%rax)
  0x000001a98059a3ff: 
and    $0x3ff8,%esi
  0x000001a98059a405: cmp    $0x0,%esi
  0x000001a98059a408: je     0x000001a98059a425  ;*getstatic COMPACT_STRINGS {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@0

  0x000001a98059a40e: movsbl 0x14(%rdx),%eax    ;*getfield coder {reexecute=0 rethrow=0 return_oop=0}
                                                ; - java.lang.String::coder@7

  0x000001a98059a412: shl    $0x18,%eax
  0x000001a98059a415: sar    $0x18,%eax
  0x000001a98059a418: add    $0x30,%rsp
  0x000001a98059a41c: pop    %rbp
  0x000001a98059a41d: mov    0x70(%r15),%r10
  0x000001a98059a421: test   %eax,(%r10)        ;   {poll_return}
  0x000001a98059a424: retq   
  0x000001a98059a425: movabs $0x1a9ff587dc8,%r10  ;   {metadata({method} {0x000001a9ff587dd0} 'coder' '()B' in 'java/lang/String')}
  0x000001a98059a42f: mov    %r10,0x8(%rsp)
  0x000001a98059a434: movq   $0xffffffffffffffff,(%rsp)
  0x000001a98059a43c: callq  0x000001a9800f1a80  ; ImmutableOopMap{rdx=Oop }
                                                ;*synchronization entry
                                                ; - java.lang.String::coder@-1
                                                ;   {runtime_call counter_overflow Runtime1 stub}
  0x000001a98059a441: jmp    0x000001a98059a40e
  0x000001a98059a443: nop
  0x000001a98059a444: nop
  0x000001a98059a445: mov    0x350(%r15),%rax
  0x000001a98059a44c: movabs $0x0,%r10
  0x000001a98059a456: mov    %r10,0x350(%r15)
  0x000001a98059a45d: movabs $0x0,%r10
  0x000001a98059a467: mov    %r10,0x358(%r15)
  0x000001a98059a46e: add    $0x30,%rsp
  0x000001a98059a472: pop    %rbp
  0x000001a98059a473: jmpq   0x000001a98005f380  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001a98059a478: hlt    
  0x000001a98059a479: hlt    
  0x000001a98059a47a: hlt    
  0x000001a98059a47b: hlt    
  0x000001a98059a47c: hlt    
  0x000001a98059a47d: hlt    
  0x000001a98059a47e: hlt    
  0x000001a98059a47f: hlt    
[Exception Handler]
[Stub Code]
  0x000001a98059a480: callq  0x000001a9800ee800  ;   {no_reloc}
  0x000001a98059a485: mov    %rsp,-0x28(%rsp)
  0x000001a98059a48a: sub    $0x80,%rsp
  0x000001a98059a491: mov    %rax,0x78(%rsp)
  0x000001a98059a496: mov    %rcx,0x70(%rsp)
  0x000001a98059a49b: mov    %rdx,0x68(%rsp)
  0x000001a98059a4a0: mov    %rbx,0x60(%rsp)
  0x000001a98059a4a5: mov    %rbp,0x50(%rsp)
  0x000001a98059a4aa: mov    %rsi,0x48(%rsp)
  0x000001a98059a4af: mov    %rdi,0x40(%rsp)
  0x000001a98059a4b4: mov    %r8,0x38(%rsp)
  0x000001a98059a4b9: mov    %r9,0x30(%rsp)
  0x000001a98059a4be: mov    %r10,0x28(%rsp)
  0x000001a98059a4c3: mov    %r11,0x20(%rsp)
  0x000001a98059a4c8: mov    %r12,0x18(%rsp)
  0x000001a98059a4cd: mov    %r13,0x10(%rsp)
  0x000001a98059a4d2: mov    %r14,0x8(%rsp)
  0x000001a98059a4d7: mov    %r15,(%rsp)
  0x000001a98059a4db: movabs $0x555c44e8,%rcx   ;   {external_word}
  0x000001a98059a4e5: movabs $0x1a98059a485,%rdx  ;   {internal_word}
  0x000001a98059a4ef: mov    %rsp,%r8
  0x000001a98059a4f2: and    $0xfffffffffffffff0,%rsp
  0x000001a98059a4f6: movabs $0x55317850,%r10   ;   {runtime_call}
  0x000001a98059a500: callq  *%r10
  0x000001a98059a503: hlt    
[Deopt Handler Code]
  0x000001a98059a504: movabs $0x1a98059a504,%r10  ;   {section_word}
  0x000001a98059a50e: push   %r10
  0x000001a98059a510: jmpq   0x000001a980028620  ;   {runtime_call DeoptimizationBlob}
  0x000001a98059a515: hlt    
  0x000001a98059a516: hlt    
  0x000001a98059a517: hlt    

ImmutableOopMap{rdx=Oop }pc offsets: 129 